// Code generated by protoc-gen-go-pulsar. DO NOT EDIT.
package qadena

import (
	fmt "fmt"
	runtime "github.com/cosmos/cosmos-proto/runtime"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoiface "google.golang.org/protobuf/runtime/protoiface"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	io "io"
	reflect "reflect"
	sync "sync"
)

var (
	md_Credential                              protoreflect.MessageDescriptor
	fd_Credential_credentialID                 protoreflect.FieldDescriptor
	fd_Credential_credentialType               protoreflect.FieldDescriptor
	fd_Credential_walletID                     protoreflect.FieldDescriptor
	fd_Credential_credentialPedersenCommit     protoreflect.FieldDescriptor
	fd_Credential_encCredentialHashVShare      protoreflect.FieldDescriptor
	fd_Credential_credentialHashVShareBind     protoreflect.FieldDescriptor
	fd_Credential_encCredentialInfoVShare      protoreflect.FieldDescriptor
	fd_Credential_credentialInfoVShareBind     protoreflect.FieldDescriptor
	fd_Credential_findCredentialPedersenCommit protoreflect.FieldDescriptor
	fd_Credential_providerWalletID             protoreflect.FieldDescriptor
	fd_Credential_referenceCredentialID        protoreflect.FieldDescriptor
)

func init() {
	file_qadena_qadena_credential_proto_init()
	md_Credential = File_qadena_qadena_credential_proto.Messages().ByName("Credential")
	fd_Credential_credentialID = md_Credential.Fields().ByName("credentialID")
	fd_Credential_credentialType = md_Credential.Fields().ByName("credentialType")
	fd_Credential_walletID = md_Credential.Fields().ByName("walletID")
	fd_Credential_credentialPedersenCommit = md_Credential.Fields().ByName("credentialPedersenCommit")
	fd_Credential_encCredentialHashVShare = md_Credential.Fields().ByName("encCredentialHashVShare")
	fd_Credential_credentialHashVShareBind = md_Credential.Fields().ByName("credentialHashVShareBind")
	fd_Credential_encCredentialInfoVShare = md_Credential.Fields().ByName("encCredentialInfoVShare")
	fd_Credential_credentialInfoVShareBind = md_Credential.Fields().ByName("credentialInfoVShareBind")
	fd_Credential_findCredentialPedersenCommit = md_Credential.Fields().ByName("findCredentialPedersenCommit")
	fd_Credential_providerWalletID = md_Credential.Fields().ByName("providerWalletID")
	fd_Credential_referenceCredentialID = md_Credential.Fields().ByName("referenceCredentialID")
}

var _ protoreflect.Message = (*fastReflection_Credential)(nil)

type fastReflection_Credential Credential

func (x *Credential) ProtoReflect() protoreflect.Message {
	return (*fastReflection_Credential)(x)
}

func (x *Credential) slowProtoReflect() protoreflect.Message {
	mi := &file_qadena_qadena_credential_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_Credential_messageType fastReflection_Credential_messageType
var _ protoreflect.MessageType = fastReflection_Credential_messageType{}

type fastReflection_Credential_messageType struct{}

func (x fastReflection_Credential_messageType) Zero() protoreflect.Message {
	return (*fastReflection_Credential)(nil)
}
func (x fastReflection_Credential_messageType) New() protoreflect.Message {
	return new(fastReflection_Credential)
}
func (x fastReflection_Credential_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_Credential
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_Credential) Descriptor() protoreflect.MessageDescriptor {
	return md_Credential
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_Credential) Type() protoreflect.MessageType {
	return _fastReflection_Credential_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_Credential) New() protoreflect.Message {
	return new(fastReflection_Credential)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_Credential) Interface() protoreflect.ProtoMessage {
	return (*Credential)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_Credential) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.CredentialID != "" {
		value := protoreflect.ValueOfString(x.CredentialID)
		if !f(fd_Credential_credentialID, value) {
			return
		}
	}
	if x.CredentialType != "" {
		value := protoreflect.ValueOfString(x.CredentialType)
		if !f(fd_Credential_credentialType, value) {
			return
		}
	}
	if x.WalletID != "" {
		value := protoreflect.ValueOfString(x.WalletID)
		if !f(fd_Credential_walletID, value) {
			return
		}
	}
	if x.CredentialPedersenCommit != nil {
		value := protoreflect.ValueOfMessage(x.CredentialPedersenCommit.ProtoReflect())
		if !f(fd_Credential_credentialPedersenCommit, value) {
			return
		}
	}
	if len(x.EncCredentialHashVShare) != 0 {
		value := protoreflect.ValueOfBytes(x.EncCredentialHashVShare)
		if !f(fd_Credential_encCredentialHashVShare, value) {
			return
		}
	}
	if x.CredentialHashVShareBind != nil {
		value := protoreflect.ValueOfMessage(x.CredentialHashVShareBind.ProtoReflect())
		if !f(fd_Credential_credentialHashVShareBind, value) {
			return
		}
	}
	if len(x.EncCredentialInfoVShare) != 0 {
		value := protoreflect.ValueOfBytes(x.EncCredentialInfoVShare)
		if !f(fd_Credential_encCredentialInfoVShare, value) {
			return
		}
	}
	if x.CredentialInfoVShareBind != nil {
		value := protoreflect.ValueOfMessage(x.CredentialInfoVShareBind.ProtoReflect())
		if !f(fd_Credential_credentialInfoVShareBind, value) {
			return
		}
	}
	if x.FindCredentialPedersenCommit != nil {
		value := protoreflect.ValueOfMessage(x.FindCredentialPedersenCommit.ProtoReflect())
		if !f(fd_Credential_findCredentialPedersenCommit, value) {
			return
		}
	}
	if x.ProviderWalletID != "" {
		value := protoreflect.ValueOfString(x.ProviderWalletID)
		if !f(fd_Credential_providerWalletID, value) {
			return
		}
	}
	if x.ReferenceCredentialID != "" {
		value := protoreflect.ValueOfString(x.ReferenceCredentialID)
		if !f(fd_Credential_referenceCredentialID, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_Credential) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "qadena.qadena.Credential.credentialID":
		return x.CredentialID != ""
	case "qadena.qadena.Credential.credentialType":
		return x.CredentialType != ""
	case "qadena.qadena.Credential.walletID":
		return x.WalletID != ""
	case "qadena.qadena.Credential.credentialPedersenCommit":
		return x.CredentialPedersenCommit != nil
	case "qadena.qadena.Credential.encCredentialHashVShare":
		return len(x.EncCredentialHashVShare) != 0
	case "qadena.qadena.Credential.credentialHashVShareBind":
		return x.CredentialHashVShareBind != nil
	case "qadena.qadena.Credential.encCredentialInfoVShare":
		return len(x.EncCredentialInfoVShare) != 0
	case "qadena.qadena.Credential.credentialInfoVShareBind":
		return x.CredentialInfoVShareBind != nil
	case "qadena.qadena.Credential.findCredentialPedersenCommit":
		return x.FindCredentialPedersenCommit != nil
	case "qadena.qadena.Credential.providerWalletID":
		return x.ProviderWalletID != ""
	case "qadena.qadena.Credential.referenceCredentialID":
		return x.ReferenceCredentialID != ""
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: qadena.qadena.Credential"))
		}
		panic(fmt.Errorf("message qadena.qadena.Credential does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_Credential) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "qadena.qadena.Credential.credentialID":
		x.CredentialID = ""
	case "qadena.qadena.Credential.credentialType":
		x.CredentialType = ""
	case "qadena.qadena.Credential.walletID":
		x.WalletID = ""
	case "qadena.qadena.Credential.credentialPedersenCommit":
		x.CredentialPedersenCommit = nil
	case "qadena.qadena.Credential.encCredentialHashVShare":
		x.EncCredentialHashVShare = nil
	case "qadena.qadena.Credential.credentialHashVShareBind":
		x.CredentialHashVShareBind = nil
	case "qadena.qadena.Credential.encCredentialInfoVShare":
		x.EncCredentialInfoVShare = nil
	case "qadena.qadena.Credential.credentialInfoVShareBind":
		x.CredentialInfoVShareBind = nil
	case "qadena.qadena.Credential.findCredentialPedersenCommit":
		x.FindCredentialPedersenCommit = nil
	case "qadena.qadena.Credential.providerWalletID":
		x.ProviderWalletID = ""
	case "qadena.qadena.Credential.referenceCredentialID":
		x.ReferenceCredentialID = ""
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: qadena.qadena.Credential"))
		}
		panic(fmt.Errorf("message qadena.qadena.Credential does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_Credential) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "qadena.qadena.Credential.credentialID":
		value := x.CredentialID
		return protoreflect.ValueOfString(value)
	case "qadena.qadena.Credential.credentialType":
		value := x.CredentialType
		return protoreflect.ValueOfString(value)
	case "qadena.qadena.Credential.walletID":
		value := x.WalletID
		return protoreflect.ValueOfString(value)
	case "qadena.qadena.Credential.credentialPedersenCommit":
		value := x.CredentialPedersenCommit
		return protoreflect.ValueOfMessage(value.ProtoReflect())
	case "qadena.qadena.Credential.encCredentialHashVShare":
		value := x.EncCredentialHashVShare
		return protoreflect.ValueOfBytes(value)
	case "qadena.qadena.Credential.credentialHashVShareBind":
		value := x.CredentialHashVShareBind
		return protoreflect.ValueOfMessage(value.ProtoReflect())
	case "qadena.qadena.Credential.encCredentialInfoVShare":
		value := x.EncCredentialInfoVShare
		return protoreflect.ValueOfBytes(value)
	case "qadena.qadena.Credential.credentialInfoVShareBind":
		value := x.CredentialInfoVShareBind
		return protoreflect.ValueOfMessage(value.ProtoReflect())
	case "qadena.qadena.Credential.findCredentialPedersenCommit":
		value := x.FindCredentialPedersenCommit
		return protoreflect.ValueOfMessage(value.ProtoReflect())
	case "qadena.qadena.Credential.providerWalletID":
		value := x.ProviderWalletID
		return protoreflect.ValueOfString(value)
	case "qadena.qadena.Credential.referenceCredentialID":
		value := x.ReferenceCredentialID
		return protoreflect.ValueOfString(value)
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: qadena.qadena.Credential"))
		}
		panic(fmt.Errorf("message qadena.qadena.Credential does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_Credential) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "qadena.qadena.Credential.credentialID":
		x.CredentialID = value.Interface().(string)
	case "qadena.qadena.Credential.credentialType":
		x.CredentialType = value.Interface().(string)
	case "qadena.qadena.Credential.walletID":
		x.WalletID = value.Interface().(string)
	case "qadena.qadena.Credential.credentialPedersenCommit":
		x.CredentialPedersenCommit = value.Message().Interface().(*BPedersenCommit)
	case "qadena.qadena.Credential.encCredentialHashVShare":
		x.EncCredentialHashVShare = value.Bytes()
	case "qadena.qadena.Credential.credentialHashVShareBind":
		x.CredentialHashVShareBind = value.Message().Interface().(*VShareBindData)
	case "qadena.qadena.Credential.encCredentialInfoVShare":
		x.EncCredentialInfoVShare = value.Bytes()
	case "qadena.qadena.Credential.credentialInfoVShareBind":
		x.CredentialInfoVShareBind = value.Message().Interface().(*VShareBindData)
	case "qadena.qadena.Credential.findCredentialPedersenCommit":
		x.FindCredentialPedersenCommit = value.Message().Interface().(*BPedersenCommit)
	case "qadena.qadena.Credential.providerWalletID":
		x.ProviderWalletID = value.Interface().(string)
	case "qadena.qadena.Credential.referenceCredentialID":
		x.ReferenceCredentialID = value.Interface().(string)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: qadena.qadena.Credential"))
		}
		panic(fmt.Errorf("message qadena.qadena.Credential does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_Credential) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "qadena.qadena.Credential.credentialPedersenCommit":
		if x.CredentialPedersenCommit == nil {
			x.CredentialPedersenCommit = new(BPedersenCommit)
		}
		return protoreflect.ValueOfMessage(x.CredentialPedersenCommit.ProtoReflect())
	case "qadena.qadena.Credential.credentialHashVShareBind":
		if x.CredentialHashVShareBind == nil {
			x.CredentialHashVShareBind = new(VShareBindData)
		}
		return protoreflect.ValueOfMessage(x.CredentialHashVShareBind.ProtoReflect())
	case "qadena.qadena.Credential.credentialInfoVShareBind":
		if x.CredentialInfoVShareBind == nil {
			x.CredentialInfoVShareBind = new(VShareBindData)
		}
		return protoreflect.ValueOfMessage(x.CredentialInfoVShareBind.ProtoReflect())
	case "qadena.qadena.Credential.findCredentialPedersenCommit":
		if x.FindCredentialPedersenCommit == nil {
			x.FindCredentialPedersenCommit = new(BPedersenCommit)
		}
		return protoreflect.ValueOfMessage(x.FindCredentialPedersenCommit.ProtoReflect())
	case "qadena.qadena.Credential.credentialID":
		panic(fmt.Errorf("field credentialID of message qadena.qadena.Credential is not mutable"))
	case "qadena.qadena.Credential.credentialType":
		panic(fmt.Errorf("field credentialType of message qadena.qadena.Credential is not mutable"))
	case "qadena.qadena.Credential.walletID":
		panic(fmt.Errorf("field walletID of message qadena.qadena.Credential is not mutable"))
	case "qadena.qadena.Credential.encCredentialHashVShare":
		panic(fmt.Errorf("field encCredentialHashVShare of message qadena.qadena.Credential is not mutable"))
	case "qadena.qadena.Credential.encCredentialInfoVShare":
		panic(fmt.Errorf("field encCredentialInfoVShare of message qadena.qadena.Credential is not mutable"))
	case "qadena.qadena.Credential.providerWalletID":
		panic(fmt.Errorf("field providerWalletID of message qadena.qadena.Credential is not mutable"))
	case "qadena.qadena.Credential.referenceCredentialID":
		panic(fmt.Errorf("field referenceCredentialID of message qadena.qadena.Credential is not mutable"))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: qadena.qadena.Credential"))
		}
		panic(fmt.Errorf("message qadena.qadena.Credential does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_Credential) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "qadena.qadena.Credential.credentialID":
		return protoreflect.ValueOfString("")
	case "qadena.qadena.Credential.credentialType":
		return protoreflect.ValueOfString("")
	case "qadena.qadena.Credential.walletID":
		return protoreflect.ValueOfString("")
	case "qadena.qadena.Credential.credentialPedersenCommit":
		m := new(BPedersenCommit)
		return protoreflect.ValueOfMessage(m.ProtoReflect())
	case "qadena.qadena.Credential.encCredentialHashVShare":
		return protoreflect.ValueOfBytes(nil)
	case "qadena.qadena.Credential.credentialHashVShareBind":
		m := new(VShareBindData)
		return protoreflect.ValueOfMessage(m.ProtoReflect())
	case "qadena.qadena.Credential.encCredentialInfoVShare":
		return protoreflect.ValueOfBytes(nil)
	case "qadena.qadena.Credential.credentialInfoVShareBind":
		m := new(VShareBindData)
		return protoreflect.ValueOfMessage(m.ProtoReflect())
	case "qadena.qadena.Credential.findCredentialPedersenCommit":
		m := new(BPedersenCommit)
		return protoreflect.ValueOfMessage(m.ProtoReflect())
	case "qadena.qadena.Credential.providerWalletID":
		return protoreflect.ValueOfString("")
	case "qadena.qadena.Credential.referenceCredentialID":
		return protoreflect.ValueOfString("")
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: qadena.qadena.Credential"))
		}
		panic(fmt.Errorf("message qadena.qadena.Credential does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_Credential) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in qadena.qadena.Credential", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_Credential) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_Credential) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_Credential) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_Credential) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*Credential)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		l = len(x.CredentialID)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.CredentialType)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.WalletID)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.CredentialPedersenCommit != nil {
			l = options.Size(x.CredentialPedersenCommit)
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.EncCredentialHashVShare)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.CredentialHashVShareBind != nil {
			l = options.Size(x.CredentialHashVShareBind)
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.EncCredentialInfoVShare)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.CredentialInfoVShareBind != nil {
			l = options.Size(x.CredentialInfoVShareBind)
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.FindCredentialPedersenCommit != nil {
			l = options.Size(x.FindCredentialPedersenCommit)
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.ProviderWalletID)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.ReferenceCredentialID)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*Credential)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if len(x.ReferenceCredentialID) > 0 {
			i -= len(x.ReferenceCredentialID)
			copy(dAtA[i:], x.ReferenceCredentialID)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.ReferenceCredentialID)))
			i--
			dAtA[i] = 0x5a
		}
		if len(x.ProviderWalletID) > 0 {
			i -= len(x.ProviderWalletID)
			copy(dAtA[i:], x.ProviderWalletID)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.ProviderWalletID)))
			i--
			dAtA[i] = 0x52
		}
		if x.FindCredentialPedersenCommit != nil {
			encoded, err := options.Marshal(x.FindCredentialPedersenCommit)
			if err != nil {
				return protoiface.MarshalOutput{
					NoUnkeyedLiterals: input.NoUnkeyedLiterals,
					Buf:               input.Buf,
				}, err
			}
			i -= len(encoded)
			copy(dAtA[i:], encoded)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(encoded)))
			i--
			dAtA[i] = 0x4a
		}
		if x.CredentialInfoVShareBind != nil {
			encoded, err := options.Marshal(x.CredentialInfoVShareBind)
			if err != nil {
				return protoiface.MarshalOutput{
					NoUnkeyedLiterals: input.NoUnkeyedLiterals,
					Buf:               input.Buf,
				}, err
			}
			i -= len(encoded)
			copy(dAtA[i:], encoded)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(encoded)))
			i--
			dAtA[i] = 0x42
		}
		if len(x.EncCredentialInfoVShare) > 0 {
			i -= len(x.EncCredentialInfoVShare)
			copy(dAtA[i:], x.EncCredentialInfoVShare)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.EncCredentialInfoVShare)))
			i--
			dAtA[i] = 0x3a
		}
		if x.CredentialHashVShareBind != nil {
			encoded, err := options.Marshal(x.CredentialHashVShareBind)
			if err != nil {
				return protoiface.MarshalOutput{
					NoUnkeyedLiterals: input.NoUnkeyedLiterals,
					Buf:               input.Buf,
				}, err
			}
			i -= len(encoded)
			copy(dAtA[i:], encoded)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(encoded)))
			i--
			dAtA[i] = 0x32
		}
		if len(x.EncCredentialHashVShare) > 0 {
			i -= len(x.EncCredentialHashVShare)
			copy(dAtA[i:], x.EncCredentialHashVShare)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.EncCredentialHashVShare)))
			i--
			dAtA[i] = 0x2a
		}
		if x.CredentialPedersenCommit != nil {
			encoded, err := options.Marshal(x.CredentialPedersenCommit)
			if err != nil {
				return protoiface.MarshalOutput{
					NoUnkeyedLiterals: input.NoUnkeyedLiterals,
					Buf:               input.Buf,
				}, err
			}
			i -= len(encoded)
			copy(dAtA[i:], encoded)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(encoded)))
			i--
			dAtA[i] = 0x22
		}
		if len(x.WalletID) > 0 {
			i -= len(x.WalletID)
			copy(dAtA[i:], x.WalletID)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.WalletID)))
			i--
			dAtA[i] = 0x1a
		}
		if len(x.CredentialType) > 0 {
			i -= len(x.CredentialType)
			copy(dAtA[i:], x.CredentialType)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.CredentialType)))
			i--
			dAtA[i] = 0x12
		}
		if len(x.CredentialID) > 0 {
			i -= len(x.CredentialID)
			copy(dAtA[i:], x.CredentialID)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.CredentialID)))
			i--
			dAtA[i] = 0xa
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*Credential)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: Credential: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: Credential: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field CredentialID", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.CredentialID = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 2:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field CredentialType", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.CredentialType = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 3:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field WalletID", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.WalletID = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 4:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field CredentialPedersenCommit", wireType)
				}
				var msglen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					msglen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if msglen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + msglen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if x.CredentialPedersenCommit == nil {
					x.CredentialPedersenCommit = &BPedersenCommit{}
				}
				if err := options.Unmarshal(dAtA[iNdEx:postIndex], x.CredentialPedersenCommit); err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				iNdEx = postIndex
			case 5:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field EncCredentialHashVShare", wireType)
				}
				var byteLen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					byteLen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if byteLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + byteLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.EncCredentialHashVShare = append(x.EncCredentialHashVShare[:0], dAtA[iNdEx:postIndex]...)
				if x.EncCredentialHashVShare == nil {
					x.EncCredentialHashVShare = []byte{}
				}
				iNdEx = postIndex
			case 6:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field CredentialHashVShareBind", wireType)
				}
				var msglen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					msglen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if msglen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + msglen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if x.CredentialHashVShareBind == nil {
					x.CredentialHashVShareBind = &VShareBindData{}
				}
				if err := options.Unmarshal(dAtA[iNdEx:postIndex], x.CredentialHashVShareBind); err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				iNdEx = postIndex
			case 7:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field EncCredentialInfoVShare", wireType)
				}
				var byteLen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					byteLen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if byteLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + byteLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.EncCredentialInfoVShare = append(x.EncCredentialInfoVShare[:0], dAtA[iNdEx:postIndex]...)
				if x.EncCredentialInfoVShare == nil {
					x.EncCredentialInfoVShare = []byte{}
				}
				iNdEx = postIndex
			case 8:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field CredentialInfoVShareBind", wireType)
				}
				var msglen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					msglen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if msglen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + msglen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if x.CredentialInfoVShareBind == nil {
					x.CredentialInfoVShareBind = &VShareBindData{}
				}
				if err := options.Unmarshal(dAtA[iNdEx:postIndex], x.CredentialInfoVShareBind); err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				iNdEx = postIndex
			case 9:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field FindCredentialPedersenCommit", wireType)
				}
				var msglen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					msglen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if msglen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + msglen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if x.FindCredentialPedersenCommit == nil {
					x.FindCredentialPedersenCommit = &BPedersenCommit{}
				}
				if err := options.Unmarshal(dAtA[iNdEx:postIndex], x.FindCredentialPedersenCommit); err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				iNdEx = postIndex
			case 10:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field ProviderWalletID", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.ProviderWalletID = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 11:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field ReferenceCredentialID", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.ReferenceCredentialID = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var (
	md_MsgBindCredential                     protoreflect.MessageDescriptor
	fd_MsgBindCredential_creator             protoreflect.FieldDescriptor
	fd_MsgBindCredential_credentialType      protoreflect.FieldDescriptor
	fd_MsgBindCredential_credentialInfo      protoreflect.FieldDescriptor
	fd_MsgBindCredential_proofPedersenCommit protoreflect.FieldDescriptor
)

func init() {
	file_qadena_qadena_credential_proto_init()
	md_MsgBindCredential = File_qadena_qadena_credential_proto.Messages().ByName("MsgBindCredential")
	fd_MsgBindCredential_creator = md_MsgBindCredential.Fields().ByName("creator")
	fd_MsgBindCredential_credentialType = md_MsgBindCredential.Fields().ByName("credentialType")
	fd_MsgBindCredential_credentialInfo = md_MsgBindCredential.Fields().ByName("credentialInfo")
	fd_MsgBindCredential_proofPedersenCommit = md_MsgBindCredential.Fields().ByName("proofPedersenCommit")
}

var _ protoreflect.Message = (*fastReflection_MsgBindCredential)(nil)

type fastReflection_MsgBindCredential MsgBindCredential

func (x *MsgBindCredential) ProtoReflect() protoreflect.Message {
	return (*fastReflection_MsgBindCredential)(x)
}

func (x *MsgBindCredential) slowProtoReflect() protoreflect.Message {
	mi := &file_qadena_qadena_credential_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_MsgBindCredential_messageType fastReflection_MsgBindCredential_messageType
var _ protoreflect.MessageType = fastReflection_MsgBindCredential_messageType{}

type fastReflection_MsgBindCredential_messageType struct{}

func (x fastReflection_MsgBindCredential_messageType) Zero() protoreflect.Message {
	return (*fastReflection_MsgBindCredential)(nil)
}
func (x fastReflection_MsgBindCredential_messageType) New() protoreflect.Message {
	return new(fastReflection_MsgBindCredential)
}
func (x fastReflection_MsgBindCredential_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_MsgBindCredential
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_MsgBindCredential) Descriptor() protoreflect.MessageDescriptor {
	return md_MsgBindCredential
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_MsgBindCredential) Type() protoreflect.MessageType {
	return _fastReflection_MsgBindCredential_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_MsgBindCredential) New() protoreflect.Message {
	return new(fastReflection_MsgBindCredential)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_MsgBindCredential) Interface() protoreflect.ProtoMessage {
	return (*MsgBindCredential)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_MsgBindCredential) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.Creator != "" {
		value := protoreflect.ValueOfString(x.Creator)
		if !f(fd_MsgBindCredential_creator, value) {
			return
		}
	}
	if x.CredentialType != "" {
		value := protoreflect.ValueOfString(x.CredentialType)
		if !f(fd_MsgBindCredential_credentialType, value) {
			return
		}
	}
	if x.CredentialInfo != "" {
		value := protoreflect.ValueOfString(x.CredentialInfo)
		if !f(fd_MsgBindCredential_credentialInfo, value) {
			return
		}
	}
	if x.ProofPedersenCommit != nil {
		value := protoreflect.ValueOfMessage(x.ProofPedersenCommit.ProtoReflect())
		if !f(fd_MsgBindCredential_proofPedersenCommit, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_MsgBindCredential) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "qadena.qadena.MsgBindCredential.creator":
		return x.Creator != ""
	case "qadena.qadena.MsgBindCredential.credentialType":
		return x.CredentialType != ""
	case "qadena.qadena.MsgBindCredential.credentialInfo":
		return x.CredentialInfo != ""
	case "qadena.qadena.MsgBindCredential.proofPedersenCommit":
		return x.ProofPedersenCommit != nil
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: qadena.qadena.MsgBindCredential"))
		}
		panic(fmt.Errorf("message qadena.qadena.MsgBindCredential does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgBindCredential) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "qadena.qadena.MsgBindCredential.creator":
		x.Creator = ""
	case "qadena.qadena.MsgBindCredential.credentialType":
		x.CredentialType = ""
	case "qadena.qadena.MsgBindCredential.credentialInfo":
		x.CredentialInfo = ""
	case "qadena.qadena.MsgBindCredential.proofPedersenCommit":
		x.ProofPedersenCommit = nil
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: qadena.qadena.MsgBindCredential"))
		}
		panic(fmt.Errorf("message qadena.qadena.MsgBindCredential does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_MsgBindCredential) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "qadena.qadena.MsgBindCredential.creator":
		value := x.Creator
		return protoreflect.ValueOfString(value)
	case "qadena.qadena.MsgBindCredential.credentialType":
		value := x.CredentialType
		return protoreflect.ValueOfString(value)
	case "qadena.qadena.MsgBindCredential.credentialInfo":
		value := x.CredentialInfo
		return protoreflect.ValueOfString(value)
	case "qadena.qadena.MsgBindCredential.proofPedersenCommit":
		value := x.ProofPedersenCommit
		return protoreflect.ValueOfMessage(value.ProtoReflect())
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: qadena.qadena.MsgBindCredential"))
		}
		panic(fmt.Errorf("message qadena.qadena.MsgBindCredential does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgBindCredential) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "qadena.qadena.MsgBindCredential.creator":
		x.Creator = value.Interface().(string)
	case "qadena.qadena.MsgBindCredential.credentialType":
		x.CredentialType = value.Interface().(string)
	case "qadena.qadena.MsgBindCredential.credentialInfo":
		x.CredentialInfo = value.Interface().(string)
	case "qadena.qadena.MsgBindCredential.proofPedersenCommit":
		x.ProofPedersenCommit = value.Message().Interface().(*BPedersenCommit)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: qadena.qadena.MsgBindCredential"))
		}
		panic(fmt.Errorf("message qadena.qadena.MsgBindCredential does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgBindCredential) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "qadena.qadena.MsgBindCredential.proofPedersenCommit":
		if x.ProofPedersenCommit == nil {
			x.ProofPedersenCommit = new(BPedersenCommit)
		}
		return protoreflect.ValueOfMessage(x.ProofPedersenCommit.ProtoReflect())
	case "qadena.qadena.MsgBindCredential.creator":
		panic(fmt.Errorf("field creator of message qadena.qadena.MsgBindCredential is not mutable"))
	case "qadena.qadena.MsgBindCredential.credentialType":
		panic(fmt.Errorf("field credentialType of message qadena.qadena.MsgBindCredential is not mutable"))
	case "qadena.qadena.MsgBindCredential.credentialInfo":
		panic(fmt.Errorf("field credentialInfo of message qadena.qadena.MsgBindCredential is not mutable"))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: qadena.qadena.MsgBindCredential"))
		}
		panic(fmt.Errorf("message qadena.qadena.MsgBindCredential does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_MsgBindCredential) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "qadena.qadena.MsgBindCredential.creator":
		return protoreflect.ValueOfString("")
	case "qadena.qadena.MsgBindCredential.credentialType":
		return protoreflect.ValueOfString("")
	case "qadena.qadena.MsgBindCredential.credentialInfo":
		return protoreflect.ValueOfString("")
	case "qadena.qadena.MsgBindCredential.proofPedersenCommit":
		m := new(BPedersenCommit)
		return protoreflect.ValueOfMessage(m.ProtoReflect())
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: qadena.qadena.MsgBindCredential"))
		}
		panic(fmt.Errorf("message qadena.qadena.MsgBindCredential does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_MsgBindCredential) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in qadena.qadena.MsgBindCredential", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_MsgBindCredential) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgBindCredential) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_MsgBindCredential) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_MsgBindCredential) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*MsgBindCredential)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		l = len(x.Creator)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.CredentialType)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.CredentialInfo)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.ProofPedersenCommit != nil {
			l = options.Size(x.ProofPedersenCommit)
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*MsgBindCredential)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if x.ProofPedersenCommit != nil {
			encoded, err := options.Marshal(x.ProofPedersenCommit)
			if err != nil {
				return protoiface.MarshalOutput{
					NoUnkeyedLiterals: input.NoUnkeyedLiterals,
					Buf:               input.Buf,
				}, err
			}
			i -= len(encoded)
			copy(dAtA[i:], encoded)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(encoded)))
			i--
			dAtA[i] = 0x22
		}
		if len(x.CredentialInfo) > 0 {
			i -= len(x.CredentialInfo)
			copy(dAtA[i:], x.CredentialInfo)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.CredentialInfo)))
			i--
			dAtA[i] = 0x1a
		}
		if len(x.CredentialType) > 0 {
			i -= len(x.CredentialType)
			copy(dAtA[i:], x.CredentialType)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.CredentialType)))
			i--
			dAtA[i] = 0x12
		}
		if len(x.Creator) > 0 {
			i -= len(x.Creator)
			copy(dAtA[i:], x.Creator)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.Creator)))
			i--
			dAtA[i] = 0xa
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*MsgBindCredential)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: MsgBindCredential: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: MsgBindCredential: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Creator = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 2:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field CredentialType", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.CredentialType = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 3:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field CredentialInfo", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.CredentialInfo = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 4:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field ProofPedersenCommit", wireType)
				}
				var msglen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					msglen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if msglen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + msglen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if x.ProofPedersenCommit == nil {
					x.ProofPedersenCommit = &BPedersenCommit{}
				}
				if err := options.Unmarshal(dAtA[iNdEx:postIndex], x.ProofPedersenCommit); err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				iNdEx = postIndex
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var (
	md_MsgBindCredentialResponse protoreflect.MessageDescriptor
)

func init() {
	file_qadena_qadena_credential_proto_init()
	md_MsgBindCredentialResponse = File_qadena_qadena_credential_proto.Messages().ByName("MsgBindCredentialResponse")
}

var _ protoreflect.Message = (*fastReflection_MsgBindCredentialResponse)(nil)

type fastReflection_MsgBindCredentialResponse MsgBindCredentialResponse

func (x *MsgBindCredentialResponse) ProtoReflect() protoreflect.Message {
	return (*fastReflection_MsgBindCredentialResponse)(x)
}

func (x *MsgBindCredentialResponse) slowProtoReflect() protoreflect.Message {
	mi := &file_qadena_qadena_credential_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_MsgBindCredentialResponse_messageType fastReflection_MsgBindCredentialResponse_messageType
var _ protoreflect.MessageType = fastReflection_MsgBindCredentialResponse_messageType{}

type fastReflection_MsgBindCredentialResponse_messageType struct{}

func (x fastReflection_MsgBindCredentialResponse_messageType) Zero() protoreflect.Message {
	return (*fastReflection_MsgBindCredentialResponse)(nil)
}
func (x fastReflection_MsgBindCredentialResponse_messageType) New() protoreflect.Message {
	return new(fastReflection_MsgBindCredentialResponse)
}
func (x fastReflection_MsgBindCredentialResponse_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_MsgBindCredentialResponse
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_MsgBindCredentialResponse) Descriptor() protoreflect.MessageDescriptor {
	return md_MsgBindCredentialResponse
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_MsgBindCredentialResponse) Type() protoreflect.MessageType {
	return _fastReflection_MsgBindCredentialResponse_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_MsgBindCredentialResponse) New() protoreflect.Message {
	return new(fastReflection_MsgBindCredentialResponse)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_MsgBindCredentialResponse) Interface() protoreflect.ProtoMessage {
	return (*MsgBindCredentialResponse)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_MsgBindCredentialResponse) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_MsgBindCredentialResponse) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: qadena.qadena.MsgBindCredentialResponse"))
		}
		panic(fmt.Errorf("message qadena.qadena.MsgBindCredentialResponse does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgBindCredentialResponse) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: qadena.qadena.MsgBindCredentialResponse"))
		}
		panic(fmt.Errorf("message qadena.qadena.MsgBindCredentialResponse does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_MsgBindCredentialResponse) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: qadena.qadena.MsgBindCredentialResponse"))
		}
		panic(fmt.Errorf("message qadena.qadena.MsgBindCredentialResponse does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgBindCredentialResponse) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: qadena.qadena.MsgBindCredentialResponse"))
		}
		panic(fmt.Errorf("message qadena.qadena.MsgBindCredentialResponse does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgBindCredentialResponse) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: qadena.qadena.MsgBindCredentialResponse"))
		}
		panic(fmt.Errorf("message qadena.qadena.MsgBindCredentialResponse does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_MsgBindCredentialResponse) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: qadena.qadena.MsgBindCredentialResponse"))
		}
		panic(fmt.Errorf("message qadena.qadena.MsgBindCredentialResponse does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_MsgBindCredentialResponse) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in qadena.qadena.MsgBindCredentialResponse", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_MsgBindCredentialResponse) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgBindCredentialResponse) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_MsgBindCredentialResponse) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_MsgBindCredentialResponse) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*MsgBindCredentialResponse)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*MsgBindCredentialResponse)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*MsgBindCredentialResponse)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: MsgBindCredentialResponse: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: MsgBindCredentialResponse: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.0
// 	protoc        (unknown)
// source: qadena/qadena/credential.proto

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Credential struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CredentialID                 string           `protobuf:"bytes,1,opt,name=credentialID,proto3" json:"credentialID,omitempty"`
	CredentialType               string           `protobuf:"bytes,2,opt,name=credentialType,proto3" json:"credentialType,omitempty"`
	WalletID                     string           `protobuf:"bytes,3,opt,name=walletID,proto3" json:"walletID,omitempty"`
	CredentialPedersenCommit     *BPedersenCommit `protobuf:"bytes,4,opt,name=credentialPedersenCommit,proto3" json:"credentialPedersenCommit,omitempty"`
	EncCredentialHashVShare      []byte           `protobuf:"bytes,5,opt,name=encCredentialHashVShare,proto3" json:"encCredentialHashVShare,omitempty"`
	CredentialHashVShareBind     *VShareBindData  `protobuf:"bytes,6,opt,name=credentialHashVShareBind,proto3" json:"credentialHashVShareBind,omitempty"`
	EncCredentialInfoVShare      []byte           `protobuf:"bytes,7,opt,name=encCredentialInfoVShare,proto3" json:"encCredentialInfoVShare,omitempty"`
	CredentialInfoVShareBind     *VShareBindData  `protobuf:"bytes,8,opt,name=credentialInfoVShareBind,proto3" json:"credentialInfoVShareBind,omitempty"`
	FindCredentialPedersenCommit *BPedersenCommit `protobuf:"bytes,9,opt,name=findCredentialPedersenCommit,proto3" json:"findCredentialPedersenCommit,omitempty"`
	ProviderWalletID             string           `protobuf:"bytes,10,opt,name=providerWalletID,proto3" json:"providerWalletID,omitempty"`
	ReferenceCredentialID        string           `protobuf:"bytes,11,opt,name=referenceCredentialID,proto3" json:"referenceCredentialID,omitempty"`
}

func (x *Credential) Reset() {
	*x = Credential{}
	if protoimpl.UnsafeEnabled {
		mi := &file_qadena_qadena_credential_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Credential) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Credential) ProtoMessage() {}

// Deprecated: Use Credential.ProtoReflect.Descriptor instead.
func (*Credential) Descriptor() ([]byte, []int) {
	return file_qadena_qadena_credential_proto_rawDescGZIP(), []int{0}
}

func (x *Credential) GetCredentialID() string {
	if x != nil {
		return x.CredentialID
	}
	return ""
}

func (x *Credential) GetCredentialType() string {
	if x != nil {
		return x.CredentialType
	}
	return ""
}

func (x *Credential) GetWalletID() string {
	if x != nil {
		return x.WalletID
	}
	return ""
}

func (x *Credential) GetCredentialPedersenCommit() *BPedersenCommit {
	if x != nil {
		return x.CredentialPedersenCommit
	}
	return nil
}

func (x *Credential) GetEncCredentialHashVShare() []byte {
	if x != nil {
		return x.EncCredentialHashVShare
	}
	return nil
}

func (x *Credential) GetCredentialHashVShareBind() *VShareBindData {
	if x != nil {
		return x.CredentialHashVShareBind
	}
	return nil
}

func (x *Credential) GetEncCredentialInfoVShare() []byte {
	if x != nil {
		return x.EncCredentialInfoVShare
	}
	return nil
}

func (x *Credential) GetCredentialInfoVShareBind() *VShareBindData {
	if x != nil {
		return x.CredentialInfoVShareBind
	}
	return nil
}

func (x *Credential) GetFindCredentialPedersenCommit() *BPedersenCommit {
	if x != nil {
		return x.FindCredentialPedersenCommit
	}
	return nil
}

func (x *Credential) GetProviderWalletID() string {
	if x != nil {
		return x.ProviderWalletID
	}
	return ""
}

func (x *Credential) GetReferenceCredentialID() string {
	if x != nil {
		return x.ReferenceCredentialID
	}
	return ""
}

// clone alert, this is also in nameservice/tx.proto!!!!
type MsgBindCredential struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Creator             string           `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	CredentialType      string           `protobuf:"bytes,2,opt,name=credentialType,proto3" json:"credentialType,omitempty"`
	CredentialInfo      string           `protobuf:"bytes,3,opt,name=credentialInfo,proto3" json:"credentialInfo,omitempty"`
	ProofPedersenCommit *BPedersenCommit `protobuf:"bytes,4,opt,name=proofPedersenCommit,proto3" json:"proofPedersenCommit,omitempty"`
}

func (x *MsgBindCredential) Reset() {
	*x = MsgBindCredential{}
	if protoimpl.UnsafeEnabled {
		mi := &file_qadena_qadena_credential_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MsgBindCredential) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MsgBindCredential) ProtoMessage() {}

// Deprecated: Use MsgBindCredential.ProtoReflect.Descriptor instead.
func (*MsgBindCredential) Descriptor() ([]byte, []int) {
	return file_qadena_qadena_credential_proto_rawDescGZIP(), []int{1}
}

func (x *MsgBindCredential) GetCreator() string {
	if x != nil {
		return x.Creator
	}
	return ""
}

func (x *MsgBindCredential) GetCredentialType() string {
	if x != nil {
		return x.CredentialType
	}
	return ""
}

func (x *MsgBindCredential) GetCredentialInfo() string {
	if x != nil {
		return x.CredentialInfo
	}
	return ""
}

func (x *MsgBindCredential) GetProofPedersenCommit() *BPedersenCommit {
	if x != nil {
		return x.ProofPedersenCommit
	}
	return nil
}

type MsgBindCredentialResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *MsgBindCredentialResponse) Reset() {
	*x = MsgBindCredentialResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_qadena_qadena_credential_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MsgBindCredentialResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MsgBindCredentialResponse) ProtoMessage() {}

// Deprecated: Use MsgBindCredentialResponse.ProtoReflect.Descriptor instead.
func (*MsgBindCredentialResponse) Descriptor() ([]byte, []int) {
	return file_qadena_qadena_credential_proto_rawDescGZIP(), []int{2}
}

var File_qadena_qadena_credential_proto protoreflect.FileDescriptor

var file_qadena_qadena_credential_proto_rawDesc = []byte{
	0x0a, 0x1e, 0x71, 0x61, 0x64, 0x65, 0x6e, 0x61, 0x2f, 0x71, 0x61, 0x64, 0x65, 0x6e, 0x61, 0x2f,
	0x63, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x12, 0x0d, 0x71, 0x61, 0x64, 0x65, 0x6e, 0x61, 0x2e, 0x71, 0x61, 0x64, 0x65, 0x6e, 0x61, 0x1a,
	0x23, 0x71, 0x61, 0x64, 0x65, 0x6e, 0x61, 0x2f, 0x71, 0x61, 0x64, 0x65, 0x6e, 0x61, 0x2f, 0x70,
	0x65, 0x64, 0x65, 0x72, 0x73, 0x65, 0x6e, 0x5f, 0x63, 0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x25, 0x71, 0x61, 0x64, 0x65, 0x6e, 0x61, 0x2f, 0x71, 0x61, 0x64,
	0x65, 0x6e, 0x61, 0x2f, 0x62, 0x5f, 0x70, 0x65, 0x64, 0x65, 0x72, 0x73, 0x65, 0x6e, 0x5f, 0x63,
	0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x25, 0x71, 0x61, 0x64,
	0x65, 0x6e, 0x61, 0x2f, 0x71, 0x61, 0x64, 0x65, 0x6e, 0x61, 0x2f, 0x76, 0x5f, 0x73, 0x68, 0x61,
	0x72, 0x65, 0x5f, 0x62, 0x69, 0x6e, 0x64, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x22, 0xc0, 0x05, 0x0a, 0x0a, 0x43, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61,
	0x6c, 0x12, 0x22, 0x0a, 0x0c, 0x63, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x49,
	0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x63, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74,
	0x69, 0x61, 0x6c, 0x49, 0x44, 0x12, 0x26, 0x0a, 0x0e, 0x63, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74,
	0x69, 0x61, 0x6c, 0x54, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x63,
	0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1a, 0x0a,
	0x08, 0x77, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x49, 0x44, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x77, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x49, 0x44, 0x12, 0x5a, 0x0a, 0x18, 0x63, 0x72, 0x65,
	0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x50, 0x65, 0x64, 0x65, 0x72, 0x73, 0x65, 0x6e, 0x43,
	0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x71, 0x61,
	0x64, 0x65, 0x6e, 0x61, 0x2e, 0x71, 0x61, 0x64, 0x65, 0x6e, 0x61, 0x2e, 0x42, 0x50, 0x65, 0x64,
	0x65, 0x72, 0x73, 0x65, 0x6e, 0x43, 0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x52, 0x18, 0x63, 0x72, 0x65,
	0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x50, 0x65, 0x64, 0x65, 0x72, 0x73, 0x65, 0x6e, 0x43,
	0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x12, 0x38, 0x0a, 0x17, 0x65, 0x6e, 0x63, 0x43, 0x72, 0x65, 0x64,
	0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x48, 0x61, 0x73, 0x68, 0x56, 0x53, 0x68, 0x61, 0x72, 0x65,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x17, 0x65, 0x6e, 0x63, 0x43, 0x72, 0x65, 0x64, 0x65,
	0x6e, 0x74, 0x69, 0x61, 0x6c, 0x48, 0x61, 0x73, 0x68, 0x56, 0x53, 0x68, 0x61, 0x72, 0x65, 0x12,
	0x59, 0x0a, 0x18, 0x63, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x48, 0x61, 0x73,
	0x68, 0x56, 0x53, 0x68, 0x61, 0x72, 0x65, 0x42, 0x69, 0x6e, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1d, 0x2e, 0x71, 0x61, 0x64, 0x65, 0x6e, 0x61, 0x2e, 0x71, 0x61, 0x64, 0x65, 0x6e,
	0x61, 0x2e, 0x56, 0x53, 0x68, 0x61, 0x72, 0x65, 0x42, 0x69, 0x6e, 0x64, 0x44, 0x61, 0x74, 0x61,
	0x52, 0x18, 0x63, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x48, 0x61, 0x73, 0x68,
	0x56, 0x53, 0x68, 0x61, 0x72, 0x65, 0x42, 0x69, 0x6e, 0x64, 0x12, 0x38, 0x0a, 0x17, 0x65, 0x6e,
	0x63, 0x43, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x49, 0x6e, 0x66, 0x6f, 0x56,
	0x53, 0x68, 0x61, 0x72, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x17, 0x65, 0x6e, 0x63,
	0x43, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x49, 0x6e, 0x66, 0x6f, 0x56, 0x53,
	0x68, 0x61, 0x72, 0x65, 0x12, 0x59, 0x0a, 0x18, 0x63, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69,
	0x61, 0x6c, 0x49, 0x6e, 0x66, 0x6f, 0x56, 0x53, 0x68, 0x61, 0x72, 0x65, 0x42, 0x69, 0x6e, 0x64,
	0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x71, 0x61, 0x64, 0x65, 0x6e, 0x61, 0x2e,
	0x71, 0x61, 0x64, 0x65, 0x6e, 0x61, 0x2e, 0x56, 0x53, 0x68, 0x61, 0x72, 0x65, 0x42, 0x69, 0x6e,
	0x64, 0x44, 0x61, 0x74, 0x61, 0x52, 0x18, 0x63, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61,
	0x6c, 0x49, 0x6e, 0x66, 0x6f, 0x56, 0x53, 0x68, 0x61, 0x72, 0x65, 0x42, 0x69, 0x6e, 0x64, 0x12,
	0x62, 0x0a, 0x1c, 0x66, 0x69, 0x6e, 0x64, 0x43, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61,
	0x6c, 0x50, 0x65, 0x64, 0x65, 0x72, 0x73, 0x65, 0x6e, 0x43, 0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x18,
	0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x71, 0x61, 0x64, 0x65, 0x6e, 0x61, 0x2e, 0x71,
	0x61, 0x64, 0x65, 0x6e, 0x61, 0x2e, 0x42, 0x50, 0x65, 0x64, 0x65, 0x72, 0x73, 0x65, 0x6e, 0x43,
	0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x52, 0x1c, 0x66, 0x69, 0x6e, 0x64, 0x43, 0x72, 0x65, 0x64, 0x65,
	0x6e, 0x74, 0x69, 0x61, 0x6c, 0x50, 0x65, 0x64, 0x65, 0x72, 0x73, 0x65, 0x6e, 0x43, 0x6f, 0x6d,
	0x6d, 0x69, 0x74, 0x12, 0x2a, 0x0a, 0x10, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x57,
	0x61, 0x6c, 0x6c, 0x65, 0x74, 0x49, 0x44, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x70,
	0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x57, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x49, 0x44, 0x12,
	0x34, 0x0a, 0x15, 0x72, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x43, 0x72, 0x65, 0x64,
	0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x49, 0x44, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x15,
	0x72, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x43, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74,
	0x69, 0x61, 0x6c, 0x49, 0x44, 0x22, 0xcf, 0x01, 0x0a, 0x11, 0x4d, 0x73, 0x67, 0x42, 0x69, 0x6e,
	0x64, 0x43, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x12, 0x18, 0x0a, 0x07, 0x63,
	0x72, 0x65, 0x61, 0x74, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x72,
	0x65, 0x61, 0x74, 0x6f, 0x72, 0x12, 0x26, 0x0a, 0x0e, 0x63, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74,
	0x69, 0x61, 0x6c, 0x54, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x63,
	0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x54, 0x79, 0x70, 0x65, 0x12, 0x26, 0x0a,
	0x0e, 0x63, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x49, 0x6e, 0x66, 0x6f, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x63, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61,
	0x6c, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x50, 0x0a, 0x13, 0x70, 0x72, 0x6f, 0x6f, 0x66, 0x50, 0x65,
	0x64, 0x65, 0x72, 0x73, 0x65, 0x6e, 0x43, 0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x71, 0x61, 0x64, 0x65, 0x6e, 0x61, 0x2e, 0x71, 0x61, 0x64, 0x65,
	0x6e, 0x61, 0x2e, 0x42, 0x50, 0x65, 0x64, 0x65, 0x72, 0x73, 0x65, 0x6e, 0x43, 0x6f, 0x6d, 0x6d,
	0x69, 0x74, 0x52, 0x13, 0x70, 0x72, 0x6f, 0x6f, 0x66, 0x50, 0x65, 0x64, 0x65, 0x72, 0x73, 0x65,
	0x6e, 0x43, 0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x22, 0x1b, 0x0a, 0x19, 0x4d, 0x73, 0x67, 0x42, 0x69,
	0x6e, 0x64, 0x43, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x42, 0x99, 0x01, 0x0a, 0x11, 0x63, 0x6f, 0x6d, 0x2e, 0x71, 0x61, 0x64,
	0x65, 0x6e, 0x61, 0x2e, 0x71, 0x61, 0x64, 0x65, 0x6e, 0x61, 0x42, 0x0f, 0x43, 0x72, 0x65, 0x64,
	0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x50, 0x01, 0x5a, 0x1e, 0x63,
	0x6f, 0x73, 0x6d, 0x6f, 0x73, 0x73, 0x64, 0x6b, 0x2e, 0x69, 0x6f, 0x2f, 0x61, 0x70, 0x69, 0x2f,
	0x71, 0x61, 0x64, 0x65, 0x6e, 0x61, 0x2f, 0x71, 0x61, 0x64, 0x65, 0x6e, 0x61, 0xa2, 0x02, 0x03,
	0x51, 0x51, 0x58, 0xaa, 0x02, 0x0d, 0x51, 0x61, 0x64, 0x65, 0x6e, 0x61, 0x2e, 0x51, 0x61, 0x64,
	0x65, 0x6e, 0x61, 0xca, 0x02, 0x0d, 0x51, 0x61, 0x64, 0x65, 0x6e, 0x61, 0x5c, 0x51, 0x61, 0x64,
	0x65, 0x6e, 0x61, 0xe2, 0x02, 0x19, 0x51, 0x61, 0x64, 0x65, 0x6e, 0x61, 0x5c, 0x51, 0x61, 0x64,
	0x65, 0x6e, 0x61, 0x5c, 0x47, 0x50, 0x42, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0xea,
	0x02, 0x0e, 0x51, 0x61, 0x64, 0x65, 0x6e, 0x61, 0x3a, 0x3a, 0x51, 0x61, 0x64, 0x65, 0x6e, 0x61,
	0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_qadena_qadena_credential_proto_rawDescOnce sync.Once
	file_qadena_qadena_credential_proto_rawDescData = file_qadena_qadena_credential_proto_rawDesc
)

func file_qadena_qadena_credential_proto_rawDescGZIP() []byte {
	file_qadena_qadena_credential_proto_rawDescOnce.Do(func() {
		file_qadena_qadena_credential_proto_rawDescData = protoimpl.X.CompressGZIP(file_qadena_qadena_credential_proto_rawDescData)
	})
	return file_qadena_qadena_credential_proto_rawDescData
}

var file_qadena_qadena_credential_proto_msgTypes = make([]protoimpl.MessageInfo, 3)
var file_qadena_qadena_credential_proto_goTypes = []interface{}{
	(*Credential)(nil),                // 0: qadena.qadena.Credential
	(*MsgBindCredential)(nil),         // 1: qadena.qadena.MsgBindCredential
	(*MsgBindCredentialResponse)(nil), // 2: qadena.qadena.MsgBindCredentialResponse
	(*BPedersenCommit)(nil),           // 3: qadena.qadena.BPedersenCommit
	(*VShareBindData)(nil),            // 4: qadena.qadena.VShareBindData
}
var file_qadena_qadena_credential_proto_depIdxs = []int32{
	3, // 0: qadena.qadena.Credential.credentialPedersenCommit:type_name -> qadena.qadena.BPedersenCommit
	4, // 1: qadena.qadena.Credential.credentialHashVShareBind:type_name -> qadena.qadena.VShareBindData
	4, // 2: qadena.qadena.Credential.credentialInfoVShareBind:type_name -> qadena.qadena.VShareBindData
	3, // 3: qadena.qadena.Credential.findCredentialPedersenCommit:type_name -> qadena.qadena.BPedersenCommit
	3, // 4: qadena.qadena.MsgBindCredential.proofPedersenCommit:type_name -> qadena.qadena.BPedersenCommit
	5, // [5:5] is the sub-list for method output_type
	5, // [5:5] is the sub-list for method input_type
	5, // [5:5] is the sub-list for extension type_name
	5, // [5:5] is the sub-list for extension extendee
	0, // [0:5] is the sub-list for field type_name
}

func init() { file_qadena_qadena_credential_proto_init() }
func file_qadena_qadena_credential_proto_init() {
	if File_qadena_qadena_credential_proto != nil {
		return
	}
	file_qadena_qadena_pedersen_commit_proto_init()
	file_qadena_qadena_b_pedersen_commit_proto_init()
	file_qadena_qadena_v_share_bind_data_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_qadena_qadena_credential_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Credential); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_qadena_qadena_credential_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MsgBindCredential); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_qadena_qadena_credential_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MsgBindCredentialResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_qadena_qadena_credential_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   3,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_qadena_qadena_credential_proto_goTypes,
		DependencyIndexes: file_qadena_qadena_credential_proto_depIdxs,
		MessageInfos:      file_qadena_qadena_credential_proto_msgTypes,
	}.Build()
	File_qadena_qadena_credential_proto = out.File
	file_qadena_qadena_credential_proto_rawDesc = nil
	file_qadena_qadena_credential_proto_goTypes = nil
	file_qadena_qadena_credential_proto_depIdxs = nil
}
