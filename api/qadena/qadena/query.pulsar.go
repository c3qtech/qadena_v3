// Code generated by protoc-gen-go-pulsar. DO NOT EDIT.
package qadena

import (
	_ "cosmossdk.io/api/amino"
	v1beta1 "cosmossdk.io/api/cosmos/base/query/v1beta1"
	v1beta11 "cosmossdk.io/api/cosmos/base/v1beta1"
	fmt "fmt"
	runtime "github.com/cosmos/cosmos-proto/runtime"
	_ "github.com/cosmos/gogoproto/gogoproto"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoiface "google.golang.org/protobuf/runtime/protoiface"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	io "io"
	reflect "reflect"
	sync "sync"
)

var (
	md_QueryParamsRequest protoreflect.MessageDescriptor
)

func init() {
	file_qadena_qadena_query_proto_init()
	md_QueryParamsRequest = File_qadena_qadena_query_proto.Messages().ByName("QueryParamsRequest")
}

var _ protoreflect.Message = (*fastReflection_QueryParamsRequest)(nil)

type fastReflection_QueryParamsRequest QueryParamsRequest

func (x *QueryParamsRequest) ProtoReflect() protoreflect.Message {
	return (*fastReflection_QueryParamsRequest)(x)
}

func (x *QueryParamsRequest) slowProtoReflect() protoreflect.Message {
	mi := &file_qadena_qadena_query_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_QueryParamsRequest_messageType fastReflection_QueryParamsRequest_messageType
var _ protoreflect.MessageType = fastReflection_QueryParamsRequest_messageType{}

type fastReflection_QueryParamsRequest_messageType struct{}

func (x fastReflection_QueryParamsRequest_messageType) Zero() protoreflect.Message {
	return (*fastReflection_QueryParamsRequest)(nil)
}
func (x fastReflection_QueryParamsRequest_messageType) New() protoreflect.Message {
	return new(fastReflection_QueryParamsRequest)
}
func (x fastReflection_QueryParamsRequest_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_QueryParamsRequest
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_QueryParamsRequest) Descriptor() protoreflect.MessageDescriptor {
	return md_QueryParamsRequest
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_QueryParamsRequest) Type() protoreflect.MessageType {
	return _fastReflection_QueryParamsRequest_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_QueryParamsRequest) New() protoreflect.Message {
	return new(fastReflection_QueryParamsRequest)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_QueryParamsRequest) Interface() protoreflect.ProtoMessage {
	return (*QueryParamsRequest)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_QueryParamsRequest) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_QueryParamsRequest) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: qadena.qadena.QueryParamsRequest"))
		}
		panic(fmt.Errorf("message qadena.qadena.QueryParamsRequest does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_QueryParamsRequest) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: qadena.qadena.QueryParamsRequest"))
		}
		panic(fmt.Errorf("message qadena.qadena.QueryParamsRequest does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_QueryParamsRequest) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: qadena.qadena.QueryParamsRequest"))
		}
		panic(fmt.Errorf("message qadena.qadena.QueryParamsRequest does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_QueryParamsRequest) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: qadena.qadena.QueryParamsRequest"))
		}
		panic(fmt.Errorf("message qadena.qadena.QueryParamsRequest does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_QueryParamsRequest) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: qadena.qadena.QueryParamsRequest"))
		}
		panic(fmt.Errorf("message qadena.qadena.QueryParamsRequest does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_QueryParamsRequest) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: qadena.qadena.QueryParamsRequest"))
		}
		panic(fmt.Errorf("message qadena.qadena.QueryParamsRequest does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_QueryParamsRequest) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in qadena.qadena.QueryParamsRequest", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_QueryParamsRequest) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_QueryParamsRequest) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_QueryParamsRequest) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_QueryParamsRequest) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*QueryParamsRequest)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*QueryParamsRequest)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*QueryParamsRequest)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: QueryParamsRequest: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: QueryParamsRequest: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var (
	md_QueryParamsResponse        protoreflect.MessageDescriptor
	fd_QueryParamsResponse_params protoreflect.FieldDescriptor
)

func init() {
	file_qadena_qadena_query_proto_init()
	md_QueryParamsResponse = File_qadena_qadena_query_proto.Messages().ByName("QueryParamsResponse")
	fd_QueryParamsResponse_params = md_QueryParamsResponse.Fields().ByName("params")
}

var _ protoreflect.Message = (*fastReflection_QueryParamsResponse)(nil)

type fastReflection_QueryParamsResponse QueryParamsResponse

func (x *QueryParamsResponse) ProtoReflect() protoreflect.Message {
	return (*fastReflection_QueryParamsResponse)(x)
}

func (x *QueryParamsResponse) slowProtoReflect() protoreflect.Message {
	mi := &file_qadena_qadena_query_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_QueryParamsResponse_messageType fastReflection_QueryParamsResponse_messageType
var _ protoreflect.MessageType = fastReflection_QueryParamsResponse_messageType{}

type fastReflection_QueryParamsResponse_messageType struct{}

func (x fastReflection_QueryParamsResponse_messageType) Zero() protoreflect.Message {
	return (*fastReflection_QueryParamsResponse)(nil)
}
func (x fastReflection_QueryParamsResponse_messageType) New() protoreflect.Message {
	return new(fastReflection_QueryParamsResponse)
}
func (x fastReflection_QueryParamsResponse_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_QueryParamsResponse
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_QueryParamsResponse) Descriptor() protoreflect.MessageDescriptor {
	return md_QueryParamsResponse
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_QueryParamsResponse) Type() protoreflect.MessageType {
	return _fastReflection_QueryParamsResponse_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_QueryParamsResponse) New() protoreflect.Message {
	return new(fastReflection_QueryParamsResponse)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_QueryParamsResponse) Interface() protoreflect.ProtoMessage {
	return (*QueryParamsResponse)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_QueryParamsResponse) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.Params != nil {
		value := protoreflect.ValueOfMessage(x.Params.ProtoReflect())
		if !f(fd_QueryParamsResponse_params, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_QueryParamsResponse) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "qadena.qadena.QueryParamsResponse.params":
		return x.Params != nil
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: qadena.qadena.QueryParamsResponse"))
		}
		panic(fmt.Errorf("message qadena.qadena.QueryParamsResponse does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_QueryParamsResponse) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "qadena.qadena.QueryParamsResponse.params":
		x.Params = nil
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: qadena.qadena.QueryParamsResponse"))
		}
		panic(fmt.Errorf("message qadena.qadena.QueryParamsResponse does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_QueryParamsResponse) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "qadena.qadena.QueryParamsResponse.params":
		value := x.Params
		return protoreflect.ValueOfMessage(value.ProtoReflect())
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: qadena.qadena.QueryParamsResponse"))
		}
		panic(fmt.Errorf("message qadena.qadena.QueryParamsResponse does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_QueryParamsResponse) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "qadena.qadena.QueryParamsResponse.params":
		x.Params = value.Message().Interface().(*Params)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: qadena.qadena.QueryParamsResponse"))
		}
		panic(fmt.Errorf("message qadena.qadena.QueryParamsResponse does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_QueryParamsResponse) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "qadena.qadena.QueryParamsResponse.params":
		if x.Params == nil {
			x.Params = new(Params)
		}
		return protoreflect.ValueOfMessage(x.Params.ProtoReflect())
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: qadena.qadena.QueryParamsResponse"))
		}
		panic(fmt.Errorf("message qadena.qadena.QueryParamsResponse does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_QueryParamsResponse) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "qadena.qadena.QueryParamsResponse.params":
		m := new(Params)
		return protoreflect.ValueOfMessage(m.ProtoReflect())
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: qadena.qadena.QueryParamsResponse"))
		}
		panic(fmt.Errorf("message qadena.qadena.QueryParamsResponse does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_QueryParamsResponse) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in qadena.qadena.QueryParamsResponse", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_QueryParamsResponse) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_QueryParamsResponse) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_QueryParamsResponse) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_QueryParamsResponse) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*QueryParamsResponse)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		if x.Params != nil {
			l = options.Size(x.Params)
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*QueryParamsResponse)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if x.Params != nil {
			encoded, err := options.Marshal(x.Params)
			if err != nil {
				return protoiface.MarshalOutput{
					NoUnkeyedLiterals: input.NoUnkeyedLiterals,
					Buf:               input.Buf,
				}, err
			}
			i -= len(encoded)
			copy(dAtA[i:], encoded)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(encoded)))
			i--
			dAtA[i] = 0xa
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*QueryParamsResponse)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: QueryParamsResponse: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: QueryParamsResponse: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Params", wireType)
				}
				var msglen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					msglen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if msglen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + msglen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if x.Params == nil {
					x.Params = &Params{}
				}
				if err := options.Unmarshal(dAtA[iNdEx:postIndex], x.Params); err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				iNdEx = postIndex
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var (
	md_QueryGetCredentialRequest                protoreflect.MessageDescriptor
	fd_QueryGetCredentialRequest_credentialID   protoreflect.FieldDescriptor
	fd_QueryGetCredentialRequest_credentialType protoreflect.FieldDescriptor
)

func init() {
	file_qadena_qadena_query_proto_init()
	md_QueryGetCredentialRequest = File_qadena_qadena_query_proto.Messages().ByName("QueryGetCredentialRequest")
	fd_QueryGetCredentialRequest_credentialID = md_QueryGetCredentialRequest.Fields().ByName("credentialID")
	fd_QueryGetCredentialRequest_credentialType = md_QueryGetCredentialRequest.Fields().ByName("credentialType")
}

var _ protoreflect.Message = (*fastReflection_QueryGetCredentialRequest)(nil)

type fastReflection_QueryGetCredentialRequest QueryGetCredentialRequest

func (x *QueryGetCredentialRequest) ProtoReflect() protoreflect.Message {
	return (*fastReflection_QueryGetCredentialRequest)(x)
}

func (x *QueryGetCredentialRequest) slowProtoReflect() protoreflect.Message {
	mi := &file_qadena_qadena_query_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_QueryGetCredentialRequest_messageType fastReflection_QueryGetCredentialRequest_messageType
var _ protoreflect.MessageType = fastReflection_QueryGetCredentialRequest_messageType{}

type fastReflection_QueryGetCredentialRequest_messageType struct{}

func (x fastReflection_QueryGetCredentialRequest_messageType) Zero() protoreflect.Message {
	return (*fastReflection_QueryGetCredentialRequest)(nil)
}
func (x fastReflection_QueryGetCredentialRequest_messageType) New() protoreflect.Message {
	return new(fastReflection_QueryGetCredentialRequest)
}
func (x fastReflection_QueryGetCredentialRequest_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_QueryGetCredentialRequest
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_QueryGetCredentialRequest) Descriptor() protoreflect.MessageDescriptor {
	return md_QueryGetCredentialRequest
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_QueryGetCredentialRequest) Type() protoreflect.MessageType {
	return _fastReflection_QueryGetCredentialRequest_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_QueryGetCredentialRequest) New() protoreflect.Message {
	return new(fastReflection_QueryGetCredentialRequest)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_QueryGetCredentialRequest) Interface() protoreflect.ProtoMessage {
	return (*QueryGetCredentialRequest)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_QueryGetCredentialRequest) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.CredentialID != "" {
		value := protoreflect.ValueOfString(x.CredentialID)
		if !f(fd_QueryGetCredentialRequest_credentialID, value) {
			return
		}
	}
	if x.CredentialType != "" {
		value := protoreflect.ValueOfString(x.CredentialType)
		if !f(fd_QueryGetCredentialRequest_credentialType, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_QueryGetCredentialRequest) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "qadena.qadena.QueryGetCredentialRequest.credentialID":
		return x.CredentialID != ""
	case "qadena.qadena.QueryGetCredentialRequest.credentialType":
		return x.CredentialType != ""
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: qadena.qadena.QueryGetCredentialRequest"))
		}
		panic(fmt.Errorf("message qadena.qadena.QueryGetCredentialRequest does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_QueryGetCredentialRequest) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "qadena.qadena.QueryGetCredentialRequest.credentialID":
		x.CredentialID = ""
	case "qadena.qadena.QueryGetCredentialRequest.credentialType":
		x.CredentialType = ""
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: qadena.qadena.QueryGetCredentialRequest"))
		}
		panic(fmt.Errorf("message qadena.qadena.QueryGetCredentialRequest does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_QueryGetCredentialRequest) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "qadena.qadena.QueryGetCredentialRequest.credentialID":
		value := x.CredentialID
		return protoreflect.ValueOfString(value)
	case "qadena.qadena.QueryGetCredentialRequest.credentialType":
		value := x.CredentialType
		return protoreflect.ValueOfString(value)
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: qadena.qadena.QueryGetCredentialRequest"))
		}
		panic(fmt.Errorf("message qadena.qadena.QueryGetCredentialRequest does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_QueryGetCredentialRequest) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "qadena.qadena.QueryGetCredentialRequest.credentialID":
		x.CredentialID = value.Interface().(string)
	case "qadena.qadena.QueryGetCredentialRequest.credentialType":
		x.CredentialType = value.Interface().(string)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: qadena.qadena.QueryGetCredentialRequest"))
		}
		panic(fmt.Errorf("message qadena.qadena.QueryGetCredentialRequest does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_QueryGetCredentialRequest) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "qadena.qadena.QueryGetCredentialRequest.credentialID":
		panic(fmt.Errorf("field credentialID of message qadena.qadena.QueryGetCredentialRequest is not mutable"))
	case "qadena.qadena.QueryGetCredentialRequest.credentialType":
		panic(fmt.Errorf("field credentialType of message qadena.qadena.QueryGetCredentialRequest is not mutable"))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: qadena.qadena.QueryGetCredentialRequest"))
		}
		panic(fmt.Errorf("message qadena.qadena.QueryGetCredentialRequest does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_QueryGetCredentialRequest) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "qadena.qadena.QueryGetCredentialRequest.credentialID":
		return protoreflect.ValueOfString("")
	case "qadena.qadena.QueryGetCredentialRequest.credentialType":
		return protoreflect.ValueOfString("")
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: qadena.qadena.QueryGetCredentialRequest"))
		}
		panic(fmt.Errorf("message qadena.qadena.QueryGetCredentialRequest does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_QueryGetCredentialRequest) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in qadena.qadena.QueryGetCredentialRequest", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_QueryGetCredentialRequest) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_QueryGetCredentialRequest) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_QueryGetCredentialRequest) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_QueryGetCredentialRequest) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*QueryGetCredentialRequest)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		l = len(x.CredentialID)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.CredentialType)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*QueryGetCredentialRequest)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if len(x.CredentialType) > 0 {
			i -= len(x.CredentialType)
			copy(dAtA[i:], x.CredentialType)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.CredentialType)))
			i--
			dAtA[i] = 0x12
		}
		if len(x.CredentialID) > 0 {
			i -= len(x.CredentialID)
			copy(dAtA[i:], x.CredentialID)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.CredentialID)))
			i--
			dAtA[i] = 0xa
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*QueryGetCredentialRequest)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: QueryGetCredentialRequest: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: QueryGetCredentialRequest: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field CredentialID", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.CredentialID = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 2:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field CredentialType", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.CredentialType = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var (
	md_QueryGetCredentialResponse            protoreflect.MessageDescriptor
	fd_QueryGetCredentialResponse_credential protoreflect.FieldDescriptor
)

func init() {
	file_qadena_qadena_query_proto_init()
	md_QueryGetCredentialResponse = File_qadena_qadena_query_proto.Messages().ByName("QueryGetCredentialResponse")
	fd_QueryGetCredentialResponse_credential = md_QueryGetCredentialResponse.Fields().ByName("credential")
}

var _ protoreflect.Message = (*fastReflection_QueryGetCredentialResponse)(nil)

type fastReflection_QueryGetCredentialResponse QueryGetCredentialResponse

func (x *QueryGetCredentialResponse) ProtoReflect() protoreflect.Message {
	return (*fastReflection_QueryGetCredentialResponse)(x)
}

func (x *QueryGetCredentialResponse) slowProtoReflect() protoreflect.Message {
	mi := &file_qadena_qadena_query_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_QueryGetCredentialResponse_messageType fastReflection_QueryGetCredentialResponse_messageType
var _ protoreflect.MessageType = fastReflection_QueryGetCredentialResponse_messageType{}

type fastReflection_QueryGetCredentialResponse_messageType struct{}

func (x fastReflection_QueryGetCredentialResponse_messageType) Zero() protoreflect.Message {
	return (*fastReflection_QueryGetCredentialResponse)(nil)
}
func (x fastReflection_QueryGetCredentialResponse_messageType) New() protoreflect.Message {
	return new(fastReflection_QueryGetCredentialResponse)
}
func (x fastReflection_QueryGetCredentialResponse_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_QueryGetCredentialResponse
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_QueryGetCredentialResponse) Descriptor() protoreflect.MessageDescriptor {
	return md_QueryGetCredentialResponse
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_QueryGetCredentialResponse) Type() protoreflect.MessageType {
	return _fastReflection_QueryGetCredentialResponse_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_QueryGetCredentialResponse) New() protoreflect.Message {
	return new(fastReflection_QueryGetCredentialResponse)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_QueryGetCredentialResponse) Interface() protoreflect.ProtoMessage {
	return (*QueryGetCredentialResponse)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_QueryGetCredentialResponse) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.Credential != nil {
		value := protoreflect.ValueOfMessage(x.Credential.ProtoReflect())
		if !f(fd_QueryGetCredentialResponse_credential, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_QueryGetCredentialResponse) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "qadena.qadena.QueryGetCredentialResponse.credential":
		return x.Credential != nil
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: qadena.qadena.QueryGetCredentialResponse"))
		}
		panic(fmt.Errorf("message qadena.qadena.QueryGetCredentialResponse does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_QueryGetCredentialResponse) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "qadena.qadena.QueryGetCredentialResponse.credential":
		x.Credential = nil
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: qadena.qadena.QueryGetCredentialResponse"))
		}
		panic(fmt.Errorf("message qadena.qadena.QueryGetCredentialResponse does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_QueryGetCredentialResponse) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "qadena.qadena.QueryGetCredentialResponse.credential":
		value := x.Credential
		return protoreflect.ValueOfMessage(value.ProtoReflect())
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: qadena.qadena.QueryGetCredentialResponse"))
		}
		panic(fmt.Errorf("message qadena.qadena.QueryGetCredentialResponse does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_QueryGetCredentialResponse) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "qadena.qadena.QueryGetCredentialResponse.credential":
		x.Credential = value.Message().Interface().(*Credential)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: qadena.qadena.QueryGetCredentialResponse"))
		}
		panic(fmt.Errorf("message qadena.qadena.QueryGetCredentialResponse does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_QueryGetCredentialResponse) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "qadena.qadena.QueryGetCredentialResponse.credential":
		if x.Credential == nil {
			x.Credential = new(Credential)
		}
		return protoreflect.ValueOfMessage(x.Credential.ProtoReflect())
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: qadena.qadena.QueryGetCredentialResponse"))
		}
		panic(fmt.Errorf("message qadena.qadena.QueryGetCredentialResponse does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_QueryGetCredentialResponse) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "qadena.qadena.QueryGetCredentialResponse.credential":
		m := new(Credential)
		return protoreflect.ValueOfMessage(m.ProtoReflect())
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: qadena.qadena.QueryGetCredentialResponse"))
		}
		panic(fmt.Errorf("message qadena.qadena.QueryGetCredentialResponse does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_QueryGetCredentialResponse) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in qadena.qadena.QueryGetCredentialResponse", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_QueryGetCredentialResponse) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_QueryGetCredentialResponse) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_QueryGetCredentialResponse) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_QueryGetCredentialResponse) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*QueryGetCredentialResponse)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		if x.Credential != nil {
			l = options.Size(x.Credential)
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*QueryGetCredentialResponse)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if x.Credential != nil {
			encoded, err := options.Marshal(x.Credential)
			if err != nil {
				return protoiface.MarshalOutput{
					NoUnkeyedLiterals: input.NoUnkeyedLiterals,
					Buf:               input.Buf,
				}, err
			}
			i -= len(encoded)
			copy(dAtA[i:], encoded)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(encoded)))
			i--
			dAtA[i] = 0xa
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*QueryGetCredentialResponse)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: QueryGetCredentialResponse: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: QueryGetCredentialResponse: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Credential", wireType)
				}
				var msglen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					msglen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if msglen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + msglen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if x.Credential == nil {
					x.Credential = &Credential{}
				}
				if err := options.Unmarshal(dAtA[iNdEx:postIndex], x.Credential); err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				iNdEx = postIndex
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var (
	md_QueryAllCredentialRequest            protoreflect.MessageDescriptor
	fd_QueryAllCredentialRequest_pagination protoreflect.FieldDescriptor
)

func init() {
	file_qadena_qadena_query_proto_init()
	md_QueryAllCredentialRequest = File_qadena_qadena_query_proto.Messages().ByName("QueryAllCredentialRequest")
	fd_QueryAllCredentialRequest_pagination = md_QueryAllCredentialRequest.Fields().ByName("pagination")
}

var _ protoreflect.Message = (*fastReflection_QueryAllCredentialRequest)(nil)

type fastReflection_QueryAllCredentialRequest QueryAllCredentialRequest

func (x *QueryAllCredentialRequest) ProtoReflect() protoreflect.Message {
	return (*fastReflection_QueryAllCredentialRequest)(x)
}

func (x *QueryAllCredentialRequest) slowProtoReflect() protoreflect.Message {
	mi := &file_qadena_qadena_query_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_QueryAllCredentialRequest_messageType fastReflection_QueryAllCredentialRequest_messageType
var _ protoreflect.MessageType = fastReflection_QueryAllCredentialRequest_messageType{}

type fastReflection_QueryAllCredentialRequest_messageType struct{}

func (x fastReflection_QueryAllCredentialRequest_messageType) Zero() protoreflect.Message {
	return (*fastReflection_QueryAllCredentialRequest)(nil)
}
func (x fastReflection_QueryAllCredentialRequest_messageType) New() protoreflect.Message {
	return new(fastReflection_QueryAllCredentialRequest)
}
func (x fastReflection_QueryAllCredentialRequest_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_QueryAllCredentialRequest
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_QueryAllCredentialRequest) Descriptor() protoreflect.MessageDescriptor {
	return md_QueryAllCredentialRequest
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_QueryAllCredentialRequest) Type() protoreflect.MessageType {
	return _fastReflection_QueryAllCredentialRequest_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_QueryAllCredentialRequest) New() protoreflect.Message {
	return new(fastReflection_QueryAllCredentialRequest)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_QueryAllCredentialRequest) Interface() protoreflect.ProtoMessage {
	return (*QueryAllCredentialRequest)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_QueryAllCredentialRequest) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.Pagination != nil {
		value := protoreflect.ValueOfMessage(x.Pagination.ProtoReflect())
		if !f(fd_QueryAllCredentialRequest_pagination, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_QueryAllCredentialRequest) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "qadena.qadena.QueryAllCredentialRequest.pagination":
		return x.Pagination != nil
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: qadena.qadena.QueryAllCredentialRequest"))
		}
		panic(fmt.Errorf("message qadena.qadena.QueryAllCredentialRequest does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_QueryAllCredentialRequest) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "qadena.qadena.QueryAllCredentialRequest.pagination":
		x.Pagination = nil
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: qadena.qadena.QueryAllCredentialRequest"))
		}
		panic(fmt.Errorf("message qadena.qadena.QueryAllCredentialRequest does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_QueryAllCredentialRequest) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "qadena.qadena.QueryAllCredentialRequest.pagination":
		value := x.Pagination
		return protoreflect.ValueOfMessage(value.ProtoReflect())
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: qadena.qadena.QueryAllCredentialRequest"))
		}
		panic(fmt.Errorf("message qadena.qadena.QueryAllCredentialRequest does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_QueryAllCredentialRequest) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "qadena.qadena.QueryAllCredentialRequest.pagination":
		x.Pagination = value.Message().Interface().(*v1beta1.PageRequest)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: qadena.qadena.QueryAllCredentialRequest"))
		}
		panic(fmt.Errorf("message qadena.qadena.QueryAllCredentialRequest does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_QueryAllCredentialRequest) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "qadena.qadena.QueryAllCredentialRequest.pagination":
		if x.Pagination == nil {
			x.Pagination = new(v1beta1.PageRequest)
		}
		return protoreflect.ValueOfMessage(x.Pagination.ProtoReflect())
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: qadena.qadena.QueryAllCredentialRequest"))
		}
		panic(fmt.Errorf("message qadena.qadena.QueryAllCredentialRequest does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_QueryAllCredentialRequest) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "qadena.qadena.QueryAllCredentialRequest.pagination":
		m := new(v1beta1.PageRequest)
		return protoreflect.ValueOfMessage(m.ProtoReflect())
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: qadena.qadena.QueryAllCredentialRequest"))
		}
		panic(fmt.Errorf("message qadena.qadena.QueryAllCredentialRequest does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_QueryAllCredentialRequest) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in qadena.qadena.QueryAllCredentialRequest", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_QueryAllCredentialRequest) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_QueryAllCredentialRequest) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_QueryAllCredentialRequest) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_QueryAllCredentialRequest) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*QueryAllCredentialRequest)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		if x.Pagination != nil {
			l = options.Size(x.Pagination)
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*QueryAllCredentialRequest)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if x.Pagination != nil {
			encoded, err := options.Marshal(x.Pagination)
			if err != nil {
				return protoiface.MarshalOutput{
					NoUnkeyedLiterals: input.NoUnkeyedLiterals,
					Buf:               input.Buf,
				}, err
			}
			i -= len(encoded)
			copy(dAtA[i:], encoded)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(encoded)))
			i--
			dAtA[i] = 0xa
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*QueryAllCredentialRequest)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: QueryAllCredentialRequest: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: QueryAllCredentialRequest: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Pagination", wireType)
				}
				var msglen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					msglen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if msglen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + msglen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if x.Pagination == nil {
					x.Pagination = &v1beta1.PageRequest{}
				}
				if err := options.Unmarshal(dAtA[iNdEx:postIndex], x.Pagination); err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				iNdEx = postIndex
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var _ protoreflect.List = (*_QueryAllCredentialResponse_1_list)(nil)

type _QueryAllCredentialResponse_1_list struct {
	list *[]*Credential
}

func (x *_QueryAllCredentialResponse_1_list) Len() int {
	if x.list == nil {
		return 0
	}
	return len(*x.list)
}

func (x *_QueryAllCredentialResponse_1_list) Get(i int) protoreflect.Value {
	return protoreflect.ValueOfMessage((*x.list)[i].ProtoReflect())
}

func (x *_QueryAllCredentialResponse_1_list) Set(i int, value protoreflect.Value) {
	valueUnwrapped := value.Message()
	concreteValue := valueUnwrapped.Interface().(*Credential)
	(*x.list)[i] = concreteValue
}

func (x *_QueryAllCredentialResponse_1_list) Append(value protoreflect.Value) {
	valueUnwrapped := value.Message()
	concreteValue := valueUnwrapped.Interface().(*Credential)
	*x.list = append(*x.list, concreteValue)
}

func (x *_QueryAllCredentialResponse_1_list) AppendMutable() protoreflect.Value {
	v := new(Credential)
	*x.list = append(*x.list, v)
	return protoreflect.ValueOfMessage(v.ProtoReflect())
}

func (x *_QueryAllCredentialResponse_1_list) Truncate(n int) {
	for i := n; i < len(*x.list); i++ {
		(*x.list)[i] = nil
	}
	*x.list = (*x.list)[:n]
}

func (x *_QueryAllCredentialResponse_1_list) NewElement() protoreflect.Value {
	v := new(Credential)
	return protoreflect.ValueOfMessage(v.ProtoReflect())
}

func (x *_QueryAllCredentialResponse_1_list) IsValid() bool {
	return x.list != nil
}

var (
	md_QueryAllCredentialResponse            protoreflect.MessageDescriptor
	fd_QueryAllCredentialResponse_credential protoreflect.FieldDescriptor
	fd_QueryAllCredentialResponse_pagination protoreflect.FieldDescriptor
)

func init() {
	file_qadena_qadena_query_proto_init()
	md_QueryAllCredentialResponse = File_qadena_qadena_query_proto.Messages().ByName("QueryAllCredentialResponse")
	fd_QueryAllCredentialResponse_credential = md_QueryAllCredentialResponse.Fields().ByName("credential")
	fd_QueryAllCredentialResponse_pagination = md_QueryAllCredentialResponse.Fields().ByName("pagination")
}

var _ protoreflect.Message = (*fastReflection_QueryAllCredentialResponse)(nil)

type fastReflection_QueryAllCredentialResponse QueryAllCredentialResponse

func (x *QueryAllCredentialResponse) ProtoReflect() protoreflect.Message {
	return (*fastReflection_QueryAllCredentialResponse)(x)
}

func (x *QueryAllCredentialResponse) slowProtoReflect() protoreflect.Message {
	mi := &file_qadena_qadena_query_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_QueryAllCredentialResponse_messageType fastReflection_QueryAllCredentialResponse_messageType
var _ protoreflect.MessageType = fastReflection_QueryAllCredentialResponse_messageType{}

type fastReflection_QueryAllCredentialResponse_messageType struct{}

func (x fastReflection_QueryAllCredentialResponse_messageType) Zero() protoreflect.Message {
	return (*fastReflection_QueryAllCredentialResponse)(nil)
}
func (x fastReflection_QueryAllCredentialResponse_messageType) New() protoreflect.Message {
	return new(fastReflection_QueryAllCredentialResponse)
}
func (x fastReflection_QueryAllCredentialResponse_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_QueryAllCredentialResponse
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_QueryAllCredentialResponse) Descriptor() protoreflect.MessageDescriptor {
	return md_QueryAllCredentialResponse
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_QueryAllCredentialResponse) Type() protoreflect.MessageType {
	return _fastReflection_QueryAllCredentialResponse_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_QueryAllCredentialResponse) New() protoreflect.Message {
	return new(fastReflection_QueryAllCredentialResponse)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_QueryAllCredentialResponse) Interface() protoreflect.ProtoMessage {
	return (*QueryAllCredentialResponse)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_QueryAllCredentialResponse) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if len(x.Credential) != 0 {
		value := protoreflect.ValueOfList(&_QueryAllCredentialResponse_1_list{list: &x.Credential})
		if !f(fd_QueryAllCredentialResponse_credential, value) {
			return
		}
	}
	if x.Pagination != nil {
		value := protoreflect.ValueOfMessage(x.Pagination.ProtoReflect())
		if !f(fd_QueryAllCredentialResponse_pagination, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_QueryAllCredentialResponse) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "qadena.qadena.QueryAllCredentialResponse.credential":
		return len(x.Credential) != 0
	case "qadena.qadena.QueryAllCredentialResponse.pagination":
		return x.Pagination != nil
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: qadena.qadena.QueryAllCredentialResponse"))
		}
		panic(fmt.Errorf("message qadena.qadena.QueryAllCredentialResponse does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_QueryAllCredentialResponse) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "qadena.qadena.QueryAllCredentialResponse.credential":
		x.Credential = nil
	case "qadena.qadena.QueryAllCredentialResponse.pagination":
		x.Pagination = nil
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: qadena.qadena.QueryAllCredentialResponse"))
		}
		panic(fmt.Errorf("message qadena.qadena.QueryAllCredentialResponse does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_QueryAllCredentialResponse) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "qadena.qadena.QueryAllCredentialResponse.credential":
		if len(x.Credential) == 0 {
			return protoreflect.ValueOfList(&_QueryAllCredentialResponse_1_list{})
		}
		listValue := &_QueryAllCredentialResponse_1_list{list: &x.Credential}
		return protoreflect.ValueOfList(listValue)
	case "qadena.qadena.QueryAllCredentialResponse.pagination":
		value := x.Pagination
		return protoreflect.ValueOfMessage(value.ProtoReflect())
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: qadena.qadena.QueryAllCredentialResponse"))
		}
		panic(fmt.Errorf("message qadena.qadena.QueryAllCredentialResponse does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_QueryAllCredentialResponse) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "qadena.qadena.QueryAllCredentialResponse.credential":
		lv := value.List()
		clv := lv.(*_QueryAllCredentialResponse_1_list)
		x.Credential = *clv.list
	case "qadena.qadena.QueryAllCredentialResponse.pagination":
		x.Pagination = value.Message().Interface().(*v1beta1.PageResponse)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: qadena.qadena.QueryAllCredentialResponse"))
		}
		panic(fmt.Errorf("message qadena.qadena.QueryAllCredentialResponse does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_QueryAllCredentialResponse) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "qadena.qadena.QueryAllCredentialResponse.credential":
		if x.Credential == nil {
			x.Credential = []*Credential{}
		}
		value := &_QueryAllCredentialResponse_1_list{list: &x.Credential}
		return protoreflect.ValueOfList(value)
	case "qadena.qadena.QueryAllCredentialResponse.pagination":
		if x.Pagination == nil {
			x.Pagination = new(v1beta1.PageResponse)
		}
		return protoreflect.ValueOfMessage(x.Pagination.ProtoReflect())
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: qadena.qadena.QueryAllCredentialResponse"))
		}
		panic(fmt.Errorf("message qadena.qadena.QueryAllCredentialResponse does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_QueryAllCredentialResponse) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "qadena.qadena.QueryAllCredentialResponse.credential":
		list := []*Credential{}
		return protoreflect.ValueOfList(&_QueryAllCredentialResponse_1_list{list: &list})
	case "qadena.qadena.QueryAllCredentialResponse.pagination":
		m := new(v1beta1.PageResponse)
		return protoreflect.ValueOfMessage(m.ProtoReflect())
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: qadena.qadena.QueryAllCredentialResponse"))
		}
		panic(fmt.Errorf("message qadena.qadena.QueryAllCredentialResponse does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_QueryAllCredentialResponse) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in qadena.qadena.QueryAllCredentialResponse", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_QueryAllCredentialResponse) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_QueryAllCredentialResponse) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_QueryAllCredentialResponse) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_QueryAllCredentialResponse) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*QueryAllCredentialResponse)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		if len(x.Credential) > 0 {
			for _, e := range x.Credential {
				l = options.Size(e)
				n += 1 + l + runtime.Sov(uint64(l))
			}
		}
		if x.Pagination != nil {
			l = options.Size(x.Pagination)
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*QueryAllCredentialResponse)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if x.Pagination != nil {
			encoded, err := options.Marshal(x.Pagination)
			if err != nil {
				return protoiface.MarshalOutput{
					NoUnkeyedLiterals: input.NoUnkeyedLiterals,
					Buf:               input.Buf,
				}, err
			}
			i -= len(encoded)
			copy(dAtA[i:], encoded)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(encoded)))
			i--
			dAtA[i] = 0x12
		}
		if len(x.Credential) > 0 {
			for iNdEx := len(x.Credential) - 1; iNdEx >= 0; iNdEx-- {
				encoded, err := options.Marshal(x.Credential[iNdEx])
				if err != nil {
					return protoiface.MarshalOutput{
						NoUnkeyedLiterals: input.NoUnkeyedLiterals,
						Buf:               input.Buf,
					}, err
				}
				i -= len(encoded)
				copy(dAtA[i:], encoded)
				i = runtime.EncodeVarint(dAtA, i, uint64(len(encoded)))
				i--
				dAtA[i] = 0xa
			}
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*QueryAllCredentialResponse)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: QueryAllCredentialResponse: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: QueryAllCredentialResponse: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Credential", wireType)
				}
				var msglen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					msglen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if msglen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + msglen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Credential = append(x.Credential, &Credential{})
				if err := options.Unmarshal(dAtA[iNdEx:postIndex], x.Credential[len(x.Credential)-1]); err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				iNdEx = postIndex
			case 2:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Pagination", wireType)
				}
				var msglen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					msglen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if msglen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + msglen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if x.Pagination == nil {
					x.Pagination = &v1beta1.PageResponse{}
				}
				if err := options.Unmarshal(dAtA[iNdEx:postIndex], x.Pagination); err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				iNdEx = postIndex
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var (
	md_QueryGetPublicKeyRequest          protoreflect.MessageDescriptor
	fd_QueryGetPublicKeyRequest_pubKID   protoreflect.FieldDescriptor
	fd_QueryGetPublicKeyRequest_pubKType protoreflect.FieldDescriptor
)

func init() {
	file_qadena_qadena_query_proto_init()
	md_QueryGetPublicKeyRequest = File_qadena_qadena_query_proto.Messages().ByName("QueryGetPublicKeyRequest")
	fd_QueryGetPublicKeyRequest_pubKID = md_QueryGetPublicKeyRequest.Fields().ByName("pubKID")
	fd_QueryGetPublicKeyRequest_pubKType = md_QueryGetPublicKeyRequest.Fields().ByName("pubKType")
}

var _ protoreflect.Message = (*fastReflection_QueryGetPublicKeyRequest)(nil)

type fastReflection_QueryGetPublicKeyRequest QueryGetPublicKeyRequest

func (x *QueryGetPublicKeyRequest) ProtoReflect() protoreflect.Message {
	return (*fastReflection_QueryGetPublicKeyRequest)(x)
}

func (x *QueryGetPublicKeyRequest) slowProtoReflect() protoreflect.Message {
	mi := &file_qadena_qadena_query_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_QueryGetPublicKeyRequest_messageType fastReflection_QueryGetPublicKeyRequest_messageType
var _ protoreflect.MessageType = fastReflection_QueryGetPublicKeyRequest_messageType{}

type fastReflection_QueryGetPublicKeyRequest_messageType struct{}

func (x fastReflection_QueryGetPublicKeyRequest_messageType) Zero() protoreflect.Message {
	return (*fastReflection_QueryGetPublicKeyRequest)(nil)
}
func (x fastReflection_QueryGetPublicKeyRequest_messageType) New() protoreflect.Message {
	return new(fastReflection_QueryGetPublicKeyRequest)
}
func (x fastReflection_QueryGetPublicKeyRequest_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_QueryGetPublicKeyRequest
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_QueryGetPublicKeyRequest) Descriptor() protoreflect.MessageDescriptor {
	return md_QueryGetPublicKeyRequest
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_QueryGetPublicKeyRequest) Type() protoreflect.MessageType {
	return _fastReflection_QueryGetPublicKeyRequest_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_QueryGetPublicKeyRequest) New() protoreflect.Message {
	return new(fastReflection_QueryGetPublicKeyRequest)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_QueryGetPublicKeyRequest) Interface() protoreflect.ProtoMessage {
	return (*QueryGetPublicKeyRequest)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_QueryGetPublicKeyRequest) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.PubKID != "" {
		value := protoreflect.ValueOfString(x.PubKID)
		if !f(fd_QueryGetPublicKeyRequest_pubKID, value) {
			return
		}
	}
	if x.PubKType != "" {
		value := protoreflect.ValueOfString(x.PubKType)
		if !f(fd_QueryGetPublicKeyRequest_pubKType, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_QueryGetPublicKeyRequest) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "qadena.qadena.QueryGetPublicKeyRequest.pubKID":
		return x.PubKID != ""
	case "qadena.qadena.QueryGetPublicKeyRequest.pubKType":
		return x.PubKType != ""
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: qadena.qadena.QueryGetPublicKeyRequest"))
		}
		panic(fmt.Errorf("message qadena.qadena.QueryGetPublicKeyRequest does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_QueryGetPublicKeyRequest) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "qadena.qadena.QueryGetPublicKeyRequest.pubKID":
		x.PubKID = ""
	case "qadena.qadena.QueryGetPublicKeyRequest.pubKType":
		x.PubKType = ""
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: qadena.qadena.QueryGetPublicKeyRequest"))
		}
		panic(fmt.Errorf("message qadena.qadena.QueryGetPublicKeyRequest does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_QueryGetPublicKeyRequest) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "qadena.qadena.QueryGetPublicKeyRequest.pubKID":
		value := x.PubKID
		return protoreflect.ValueOfString(value)
	case "qadena.qadena.QueryGetPublicKeyRequest.pubKType":
		value := x.PubKType
		return protoreflect.ValueOfString(value)
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: qadena.qadena.QueryGetPublicKeyRequest"))
		}
		panic(fmt.Errorf("message qadena.qadena.QueryGetPublicKeyRequest does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_QueryGetPublicKeyRequest) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "qadena.qadena.QueryGetPublicKeyRequest.pubKID":
		x.PubKID = value.Interface().(string)
	case "qadena.qadena.QueryGetPublicKeyRequest.pubKType":
		x.PubKType = value.Interface().(string)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: qadena.qadena.QueryGetPublicKeyRequest"))
		}
		panic(fmt.Errorf("message qadena.qadena.QueryGetPublicKeyRequest does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_QueryGetPublicKeyRequest) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "qadena.qadena.QueryGetPublicKeyRequest.pubKID":
		panic(fmt.Errorf("field pubKID of message qadena.qadena.QueryGetPublicKeyRequest is not mutable"))
	case "qadena.qadena.QueryGetPublicKeyRequest.pubKType":
		panic(fmt.Errorf("field pubKType of message qadena.qadena.QueryGetPublicKeyRequest is not mutable"))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: qadena.qadena.QueryGetPublicKeyRequest"))
		}
		panic(fmt.Errorf("message qadena.qadena.QueryGetPublicKeyRequest does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_QueryGetPublicKeyRequest) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "qadena.qadena.QueryGetPublicKeyRequest.pubKID":
		return protoreflect.ValueOfString("")
	case "qadena.qadena.QueryGetPublicKeyRequest.pubKType":
		return protoreflect.ValueOfString("")
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: qadena.qadena.QueryGetPublicKeyRequest"))
		}
		panic(fmt.Errorf("message qadena.qadena.QueryGetPublicKeyRequest does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_QueryGetPublicKeyRequest) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in qadena.qadena.QueryGetPublicKeyRequest", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_QueryGetPublicKeyRequest) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_QueryGetPublicKeyRequest) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_QueryGetPublicKeyRequest) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_QueryGetPublicKeyRequest) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*QueryGetPublicKeyRequest)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		l = len(x.PubKID)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.PubKType)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*QueryGetPublicKeyRequest)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if len(x.PubKType) > 0 {
			i -= len(x.PubKType)
			copy(dAtA[i:], x.PubKType)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.PubKType)))
			i--
			dAtA[i] = 0x12
		}
		if len(x.PubKID) > 0 {
			i -= len(x.PubKID)
			copy(dAtA[i:], x.PubKID)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.PubKID)))
			i--
			dAtA[i] = 0xa
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*QueryGetPublicKeyRequest)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: QueryGetPublicKeyRequest: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: QueryGetPublicKeyRequest: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field PubKID", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.PubKID = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 2:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field PubKType", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.PubKType = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var (
	md_QueryGetPublicKeyResponse           protoreflect.MessageDescriptor
	fd_QueryGetPublicKeyResponse_publicKey protoreflect.FieldDescriptor
)

func init() {
	file_qadena_qadena_query_proto_init()
	md_QueryGetPublicKeyResponse = File_qadena_qadena_query_proto.Messages().ByName("QueryGetPublicKeyResponse")
	fd_QueryGetPublicKeyResponse_publicKey = md_QueryGetPublicKeyResponse.Fields().ByName("publicKey")
}

var _ protoreflect.Message = (*fastReflection_QueryGetPublicKeyResponse)(nil)

type fastReflection_QueryGetPublicKeyResponse QueryGetPublicKeyResponse

func (x *QueryGetPublicKeyResponse) ProtoReflect() protoreflect.Message {
	return (*fastReflection_QueryGetPublicKeyResponse)(x)
}

func (x *QueryGetPublicKeyResponse) slowProtoReflect() protoreflect.Message {
	mi := &file_qadena_qadena_query_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_QueryGetPublicKeyResponse_messageType fastReflection_QueryGetPublicKeyResponse_messageType
var _ protoreflect.MessageType = fastReflection_QueryGetPublicKeyResponse_messageType{}

type fastReflection_QueryGetPublicKeyResponse_messageType struct{}

func (x fastReflection_QueryGetPublicKeyResponse_messageType) Zero() protoreflect.Message {
	return (*fastReflection_QueryGetPublicKeyResponse)(nil)
}
func (x fastReflection_QueryGetPublicKeyResponse_messageType) New() protoreflect.Message {
	return new(fastReflection_QueryGetPublicKeyResponse)
}
func (x fastReflection_QueryGetPublicKeyResponse_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_QueryGetPublicKeyResponse
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_QueryGetPublicKeyResponse) Descriptor() protoreflect.MessageDescriptor {
	return md_QueryGetPublicKeyResponse
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_QueryGetPublicKeyResponse) Type() protoreflect.MessageType {
	return _fastReflection_QueryGetPublicKeyResponse_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_QueryGetPublicKeyResponse) New() protoreflect.Message {
	return new(fastReflection_QueryGetPublicKeyResponse)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_QueryGetPublicKeyResponse) Interface() protoreflect.ProtoMessage {
	return (*QueryGetPublicKeyResponse)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_QueryGetPublicKeyResponse) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.PublicKey != nil {
		value := protoreflect.ValueOfMessage(x.PublicKey.ProtoReflect())
		if !f(fd_QueryGetPublicKeyResponse_publicKey, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_QueryGetPublicKeyResponse) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "qadena.qadena.QueryGetPublicKeyResponse.publicKey":
		return x.PublicKey != nil
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: qadena.qadena.QueryGetPublicKeyResponse"))
		}
		panic(fmt.Errorf("message qadena.qadena.QueryGetPublicKeyResponse does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_QueryGetPublicKeyResponse) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "qadena.qadena.QueryGetPublicKeyResponse.publicKey":
		x.PublicKey = nil
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: qadena.qadena.QueryGetPublicKeyResponse"))
		}
		panic(fmt.Errorf("message qadena.qadena.QueryGetPublicKeyResponse does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_QueryGetPublicKeyResponse) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "qadena.qadena.QueryGetPublicKeyResponse.publicKey":
		value := x.PublicKey
		return protoreflect.ValueOfMessage(value.ProtoReflect())
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: qadena.qadena.QueryGetPublicKeyResponse"))
		}
		panic(fmt.Errorf("message qadena.qadena.QueryGetPublicKeyResponse does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_QueryGetPublicKeyResponse) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "qadena.qadena.QueryGetPublicKeyResponse.publicKey":
		x.PublicKey = value.Message().Interface().(*PublicKey)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: qadena.qadena.QueryGetPublicKeyResponse"))
		}
		panic(fmt.Errorf("message qadena.qadena.QueryGetPublicKeyResponse does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_QueryGetPublicKeyResponse) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "qadena.qadena.QueryGetPublicKeyResponse.publicKey":
		if x.PublicKey == nil {
			x.PublicKey = new(PublicKey)
		}
		return protoreflect.ValueOfMessage(x.PublicKey.ProtoReflect())
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: qadena.qadena.QueryGetPublicKeyResponse"))
		}
		panic(fmt.Errorf("message qadena.qadena.QueryGetPublicKeyResponse does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_QueryGetPublicKeyResponse) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "qadena.qadena.QueryGetPublicKeyResponse.publicKey":
		m := new(PublicKey)
		return protoreflect.ValueOfMessage(m.ProtoReflect())
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: qadena.qadena.QueryGetPublicKeyResponse"))
		}
		panic(fmt.Errorf("message qadena.qadena.QueryGetPublicKeyResponse does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_QueryGetPublicKeyResponse) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in qadena.qadena.QueryGetPublicKeyResponse", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_QueryGetPublicKeyResponse) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_QueryGetPublicKeyResponse) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_QueryGetPublicKeyResponse) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_QueryGetPublicKeyResponse) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*QueryGetPublicKeyResponse)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		if x.PublicKey != nil {
			l = options.Size(x.PublicKey)
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*QueryGetPublicKeyResponse)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if x.PublicKey != nil {
			encoded, err := options.Marshal(x.PublicKey)
			if err != nil {
				return protoiface.MarshalOutput{
					NoUnkeyedLiterals: input.NoUnkeyedLiterals,
					Buf:               input.Buf,
				}, err
			}
			i -= len(encoded)
			copy(dAtA[i:], encoded)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(encoded)))
			i--
			dAtA[i] = 0xa
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*QueryGetPublicKeyResponse)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: QueryGetPublicKeyResponse: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: QueryGetPublicKeyResponse: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field PublicKey", wireType)
				}
				var msglen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					msglen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if msglen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + msglen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if x.PublicKey == nil {
					x.PublicKey = &PublicKey{}
				}
				if err := options.Unmarshal(dAtA[iNdEx:postIndex], x.PublicKey); err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				iNdEx = postIndex
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var (
	md_QueryAllPublicKeyRequest            protoreflect.MessageDescriptor
	fd_QueryAllPublicKeyRequest_pagination protoreflect.FieldDescriptor
)

func init() {
	file_qadena_qadena_query_proto_init()
	md_QueryAllPublicKeyRequest = File_qadena_qadena_query_proto.Messages().ByName("QueryAllPublicKeyRequest")
	fd_QueryAllPublicKeyRequest_pagination = md_QueryAllPublicKeyRequest.Fields().ByName("pagination")
}

var _ protoreflect.Message = (*fastReflection_QueryAllPublicKeyRequest)(nil)

type fastReflection_QueryAllPublicKeyRequest QueryAllPublicKeyRequest

func (x *QueryAllPublicKeyRequest) ProtoReflect() protoreflect.Message {
	return (*fastReflection_QueryAllPublicKeyRequest)(x)
}

func (x *QueryAllPublicKeyRequest) slowProtoReflect() protoreflect.Message {
	mi := &file_qadena_qadena_query_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_QueryAllPublicKeyRequest_messageType fastReflection_QueryAllPublicKeyRequest_messageType
var _ protoreflect.MessageType = fastReflection_QueryAllPublicKeyRequest_messageType{}

type fastReflection_QueryAllPublicKeyRequest_messageType struct{}

func (x fastReflection_QueryAllPublicKeyRequest_messageType) Zero() protoreflect.Message {
	return (*fastReflection_QueryAllPublicKeyRequest)(nil)
}
func (x fastReflection_QueryAllPublicKeyRequest_messageType) New() protoreflect.Message {
	return new(fastReflection_QueryAllPublicKeyRequest)
}
func (x fastReflection_QueryAllPublicKeyRequest_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_QueryAllPublicKeyRequest
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_QueryAllPublicKeyRequest) Descriptor() protoreflect.MessageDescriptor {
	return md_QueryAllPublicKeyRequest
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_QueryAllPublicKeyRequest) Type() protoreflect.MessageType {
	return _fastReflection_QueryAllPublicKeyRequest_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_QueryAllPublicKeyRequest) New() protoreflect.Message {
	return new(fastReflection_QueryAllPublicKeyRequest)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_QueryAllPublicKeyRequest) Interface() protoreflect.ProtoMessage {
	return (*QueryAllPublicKeyRequest)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_QueryAllPublicKeyRequest) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.Pagination != nil {
		value := protoreflect.ValueOfMessage(x.Pagination.ProtoReflect())
		if !f(fd_QueryAllPublicKeyRequest_pagination, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_QueryAllPublicKeyRequest) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "qadena.qadena.QueryAllPublicKeyRequest.pagination":
		return x.Pagination != nil
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: qadena.qadena.QueryAllPublicKeyRequest"))
		}
		panic(fmt.Errorf("message qadena.qadena.QueryAllPublicKeyRequest does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_QueryAllPublicKeyRequest) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "qadena.qadena.QueryAllPublicKeyRequest.pagination":
		x.Pagination = nil
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: qadena.qadena.QueryAllPublicKeyRequest"))
		}
		panic(fmt.Errorf("message qadena.qadena.QueryAllPublicKeyRequest does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_QueryAllPublicKeyRequest) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "qadena.qadena.QueryAllPublicKeyRequest.pagination":
		value := x.Pagination
		return protoreflect.ValueOfMessage(value.ProtoReflect())
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: qadena.qadena.QueryAllPublicKeyRequest"))
		}
		panic(fmt.Errorf("message qadena.qadena.QueryAllPublicKeyRequest does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_QueryAllPublicKeyRequest) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "qadena.qadena.QueryAllPublicKeyRequest.pagination":
		x.Pagination = value.Message().Interface().(*v1beta1.PageRequest)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: qadena.qadena.QueryAllPublicKeyRequest"))
		}
		panic(fmt.Errorf("message qadena.qadena.QueryAllPublicKeyRequest does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_QueryAllPublicKeyRequest) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "qadena.qadena.QueryAllPublicKeyRequest.pagination":
		if x.Pagination == nil {
			x.Pagination = new(v1beta1.PageRequest)
		}
		return protoreflect.ValueOfMessage(x.Pagination.ProtoReflect())
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: qadena.qadena.QueryAllPublicKeyRequest"))
		}
		panic(fmt.Errorf("message qadena.qadena.QueryAllPublicKeyRequest does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_QueryAllPublicKeyRequest) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "qadena.qadena.QueryAllPublicKeyRequest.pagination":
		m := new(v1beta1.PageRequest)
		return protoreflect.ValueOfMessage(m.ProtoReflect())
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: qadena.qadena.QueryAllPublicKeyRequest"))
		}
		panic(fmt.Errorf("message qadena.qadena.QueryAllPublicKeyRequest does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_QueryAllPublicKeyRequest) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in qadena.qadena.QueryAllPublicKeyRequest", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_QueryAllPublicKeyRequest) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_QueryAllPublicKeyRequest) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_QueryAllPublicKeyRequest) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_QueryAllPublicKeyRequest) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*QueryAllPublicKeyRequest)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		if x.Pagination != nil {
			l = options.Size(x.Pagination)
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*QueryAllPublicKeyRequest)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if x.Pagination != nil {
			encoded, err := options.Marshal(x.Pagination)
			if err != nil {
				return protoiface.MarshalOutput{
					NoUnkeyedLiterals: input.NoUnkeyedLiterals,
					Buf:               input.Buf,
				}, err
			}
			i -= len(encoded)
			copy(dAtA[i:], encoded)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(encoded)))
			i--
			dAtA[i] = 0xa
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*QueryAllPublicKeyRequest)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: QueryAllPublicKeyRequest: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: QueryAllPublicKeyRequest: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Pagination", wireType)
				}
				var msglen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					msglen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if msglen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + msglen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if x.Pagination == nil {
					x.Pagination = &v1beta1.PageRequest{}
				}
				if err := options.Unmarshal(dAtA[iNdEx:postIndex], x.Pagination); err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				iNdEx = postIndex
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var _ protoreflect.List = (*_QueryAllPublicKeyResponse_1_list)(nil)

type _QueryAllPublicKeyResponse_1_list struct {
	list *[]*PublicKey
}

func (x *_QueryAllPublicKeyResponse_1_list) Len() int {
	if x.list == nil {
		return 0
	}
	return len(*x.list)
}

func (x *_QueryAllPublicKeyResponse_1_list) Get(i int) protoreflect.Value {
	return protoreflect.ValueOfMessage((*x.list)[i].ProtoReflect())
}

func (x *_QueryAllPublicKeyResponse_1_list) Set(i int, value protoreflect.Value) {
	valueUnwrapped := value.Message()
	concreteValue := valueUnwrapped.Interface().(*PublicKey)
	(*x.list)[i] = concreteValue
}

func (x *_QueryAllPublicKeyResponse_1_list) Append(value protoreflect.Value) {
	valueUnwrapped := value.Message()
	concreteValue := valueUnwrapped.Interface().(*PublicKey)
	*x.list = append(*x.list, concreteValue)
}

func (x *_QueryAllPublicKeyResponse_1_list) AppendMutable() protoreflect.Value {
	v := new(PublicKey)
	*x.list = append(*x.list, v)
	return protoreflect.ValueOfMessage(v.ProtoReflect())
}

func (x *_QueryAllPublicKeyResponse_1_list) Truncate(n int) {
	for i := n; i < len(*x.list); i++ {
		(*x.list)[i] = nil
	}
	*x.list = (*x.list)[:n]
}

func (x *_QueryAllPublicKeyResponse_1_list) NewElement() protoreflect.Value {
	v := new(PublicKey)
	return protoreflect.ValueOfMessage(v.ProtoReflect())
}

func (x *_QueryAllPublicKeyResponse_1_list) IsValid() bool {
	return x.list != nil
}

var (
	md_QueryAllPublicKeyResponse            protoreflect.MessageDescriptor
	fd_QueryAllPublicKeyResponse_publicKey  protoreflect.FieldDescriptor
	fd_QueryAllPublicKeyResponse_pagination protoreflect.FieldDescriptor
)

func init() {
	file_qadena_qadena_query_proto_init()
	md_QueryAllPublicKeyResponse = File_qadena_qadena_query_proto.Messages().ByName("QueryAllPublicKeyResponse")
	fd_QueryAllPublicKeyResponse_publicKey = md_QueryAllPublicKeyResponse.Fields().ByName("publicKey")
	fd_QueryAllPublicKeyResponse_pagination = md_QueryAllPublicKeyResponse.Fields().ByName("pagination")
}

var _ protoreflect.Message = (*fastReflection_QueryAllPublicKeyResponse)(nil)

type fastReflection_QueryAllPublicKeyResponse QueryAllPublicKeyResponse

func (x *QueryAllPublicKeyResponse) ProtoReflect() protoreflect.Message {
	return (*fastReflection_QueryAllPublicKeyResponse)(x)
}

func (x *QueryAllPublicKeyResponse) slowProtoReflect() protoreflect.Message {
	mi := &file_qadena_qadena_query_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_QueryAllPublicKeyResponse_messageType fastReflection_QueryAllPublicKeyResponse_messageType
var _ protoreflect.MessageType = fastReflection_QueryAllPublicKeyResponse_messageType{}

type fastReflection_QueryAllPublicKeyResponse_messageType struct{}

func (x fastReflection_QueryAllPublicKeyResponse_messageType) Zero() protoreflect.Message {
	return (*fastReflection_QueryAllPublicKeyResponse)(nil)
}
func (x fastReflection_QueryAllPublicKeyResponse_messageType) New() protoreflect.Message {
	return new(fastReflection_QueryAllPublicKeyResponse)
}
func (x fastReflection_QueryAllPublicKeyResponse_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_QueryAllPublicKeyResponse
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_QueryAllPublicKeyResponse) Descriptor() protoreflect.MessageDescriptor {
	return md_QueryAllPublicKeyResponse
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_QueryAllPublicKeyResponse) Type() protoreflect.MessageType {
	return _fastReflection_QueryAllPublicKeyResponse_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_QueryAllPublicKeyResponse) New() protoreflect.Message {
	return new(fastReflection_QueryAllPublicKeyResponse)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_QueryAllPublicKeyResponse) Interface() protoreflect.ProtoMessage {
	return (*QueryAllPublicKeyResponse)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_QueryAllPublicKeyResponse) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if len(x.PublicKey) != 0 {
		value := protoreflect.ValueOfList(&_QueryAllPublicKeyResponse_1_list{list: &x.PublicKey})
		if !f(fd_QueryAllPublicKeyResponse_publicKey, value) {
			return
		}
	}
	if x.Pagination != nil {
		value := protoreflect.ValueOfMessage(x.Pagination.ProtoReflect())
		if !f(fd_QueryAllPublicKeyResponse_pagination, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_QueryAllPublicKeyResponse) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "qadena.qadena.QueryAllPublicKeyResponse.publicKey":
		return len(x.PublicKey) != 0
	case "qadena.qadena.QueryAllPublicKeyResponse.pagination":
		return x.Pagination != nil
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: qadena.qadena.QueryAllPublicKeyResponse"))
		}
		panic(fmt.Errorf("message qadena.qadena.QueryAllPublicKeyResponse does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_QueryAllPublicKeyResponse) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "qadena.qadena.QueryAllPublicKeyResponse.publicKey":
		x.PublicKey = nil
	case "qadena.qadena.QueryAllPublicKeyResponse.pagination":
		x.Pagination = nil
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: qadena.qadena.QueryAllPublicKeyResponse"))
		}
		panic(fmt.Errorf("message qadena.qadena.QueryAllPublicKeyResponse does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_QueryAllPublicKeyResponse) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "qadena.qadena.QueryAllPublicKeyResponse.publicKey":
		if len(x.PublicKey) == 0 {
			return protoreflect.ValueOfList(&_QueryAllPublicKeyResponse_1_list{})
		}
		listValue := &_QueryAllPublicKeyResponse_1_list{list: &x.PublicKey}
		return protoreflect.ValueOfList(listValue)
	case "qadena.qadena.QueryAllPublicKeyResponse.pagination":
		value := x.Pagination
		return protoreflect.ValueOfMessage(value.ProtoReflect())
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: qadena.qadena.QueryAllPublicKeyResponse"))
		}
		panic(fmt.Errorf("message qadena.qadena.QueryAllPublicKeyResponse does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_QueryAllPublicKeyResponse) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "qadena.qadena.QueryAllPublicKeyResponse.publicKey":
		lv := value.List()
		clv := lv.(*_QueryAllPublicKeyResponse_1_list)
		x.PublicKey = *clv.list
	case "qadena.qadena.QueryAllPublicKeyResponse.pagination":
		x.Pagination = value.Message().Interface().(*v1beta1.PageResponse)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: qadena.qadena.QueryAllPublicKeyResponse"))
		}
		panic(fmt.Errorf("message qadena.qadena.QueryAllPublicKeyResponse does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_QueryAllPublicKeyResponse) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "qadena.qadena.QueryAllPublicKeyResponse.publicKey":
		if x.PublicKey == nil {
			x.PublicKey = []*PublicKey{}
		}
		value := &_QueryAllPublicKeyResponse_1_list{list: &x.PublicKey}
		return protoreflect.ValueOfList(value)
	case "qadena.qadena.QueryAllPublicKeyResponse.pagination":
		if x.Pagination == nil {
			x.Pagination = new(v1beta1.PageResponse)
		}
		return protoreflect.ValueOfMessage(x.Pagination.ProtoReflect())
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: qadena.qadena.QueryAllPublicKeyResponse"))
		}
		panic(fmt.Errorf("message qadena.qadena.QueryAllPublicKeyResponse does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_QueryAllPublicKeyResponse) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "qadena.qadena.QueryAllPublicKeyResponse.publicKey":
		list := []*PublicKey{}
		return protoreflect.ValueOfList(&_QueryAllPublicKeyResponse_1_list{list: &list})
	case "qadena.qadena.QueryAllPublicKeyResponse.pagination":
		m := new(v1beta1.PageResponse)
		return protoreflect.ValueOfMessage(m.ProtoReflect())
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: qadena.qadena.QueryAllPublicKeyResponse"))
		}
		panic(fmt.Errorf("message qadena.qadena.QueryAllPublicKeyResponse does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_QueryAllPublicKeyResponse) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in qadena.qadena.QueryAllPublicKeyResponse", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_QueryAllPublicKeyResponse) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_QueryAllPublicKeyResponse) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_QueryAllPublicKeyResponse) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_QueryAllPublicKeyResponse) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*QueryAllPublicKeyResponse)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		if len(x.PublicKey) > 0 {
			for _, e := range x.PublicKey {
				l = options.Size(e)
				n += 1 + l + runtime.Sov(uint64(l))
			}
		}
		if x.Pagination != nil {
			l = options.Size(x.Pagination)
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*QueryAllPublicKeyResponse)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if x.Pagination != nil {
			encoded, err := options.Marshal(x.Pagination)
			if err != nil {
				return protoiface.MarshalOutput{
					NoUnkeyedLiterals: input.NoUnkeyedLiterals,
					Buf:               input.Buf,
				}, err
			}
			i -= len(encoded)
			copy(dAtA[i:], encoded)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(encoded)))
			i--
			dAtA[i] = 0x12
		}
		if len(x.PublicKey) > 0 {
			for iNdEx := len(x.PublicKey) - 1; iNdEx >= 0; iNdEx-- {
				encoded, err := options.Marshal(x.PublicKey[iNdEx])
				if err != nil {
					return protoiface.MarshalOutput{
						NoUnkeyedLiterals: input.NoUnkeyedLiterals,
						Buf:               input.Buf,
					}, err
				}
				i -= len(encoded)
				copy(dAtA[i:], encoded)
				i = runtime.EncodeVarint(dAtA, i, uint64(len(encoded)))
				i--
				dAtA[i] = 0xa
			}
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*QueryAllPublicKeyResponse)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: QueryAllPublicKeyResponse: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: QueryAllPublicKeyResponse: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field PublicKey", wireType)
				}
				var msglen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					msglen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if msglen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + msglen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.PublicKey = append(x.PublicKey, &PublicKey{})
				if err := options.Unmarshal(dAtA[iNdEx:postIndex], x.PublicKey[len(x.PublicKey)-1]); err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				iNdEx = postIndex
			case 2:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Pagination", wireType)
				}
				var msglen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					msglen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if msglen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + msglen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if x.Pagination == nil {
					x.Pagination = &v1beta1.PageResponse{}
				}
				if err := options.Unmarshal(dAtA[iNdEx:postIndex], x.Pagination); err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				iNdEx = postIndex
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var (
	md_QueryGetWalletRequest          protoreflect.MessageDescriptor
	fd_QueryGetWalletRequest_walletID protoreflect.FieldDescriptor
)

func init() {
	file_qadena_qadena_query_proto_init()
	md_QueryGetWalletRequest = File_qadena_qadena_query_proto.Messages().ByName("QueryGetWalletRequest")
	fd_QueryGetWalletRequest_walletID = md_QueryGetWalletRequest.Fields().ByName("walletID")
}

var _ protoreflect.Message = (*fastReflection_QueryGetWalletRequest)(nil)

type fastReflection_QueryGetWalletRequest QueryGetWalletRequest

func (x *QueryGetWalletRequest) ProtoReflect() protoreflect.Message {
	return (*fastReflection_QueryGetWalletRequest)(x)
}

func (x *QueryGetWalletRequest) slowProtoReflect() protoreflect.Message {
	mi := &file_qadena_qadena_query_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_QueryGetWalletRequest_messageType fastReflection_QueryGetWalletRequest_messageType
var _ protoreflect.MessageType = fastReflection_QueryGetWalletRequest_messageType{}

type fastReflection_QueryGetWalletRequest_messageType struct{}

func (x fastReflection_QueryGetWalletRequest_messageType) Zero() protoreflect.Message {
	return (*fastReflection_QueryGetWalletRequest)(nil)
}
func (x fastReflection_QueryGetWalletRequest_messageType) New() protoreflect.Message {
	return new(fastReflection_QueryGetWalletRequest)
}
func (x fastReflection_QueryGetWalletRequest_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_QueryGetWalletRequest
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_QueryGetWalletRequest) Descriptor() protoreflect.MessageDescriptor {
	return md_QueryGetWalletRequest
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_QueryGetWalletRequest) Type() protoreflect.MessageType {
	return _fastReflection_QueryGetWalletRequest_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_QueryGetWalletRequest) New() protoreflect.Message {
	return new(fastReflection_QueryGetWalletRequest)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_QueryGetWalletRequest) Interface() protoreflect.ProtoMessage {
	return (*QueryGetWalletRequest)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_QueryGetWalletRequest) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.WalletID != "" {
		value := protoreflect.ValueOfString(x.WalletID)
		if !f(fd_QueryGetWalletRequest_walletID, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_QueryGetWalletRequest) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "qadena.qadena.QueryGetWalletRequest.walletID":
		return x.WalletID != ""
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: qadena.qadena.QueryGetWalletRequest"))
		}
		panic(fmt.Errorf("message qadena.qadena.QueryGetWalletRequest does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_QueryGetWalletRequest) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "qadena.qadena.QueryGetWalletRequest.walletID":
		x.WalletID = ""
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: qadena.qadena.QueryGetWalletRequest"))
		}
		panic(fmt.Errorf("message qadena.qadena.QueryGetWalletRequest does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_QueryGetWalletRequest) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "qadena.qadena.QueryGetWalletRequest.walletID":
		value := x.WalletID
		return protoreflect.ValueOfString(value)
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: qadena.qadena.QueryGetWalletRequest"))
		}
		panic(fmt.Errorf("message qadena.qadena.QueryGetWalletRequest does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_QueryGetWalletRequest) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "qadena.qadena.QueryGetWalletRequest.walletID":
		x.WalletID = value.Interface().(string)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: qadena.qadena.QueryGetWalletRequest"))
		}
		panic(fmt.Errorf("message qadena.qadena.QueryGetWalletRequest does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_QueryGetWalletRequest) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "qadena.qadena.QueryGetWalletRequest.walletID":
		panic(fmt.Errorf("field walletID of message qadena.qadena.QueryGetWalletRequest is not mutable"))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: qadena.qadena.QueryGetWalletRequest"))
		}
		panic(fmt.Errorf("message qadena.qadena.QueryGetWalletRequest does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_QueryGetWalletRequest) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "qadena.qadena.QueryGetWalletRequest.walletID":
		return protoreflect.ValueOfString("")
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: qadena.qadena.QueryGetWalletRequest"))
		}
		panic(fmt.Errorf("message qadena.qadena.QueryGetWalletRequest does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_QueryGetWalletRequest) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in qadena.qadena.QueryGetWalletRequest", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_QueryGetWalletRequest) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_QueryGetWalletRequest) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_QueryGetWalletRequest) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_QueryGetWalletRequest) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*QueryGetWalletRequest)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		l = len(x.WalletID)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*QueryGetWalletRequest)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if len(x.WalletID) > 0 {
			i -= len(x.WalletID)
			copy(dAtA[i:], x.WalletID)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.WalletID)))
			i--
			dAtA[i] = 0xa
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*QueryGetWalletRequest)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: QueryGetWalletRequest: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: QueryGetWalletRequest: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field WalletID", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.WalletID = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var (
	md_QueryGetWalletResponse        protoreflect.MessageDescriptor
	fd_QueryGetWalletResponse_wallet protoreflect.FieldDescriptor
)

func init() {
	file_qadena_qadena_query_proto_init()
	md_QueryGetWalletResponse = File_qadena_qadena_query_proto.Messages().ByName("QueryGetWalletResponse")
	fd_QueryGetWalletResponse_wallet = md_QueryGetWalletResponse.Fields().ByName("wallet")
}

var _ protoreflect.Message = (*fastReflection_QueryGetWalletResponse)(nil)

type fastReflection_QueryGetWalletResponse QueryGetWalletResponse

func (x *QueryGetWalletResponse) ProtoReflect() protoreflect.Message {
	return (*fastReflection_QueryGetWalletResponse)(x)
}

func (x *QueryGetWalletResponse) slowProtoReflect() protoreflect.Message {
	mi := &file_qadena_qadena_query_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_QueryGetWalletResponse_messageType fastReflection_QueryGetWalletResponse_messageType
var _ protoreflect.MessageType = fastReflection_QueryGetWalletResponse_messageType{}

type fastReflection_QueryGetWalletResponse_messageType struct{}

func (x fastReflection_QueryGetWalletResponse_messageType) Zero() protoreflect.Message {
	return (*fastReflection_QueryGetWalletResponse)(nil)
}
func (x fastReflection_QueryGetWalletResponse_messageType) New() protoreflect.Message {
	return new(fastReflection_QueryGetWalletResponse)
}
func (x fastReflection_QueryGetWalletResponse_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_QueryGetWalletResponse
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_QueryGetWalletResponse) Descriptor() protoreflect.MessageDescriptor {
	return md_QueryGetWalletResponse
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_QueryGetWalletResponse) Type() protoreflect.MessageType {
	return _fastReflection_QueryGetWalletResponse_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_QueryGetWalletResponse) New() protoreflect.Message {
	return new(fastReflection_QueryGetWalletResponse)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_QueryGetWalletResponse) Interface() protoreflect.ProtoMessage {
	return (*QueryGetWalletResponse)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_QueryGetWalletResponse) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.Wallet != nil {
		value := protoreflect.ValueOfMessage(x.Wallet.ProtoReflect())
		if !f(fd_QueryGetWalletResponse_wallet, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_QueryGetWalletResponse) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "qadena.qadena.QueryGetWalletResponse.wallet":
		return x.Wallet != nil
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: qadena.qadena.QueryGetWalletResponse"))
		}
		panic(fmt.Errorf("message qadena.qadena.QueryGetWalletResponse does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_QueryGetWalletResponse) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "qadena.qadena.QueryGetWalletResponse.wallet":
		x.Wallet = nil
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: qadena.qadena.QueryGetWalletResponse"))
		}
		panic(fmt.Errorf("message qadena.qadena.QueryGetWalletResponse does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_QueryGetWalletResponse) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "qadena.qadena.QueryGetWalletResponse.wallet":
		value := x.Wallet
		return protoreflect.ValueOfMessage(value.ProtoReflect())
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: qadena.qadena.QueryGetWalletResponse"))
		}
		panic(fmt.Errorf("message qadena.qadena.QueryGetWalletResponse does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_QueryGetWalletResponse) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "qadena.qadena.QueryGetWalletResponse.wallet":
		x.Wallet = value.Message().Interface().(*Wallet)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: qadena.qadena.QueryGetWalletResponse"))
		}
		panic(fmt.Errorf("message qadena.qadena.QueryGetWalletResponse does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_QueryGetWalletResponse) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "qadena.qadena.QueryGetWalletResponse.wallet":
		if x.Wallet == nil {
			x.Wallet = new(Wallet)
		}
		return protoreflect.ValueOfMessage(x.Wallet.ProtoReflect())
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: qadena.qadena.QueryGetWalletResponse"))
		}
		panic(fmt.Errorf("message qadena.qadena.QueryGetWalletResponse does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_QueryGetWalletResponse) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "qadena.qadena.QueryGetWalletResponse.wallet":
		m := new(Wallet)
		return protoreflect.ValueOfMessage(m.ProtoReflect())
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: qadena.qadena.QueryGetWalletResponse"))
		}
		panic(fmt.Errorf("message qadena.qadena.QueryGetWalletResponse does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_QueryGetWalletResponse) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in qadena.qadena.QueryGetWalletResponse", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_QueryGetWalletResponse) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_QueryGetWalletResponse) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_QueryGetWalletResponse) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_QueryGetWalletResponse) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*QueryGetWalletResponse)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		if x.Wallet != nil {
			l = options.Size(x.Wallet)
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*QueryGetWalletResponse)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if x.Wallet != nil {
			encoded, err := options.Marshal(x.Wallet)
			if err != nil {
				return protoiface.MarshalOutput{
					NoUnkeyedLiterals: input.NoUnkeyedLiterals,
					Buf:               input.Buf,
				}, err
			}
			i -= len(encoded)
			copy(dAtA[i:], encoded)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(encoded)))
			i--
			dAtA[i] = 0xa
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*QueryGetWalletResponse)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: QueryGetWalletResponse: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: QueryGetWalletResponse: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Wallet", wireType)
				}
				var msglen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					msglen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if msglen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + msglen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if x.Wallet == nil {
					x.Wallet = &Wallet{}
				}
				if err := options.Unmarshal(dAtA[iNdEx:postIndex], x.Wallet); err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				iNdEx = postIndex
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var (
	md_QueryAllWalletRequest            protoreflect.MessageDescriptor
	fd_QueryAllWalletRequest_pagination protoreflect.FieldDescriptor
)

func init() {
	file_qadena_qadena_query_proto_init()
	md_QueryAllWalletRequest = File_qadena_qadena_query_proto.Messages().ByName("QueryAllWalletRequest")
	fd_QueryAllWalletRequest_pagination = md_QueryAllWalletRequest.Fields().ByName("pagination")
}

var _ protoreflect.Message = (*fastReflection_QueryAllWalletRequest)(nil)

type fastReflection_QueryAllWalletRequest QueryAllWalletRequest

func (x *QueryAllWalletRequest) ProtoReflect() protoreflect.Message {
	return (*fastReflection_QueryAllWalletRequest)(x)
}

func (x *QueryAllWalletRequest) slowProtoReflect() protoreflect.Message {
	mi := &file_qadena_qadena_query_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_QueryAllWalletRequest_messageType fastReflection_QueryAllWalletRequest_messageType
var _ protoreflect.MessageType = fastReflection_QueryAllWalletRequest_messageType{}

type fastReflection_QueryAllWalletRequest_messageType struct{}

func (x fastReflection_QueryAllWalletRequest_messageType) Zero() protoreflect.Message {
	return (*fastReflection_QueryAllWalletRequest)(nil)
}
func (x fastReflection_QueryAllWalletRequest_messageType) New() protoreflect.Message {
	return new(fastReflection_QueryAllWalletRequest)
}
func (x fastReflection_QueryAllWalletRequest_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_QueryAllWalletRequest
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_QueryAllWalletRequest) Descriptor() protoreflect.MessageDescriptor {
	return md_QueryAllWalletRequest
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_QueryAllWalletRequest) Type() protoreflect.MessageType {
	return _fastReflection_QueryAllWalletRequest_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_QueryAllWalletRequest) New() protoreflect.Message {
	return new(fastReflection_QueryAllWalletRequest)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_QueryAllWalletRequest) Interface() protoreflect.ProtoMessage {
	return (*QueryAllWalletRequest)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_QueryAllWalletRequest) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.Pagination != nil {
		value := protoreflect.ValueOfMessage(x.Pagination.ProtoReflect())
		if !f(fd_QueryAllWalletRequest_pagination, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_QueryAllWalletRequest) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "qadena.qadena.QueryAllWalletRequest.pagination":
		return x.Pagination != nil
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: qadena.qadena.QueryAllWalletRequest"))
		}
		panic(fmt.Errorf("message qadena.qadena.QueryAllWalletRequest does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_QueryAllWalletRequest) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "qadena.qadena.QueryAllWalletRequest.pagination":
		x.Pagination = nil
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: qadena.qadena.QueryAllWalletRequest"))
		}
		panic(fmt.Errorf("message qadena.qadena.QueryAllWalletRequest does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_QueryAllWalletRequest) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "qadena.qadena.QueryAllWalletRequest.pagination":
		value := x.Pagination
		return protoreflect.ValueOfMessage(value.ProtoReflect())
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: qadena.qadena.QueryAllWalletRequest"))
		}
		panic(fmt.Errorf("message qadena.qadena.QueryAllWalletRequest does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_QueryAllWalletRequest) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "qadena.qadena.QueryAllWalletRequest.pagination":
		x.Pagination = value.Message().Interface().(*v1beta1.PageRequest)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: qadena.qadena.QueryAllWalletRequest"))
		}
		panic(fmt.Errorf("message qadena.qadena.QueryAllWalletRequest does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_QueryAllWalletRequest) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "qadena.qadena.QueryAllWalletRequest.pagination":
		if x.Pagination == nil {
			x.Pagination = new(v1beta1.PageRequest)
		}
		return protoreflect.ValueOfMessage(x.Pagination.ProtoReflect())
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: qadena.qadena.QueryAllWalletRequest"))
		}
		panic(fmt.Errorf("message qadena.qadena.QueryAllWalletRequest does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_QueryAllWalletRequest) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "qadena.qadena.QueryAllWalletRequest.pagination":
		m := new(v1beta1.PageRequest)
		return protoreflect.ValueOfMessage(m.ProtoReflect())
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: qadena.qadena.QueryAllWalletRequest"))
		}
		panic(fmt.Errorf("message qadena.qadena.QueryAllWalletRequest does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_QueryAllWalletRequest) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in qadena.qadena.QueryAllWalletRequest", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_QueryAllWalletRequest) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_QueryAllWalletRequest) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_QueryAllWalletRequest) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_QueryAllWalletRequest) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*QueryAllWalletRequest)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		if x.Pagination != nil {
			l = options.Size(x.Pagination)
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*QueryAllWalletRequest)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if x.Pagination != nil {
			encoded, err := options.Marshal(x.Pagination)
			if err != nil {
				return protoiface.MarshalOutput{
					NoUnkeyedLiterals: input.NoUnkeyedLiterals,
					Buf:               input.Buf,
				}, err
			}
			i -= len(encoded)
			copy(dAtA[i:], encoded)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(encoded)))
			i--
			dAtA[i] = 0xa
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*QueryAllWalletRequest)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: QueryAllWalletRequest: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: QueryAllWalletRequest: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Pagination", wireType)
				}
				var msglen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					msglen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if msglen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + msglen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if x.Pagination == nil {
					x.Pagination = &v1beta1.PageRequest{}
				}
				if err := options.Unmarshal(dAtA[iNdEx:postIndex], x.Pagination); err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				iNdEx = postIndex
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var _ protoreflect.List = (*_QueryAllWalletResponse_1_list)(nil)

type _QueryAllWalletResponse_1_list struct {
	list *[]*Wallet
}

func (x *_QueryAllWalletResponse_1_list) Len() int {
	if x.list == nil {
		return 0
	}
	return len(*x.list)
}

func (x *_QueryAllWalletResponse_1_list) Get(i int) protoreflect.Value {
	return protoreflect.ValueOfMessage((*x.list)[i].ProtoReflect())
}

func (x *_QueryAllWalletResponse_1_list) Set(i int, value protoreflect.Value) {
	valueUnwrapped := value.Message()
	concreteValue := valueUnwrapped.Interface().(*Wallet)
	(*x.list)[i] = concreteValue
}

func (x *_QueryAllWalletResponse_1_list) Append(value protoreflect.Value) {
	valueUnwrapped := value.Message()
	concreteValue := valueUnwrapped.Interface().(*Wallet)
	*x.list = append(*x.list, concreteValue)
}

func (x *_QueryAllWalletResponse_1_list) AppendMutable() protoreflect.Value {
	v := new(Wallet)
	*x.list = append(*x.list, v)
	return protoreflect.ValueOfMessage(v.ProtoReflect())
}

func (x *_QueryAllWalletResponse_1_list) Truncate(n int) {
	for i := n; i < len(*x.list); i++ {
		(*x.list)[i] = nil
	}
	*x.list = (*x.list)[:n]
}

func (x *_QueryAllWalletResponse_1_list) NewElement() protoreflect.Value {
	v := new(Wallet)
	return protoreflect.ValueOfMessage(v.ProtoReflect())
}

func (x *_QueryAllWalletResponse_1_list) IsValid() bool {
	return x.list != nil
}

var (
	md_QueryAllWalletResponse            protoreflect.MessageDescriptor
	fd_QueryAllWalletResponse_wallet     protoreflect.FieldDescriptor
	fd_QueryAllWalletResponse_pagination protoreflect.FieldDescriptor
)

func init() {
	file_qadena_qadena_query_proto_init()
	md_QueryAllWalletResponse = File_qadena_qadena_query_proto.Messages().ByName("QueryAllWalletResponse")
	fd_QueryAllWalletResponse_wallet = md_QueryAllWalletResponse.Fields().ByName("wallet")
	fd_QueryAllWalletResponse_pagination = md_QueryAllWalletResponse.Fields().ByName("pagination")
}

var _ protoreflect.Message = (*fastReflection_QueryAllWalletResponse)(nil)

type fastReflection_QueryAllWalletResponse QueryAllWalletResponse

func (x *QueryAllWalletResponse) ProtoReflect() protoreflect.Message {
	return (*fastReflection_QueryAllWalletResponse)(x)
}

func (x *QueryAllWalletResponse) slowProtoReflect() protoreflect.Message {
	mi := &file_qadena_qadena_query_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_QueryAllWalletResponse_messageType fastReflection_QueryAllWalletResponse_messageType
var _ protoreflect.MessageType = fastReflection_QueryAllWalletResponse_messageType{}

type fastReflection_QueryAllWalletResponse_messageType struct{}

func (x fastReflection_QueryAllWalletResponse_messageType) Zero() protoreflect.Message {
	return (*fastReflection_QueryAllWalletResponse)(nil)
}
func (x fastReflection_QueryAllWalletResponse_messageType) New() protoreflect.Message {
	return new(fastReflection_QueryAllWalletResponse)
}
func (x fastReflection_QueryAllWalletResponse_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_QueryAllWalletResponse
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_QueryAllWalletResponse) Descriptor() protoreflect.MessageDescriptor {
	return md_QueryAllWalletResponse
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_QueryAllWalletResponse) Type() protoreflect.MessageType {
	return _fastReflection_QueryAllWalletResponse_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_QueryAllWalletResponse) New() protoreflect.Message {
	return new(fastReflection_QueryAllWalletResponse)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_QueryAllWalletResponse) Interface() protoreflect.ProtoMessage {
	return (*QueryAllWalletResponse)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_QueryAllWalletResponse) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if len(x.Wallet) != 0 {
		value := protoreflect.ValueOfList(&_QueryAllWalletResponse_1_list{list: &x.Wallet})
		if !f(fd_QueryAllWalletResponse_wallet, value) {
			return
		}
	}
	if x.Pagination != nil {
		value := protoreflect.ValueOfMessage(x.Pagination.ProtoReflect())
		if !f(fd_QueryAllWalletResponse_pagination, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_QueryAllWalletResponse) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "qadena.qadena.QueryAllWalletResponse.wallet":
		return len(x.Wallet) != 0
	case "qadena.qadena.QueryAllWalletResponse.pagination":
		return x.Pagination != nil
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: qadena.qadena.QueryAllWalletResponse"))
		}
		panic(fmt.Errorf("message qadena.qadena.QueryAllWalletResponse does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_QueryAllWalletResponse) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "qadena.qadena.QueryAllWalletResponse.wallet":
		x.Wallet = nil
	case "qadena.qadena.QueryAllWalletResponse.pagination":
		x.Pagination = nil
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: qadena.qadena.QueryAllWalletResponse"))
		}
		panic(fmt.Errorf("message qadena.qadena.QueryAllWalletResponse does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_QueryAllWalletResponse) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "qadena.qadena.QueryAllWalletResponse.wallet":
		if len(x.Wallet) == 0 {
			return protoreflect.ValueOfList(&_QueryAllWalletResponse_1_list{})
		}
		listValue := &_QueryAllWalletResponse_1_list{list: &x.Wallet}
		return protoreflect.ValueOfList(listValue)
	case "qadena.qadena.QueryAllWalletResponse.pagination":
		value := x.Pagination
		return protoreflect.ValueOfMessage(value.ProtoReflect())
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: qadena.qadena.QueryAllWalletResponse"))
		}
		panic(fmt.Errorf("message qadena.qadena.QueryAllWalletResponse does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_QueryAllWalletResponse) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "qadena.qadena.QueryAllWalletResponse.wallet":
		lv := value.List()
		clv := lv.(*_QueryAllWalletResponse_1_list)
		x.Wallet = *clv.list
	case "qadena.qadena.QueryAllWalletResponse.pagination":
		x.Pagination = value.Message().Interface().(*v1beta1.PageResponse)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: qadena.qadena.QueryAllWalletResponse"))
		}
		panic(fmt.Errorf("message qadena.qadena.QueryAllWalletResponse does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_QueryAllWalletResponse) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "qadena.qadena.QueryAllWalletResponse.wallet":
		if x.Wallet == nil {
			x.Wallet = []*Wallet{}
		}
		value := &_QueryAllWalletResponse_1_list{list: &x.Wallet}
		return protoreflect.ValueOfList(value)
	case "qadena.qadena.QueryAllWalletResponse.pagination":
		if x.Pagination == nil {
			x.Pagination = new(v1beta1.PageResponse)
		}
		return protoreflect.ValueOfMessage(x.Pagination.ProtoReflect())
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: qadena.qadena.QueryAllWalletResponse"))
		}
		panic(fmt.Errorf("message qadena.qadena.QueryAllWalletResponse does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_QueryAllWalletResponse) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "qadena.qadena.QueryAllWalletResponse.wallet":
		list := []*Wallet{}
		return protoreflect.ValueOfList(&_QueryAllWalletResponse_1_list{list: &list})
	case "qadena.qadena.QueryAllWalletResponse.pagination":
		m := new(v1beta1.PageResponse)
		return protoreflect.ValueOfMessage(m.ProtoReflect())
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: qadena.qadena.QueryAllWalletResponse"))
		}
		panic(fmt.Errorf("message qadena.qadena.QueryAllWalletResponse does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_QueryAllWalletResponse) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in qadena.qadena.QueryAllWalletResponse", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_QueryAllWalletResponse) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_QueryAllWalletResponse) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_QueryAllWalletResponse) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_QueryAllWalletResponse) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*QueryAllWalletResponse)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		if len(x.Wallet) > 0 {
			for _, e := range x.Wallet {
				l = options.Size(e)
				n += 1 + l + runtime.Sov(uint64(l))
			}
		}
		if x.Pagination != nil {
			l = options.Size(x.Pagination)
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*QueryAllWalletResponse)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if x.Pagination != nil {
			encoded, err := options.Marshal(x.Pagination)
			if err != nil {
				return protoiface.MarshalOutput{
					NoUnkeyedLiterals: input.NoUnkeyedLiterals,
					Buf:               input.Buf,
				}, err
			}
			i -= len(encoded)
			copy(dAtA[i:], encoded)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(encoded)))
			i--
			dAtA[i] = 0x12
		}
		if len(x.Wallet) > 0 {
			for iNdEx := len(x.Wallet) - 1; iNdEx >= 0; iNdEx-- {
				encoded, err := options.Marshal(x.Wallet[iNdEx])
				if err != nil {
					return protoiface.MarshalOutput{
						NoUnkeyedLiterals: input.NoUnkeyedLiterals,
						Buf:               input.Buf,
					}, err
				}
				i -= len(encoded)
				copy(dAtA[i:], encoded)
				i = runtime.EncodeVarint(dAtA, i, uint64(len(encoded)))
				i--
				dAtA[i] = 0xa
			}
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*QueryAllWalletResponse)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: QueryAllWalletResponse: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: QueryAllWalletResponse: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Wallet", wireType)
				}
				var msglen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					msglen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if msglen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + msglen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Wallet = append(x.Wallet, &Wallet{})
				if err := options.Unmarshal(dAtA[iNdEx:postIndex], x.Wallet[len(x.Wallet)-1]); err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				iNdEx = postIndex
			case 2:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Pagination", wireType)
				}
				var msglen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					msglen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if msglen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + msglen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if x.Pagination == nil {
					x.Pagination = &v1beta1.PageResponse{}
				}
				if err := options.Unmarshal(dAtA[iNdEx:postIndex], x.Pagination); err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				iNdEx = postIndex
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var (
	md_QueryGetIntervalPublicKeyIDRequest          protoreflect.MessageDescriptor
	fd_QueryGetIntervalPublicKeyIDRequest_nodeID   protoreflect.FieldDescriptor
	fd_QueryGetIntervalPublicKeyIDRequest_nodeType protoreflect.FieldDescriptor
)

func init() {
	file_qadena_qadena_query_proto_init()
	md_QueryGetIntervalPublicKeyIDRequest = File_qadena_qadena_query_proto.Messages().ByName("QueryGetIntervalPublicKeyIDRequest")
	fd_QueryGetIntervalPublicKeyIDRequest_nodeID = md_QueryGetIntervalPublicKeyIDRequest.Fields().ByName("nodeID")
	fd_QueryGetIntervalPublicKeyIDRequest_nodeType = md_QueryGetIntervalPublicKeyIDRequest.Fields().ByName("nodeType")
}

var _ protoreflect.Message = (*fastReflection_QueryGetIntervalPublicKeyIDRequest)(nil)

type fastReflection_QueryGetIntervalPublicKeyIDRequest QueryGetIntervalPublicKeyIDRequest

func (x *QueryGetIntervalPublicKeyIDRequest) ProtoReflect() protoreflect.Message {
	return (*fastReflection_QueryGetIntervalPublicKeyIDRequest)(x)
}

func (x *QueryGetIntervalPublicKeyIDRequest) slowProtoReflect() protoreflect.Message {
	mi := &file_qadena_qadena_query_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_QueryGetIntervalPublicKeyIDRequest_messageType fastReflection_QueryGetIntervalPublicKeyIDRequest_messageType
var _ protoreflect.MessageType = fastReflection_QueryGetIntervalPublicKeyIDRequest_messageType{}

type fastReflection_QueryGetIntervalPublicKeyIDRequest_messageType struct{}

func (x fastReflection_QueryGetIntervalPublicKeyIDRequest_messageType) Zero() protoreflect.Message {
	return (*fastReflection_QueryGetIntervalPublicKeyIDRequest)(nil)
}
func (x fastReflection_QueryGetIntervalPublicKeyIDRequest_messageType) New() protoreflect.Message {
	return new(fastReflection_QueryGetIntervalPublicKeyIDRequest)
}
func (x fastReflection_QueryGetIntervalPublicKeyIDRequest_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_QueryGetIntervalPublicKeyIDRequest
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_QueryGetIntervalPublicKeyIDRequest) Descriptor() protoreflect.MessageDescriptor {
	return md_QueryGetIntervalPublicKeyIDRequest
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_QueryGetIntervalPublicKeyIDRequest) Type() protoreflect.MessageType {
	return _fastReflection_QueryGetIntervalPublicKeyIDRequest_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_QueryGetIntervalPublicKeyIDRequest) New() protoreflect.Message {
	return new(fastReflection_QueryGetIntervalPublicKeyIDRequest)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_QueryGetIntervalPublicKeyIDRequest) Interface() protoreflect.ProtoMessage {
	return (*QueryGetIntervalPublicKeyIDRequest)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_QueryGetIntervalPublicKeyIDRequest) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.NodeID != "" {
		value := protoreflect.ValueOfString(x.NodeID)
		if !f(fd_QueryGetIntervalPublicKeyIDRequest_nodeID, value) {
			return
		}
	}
	if x.NodeType != "" {
		value := protoreflect.ValueOfString(x.NodeType)
		if !f(fd_QueryGetIntervalPublicKeyIDRequest_nodeType, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_QueryGetIntervalPublicKeyIDRequest) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "qadena.qadena.QueryGetIntervalPublicKeyIDRequest.nodeID":
		return x.NodeID != ""
	case "qadena.qadena.QueryGetIntervalPublicKeyIDRequest.nodeType":
		return x.NodeType != ""
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: qadena.qadena.QueryGetIntervalPublicKeyIDRequest"))
		}
		panic(fmt.Errorf("message qadena.qadena.QueryGetIntervalPublicKeyIDRequest does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_QueryGetIntervalPublicKeyIDRequest) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "qadena.qadena.QueryGetIntervalPublicKeyIDRequest.nodeID":
		x.NodeID = ""
	case "qadena.qadena.QueryGetIntervalPublicKeyIDRequest.nodeType":
		x.NodeType = ""
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: qadena.qadena.QueryGetIntervalPublicKeyIDRequest"))
		}
		panic(fmt.Errorf("message qadena.qadena.QueryGetIntervalPublicKeyIDRequest does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_QueryGetIntervalPublicKeyIDRequest) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "qadena.qadena.QueryGetIntervalPublicKeyIDRequest.nodeID":
		value := x.NodeID
		return protoreflect.ValueOfString(value)
	case "qadena.qadena.QueryGetIntervalPublicKeyIDRequest.nodeType":
		value := x.NodeType
		return protoreflect.ValueOfString(value)
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: qadena.qadena.QueryGetIntervalPublicKeyIDRequest"))
		}
		panic(fmt.Errorf("message qadena.qadena.QueryGetIntervalPublicKeyIDRequest does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_QueryGetIntervalPublicKeyIDRequest) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "qadena.qadena.QueryGetIntervalPublicKeyIDRequest.nodeID":
		x.NodeID = value.Interface().(string)
	case "qadena.qadena.QueryGetIntervalPublicKeyIDRequest.nodeType":
		x.NodeType = value.Interface().(string)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: qadena.qadena.QueryGetIntervalPublicKeyIDRequest"))
		}
		panic(fmt.Errorf("message qadena.qadena.QueryGetIntervalPublicKeyIDRequest does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_QueryGetIntervalPublicKeyIDRequest) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "qadena.qadena.QueryGetIntervalPublicKeyIDRequest.nodeID":
		panic(fmt.Errorf("field nodeID of message qadena.qadena.QueryGetIntervalPublicKeyIDRequest is not mutable"))
	case "qadena.qadena.QueryGetIntervalPublicKeyIDRequest.nodeType":
		panic(fmt.Errorf("field nodeType of message qadena.qadena.QueryGetIntervalPublicKeyIDRequest is not mutable"))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: qadena.qadena.QueryGetIntervalPublicKeyIDRequest"))
		}
		panic(fmt.Errorf("message qadena.qadena.QueryGetIntervalPublicKeyIDRequest does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_QueryGetIntervalPublicKeyIDRequest) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "qadena.qadena.QueryGetIntervalPublicKeyIDRequest.nodeID":
		return protoreflect.ValueOfString("")
	case "qadena.qadena.QueryGetIntervalPublicKeyIDRequest.nodeType":
		return protoreflect.ValueOfString("")
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: qadena.qadena.QueryGetIntervalPublicKeyIDRequest"))
		}
		panic(fmt.Errorf("message qadena.qadena.QueryGetIntervalPublicKeyIDRequest does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_QueryGetIntervalPublicKeyIDRequest) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in qadena.qadena.QueryGetIntervalPublicKeyIDRequest", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_QueryGetIntervalPublicKeyIDRequest) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_QueryGetIntervalPublicKeyIDRequest) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_QueryGetIntervalPublicKeyIDRequest) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_QueryGetIntervalPublicKeyIDRequest) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*QueryGetIntervalPublicKeyIDRequest)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		l = len(x.NodeID)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.NodeType)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*QueryGetIntervalPublicKeyIDRequest)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if len(x.NodeType) > 0 {
			i -= len(x.NodeType)
			copy(dAtA[i:], x.NodeType)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.NodeType)))
			i--
			dAtA[i] = 0x12
		}
		if len(x.NodeID) > 0 {
			i -= len(x.NodeID)
			copy(dAtA[i:], x.NodeID)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.NodeID)))
			i--
			dAtA[i] = 0xa
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*QueryGetIntervalPublicKeyIDRequest)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: QueryGetIntervalPublicKeyIDRequest: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: QueryGetIntervalPublicKeyIDRequest: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field NodeID", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.NodeID = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 2:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field NodeType", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.NodeType = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var (
	md_QueryGetIntervalPublicKeyIDResponse                     protoreflect.MessageDescriptor
	fd_QueryGetIntervalPublicKeyIDResponse_intervalPublicKeyID protoreflect.FieldDescriptor
)

func init() {
	file_qadena_qadena_query_proto_init()
	md_QueryGetIntervalPublicKeyIDResponse = File_qadena_qadena_query_proto.Messages().ByName("QueryGetIntervalPublicKeyIDResponse")
	fd_QueryGetIntervalPublicKeyIDResponse_intervalPublicKeyID = md_QueryGetIntervalPublicKeyIDResponse.Fields().ByName("intervalPublicKeyID")
}

var _ protoreflect.Message = (*fastReflection_QueryGetIntervalPublicKeyIDResponse)(nil)

type fastReflection_QueryGetIntervalPublicKeyIDResponse QueryGetIntervalPublicKeyIDResponse

func (x *QueryGetIntervalPublicKeyIDResponse) ProtoReflect() protoreflect.Message {
	return (*fastReflection_QueryGetIntervalPublicKeyIDResponse)(x)
}

func (x *QueryGetIntervalPublicKeyIDResponse) slowProtoReflect() protoreflect.Message {
	mi := &file_qadena_qadena_query_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_QueryGetIntervalPublicKeyIDResponse_messageType fastReflection_QueryGetIntervalPublicKeyIDResponse_messageType
var _ protoreflect.MessageType = fastReflection_QueryGetIntervalPublicKeyIDResponse_messageType{}

type fastReflection_QueryGetIntervalPublicKeyIDResponse_messageType struct{}

func (x fastReflection_QueryGetIntervalPublicKeyIDResponse_messageType) Zero() protoreflect.Message {
	return (*fastReflection_QueryGetIntervalPublicKeyIDResponse)(nil)
}
func (x fastReflection_QueryGetIntervalPublicKeyIDResponse_messageType) New() protoreflect.Message {
	return new(fastReflection_QueryGetIntervalPublicKeyIDResponse)
}
func (x fastReflection_QueryGetIntervalPublicKeyIDResponse_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_QueryGetIntervalPublicKeyIDResponse
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_QueryGetIntervalPublicKeyIDResponse) Descriptor() protoreflect.MessageDescriptor {
	return md_QueryGetIntervalPublicKeyIDResponse
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_QueryGetIntervalPublicKeyIDResponse) Type() protoreflect.MessageType {
	return _fastReflection_QueryGetIntervalPublicKeyIDResponse_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_QueryGetIntervalPublicKeyIDResponse) New() protoreflect.Message {
	return new(fastReflection_QueryGetIntervalPublicKeyIDResponse)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_QueryGetIntervalPublicKeyIDResponse) Interface() protoreflect.ProtoMessage {
	return (*QueryGetIntervalPublicKeyIDResponse)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_QueryGetIntervalPublicKeyIDResponse) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.IntervalPublicKeyID != nil {
		value := protoreflect.ValueOfMessage(x.IntervalPublicKeyID.ProtoReflect())
		if !f(fd_QueryGetIntervalPublicKeyIDResponse_intervalPublicKeyID, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_QueryGetIntervalPublicKeyIDResponse) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "qadena.qadena.QueryGetIntervalPublicKeyIDResponse.intervalPublicKeyID":
		return x.IntervalPublicKeyID != nil
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: qadena.qadena.QueryGetIntervalPublicKeyIDResponse"))
		}
		panic(fmt.Errorf("message qadena.qadena.QueryGetIntervalPublicKeyIDResponse does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_QueryGetIntervalPublicKeyIDResponse) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "qadena.qadena.QueryGetIntervalPublicKeyIDResponse.intervalPublicKeyID":
		x.IntervalPublicKeyID = nil
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: qadena.qadena.QueryGetIntervalPublicKeyIDResponse"))
		}
		panic(fmt.Errorf("message qadena.qadena.QueryGetIntervalPublicKeyIDResponse does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_QueryGetIntervalPublicKeyIDResponse) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "qadena.qadena.QueryGetIntervalPublicKeyIDResponse.intervalPublicKeyID":
		value := x.IntervalPublicKeyID
		return protoreflect.ValueOfMessage(value.ProtoReflect())
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: qadena.qadena.QueryGetIntervalPublicKeyIDResponse"))
		}
		panic(fmt.Errorf("message qadena.qadena.QueryGetIntervalPublicKeyIDResponse does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_QueryGetIntervalPublicKeyIDResponse) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "qadena.qadena.QueryGetIntervalPublicKeyIDResponse.intervalPublicKeyID":
		x.IntervalPublicKeyID = value.Message().Interface().(*IntervalPublicKeyID)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: qadena.qadena.QueryGetIntervalPublicKeyIDResponse"))
		}
		panic(fmt.Errorf("message qadena.qadena.QueryGetIntervalPublicKeyIDResponse does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_QueryGetIntervalPublicKeyIDResponse) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "qadena.qadena.QueryGetIntervalPublicKeyIDResponse.intervalPublicKeyID":
		if x.IntervalPublicKeyID == nil {
			x.IntervalPublicKeyID = new(IntervalPublicKeyID)
		}
		return protoreflect.ValueOfMessage(x.IntervalPublicKeyID.ProtoReflect())
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: qadena.qadena.QueryGetIntervalPublicKeyIDResponse"))
		}
		panic(fmt.Errorf("message qadena.qadena.QueryGetIntervalPublicKeyIDResponse does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_QueryGetIntervalPublicKeyIDResponse) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "qadena.qadena.QueryGetIntervalPublicKeyIDResponse.intervalPublicKeyID":
		m := new(IntervalPublicKeyID)
		return protoreflect.ValueOfMessage(m.ProtoReflect())
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: qadena.qadena.QueryGetIntervalPublicKeyIDResponse"))
		}
		panic(fmt.Errorf("message qadena.qadena.QueryGetIntervalPublicKeyIDResponse does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_QueryGetIntervalPublicKeyIDResponse) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in qadena.qadena.QueryGetIntervalPublicKeyIDResponse", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_QueryGetIntervalPublicKeyIDResponse) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_QueryGetIntervalPublicKeyIDResponse) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_QueryGetIntervalPublicKeyIDResponse) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_QueryGetIntervalPublicKeyIDResponse) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*QueryGetIntervalPublicKeyIDResponse)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		if x.IntervalPublicKeyID != nil {
			l = options.Size(x.IntervalPublicKeyID)
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*QueryGetIntervalPublicKeyIDResponse)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if x.IntervalPublicKeyID != nil {
			encoded, err := options.Marshal(x.IntervalPublicKeyID)
			if err != nil {
				return protoiface.MarshalOutput{
					NoUnkeyedLiterals: input.NoUnkeyedLiterals,
					Buf:               input.Buf,
				}, err
			}
			i -= len(encoded)
			copy(dAtA[i:], encoded)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(encoded)))
			i--
			dAtA[i] = 0xa
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*QueryGetIntervalPublicKeyIDResponse)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: QueryGetIntervalPublicKeyIDResponse: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: QueryGetIntervalPublicKeyIDResponse: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field IntervalPublicKeyID", wireType)
				}
				var msglen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					msglen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if msglen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + msglen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if x.IntervalPublicKeyID == nil {
					x.IntervalPublicKeyID = &IntervalPublicKeyID{}
				}
				if err := options.Unmarshal(dAtA[iNdEx:postIndex], x.IntervalPublicKeyID); err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				iNdEx = postIndex
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var (
	md_QueryAllIntervalPublicKeyIDRequest            protoreflect.MessageDescriptor
	fd_QueryAllIntervalPublicKeyIDRequest_pagination protoreflect.FieldDescriptor
)

func init() {
	file_qadena_qadena_query_proto_init()
	md_QueryAllIntervalPublicKeyIDRequest = File_qadena_qadena_query_proto.Messages().ByName("QueryAllIntervalPublicKeyIDRequest")
	fd_QueryAllIntervalPublicKeyIDRequest_pagination = md_QueryAllIntervalPublicKeyIDRequest.Fields().ByName("pagination")
}

var _ protoreflect.Message = (*fastReflection_QueryAllIntervalPublicKeyIDRequest)(nil)

type fastReflection_QueryAllIntervalPublicKeyIDRequest QueryAllIntervalPublicKeyIDRequest

func (x *QueryAllIntervalPublicKeyIDRequest) ProtoReflect() protoreflect.Message {
	return (*fastReflection_QueryAllIntervalPublicKeyIDRequest)(x)
}

func (x *QueryAllIntervalPublicKeyIDRequest) slowProtoReflect() protoreflect.Message {
	mi := &file_qadena_qadena_query_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_QueryAllIntervalPublicKeyIDRequest_messageType fastReflection_QueryAllIntervalPublicKeyIDRequest_messageType
var _ protoreflect.MessageType = fastReflection_QueryAllIntervalPublicKeyIDRequest_messageType{}

type fastReflection_QueryAllIntervalPublicKeyIDRequest_messageType struct{}

func (x fastReflection_QueryAllIntervalPublicKeyIDRequest_messageType) Zero() protoreflect.Message {
	return (*fastReflection_QueryAllIntervalPublicKeyIDRequest)(nil)
}
func (x fastReflection_QueryAllIntervalPublicKeyIDRequest_messageType) New() protoreflect.Message {
	return new(fastReflection_QueryAllIntervalPublicKeyIDRequest)
}
func (x fastReflection_QueryAllIntervalPublicKeyIDRequest_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_QueryAllIntervalPublicKeyIDRequest
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_QueryAllIntervalPublicKeyIDRequest) Descriptor() protoreflect.MessageDescriptor {
	return md_QueryAllIntervalPublicKeyIDRequest
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_QueryAllIntervalPublicKeyIDRequest) Type() protoreflect.MessageType {
	return _fastReflection_QueryAllIntervalPublicKeyIDRequest_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_QueryAllIntervalPublicKeyIDRequest) New() protoreflect.Message {
	return new(fastReflection_QueryAllIntervalPublicKeyIDRequest)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_QueryAllIntervalPublicKeyIDRequest) Interface() protoreflect.ProtoMessage {
	return (*QueryAllIntervalPublicKeyIDRequest)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_QueryAllIntervalPublicKeyIDRequest) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.Pagination != nil {
		value := protoreflect.ValueOfMessage(x.Pagination.ProtoReflect())
		if !f(fd_QueryAllIntervalPublicKeyIDRequest_pagination, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_QueryAllIntervalPublicKeyIDRequest) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "qadena.qadena.QueryAllIntervalPublicKeyIDRequest.pagination":
		return x.Pagination != nil
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: qadena.qadena.QueryAllIntervalPublicKeyIDRequest"))
		}
		panic(fmt.Errorf("message qadena.qadena.QueryAllIntervalPublicKeyIDRequest does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_QueryAllIntervalPublicKeyIDRequest) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "qadena.qadena.QueryAllIntervalPublicKeyIDRequest.pagination":
		x.Pagination = nil
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: qadena.qadena.QueryAllIntervalPublicKeyIDRequest"))
		}
		panic(fmt.Errorf("message qadena.qadena.QueryAllIntervalPublicKeyIDRequest does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_QueryAllIntervalPublicKeyIDRequest) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "qadena.qadena.QueryAllIntervalPublicKeyIDRequest.pagination":
		value := x.Pagination
		return protoreflect.ValueOfMessage(value.ProtoReflect())
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: qadena.qadena.QueryAllIntervalPublicKeyIDRequest"))
		}
		panic(fmt.Errorf("message qadena.qadena.QueryAllIntervalPublicKeyIDRequest does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_QueryAllIntervalPublicKeyIDRequest) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "qadena.qadena.QueryAllIntervalPublicKeyIDRequest.pagination":
		x.Pagination = value.Message().Interface().(*v1beta1.PageRequest)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: qadena.qadena.QueryAllIntervalPublicKeyIDRequest"))
		}
		panic(fmt.Errorf("message qadena.qadena.QueryAllIntervalPublicKeyIDRequest does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_QueryAllIntervalPublicKeyIDRequest) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "qadena.qadena.QueryAllIntervalPublicKeyIDRequest.pagination":
		if x.Pagination == nil {
			x.Pagination = new(v1beta1.PageRequest)
		}
		return protoreflect.ValueOfMessage(x.Pagination.ProtoReflect())
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: qadena.qadena.QueryAllIntervalPublicKeyIDRequest"))
		}
		panic(fmt.Errorf("message qadena.qadena.QueryAllIntervalPublicKeyIDRequest does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_QueryAllIntervalPublicKeyIDRequest) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "qadena.qadena.QueryAllIntervalPublicKeyIDRequest.pagination":
		m := new(v1beta1.PageRequest)
		return protoreflect.ValueOfMessage(m.ProtoReflect())
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: qadena.qadena.QueryAllIntervalPublicKeyIDRequest"))
		}
		panic(fmt.Errorf("message qadena.qadena.QueryAllIntervalPublicKeyIDRequest does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_QueryAllIntervalPublicKeyIDRequest) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in qadena.qadena.QueryAllIntervalPublicKeyIDRequest", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_QueryAllIntervalPublicKeyIDRequest) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_QueryAllIntervalPublicKeyIDRequest) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_QueryAllIntervalPublicKeyIDRequest) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_QueryAllIntervalPublicKeyIDRequest) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*QueryAllIntervalPublicKeyIDRequest)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		if x.Pagination != nil {
			l = options.Size(x.Pagination)
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*QueryAllIntervalPublicKeyIDRequest)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if x.Pagination != nil {
			encoded, err := options.Marshal(x.Pagination)
			if err != nil {
				return protoiface.MarshalOutput{
					NoUnkeyedLiterals: input.NoUnkeyedLiterals,
					Buf:               input.Buf,
				}, err
			}
			i -= len(encoded)
			copy(dAtA[i:], encoded)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(encoded)))
			i--
			dAtA[i] = 0xa
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*QueryAllIntervalPublicKeyIDRequest)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: QueryAllIntervalPublicKeyIDRequest: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: QueryAllIntervalPublicKeyIDRequest: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Pagination", wireType)
				}
				var msglen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					msglen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if msglen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + msglen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if x.Pagination == nil {
					x.Pagination = &v1beta1.PageRequest{}
				}
				if err := options.Unmarshal(dAtA[iNdEx:postIndex], x.Pagination); err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				iNdEx = postIndex
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var _ protoreflect.List = (*_QueryAllIntervalPublicKeyIDResponse_1_list)(nil)

type _QueryAllIntervalPublicKeyIDResponse_1_list struct {
	list *[]*IntervalPublicKeyID
}

func (x *_QueryAllIntervalPublicKeyIDResponse_1_list) Len() int {
	if x.list == nil {
		return 0
	}
	return len(*x.list)
}

func (x *_QueryAllIntervalPublicKeyIDResponse_1_list) Get(i int) protoreflect.Value {
	return protoreflect.ValueOfMessage((*x.list)[i].ProtoReflect())
}

func (x *_QueryAllIntervalPublicKeyIDResponse_1_list) Set(i int, value protoreflect.Value) {
	valueUnwrapped := value.Message()
	concreteValue := valueUnwrapped.Interface().(*IntervalPublicKeyID)
	(*x.list)[i] = concreteValue
}

func (x *_QueryAllIntervalPublicKeyIDResponse_1_list) Append(value protoreflect.Value) {
	valueUnwrapped := value.Message()
	concreteValue := valueUnwrapped.Interface().(*IntervalPublicKeyID)
	*x.list = append(*x.list, concreteValue)
}

func (x *_QueryAllIntervalPublicKeyIDResponse_1_list) AppendMutable() protoreflect.Value {
	v := new(IntervalPublicKeyID)
	*x.list = append(*x.list, v)
	return protoreflect.ValueOfMessage(v.ProtoReflect())
}

func (x *_QueryAllIntervalPublicKeyIDResponse_1_list) Truncate(n int) {
	for i := n; i < len(*x.list); i++ {
		(*x.list)[i] = nil
	}
	*x.list = (*x.list)[:n]
}

func (x *_QueryAllIntervalPublicKeyIDResponse_1_list) NewElement() protoreflect.Value {
	v := new(IntervalPublicKeyID)
	return protoreflect.ValueOfMessage(v.ProtoReflect())
}

func (x *_QueryAllIntervalPublicKeyIDResponse_1_list) IsValid() bool {
	return x.list != nil
}

var (
	md_QueryAllIntervalPublicKeyIDResponse                     protoreflect.MessageDescriptor
	fd_QueryAllIntervalPublicKeyIDResponse_intervalPublicKeyID protoreflect.FieldDescriptor
	fd_QueryAllIntervalPublicKeyIDResponse_pagination          protoreflect.FieldDescriptor
)

func init() {
	file_qadena_qadena_query_proto_init()
	md_QueryAllIntervalPublicKeyIDResponse = File_qadena_qadena_query_proto.Messages().ByName("QueryAllIntervalPublicKeyIDResponse")
	fd_QueryAllIntervalPublicKeyIDResponse_intervalPublicKeyID = md_QueryAllIntervalPublicKeyIDResponse.Fields().ByName("intervalPublicKeyID")
	fd_QueryAllIntervalPublicKeyIDResponse_pagination = md_QueryAllIntervalPublicKeyIDResponse.Fields().ByName("pagination")
}

var _ protoreflect.Message = (*fastReflection_QueryAllIntervalPublicKeyIDResponse)(nil)

type fastReflection_QueryAllIntervalPublicKeyIDResponse QueryAllIntervalPublicKeyIDResponse

func (x *QueryAllIntervalPublicKeyIDResponse) ProtoReflect() protoreflect.Message {
	return (*fastReflection_QueryAllIntervalPublicKeyIDResponse)(x)
}

func (x *QueryAllIntervalPublicKeyIDResponse) slowProtoReflect() protoreflect.Message {
	mi := &file_qadena_qadena_query_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_QueryAllIntervalPublicKeyIDResponse_messageType fastReflection_QueryAllIntervalPublicKeyIDResponse_messageType
var _ protoreflect.MessageType = fastReflection_QueryAllIntervalPublicKeyIDResponse_messageType{}

type fastReflection_QueryAllIntervalPublicKeyIDResponse_messageType struct{}

func (x fastReflection_QueryAllIntervalPublicKeyIDResponse_messageType) Zero() protoreflect.Message {
	return (*fastReflection_QueryAllIntervalPublicKeyIDResponse)(nil)
}
func (x fastReflection_QueryAllIntervalPublicKeyIDResponse_messageType) New() protoreflect.Message {
	return new(fastReflection_QueryAllIntervalPublicKeyIDResponse)
}
func (x fastReflection_QueryAllIntervalPublicKeyIDResponse_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_QueryAllIntervalPublicKeyIDResponse
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_QueryAllIntervalPublicKeyIDResponse) Descriptor() protoreflect.MessageDescriptor {
	return md_QueryAllIntervalPublicKeyIDResponse
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_QueryAllIntervalPublicKeyIDResponse) Type() protoreflect.MessageType {
	return _fastReflection_QueryAllIntervalPublicKeyIDResponse_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_QueryAllIntervalPublicKeyIDResponse) New() protoreflect.Message {
	return new(fastReflection_QueryAllIntervalPublicKeyIDResponse)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_QueryAllIntervalPublicKeyIDResponse) Interface() protoreflect.ProtoMessage {
	return (*QueryAllIntervalPublicKeyIDResponse)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_QueryAllIntervalPublicKeyIDResponse) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if len(x.IntervalPublicKeyID) != 0 {
		value := protoreflect.ValueOfList(&_QueryAllIntervalPublicKeyIDResponse_1_list{list: &x.IntervalPublicKeyID})
		if !f(fd_QueryAllIntervalPublicKeyIDResponse_intervalPublicKeyID, value) {
			return
		}
	}
	if x.Pagination != nil {
		value := protoreflect.ValueOfMessage(x.Pagination.ProtoReflect())
		if !f(fd_QueryAllIntervalPublicKeyIDResponse_pagination, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_QueryAllIntervalPublicKeyIDResponse) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "qadena.qadena.QueryAllIntervalPublicKeyIDResponse.intervalPublicKeyID":
		return len(x.IntervalPublicKeyID) != 0
	case "qadena.qadena.QueryAllIntervalPublicKeyIDResponse.pagination":
		return x.Pagination != nil
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: qadena.qadena.QueryAllIntervalPublicKeyIDResponse"))
		}
		panic(fmt.Errorf("message qadena.qadena.QueryAllIntervalPublicKeyIDResponse does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_QueryAllIntervalPublicKeyIDResponse) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "qadena.qadena.QueryAllIntervalPublicKeyIDResponse.intervalPublicKeyID":
		x.IntervalPublicKeyID = nil
	case "qadena.qadena.QueryAllIntervalPublicKeyIDResponse.pagination":
		x.Pagination = nil
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: qadena.qadena.QueryAllIntervalPublicKeyIDResponse"))
		}
		panic(fmt.Errorf("message qadena.qadena.QueryAllIntervalPublicKeyIDResponse does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_QueryAllIntervalPublicKeyIDResponse) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "qadena.qadena.QueryAllIntervalPublicKeyIDResponse.intervalPublicKeyID":
		if len(x.IntervalPublicKeyID) == 0 {
			return protoreflect.ValueOfList(&_QueryAllIntervalPublicKeyIDResponse_1_list{})
		}
		listValue := &_QueryAllIntervalPublicKeyIDResponse_1_list{list: &x.IntervalPublicKeyID}
		return protoreflect.ValueOfList(listValue)
	case "qadena.qadena.QueryAllIntervalPublicKeyIDResponse.pagination":
		value := x.Pagination
		return protoreflect.ValueOfMessage(value.ProtoReflect())
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: qadena.qadena.QueryAllIntervalPublicKeyIDResponse"))
		}
		panic(fmt.Errorf("message qadena.qadena.QueryAllIntervalPublicKeyIDResponse does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_QueryAllIntervalPublicKeyIDResponse) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "qadena.qadena.QueryAllIntervalPublicKeyIDResponse.intervalPublicKeyID":
		lv := value.List()
		clv := lv.(*_QueryAllIntervalPublicKeyIDResponse_1_list)
		x.IntervalPublicKeyID = *clv.list
	case "qadena.qadena.QueryAllIntervalPublicKeyIDResponse.pagination":
		x.Pagination = value.Message().Interface().(*v1beta1.PageResponse)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: qadena.qadena.QueryAllIntervalPublicKeyIDResponse"))
		}
		panic(fmt.Errorf("message qadena.qadena.QueryAllIntervalPublicKeyIDResponse does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_QueryAllIntervalPublicKeyIDResponse) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "qadena.qadena.QueryAllIntervalPublicKeyIDResponse.intervalPublicKeyID":
		if x.IntervalPublicKeyID == nil {
			x.IntervalPublicKeyID = []*IntervalPublicKeyID{}
		}
		value := &_QueryAllIntervalPublicKeyIDResponse_1_list{list: &x.IntervalPublicKeyID}
		return protoreflect.ValueOfList(value)
	case "qadena.qadena.QueryAllIntervalPublicKeyIDResponse.pagination":
		if x.Pagination == nil {
			x.Pagination = new(v1beta1.PageResponse)
		}
		return protoreflect.ValueOfMessage(x.Pagination.ProtoReflect())
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: qadena.qadena.QueryAllIntervalPublicKeyIDResponse"))
		}
		panic(fmt.Errorf("message qadena.qadena.QueryAllIntervalPublicKeyIDResponse does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_QueryAllIntervalPublicKeyIDResponse) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "qadena.qadena.QueryAllIntervalPublicKeyIDResponse.intervalPublicKeyID":
		list := []*IntervalPublicKeyID{}
		return protoreflect.ValueOfList(&_QueryAllIntervalPublicKeyIDResponse_1_list{list: &list})
	case "qadena.qadena.QueryAllIntervalPublicKeyIDResponse.pagination":
		m := new(v1beta1.PageResponse)
		return protoreflect.ValueOfMessage(m.ProtoReflect())
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: qadena.qadena.QueryAllIntervalPublicKeyIDResponse"))
		}
		panic(fmt.Errorf("message qadena.qadena.QueryAllIntervalPublicKeyIDResponse does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_QueryAllIntervalPublicKeyIDResponse) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in qadena.qadena.QueryAllIntervalPublicKeyIDResponse", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_QueryAllIntervalPublicKeyIDResponse) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_QueryAllIntervalPublicKeyIDResponse) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_QueryAllIntervalPublicKeyIDResponse) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_QueryAllIntervalPublicKeyIDResponse) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*QueryAllIntervalPublicKeyIDResponse)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		if len(x.IntervalPublicKeyID) > 0 {
			for _, e := range x.IntervalPublicKeyID {
				l = options.Size(e)
				n += 1 + l + runtime.Sov(uint64(l))
			}
		}
		if x.Pagination != nil {
			l = options.Size(x.Pagination)
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*QueryAllIntervalPublicKeyIDResponse)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if x.Pagination != nil {
			encoded, err := options.Marshal(x.Pagination)
			if err != nil {
				return protoiface.MarshalOutput{
					NoUnkeyedLiterals: input.NoUnkeyedLiterals,
					Buf:               input.Buf,
				}, err
			}
			i -= len(encoded)
			copy(dAtA[i:], encoded)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(encoded)))
			i--
			dAtA[i] = 0x12
		}
		if len(x.IntervalPublicKeyID) > 0 {
			for iNdEx := len(x.IntervalPublicKeyID) - 1; iNdEx >= 0; iNdEx-- {
				encoded, err := options.Marshal(x.IntervalPublicKeyID[iNdEx])
				if err != nil {
					return protoiface.MarshalOutput{
						NoUnkeyedLiterals: input.NoUnkeyedLiterals,
						Buf:               input.Buf,
					}, err
				}
				i -= len(encoded)
				copy(dAtA[i:], encoded)
				i = runtime.EncodeVarint(dAtA, i, uint64(len(encoded)))
				i--
				dAtA[i] = 0xa
			}
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*QueryAllIntervalPublicKeyIDResponse)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: QueryAllIntervalPublicKeyIDResponse: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: QueryAllIntervalPublicKeyIDResponse: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field IntervalPublicKeyID", wireType)
				}
				var msglen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					msglen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if msglen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + msglen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.IntervalPublicKeyID = append(x.IntervalPublicKeyID, &IntervalPublicKeyID{})
				if err := options.Unmarshal(dAtA[iNdEx:postIndex], x.IntervalPublicKeyID[len(x.IntervalPublicKeyID)-1]); err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				iNdEx = postIndex
			case 2:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Pagination", wireType)
				}
				var msglen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					msglen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if msglen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + msglen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if x.Pagination == nil {
					x.Pagination = &v1beta1.PageResponse{}
				}
				if err := options.Unmarshal(dAtA[iNdEx:postIndex], x.Pagination); err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				iNdEx = postIndex
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var (
	md_QueryGetPioneerJarRequest           protoreflect.MessageDescriptor
	fd_QueryGetPioneerJarRequest_pioneerID protoreflect.FieldDescriptor
)

func init() {
	file_qadena_qadena_query_proto_init()
	md_QueryGetPioneerJarRequest = File_qadena_qadena_query_proto.Messages().ByName("QueryGetPioneerJarRequest")
	fd_QueryGetPioneerJarRequest_pioneerID = md_QueryGetPioneerJarRequest.Fields().ByName("pioneerID")
}

var _ protoreflect.Message = (*fastReflection_QueryGetPioneerJarRequest)(nil)

type fastReflection_QueryGetPioneerJarRequest QueryGetPioneerJarRequest

func (x *QueryGetPioneerJarRequest) ProtoReflect() protoreflect.Message {
	return (*fastReflection_QueryGetPioneerJarRequest)(x)
}

func (x *QueryGetPioneerJarRequest) slowProtoReflect() protoreflect.Message {
	mi := &file_qadena_qadena_query_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_QueryGetPioneerJarRequest_messageType fastReflection_QueryGetPioneerJarRequest_messageType
var _ protoreflect.MessageType = fastReflection_QueryGetPioneerJarRequest_messageType{}

type fastReflection_QueryGetPioneerJarRequest_messageType struct{}

func (x fastReflection_QueryGetPioneerJarRequest_messageType) Zero() protoreflect.Message {
	return (*fastReflection_QueryGetPioneerJarRequest)(nil)
}
func (x fastReflection_QueryGetPioneerJarRequest_messageType) New() protoreflect.Message {
	return new(fastReflection_QueryGetPioneerJarRequest)
}
func (x fastReflection_QueryGetPioneerJarRequest_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_QueryGetPioneerJarRequest
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_QueryGetPioneerJarRequest) Descriptor() protoreflect.MessageDescriptor {
	return md_QueryGetPioneerJarRequest
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_QueryGetPioneerJarRequest) Type() protoreflect.MessageType {
	return _fastReflection_QueryGetPioneerJarRequest_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_QueryGetPioneerJarRequest) New() protoreflect.Message {
	return new(fastReflection_QueryGetPioneerJarRequest)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_QueryGetPioneerJarRequest) Interface() protoreflect.ProtoMessage {
	return (*QueryGetPioneerJarRequest)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_QueryGetPioneerJarRequest) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.PioneerID != "" {
		value := protoreflect.ValueOfString(x.PioneerID)
		if !f(fd_QueryGetPioneerJarRequest_pioneerID, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_QueryGetPioneerJarRequest) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "qadena.qadena.QueryGetPioneerJarRequest.pioneerID":
		return x.PioneerID != ""
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: qadena.qadena.QueryGetPioneerJarRequest"))
		}
		panic(fmt.Errorf("message qadena.qadena.QueryGetPioneerJarRequest does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_QueryGetPioneerJarRequest) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "qadena.qadena.QueryGetPioneerJarRequest.pioneerID":
		x.PioneerID = ""
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: qadena.qadena.QueryGetPioneerJarRequest"))
		}
		panic(fmt.Errorf("message qadena.qadena.QueryGetPioneerJarRequest does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_QueryGetPioneerJarRequest) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "qadena.qadena.QueryGetPioneerJarRequest.pioneerID":
		value := x.PioneerID
		return protoreflect.ValueOfString(value)
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: qadena.qadena.QueryGetPioneerJarRequest"))
		}
		panic(fmt.Errorf("message qadena.qadena.QueryGetPioneerJarRequest does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_QueryGetPioneerJarRequest) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "qadena.qadena.QueryGetPioneerJarRequest.pioneerID":
		x.PioneerID = value.Interface().(string)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: qadena.qadena.QueryGetPioneerJarRequest"))
		}
		panic(fmt.Errorf("message qadena.qadena.QueryGetPioneerJarRequest does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_QueryGetPioneerJarRequest) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "qadena.qadena.QueryGetPioneerJarRequest.pioneerID":
		panic(fmt.Errorf("field pioneerID of message qadena.qadena.QueryGetPioneerJarRequest is not mutable"))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: qadena.qadena.QueryGetPioneerJarRequest"))
		}
		panic(fmt.Errorf("message qadena.qadena.QueryGetPioneerJarRequest does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_QueryGetPioneerJarRequest) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "qadena.qadena.QueryGetPioneerJarRequest.pioneerID":
		return protoreflect.ValueOfString("")
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: qadena.qadena.QueryGetPioneerJarRequest"))
		}
		panic(fmt.Errorf("message qadena.qadena.QueryGetPioneerJarRequest does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_QueryGetPioneerJarRequest) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in qadena.qadena.QueryGetPioneerJarRequest", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_QueryGetPioneerJarRequest) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_QueryGetPioneerJarRequest) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_QueryGetPioneerJarRequest) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_QueryGetPioneerJarRequest) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*QueryGetPioneerJarRequest)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		l = len(x.PioneerID)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*QueryGetPioneerJarRequest)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if len(x.PioneerID) > 0 {
			i -= len(x.PioneerID)
			copy(dAtA[i:], x.PioneerID)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.PioneerID)))
			i--
			dAtA[i] = 0xa
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*QueryGetPioneerJarRequest)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: QueryGetPioneerJarRequest: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: QueryGetPioneerJarRequest: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field PioneerID", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.PioneerID = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var (
	md_QueryGetPioneerJarResponse            protoreflect.MessageDescriptor
	fd_QueryGetPioneerJarResponse_pioneerJar protoreflect.FieldDescriptor
)

func init() {
	file_qadena_qadena_query_proto_init()
	md_QueryGetPioneerJarResponse = File_qadena_qadena_query_proto.Messages().ByName("QueryGetPioneerJarResponse")
	fd_QueryGetPioneerJarResponse_pioneerJar = md_QueryGetPioneerJarResponse.Fields().ByName("pioneerJar")
}

var _ protoreflect.Message = (*fastReflection_QueryGetPioneerJarResponse)(nil)

type fastReflection_QueryGetPioneerJarResponse QueryGetPioneerJarResponse

func (x *QueryGetPioneerJarResponse) ProtoReflect() protoreflect.Message {
	return (*fastReflection_QueryGetPioneerJarResponse)(x)
}

func (x *QueryGetPioneerJarResponse) slowProtoReflect() protoreflect.Message {
	mi := &file_qadena_qadena_query_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_QueryGetPioneerJarResponse_messageType fastReflection_QueryGetPioneerJarResponse_messageType
var _ protoreflect.MessageType = fastReflection_QueryGetPioneerJarResponse_messageType{}

type fastReflection_QueryGetPioneerJarResponse_messageType struct{}

func (x fastReflection_QueryGetPioneerJarResponse_messageType) Zero() protoreflect.Message {
	return (*fastReflection_QueryGetPioneerJarResponse)(nil)
}
func (x fastReflection_QueryGetPioneerJarResponse_messageType) New() protoreflect.Message {
	return new(fastReflection_QueryGetPioneerJarResponse)
}
func (x fastReflection_QueryGetPioneerJarResponse_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_QueryGetPioneerJarResponse
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_QueryGetPioneerJarResponse) Descriptor() protoreflect.MessageDescriptor {
	return md_QueryGetPioneerJarResponse
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_QueryGetPioneerJarResponse) Type() protoreflect.MessageType {
	return _fastReflection_QueryGetPioneerJarResponse_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_QueryGetPioneerJarResponse) New() protoreflect.Message {
	return new(fastReflection_QueryGetPioneerJarResponse)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_QueryGetPioneerJarResponse) Interface() protoreflect.ProtoMessage {
	return (*QueryGetPioneerJarResponse)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_QueryGetPioneerJarResponse) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.PioneerJar != nil {
		value := protoreflect.ValueOfMessage(x.PioneerJar.ProtoReflect())
		if !f(fd_QueryGetPioneerJarResponse_pioneerJar, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_QueryGetPioneerJarResponse) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "qadena.qadena.QueryGetPioneerJarResponse.pioneerJar":
		return x.PioneerJar != nil
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: qadena.qadena.QueryGetPioneerJarResponse"))
		}
		panic(fmt.Errorf("message qadena.qadena.QueryGetPioneerJarResponse does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_QueryGetPioneerJarResponse) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "qadena.qadena.QueryGetPioneerJarResponse.pioneerJar":
		x.PioneerJar = nil
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: qadena.qadena.QueryGetPioneerJarResponse"))
		}
		panic(fmt.Errorf("message qadena.qadena.QueryGetPioneerJarResponse does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_QueryGetPioneerJarResponse) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "qadena.qadena.QueryGetPioneerJarResponse.pioneerJar":
		value := x.PioneerJar
		return protoreflect.ValueOfMessage(value.ProtoReflect())
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: qadena.qadena.QueryGetPioneerJarResponse"))
		}
		panic(fmt.Errorf("message qadena.qadena.QueryGetPioneerJarResponse does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_QueryGetPioneerJarResponse) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "qadena.qadena.QueryGetPioneerJarResponse.pioneerJar":
		x.PioneerJar = value.Message().Interface().(*PioneerJar)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: qadena.qadena.QueryGetPioneerJarResponse"))
		}
		panic(fmt.Errorf("message qadena.qadena.QueryGetPioneerJarResponse does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_QueryGetPioneerJarResponse) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "qadena.qadena.QueryGetPioneerJarResponse.pioneerJar":
		if x.PioneerJar == nil {
			x.PioneerJar = new(PioneerJar)
		}
		return protoreflect.ValueOfMessage(x.PioneerJar.ProtoReflect())
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: qadena.qadena.QueryGetPioneerJarResponse"))
		}
		panic(fmt.Errorf("message qadena.qadena.QueryGetPioneerJarResponse does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_QueryGetPioneerJarResponse) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "qadena.qadena.QueryGetPioneerJarResponse.pioneerJar":
		m := new(PioneerJar)
		return protoreflect.ValueOfMessage(m.ProtoReflect())
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: qadena.qadena.QueryGetPioneerJarResponse"))
		}
		panic(fmt.Errorf("message qadena.qadena.QueryGetPioneerJarResponse does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_QueryGetPioneerJarResponse) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in qadena.qadena.QueryGetPioneerJarResponse", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_QueryGetPioneerJarResponse) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_QueryGetPioneerJarResponse) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_QueryGetPioneerJarResponse) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_QueryGetPioneerJarResponse) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*QueryGetPioneerJarResponse)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		if x.PioneerJar != nil {
			l = options.Size(x.PioneerJar)
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*QueryGetPioneerJarResponse)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if x.PioneerJar != nil {
			encoded, err := options.Marshal(x.PioneerJar)
			if err != nil {
				return protoiface.MarshalOutput{
					NoUnkeyedLiterals: input.NoUnkeyedLiterals,
					Buf:               input.Buf,
				}, err
			}
			i -= len(encoded)
			copy(dAtA[i:], encoded)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(encoded)))
			i--
			dAtA[i] = 0xa
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*QueryGetPioneerJarResponse)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: QueryGetPioneerJarResponse: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: QueryGetPioneerJarResponse: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field PioneerJar", wireType)
				}
				var msglen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					msglen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if msglen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + msglen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if x.PioneerJar == nil {
					x.PioneerJar = &PioneerJar{}
				}
				if err := options.Unmarshal(dAtA[iNdEx:postIndex], x.PioneerJar); err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				iNdEx = postIndex
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var (
	md_QueryAllPioneerJarRequest            protoreflect.MessageDescriptor
	fd_QueryAllPioneerJarRequest_pagination protoreflect.FieldDescriptor
)

func init() {
	file_qadena_qadena_query_proto_init()
	md_QueryAllPioneerJarRequest = File_qadena_qadena_query_proto.Messages().ByName("QueryAllPioneerJarRequest")
	fd_QueryAllPioneerJarRequest_pagination = md_QueryAllPioneerJarRequest.Fields().ByName("pagination")
}

var _ protoreflect.Message = (*fastReflection_QueryAllPioneerJarRequest)(nil)

type fastReflection_QueryAllPioneerJarRequest QueryAllPioneerJarRequest

func (x *QueryAllPioneerJarRequest) ProtoReflect() protoreflect.Message {
	return (*fastReflection_QueryAllPioneerJarRequest)(x)
}

func (x *QueryAllPioneerJarRequest) slowProtoReflect() protoreflect.Message {
	mi := &file_qadena_qadena_query_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_QueryAllPioneerJarRequest_messageType fastReflection_QueryAllPioneerJarRequest_messageType
var _ protoreflect.MessageType = fastReflection_QueryAllPioneerJarRequest_messageType{}

type fastReflection_QueryAllPioneerJarRequest_messageType struct{}

func (x fastReflection_QueryAllPioneerJarRequest_messageType) Zero() protoreflect.Message {
	return (*fastReflection_QueryAllPioneerJarRequest)(nil)
}
func (x fastReflection_QueryAllPioneerJarRequest_messageType) New() protoreflect.Message {
	return new(fastReflection_QueryAllPioneerJarRequest)
}
func (x fastReflection_QueryAllPioneerJarRequest_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_QueryAllPioneerJarRequest
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_QueryAllPioneerJarRequest) Descriptor() protoreflect.MessageDescriptor {
	return md_QueryAllPioneerJarRequest
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_QueryAllPioneerJarRequest) Type() protoreflect.MessageType {
	return _fastReflection_QueryAllPioneerJarRequest_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_QueryAllPioneerJarRequest) New() protoreflect.Message {
	return new(fastReflection_QueryAllPioneerJarRequest)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_QueryAllPioneerJarRequest) Interface() protoreflect.ProtoMessage {
	return (*QueryAllPioneerJarRequest)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_QueryAllPioneerJarRequest) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.Pagination != nil {
		value := protoreflect.ValueOfMessage(x.Pagination.ProtoReflect())
		if !f(fd_QueryAllPioneerJarRequest_pagination, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_QueryAllPioneerJarRequest) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "qadena.qadena.QueryAllPioneerJarRequest.pagination":
		return x.Pagination != nil
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: qadena.qadena.QueryAllPioneerJarRequest"))
		}
		panic(fmt.Errorf("message qadena.qadena.QueryAllPioneerJarRequest does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_QueryAllPioneerJarRequest) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "qadena.qadena.QueryAllPioneerJarRequest.pagination":
		x.Pagination = nil
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: qadena.qadena.QueryAllPioneerJarRequest"))
		}
		panic(fmt.Errorf("message qadena.qadena.QueryAllPioneerJarRequest does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_QueryAllPioneerJarRequest) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "qadena.qadena.QueryAllPioneerJarRequest.pagination":
		value := x.Pagination
		return protoreflect.ValueOfMessage(value.ProtoReflect())
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: qadena.qadena.QueryAllPioneerJarRequest"))
		}
		panic(fmt.Errorf("message qadena.qadena.QueryAllPioneerJarRequest does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_QueryAllPioneerJarRequest) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "qadena.qadena.QueryAllPioneerJarRequest.pagination":
		x.Pagination = value.Message().Interface().(*v1beta1.PageRequest)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: qadena.qadena.QueryAllPioneerJarRequest"))
		}
		panic(fmt.Errorf("message qadena.qadena.QueryAllPioneerJarRequest does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_QueryAllPioneerJarRequest) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "qadena.qadena.QueryAllPioneerJarRequest.pagination":
		if x.Pagination == nil {
			x.Pagination = new(v1beta1.PageRequest)
		}
		return protoreflect.ValueOfMessage(x.Pagination.ProtoReflect())
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: qadena.qadena.QueryAllPioneerJarRequest"))
		}
		panic(fmt.Errorf("message qadena.qadena.QueryAllPioneerJarRequest does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_QueryAllPioneerJarRequest) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "qadena.qadena.QueryAllPioneerJarRequest.pagination":
		m := new(v1beta1.PageRequest)
		return protoreflect.ValueOfMessage(m.ProtoReflect())
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: qadena.qadena.QueryAllPioneerJarRequest"))
		}
		panic(fmt.Errorf("message qadena.qadena.QueryAllPioneerJarRequest does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_QueryAllPioneerJarRequest) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in qadena.qadena.QueryAllPioneerJarRequest", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_QueryAllPioneerJarRequest) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_QueryAllPioneerJarRequest) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_QueryAllPioneerJarRequest) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_QueryAllPioneerJarRequest) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*QueryAllPioneerJarRequest)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		if x.Pagination != nil {
			l = options.Size(x.Pagination)
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*QueryAllPioneerJarRequest)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if x.Pagination != nil {
			encoded, err := options.Marshal(x.Pagination)
			if err != nil {
				return protoiface.MarshalOutput{
					NoUnkeyedLiterals: input.NoUnkeyedLiterals,
					Buf:               input.Buf,
				}, err
			}
			i -= len(encoded)
			copy(dAtA[i:], encoded)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(encoded)))
			i--
			dAtA[i] = 0xa
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*QueryAllPioneerJarRequest)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: QueryAllPioneerJarRequest: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: QueryAllPioneerJarRequest: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Pagination", wireType)
				}
				var msglen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					msglen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if msglen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + msglen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if x.Pagination == nil {
					x.Pagination = &v1beta1.PageRequest{}
				}
				if err := options.Unmarshal(dAtA[iNdEx:postIndex], x.Pagination); err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				iNdEx = postIndex
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var _ protoreflect.List = (*_QueryAllPioneerJarResponse_1_list)(nil)

type _QueryAllPioneerJarResponse_1_list struct {
	list *[]*PioneerJar
}

func (x *_QueryAllPioneerJarResponse_1_list) Len() int {
	if x.list == nil {
		return 0
	}
	return len(*x.list)
}

func (x *_QueryAllPioneerJarResponse_1_list) Get(i int) protoreflect.Value {
	return protoreflect.ValueOfMessage((*x.list)[i].ProtoReflect())
}

func (x *_QueryAllPioneerJarResponse_1_list) Set(i int, value protoreflect.Value) {
	valueUnwrapped := value.Message()
	concreteValue := valueUnwrapped.Interface().(*PioneerJar)
	(*x.list)[i] = concreteValue
}

func (x *_QueryAllPioneerJarResponse_1_list) Append(value protoreflect.Value) {
	valueUnwrapped := value.Message()
	concreteValue := valueUnwrapped.Interface().(*PioneerJar)
	*x.list = append(*x.list, concreteValue)
}

func (x *_QueryAllPioneerJarResponse_1_list) AppendMutable() protoreflect.Value {
	v := new(PioneerJar)
	*x.list = append(*x.list, v)
	return protoreflect.ValueOfMessage(v.ProtoReflect())
}

func (x *_QueryAllPioneerJarResponse_1_list) Truncate(n int) {
	for i := n; i < len(*x.list); i++ {
		(*x.list)[i] = nil
	}
	*x.list = (*x.list)[:n]
}

func (x *_QueryAllPioneerJarResponse_1_list) NewElement() protoreflect.Value {
	v := new(PioneerJar)
	return protoreflect.ValueOfMessage(v.ProtoReflect())
}

func (x *_QueryAllPioneerJarResponse_1_list) IsValid() bool {
	return x.list != nil
}

var (
	md_QueryAllPioneerJarResponse            protoreflect.MessageDescriptor
	fd_QueryAllPioneerJarResponse_pioneerJar protoreflect.FieldDescriptor
	fd_QueryAllPioneerJarResponse_pagination protoreflect.FieldDescriptor
)

func init() {
	file_qadena_qadena_query_proto_init()
	md_QueryAllPioneerJarResponse = File_qadena_qadena_query_proto.Messages().ByName("QueryAllPioneerJarResponse")
	fd_QueryAllPioneerJarResponse_pioneerJar = md_QueryAllPioneerJarResponse.Fields().ByName("pioneerJar")
	fd_QueryAllPioneerJarResponse_pagination = md_QueryAllPioneerJarResponse.Fields().ByName("pagination")
}

var _ protoreflect.Message = (*fastReflection_QueryAllPioneerJarResponse)(nil)

type fastReflection_QueryAllPioneerJarResponse QueryAllPioneerJarResponse

func (x *QueryAllPioneerJarResponse) ProtoReflect() protoreflect.Message {
	return (*fastReflection_QueryAllPioneerJarResponse)(x)
}

func (x *QueryAllPioneerJarResponse) slowProtoReflect() protoreflect.Message {
	mi := &file_qadena_qadena_query_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_QueryAllPioneerJarResponse_messageType fastReflection_QueryAllPioneerJarResponse_messageType
var _ protoreflect.MessageType = fastReflection_QueryAllPioneerJarResponse_messageType{}

type fastReflection_QueryAllPioneerJarResponse_messageType struct{}

func (x fastReflection_QueryAllPioneerJarResponse_messageType) Zero() protoreflect.Message {
	return (*fastReflection_QueryAllPioneerJarResponse)(nil)
}
func (x fastReflection_QueryAllPioneerJarResponse_messageType) New() protoreflect.Message {
	return new(fastReflection_QueryAllPioneerJarResponse)
}
func (x fastReflection_QueryAllPioneerJarResponse_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_QueryAllPioneerJarResponse
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_QueryAllPioneerJarResponse) Descriptor() protoreflect.MessageDescriptor {
	return md_QueryAllPioneerJarResponse
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_QueryAllPioneerJarResponse) Type() protoreflect.MessageType {
	return _fastReflection_QueryAllPioneerJarResponse_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_QueryAllPioneerJarResponse) New() protoreflect.Message {
	return new(fastReflection_QueryAllPioneerJarResponse)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_QueryAllPioneerJarResponse) Interface() protoreflect.ProtoMessage {
	return (*QueryAllPioneerJarResponse)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_QueryAllPioneerJarResponse) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if len(x.PioneerJar) != 0 {
		value := protoreflect.ValueOfList(&_QueryAllPioneerJarResponse_1_list{list: &x.PioneerJar})
		if !f(fd_QueryAllPioneerJarResponse_pioneerJar, value) {
			return
		}
	}
	if x.Pagination != nil {
		value := protoreflect.ValueOfMessage(x.Pagination.ProtoReflect())
		if !f(fd_QueryAllPioneerJarResponse_pagination, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_QueryAllPioneerJarResponse) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "qadena.qadena.QueryAllPioneerJarResponse.pioneerJar":
		return len(x.PioneerJar) != 0
	case "qadena.qadena.QueryAllPioneerJarResponse.pagination":
		return x.Pagination != nil
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: qadena.qadena.QueryAllPioneerJarResponse"))
		}
		panic(fmt.Errorf("message qadena.qadena.QueryAllPioneerJarResponse does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_QueryAllPioneerJarResponse) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "qadena.qadena.QueryAllPioneerJarResponse.pioneerJar":
		x.PioneerJar = nil
	case "qadena.qadena.QueryAllPioneerJarResponse.pagination":
		x.Pagination = nil
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: qadena.qadena.QueryAllPioneerJarResponse"))
		}
		panic(fmt.Errorf("message qadena.qadena.QueryAllPioneerJarResponse does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_QueryAllPioneerJarResponse) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "qadena.qadena.QueryAllPioneerJarResponse.pioneerJar":
		if len(x.PioneerJar) == 0 {
			return protoreflect.ValueOfList(&_QueryAllPioneerJarResponse_1_list{})
		}
		listValue := &_QueryAllPioneerJarResponse_1_list{list: &x.PioneerJar}
		return protoreflect.ValueOfList(listValue)
	case "qadena.qadena.QueryAllPioneerJarResponse.pagination":
		value := x.Pagination
		return protoreflect.ValueOfMessage(value.ProtoReflect())
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: qadena.qadena.QueryAllPioneerJarResponse"))
		}
		panic(fmt.Errorf("message qadena.qadena.QueryAllPioneerJarResponse does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_QueryAllPioneerJarResponse) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "qadena.qadena.QueryAllPioneerJarResponse.pioneerJar":
		lv := value.List()
		clv := lv.(*_QueryAllPioneerJarResponse_1_list)
		x.PioneerJar = *clv.list
	case "qadena.qadena.QueryAllPioneerJarResponse.pagination":
		x.Pagination = value.Message().Interface().(*v1beta1.PageResponse)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: qadena.qadena.QueryAllPioneerJarResponse"))
		}
		panic(fmt.Errorf("message qadena.qadena.QueryAllPioneerJarResponse does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_QueryAllPioneerJarResponse) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "qadena.qadena.QueryAllPioneerJarResponse.pioneerJar":
		if x.PioneerJar == nil {
			x.PioneerJar = []*PioneerJar{}
		}
		value := &_QueryAllPioneerJarResponse_1_list{list: &x.PioneerJar}
		return protoreflect.ValueOfList(value)
	case "qadena.qadena.QueryAllPioneerJarResponse.pagination":
		if x.Pagination == nil {
			x.Pagination = new(v1beta1.PageResponse)
		}
		return protoreflect.ValueOfMessage(x.Pagination.ProtoReflect())
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: qadena.qadena.QueryAllPioneerJarResponse"))
		}
		panic(fmt.Errorf("message qadena.qadena.QueryAllPioneerJarResponse does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_QueryAllPioneerJarResponse) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "qadena.qadena.QueryAllPioneerJarResponse.pioneerJar":
		list := []*PioneerJar{}
		return protoreflect.ValueOfList(&_QueryAllPioneerJarResponse_1_list{list: &list})
	case "qadena.qadena.QueryAllPioneerJarResponse.pagination":
		m := new(v1beta1.PageResponse)
		return protoreflect.ValueOfMessage(m.ProtoReflect())
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: qadena.qadena.QueryAllPioneerJarResponse"))
		}
		panic(fmt.Errorf("message qadena.qadena.QueryAllPioneerJarResponse does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_QueryAllPioneerJarResponse) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in qadena.qadena.QueryAllPioneerJarResponse", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_QueryAllPioneerJarResponse) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_QueryAllPioneerJarResponse) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_QueryAllPioneerJarResponse) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_QueryAllPioneerJarResponse) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*QueryAllPioneerJarResponse)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		if len(x.PioneerJar) > 0 {
			for _, e := range x.PioneerJar {
				l = options.Size(e)
				n += 1 + l + runtime.Sov(uint64(l))
			}
		}
		if x.Pagination != nil {
			l = options.Size(x.Pagination)
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*QueryAllPioneerJarResponse)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if x.Pagination != nil {
			encoded, err := options.Marshal(x.Pagination)
			if err != nil {
				return protoiface.MarshalOutput{
					NoUnkeyedLiterals: input.NoUnkeyedLiterals,
					Buf:               input.Buf,
				}, err
			}
			i -= len(encoded)
			copy(dAtA[i:], encoded)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(encoded)))
			i--
			dAtA[i] = 0x12
		}
		if len(x.PioneerJar) > 0 {
			for iNdEx := len(x.PioneerJar) - 1; iNdEx >= 0; iNdEx-- {
				encoded, err := options.Marshal(x.PioneerJar[iNdEx])
				if err != nil {
					return protoiface.MarshalOutput{
						NoUnkeyedLiterals: input.NoUnkeyedLiterals,
						Buf:               input.Buf,
					}, err
				}
				i -= len(encoded)
				copy(dAtA[i:], encoded)
				i = runtime.EncodeVarint(dAtA, i, uint64(len(encoded)))
				i--
				dAtA[i] = 0xa
			}
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*QueryAllPioneerJarResponse)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: QueryAllPioneerJarResponse: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: QueryAllPioneerJarResponse: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field PioneerJar", wireType)
				}
				var msglen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					msglen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if msglen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + msglen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.PioneerJar = append(x.PioneerJar, &PioneerJar{})
				if err := options.Unmarshal(dAtA[iNdEx:postIndex], x.PioneerJar[len(x.PioneerJar)-1]); err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				iNdEx = postIndex
			case 2:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Pagination", wireType)
				}
				var msglen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					msglen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if msglen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + msglen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if x.Pagination == nil {
					x.Pagination = &v1beta1.PageResponse{}
				}
				if err := options.Unmarshal(dAtA[iNdEx:postIndex], x.Pagination); err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				iNdEx = postIndex
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var (
	md_QueryGetJarRegulatorRequest       protoreflect.MessageDescriptor
	fd_QueryGetJarRegulatorRequest_jarID protoreflect.FieldDescriptor
)

func init() {
	file_qadena_qadena_query_proto_init()
	md_QueryGetJarRegulatorRequest = File_qadena_qadena_query_proto.Messages().ByName("QueryGetJarRegulatorRequest")
	fd_QueryGetJarRegulatorRequest_jarID = md_QueryGetJarRegulatorRequest.Fields().ByName("jarID")
}

var _ protoreflect.Message = (*fastReflection_QueryGetJarRegulatorRequest)(nil)

type fastReflection_QueryGetJarRegulatorRequest QueryGetJarRegulatorRequest

func (x *QueryGetJarRegulatorRequest) ProtoReflect() protoreflect.Message {
	return (*fastReflection_QueryGetJarRegulatorRequest)(x)
}

func (x *QueryGetJarRegulatorRequest) slowProtoReflect() protoreflect.Message {
	mi := &file_qadena_qadena_query_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_QueryGetJarRegulatorRequest_messageType fastReflection_QueryGetJarRegulatorRequest_messageType
var _ protoreflect.MessageType = fastReflection_QueryGetJarRegulatorRequest_messageType{}

type fastReflection_QueryGetJarRegulatorRequest_messageType struct{}

func (x fastReflection_QueryGetJarRegulatorRequest_messageType) Zero() protoreflect.Message {
	return (*fastReflection_QueryGetJarRegulatorRequest)(nil)
}
func (x fastReflection_QueryGetJarRegulatorRequest_messageType) New() protoreflect.Message {
	return new(fastReflection_QueryGetJarRegulatorRequest)
}
func (x fastReflection_QueryGetJarRegulatorRequest_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_QueryGetJarRegulatorRequest
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_QueryGetJarRegulatorRequest) Descriptor() protoreflect.MessageDescriptor {
	return md_QueryGetJarRegulatorRequest
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_QueryGetJarRegulatorRequest) Type() protoreflect.MessageType {
	return _fastReflection_QueryGetJarRegulatorRequest_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_QueryGetJarRegulatorRequest) New() protoreflect.Message {
	return new(fastReflection_QueryGetJarRegulatorRequest)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_QueryGetJarRegulatorRequest) Interface() protoreflect.ProtoMessage {
	return (*QueryGetJarRegulatorRequest)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_QueryGetJarRegulatorRequest) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.JarID != "" {
		value := protoreflect.ValueOfString(x.JarID)
		if !f(fd_QueryGetJarRegulatorRequest_jarID, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_QueryGetJarRegulatorRequest) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "qadena.qadena.QueryGetJarRegulatorRequest.jarID":
		return x.JarID != ""
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: qadena.qadena.QueryGetJarRegulatorRequest"))
		}
		panic(fmt.Errorf("message qadena.qadena.QueryGetJarRegulatorRequest does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_QueryGetJarRegulatorRequest) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "qadena.qadena.QueryGetJarRegulatorRequest.jarID":
		x.JarID = ""
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: qadena.qadena.QueryGetJarRegulatorRequest"))
		}
		panic(fmt.Errorf("message qadena.qadena.QueryGetJarRegulatorRequest does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_QueryGetJarRegulatorRequest) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "qadena.qadena.QueryGetJarRegulatorRequest.jarID":
		value := x.JarID
		return protoreflect.ValueOfString(value)
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: qadena.qadena.QueryGetJarRegulatorRequest"))
		}
		panic(fmt.Errorf("message qadena.qadena.QueryGetJarRegulatorRequest does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_QueryGetJarRegulatorRequest) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "qadena.qadena.QueryGetJarRegulatorRequest.jarID":
		x.JarID = value.Interface().(string)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: qadena.qadena.QueryGetJarRegulatorRequest"))
		}
		panic(fmt.Errorf("message qadena.qadena.QueryGetJarRegulatorRequest does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_QueryGetJarRegulatorRequest) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "qadena.qadena.QueryGetJarRegulatorRequest.jarID":
		panic(fmt.Errorf("field jarID of message qadena.qadena.QueryGetJarRegulatorRequest is not mutable"))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: qadena.qadena.QueryGetJarRegulatorRequest"))
		}
		panic(fmt.Errorf("message qadena.qadena.QueryGetJarRegulatorRequest does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_QueryGetJarRegulatorRequest) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "qadena.qadena.QueryGetJarRegulatorRequest.jarID":
		return protoreflect.ValueOfString("")
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: qadena.qadena.QueryGetJarRegulatorRequest"))
		}
		panic(fmt.Errorf("message qadena.qadena.QueryGetJarRegulatorRequest does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_QueryGetJarRegulatorRequest) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in qadena.qadena.QueryGetJarRegulatorRequest", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_QueryGetJarRegulatorRequest) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_QueryGetJarRegulatorRequest) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_QueryGetJarRegulatorRequest) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_QueryGetJarRegulatorRequest) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*QueryGetJarRegulatorRequest)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		l = len(x.JarID)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*QueryGetJarRegulatorRequest)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if len(x.JarID) > 0 {
			i -= len(x.JarID)
			copy(dAtA[i:], x.JarID)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.JarID)))
			i--
			dAtA[i] = 0xa
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*QueryGetJarRegulatorRequest)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: QueryGetJarRegulatorRequest: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: QueryGetJarRegulatorRequest: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field JarID", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.JarID = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var (
	md_QueryGetJarRegulatorResponse              protoreflect.MessageDescriptor
	fd_QueryGetJarRegulatorResponse_jarRegulator protoreflect.FieldDescriptor
)

func init() {
	file_qadena_qadena_query_proto_init()
	md_QueryGetJarRegulatorResponse = File_qadena_qadena_query_proto.Messages().ByName("QueryGetJarRegulatorResponse")
	fd_QueryGetJarRegulatorResponse_jarRegulator = md_QueryGetJarRegulatorResponse.Fields().ByName("jarRegulator")
}

var _ protoreflect.Message = (*fastReflection_QueryGetJarRegulatorResponse)(nil)

type fastReflection_QueryGetJarRegulatorResponse QueryGetJarRegulatorResponse

func (x *QueryGetJarRegulatorResponse) ProtoReflect() protoreflect.Message {
	return (*fastReflection_QueryGetJarRegulatorResponse)(x)
}

func (x *QueryGetJarRegulatorResponse) slowProtoReflect() protoreflect.Message {
	mi := &file_qadena_qadena_query_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_QueryGetJarRegulatorResponse_messageType fastReflection_QueryGetJarRegulatorResponse_messageType
var _ protoreflect.MessageType = fastReflection_QueryGetJarRegulatorResponse_messageType{}

type fastReflection_QueryGetJarRegulatorResponse_messageType struct{}

func (x fastReflection_QueryGetJarRegulatorResponse_messageType) Zero() protoreflect.Message {
	return (*fastReflection_QueryGetJarRegulatorResponse)(nil)
}
func (x fastReflection_QueryGetJarRegulatorResponse_messageType) New() protoreflect.Message {
	return new(fastReflection_QueryGetJarRegulatorResponse)
}
func (x fastReflection_QueryGetJarRegulatorResponse_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_QueryGetJarRegulatorResponse
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_QueryGetJarRegulatorResponse) Descriptor() protoreflect.MessageDescriptor {
	return md_QueryGetJarRegulatorResponse
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_QueryGetJarRegulatorResponse) Type() protoreflect.MessageType {
	return _fastReflection_QueryGetJarRegulatorResponse_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_QueryGetJarRegulatorResponse) New() protoreflect.Message {
	return new(fastReflection_QueryGetJarRegulatorResponse)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_QueryGetJarRegulatorResponse) Interface() protoreflect.ProtoMessage {
	return (*QueryGetJarRegulatorResponse)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_QueryGetJarRegulatorResponse) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.JarRegulator != nil {
		value := protoreflect.ValueOfMessage(x.JarRegulator.ProtoReflect())
		if !f(fd_QueryGetJarRegulatorResponse_jarRegulator, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_QueryGetJarRegulatorResponse) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "qadena.qadena.QueryGetJarRegulatorResponse.jarRegulator":
		return x.JarRegulator != nil
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: qadena.qadena.QueryGetJarRegulatorResponse"))
		}
		panic(fmt.Errorf("message qadena.qadena.QueryGetJarRegulatorResponse does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_QueryGetJarRegulatorResponse) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "qadena.qadena.QueryGetJarRegulatorResponse.jarRegulator":
		x.JarRegulator = nil
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: qadena.qadena.QueryGetJarRegulatorResponse"))
		}
		panic(fmt.Errorf("message qadena.qadena.QueryGetJarRegulatorResponse does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_QueryGetJarRegulatorResponse) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "qadena.qadena.QueryGetJarRegulatorResponse.jarRegulator":
		value := x.JarRegulator
		return protoreflect.ValueOfMessage(value.ProtoReflect())
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: qadena.qadena.QueryGetJarRegulatorResponse"))
		}
		panic(fmt.Errorf("message qadena.qadena.QueryGetJarRegulatorResponse does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_QueryGetJarRegulatorResponse) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "qadena.qadena.QueryGetJarRegulatorResponse.jarRegulator":
		x.JarRegulator = value.Message().Interface().(*JarRegulator)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: qadena.qadena.QueryGetJarRegulatorResponse"))
		}
		panic(fmt.Errorf("message qadena.qadena.QueryGetJarRegulatorResponse does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_QueryGetJarRegulatorResponse) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "qadena.qadena.QueryGetJarRegulatorResponse.jarRegulator":
		if x.JarRegulator == nil {
			x.JarRegulator = new(JarRegulator)
		}
		return protoreflect.ValueOfMessage(x.JarRegulator.ProtoReflect())
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: qadena.qadena.QueryGetJarRegulatorResponse"))
		}
		panic(fmt.Errorf("message qadena.qadena.QueryGetJarRegulatorResponse does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_QueryGetJarRegulatorResponse) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "qadena.qadena.QueryGetJarRegulatorResponse.jarRegulator":
		m := new(JarRegulator)
		return protoreflect.ValueOfMessage(m.ProtoReflect())
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: qadena.qadena.QueryGetJarRegulatorResponse"))
		}
		panic(fmt.Errorf("message qadena.qadena.QueryGetJarRegulatorResponse does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_QueryGetJarRegulatorResponse) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in qadena.qadena.QueryGetJarRegulatorResponse", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_QueryGetJarRegulatorResponse) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_QueryGetJarRegulatorResponse) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_QueryGetJarRegulatorResponse) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_QueryGetJarRegulatorResponse) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*QueryGetJarRegulatorResponse)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		if x.JarRegulator != nil {
			l = options.Size(x.JarRegulator)
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*QueryGetJarRegulatorResponse)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if x.JarRegulator != nil {
			encoded, err := options.Marshal(x.JarRegulator)
			if err != nil {
				return protoiface.MarshalOutput{
					NoUnkeyedLiterals: input.NoUnkeyedLiterals,
					Buf:               input.Buf,
				}, err
			}
			i -= len(encoded)
			copy(dAtA[i:], encoded)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(encoded)))
			i--
			dAtA[i] = 0xa
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*QueryGetJarRegulatorResponse)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: QueryGetJarRegulatorResponse: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: QueryGetJarRegulatorResponse: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field JarRegulator", wireType)
				}
				var msglen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					msglen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if msglen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + msglen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if x.JarRegulator == nil {
					x.JarRegulator = &JarRegulator{}
				}
				if err := options.Unmarshal(dAtA[iNdEx:postIndex], x.JarRegulator); err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				iNdEx = postIndex
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var (
	md_QueryAllJarRegulatorRequest            protoreflect.MessageDescriptor
	fd_QueryAllJarRegulatorRequest_pagination protoreflect.FieldDescriptor
)

func init() {
	file_qadena_qadena_query_proto_init()
	md_QueryAllJarRegulatorRequest = File_qadena_qadena_query_proto.Messages().ByName("QueryAllJarRegulatorRequest")
	fd_QueryAllJarRegulatorRequest_pagination = md_QueryAllJarRegulatorRequest.Fields().ByName("pagination")
}

var _ protoreflect.Message = (*fastReflection_QueryAllJarRegulatorRequest)(nil)

type fastReflection_QueryAllJarRegulatorRequest QueryAllJarRegulatorRequest

func (x *QueryAllJarRegulatorRequest) ProtoReflect() protoreflect.Message {
	return (*fastReflection_QueryAllJarRegulatorRequest)(x)
}

func (x *QueryAllJarRegulatorRequest) slowProtoReflect() protoreflect.Message {
	mi := &file_qadena_qadena_query_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_QueryAllJarRegulatorRequest_messageType fastReflection_QueryAllJarRegulatorRequest_messageType
var _ protoreflect.MessageType = fastReflection_QueryAllJarRegulatorRequest_messageType{}

type fastReflection_QueryAllJarRegulatorRequest_messageType struct{}

func (x fastReflection_QueryAllJarRegulatorRequest_messageType) Zero() protoreflect.Message {
	return (*fastReflection_QueryAllJarRegulatorRequest)(nil)
}
func (x fastReflection_QueryAllJarRegulatorRequest_messageType) New() protoreflect.Message {
	return new(fastReflection_QueryAllJarRegulatorRequest)
}
func (x fastReflection_QueryAllJarRegulatorRequest_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_QueryAllJarRegulatorRequest
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_QueryAllJarRegulatorRequest) Descriptor() protoreflect.MessageDescriptor {
	return md_QueryAllJarRegulatorRequest
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_QueryAllJarRegulatorRequest) Type() protoreflect.MessageType {
	return _fastReflection_QueryAllJarRegulatorRequest_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_QueryAllJarRegulatorRequest) New() protoreflect.Message {
	return new(fastReflection_QueryAllJarRegulatorRequest)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_QueryAllJarRegulatorRequest) Interface() protoreflect.ProtoMessage {
	return (*QueryAllJarRegulatorRequest)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_QueryAllJarRegulatorRequest) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.Pagination != nil {
		value := protoreflect.ValueOfMessage(x.Pagination.ProtoReflect())
		if !f(fd_QueryAllJarRegulatorRequest_pagination, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_QueryAllJarRegulatorRequest) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "qadena.qadena.QueryAllJarRegulatorRequest.pagination":
		return x.Pagination != nil
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: qadena.qadena.QueryAllJarRegulatorRequest"))
		}
		panic(fmt.Errorf("message qadena.qadena.QueryAllJarRegulatorRequest does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_QueryAllJarRegulatorRequest) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "qadena.qadena.QueryAllJarRegulatorRequest.pagination":
		x.Pagination = nil
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: qadena.qadena.QueryAllJarRegulatorRequest"))
		}
		panic(fmt.Errorf("message qadena.qadena.QueryAllJarRegulatorRequest does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_QueryAllJarRegulatorRequest) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "qadena.qadena.QueryAllJarRegulatorRequest.pagination":
		value := x.Pagination
		return protoreflect.ValueOfMessage(value.ProtoReflect())
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: qadena.qadena.QueryAllJarRegulatorRequest"))
		}
		panic(fmt.Errorf("message qadena.qadena.QueryAllJarRegulatorRequest does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_QueryAllJarRegulatorRequest) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "qadena.qadena.QueryAllJarRegulatorRequest.pagination":
		x.Pagination = value.Message().Interface().(*v1beta1.PageRequest)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: qadena.qadena.QueryAllJarRegulatorRequest"))
		}
		panic(fmt.Errorf("message qadena.qadena.QueryAllJarRegulatorRequest does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_QueryAllJarRegulatorRequest) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "qadena.qadena.QueryAllJarRegulatorRequest.pagination":
		if x.Pagination == nil {
			x.Pagination = new(v1beta1.PageRequest)
		}
		return protoreflect.ValueOfMessage(x.Pagination.ProtoReflect())
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: qadena.qadena.QueryAllJarRegulatorRequest"))
		}
		panic(fmt.Errorf("message qadena.qadena.QueryAllJarRegulatorRequest does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_QueryAllJarRegulatorRequest) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "qadena.qadena.QueryAllJarRegulatorRequest.pagination":
		m := new(v1beta1.PageRequest)
		return protoreflect.ValueOfMessage(m.ProtoReflect())
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: qadena.qadena.QueryAllJarRegulatorRequest"))
		}
		panic(fmt.Errorf("message qadena.qadena.QueryAllJarRegulatorRequest does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_QueryAllJarRegulatorRequest) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in qadena.qadena.QueryAllJarRegulatorRequest", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_QueryAllJarRegulatorRequest) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_QueryAllJarRegulatorRequest) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_QueryAllJarRegulatorRequest) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_QueryAllJarRegulatorRequest) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*QueryAllJarRegulatorRequest)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		if x.Pagination != nil {
			l = options.Size(x.Pagination)
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*QueryAllJarRegulatorRequest)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if x.Pagination != nil {
			encoded, err := options.Marshal(x.Pagination)
			if err != nil {
				return protoiface.MarshalOutput{
					NoUnkeyedLiterals: input.NoUnkeyedLiterals,
					Buf:               input.Buf,
				}, err
			}
			i -= len(encoded)
			copy(dAtA[i:], encoded)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(encoded)))
			i--
			dAtA[i] = 0xa
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*QueryAllJarRegulatorRequest)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: QueryAllJarRegulatorRequest: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: QueryAllJarRegulatorRequest: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Pagination", wireType)
				}
				var msglen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					msglen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if msglen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + msglen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if x.Pagination == nil {
					x.Pagination = &v1beta1.PageRequest{}
				}
				if err := options.Unmarshal(dAtA[iNdEx:postIndex], x.Pagination); err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				iNdEx = postIndex
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var _ protoreflect.List = (*_QueryAllJarRegulatorResponse_1_list)(nil)

type _QueryAllJarRegulatorResponse_1_list struct {
	list *[]*JarRegulator
}

func (x *_QueryAllJarRegulatorResponse_1_list) Len() int {
	if x.list == nil {
		return 0
	}
	return len(*x.list)
}

func (x *_QueryAllJarRegulatorResponse_1_list) Get(i int) protoreflect.Value {
	return protoreflect.ValueOfMessage((*x.list)[i].ProtoReflect())
}

func (x *_QueryAllJarRegulatorResponse_1_list) Set(i int, value protoreflect.Value) {
	valueUnwrapped := value.Message()
	concreteValue := valueUnwrapped.Interface().(*JarRegulator)
	(*x.list)[i] = concreteValue
}

func (x *_QueryAllJarRegulatorResponse_1_list) Append(value protoreflect.Value) {
	valueUnwrapped := value.Message()
	concreteValue := valueUnwrapped.Interface().(*JarRegulator)
	*x.list = append(*x.list, concreteValue)
}

func (x *_QueryAllJarRegulatorResponse_1_list) AppendMutable() protoreflect.Value {
	v := new(JarRegulator)
	*x.list = append(*x.list, v)
	return protoreflect.ValueOfMessage(v.ProtoReflect())
}

func (x *_QueryAllJarRegulatorResponse_1_list) Truncate(n int) {
	for i := n; i < len(*x.list); i++ {
		(*x.list)[i] = nil
	}
	*x.list = (*x.list)[:n]
}

func (x *_QueryAllJarRegulatorResponse_1_list) NewElement() protoreflect.Value {
	v := new(JarRegulator)
	return protoreflect.ValueOfMessage(v.ProtoReflect())
}

func (x *_QueryAllJarRegulatorResponse_1_list) IsValid() bool {
	return x.list != nil
}

var (
	md_QueryAllJarRegulatorResponse              protoreflect.MessageDescriptor
	fd_QueryAllJarRegulatorResponse_jarRegulator protoreflect.FieldDescriptor
	fd_QueryAllJarRegulatorResponse_pagination   protoreflect.FieldDescriptor
)

func init() {
	file_qadena_qadena_query_proto_init()
	md_QueryAllJarRegulatorResponse = File_qadena_qadena_query_proto.Messages().ByName("QueryAllJarRegulatorResponse")
	fd_QueryAllJarRegulatorResponse_jarRegulator = md_QueryAllJarRegulatorResponse.Fields().ByName("jarRegulator")
	fd_QueryAllJarRegulatorResponse_pagination = md_QueryAllJarRegulatorResponse.Fields().ByName("pagination")
}

var _ protoreflect.Message = (*fastReflection_QueryAllJarRegulatorResponse)(nil)

type fastReflection_QueryAllJarRegulatorResponse QueryAllJarRegulatorResponse

func (x *QueryAllJarRegulatorResponse) ProtoReflect() protoreflect.Message {
	return (*fastReflection_QueryAllJarRegulatorResponse)(x)
}

func (x *QueryAllJarRegulatorResponse) slowProtoReflect() protoreflect.Message {
	mi := &file_qadena_qadena_query_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_QueryAllJarRegulatorResponse_messageType fastReflection_QueryAllJarRegulatorResponse_messageType
var _ protoreflect.MessageType = fastReflection_QueryAllJarRegulatorResponse_messageType{}

type fastReflection_QueryAllJarRegulatorResponse_messageType struct{}

func (x fastReflection_QueryAllJarRegulatorResponse_messageType) Zero() protoreflect.Message {
	return (*fastReflection_QueryAllJarRegulatorResponse)(nil)
}
func (x fastReflection_QueryAllJarRegulatorResponse_messageType) New() protoreflect.Message {
	return new(fastReflection_QueryAllJarRegulatorResponse)
}
func (x fastReflection_QueryAllJarRegulatorResponse_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_QueryAllJarRegulatorResponse
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_QueryAllJarRegulatorResponse) Descriptor() protoreflect.MessageDescriptor {
	return md_QueryAllJarRegulatorResponse
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_QueryAllJarRegulatorResponse) Type() protoreflect.MessageType {
	return _fastReflection_QueryAllJarRegulatorResponse_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_QueryAllJarRegulatorResponse) New() protoreflect.Message {
	return new(fastReflection_QueryAllJarRegulatorResponse)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_QueryAllJarRegulatorResponse) Interface() protoreflect.ProtoMessage {
	return (*QueryAllJarRegulatorResponse)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_QueryAllJarRegulatorResponse) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if len(x.JarRegulator) != 0 {
		value := protoreflect.ValueOfList(&_QueryAllJarRegulatorResponse_1_list{list: &x.JarRegulator})
		if !f(fd_QueryAllJarRegulatorResponse_jarRegulator, value) {
			return
		}
	}
	if x.Pagination != nil {
		value := protoreflect.ValueOfMessage(x.Pagination.ProtoReflect())
		if !f(fd_QueryAllJarRegulatorResponse_pagination, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_QueryAllJarRegulatorResponse) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "qadena.qadena.QueryAllJarRegulatorResponse.jarRegulator":
		return len(x.JarRegulator) != 0
	case "qadena.qadena.QueryAllJarRegulatorResponse.pagination":
		return x.Pagination != nil
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: qadena.qadena.QueryAllJarRegulatorResponse"))
		}
		panic(fmt.Errorf("message qadena.qadena.QueryAllJarRegulatorResponse does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_QueryAllJarRegulatorResponse) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "qadena.qadena.QueryAllJarRegulatorResponse.jarRegulator":
		x.JarRegulator = nil
	case "qadena.qadena.QueryAllJarRegulatorResponse.pagination":
		x.Pagination = nil
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: qadena.qadena.QueryAllJarRegulatorResponse"))
		}
		panic(fmt.Errorf("message qadena.qadena.QueryAllJarRegulatorResponse does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_QueryAllJarRegulatorResponse) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "qadena.qadena.QueryAllJarRegulatorResponse.jarRegulator":
		if len(x.JarRegulator) == 0 {
			return protoreflect.ValueOfList(&_QueryAllJarRegulatorResponse_1_list{})
		}
		listValue := &_QueryAllJarRegulatorResponse_1_list{list: &x.JarRegulator}
		return protoreflect.ValueOfList(listValue)
	case "qadena.qadena.QueryAllJarRegulatorResponse.pagination":
		value := x.Pagination
		return protoreflect.ValueOfMessage(value.ProtoReflect())
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: qadena.qadena.QueryAllJarRegulatorResponse"))
		}
		panic(fmt.Errorf("message qadena.qadena.QueryAllJarRegulatorResponse does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_QueryAllJarRegulatorResponse) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "qadena.qadena.QueryAllJarRegulatorResponse.jarRegulator":
		lv := value.List()
		clv := lv.(*_QueryAllJarRegulatorResponse_1_list)
		x.JarRegulator = *clv.list
	case "qadena.qadena.QueryAllJarRegulatorResponse.pagination":
		x.Pagination = value.Message().Interface().(*v1beta1.PageResponse)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: qadena.qadena.QueryAllJarRegulatorResponse"))
		}
		panic(fmt.Errorf("message qadena.qadena.QueryAllJarRegulatorResponse does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_QueryAllJarRegulatorResponse) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "qadena.qadena.QueryAllJarRegulatorResponse.jarRegulator":
		if x.JarRegulator == nil {
			x.JarRegulator = []*JarRegulator{}
		}
		value := &_QueryAllJarRegulatorResponse_1_list{list: &x.JarRegulator}
		return protoreflect.ValueOfList(value)
	case "qadena.qadena.QueryAllJarRegulatorResponse.pagination":
		if x.Pagination == nil {
			x.Pagination = new(v1beta1.PageResponse)
		}
		return protoreflect.ValueOfMessage(x.Pagination.ProtoReflect())
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: qadena.qadena.QueryAllJarRegulatorResponse"))
		}
		panic(fmt.Errorf("message qadena.qadena.QueryAllJarRegulatorResponse does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_QueryAllJarRegulatorResponse) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "qadena.qadena.QueryAllJarRegulatorResponse.jarRegulator":
		list := []*JarRegulator{}
		return protoreflect.ValueOfList(&_QueryAllJarRegulatorResponse_1_list{list: &list})
	case "qadena.qadena.QueryAllJarRegulatorResponse.pagination":
		m := new(v1beta1.PageResponse)
		return protoreflect.ValueOfMessage(m.ProtoReflect())
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: qadena.qadena.QueryAllJarRegulatorResponse"))
		}
		panic(fmt.Errorf("message qadena.qadena.QueryAllJarRegulatorResponse does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_QueryAllJarRegulatorResponse) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in qadena.qadena.QueryAllJarRegulatorResponse", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_QueryAllJarRegulatorResponse) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_QueryAllJarRegulatorResponse) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_QueryAllJarRegulatorResponse) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_QueryAllJarRegulatorResponse) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*QueryAllJarRegulatorResponse)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		if len(x.JarRegulator) > 0 {
			for _, e := range x.JarRegulator {
				l = options.Size(e)
				n += 1 + l + runtime.Sov(uint64(l))
			}
		}
		if x.Pagination != nil {
			l = options.Size(x.Pagination)
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*QueryAllJarRegulatorResponse)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if x.Pagination != nil {
			encoded, err := options.Marshal(x.Pagination)
			if err != nil {
				return protoiface.MarshalOutput{
					NoUnkeyedLiterals: input.NoUnkeyedLiterals,
					Buf:               input.Buf,
				}, err
			}
			i -= len(encoded)
			copy(dAtA[i:], encoded)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(encoded)))
			i--
			dAtA[i] = 0x12
		}
		if len(x.JarRegulator) > 0 {
			for iNdEx := len(x.JarRegulator) - 1; iNdEx >= 0; iNdEx-- {
				encoded, err := options.Marshal(x.JarRegulator[iNdEx])
				if err != nil {
					return protoiface.MarshalOutput{
						NoUnkeyedLiterals: input.NoUnkeyedLiterals,
						Buf:               input.Buf,
					}, err
				}
				i -= len(encoded)
				copy(dAtA[i:], encoded)
				i = runtime.EncodeVarint(dAtA, i, uint64(len(encoded)))
				i--
				dAtA[i] = 0xa
			}
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*QueryAllJarRegulatorResponse)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: QueryAllJarRegulatorResponse: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: QueryAllJarRegulatorResponse: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field JarRegulator", wireType)
				}
				var msglen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					msglen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if msglen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + msglen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.JarRegulator = append(x.JarRegulator, &JarRegulator{})
				if err := options.Unmarshal(dAtA[iNdEx:postIndex], x.JarRegulator[len(x.JarRegulator)-1]); err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				iNdEx = postIndex
			case 2:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Pagination", wireType)
				}
				var msglen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					msglen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if msglen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + msglen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if x.Pagination == nil {
					x.Pagination = &v1beta1.PageResponse{}
				}
				if err := options.Unmarshal(dAtA[iNdEx:postIndex], x.Pagination); err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				iNdEx = postIndex
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var (
	md_QueryGetSuspiciousTransactionRequest    protoreflect.MessageDescriptor
	fd_QueryGetSuspiciousTransactionRequest_id protoreflect.FieldDescriptor
)

func init() {
	file_qadena_qadena_query_proto_init()
	md_QueryGetSuspiciousTransactionRequest = File_qadena_qadena_query_proto.Messages().ByName("QueryGetSuspiciousTransactionRequest")
	fd_QueryGetSuspiciousTransactionRequest_id = md_QueryGetSuspiciousTransactionRequest.Fields().ByName("id")
}

var _ protoreflect.Message = (*fastReflection_QueryGetSuspiciousTransactionRequest)(nil)

type fastReflection_QueryGetSuspiciousTransactionRequest QueryGetSuspiciousTransactionRequest

func (x *QueryGetSuspiciousTransactionRequest) ProtoReflect() protoreflect.Message {
	return (*fastReflection_QueryGetSuspiciousTransactionRequest)(x)
}

func (x *QueryGetSuspiciousTransactionRequest) slowProtoReflect() protoreflect.Message {
	mi := &file_qadena_qadena_query_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_QueryGetSuspiciousTransactionRequest_messageType fastReflection_QueryGetSuspiciousTransactionRequest_messageType
var _ protoreflect.MessageType = fastReflection_QueryGetSuspiciousTransactionRequest_messageType{}

type fastReflection_QueryGetSuspiciousTransactionRequest_messageType struct{}

func (x fastReflection_QueryGetSuspiciousTransactionRequest_messageType) Zero() protoreflect.Message {
	return (*fastReflection_QueryGetSuspiciousTransactionRequest)(nil)
}
func (x fastReflection_QueryGetSuspiciousTransactionRequest_messageType) New() protoreflect.Message {
	return new(fastReflection_QueryGetSuspiciousTransactionRequest)
}
func (x fastReflection_QueryGetSuspiciousTransactionRequest_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_QueryGetSuspiciousTransactionRequest
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_QueryGetSuspiciousTransactionRequest) Descriptor() protoreflect.MessageDescriptor {
	return md_QueryGetSuspiciousTransactionRequest
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_QueryGetSuspiciousTransactionRequest) Type() protoreflect.MessageType {
	return _fastReflection_QueryGetSuspiciousTransactionRequest_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_QueryGetSuspiciousTransactionRequest) New() protoreflect.Message {
	return new(fastReflection_QueryGetSuspiciousTransactionRequest)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_QueryGetSuspiciousTransactionRequest) Interface() protoreflect.ProtoMessage {
	return (*QueryGetSuspiciousTransactionRequest)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_QueryGetSuspiciousTransactionRequest) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.Id != uint64(0) {
		value := protoreflect.ValueOfUint64(x.Id)
		if !f(fd_QueryGetSuspiciousTransactionRequest_id, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_QueryGetSuspiciousTransactionRequest) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "qadena.qadena.QueryGetSuspiciousTransactionRequest.id":
		return x.Id != uint64(0)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: qadena.qadena.QueryGetSuspiciousTransactionRequest"))
		}
		panic(fmt.Errorf("message qadena.qadena.QueryGetSuspiciousTransactionRequest does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_QueryGetSuspiciousTransactionRequest) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "qadena.qadena.QueryGetSuspiciousTransactionRequest.id":
		x.Id = uint64(0)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: qadena.qadena.QueryGetSuspiciousTransactionRequest"))
		}
		panic(fmt.Errorf("message qadena.qadena.QueryGetSuspiciousTransactionRequest does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_QueryGetSuspiciousTransactionRequest) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "qadena.qadena.QueryGetSuspiciousTransactionRequest.id":
		value := x.Id
		return protoreflect.ValueOfUint64(value)
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: qadena.qadena.QueryGetSuspiciousTransactionRequest"))
		}
		panic(fmt.Errorf("message qadena.qadena.QueryGetSuspiciousTransactionRequest does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_QueryGetSuspiciousTransactionRequest) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "qadena.qadena.QueryGetSuspiciousTransactionRequest.id":
		x.Id = value.Uint()
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: qadena.qadena.QueryGetSuspiciousTransactionRequest"))
		}
		panic(fmt.Errorf("message qadena.qadena.QueryGetSuspiciousTransactionRequest does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_QueryGetSuspiciousTransactionRequest) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "qadena.qadena.QueryGetSuspiciousTransactionRequest.id":
		panic(fmt.Errorf("field id of message qadena.qadena.QueryGetSuspiciousTransactionRequest is not mutable"))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: qadena.qadena.QueryGetSuspiciousTransactionRequest"))
		}
		panic(fmt.Errorf("message qadena.qadena.QueryGetSuspiciousTransactionRequest does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_QueryGetSuspiciousTransactionRequest) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "qadena.qadena.QueryGetSuspiciousTransactionRequest.id":
		return protoreflect.ValueOfUint64(uint64(0))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: qadena.qadena.QueryGetSuspiciousTransactionRequest"))
		}
		panic(fmt.Errorf("message qadena.qadena.QueryGetSuspiciousTransactionRequest does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_QueryGetSuspiciousTransactionRequest) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in qadena.qadena.QueryGetSuspiciousTransactionRequest", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_QueryGetSuspiciousTransactionRequest) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_QueryGetSuspiciousTransactionRequest) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_QueryGetSuspiciousTransactionRequest) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_QueryGetSuspiciousTransactionRequest) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*QueryGetSuspiciousTransactionRequest)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		if x.Id != 0 {
			n += 1 + runtime.Sov(uint64(x.Id))
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*QueryGetSuspiciousTransactionRequest)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if x.Id != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.Id))
			i--
			dAtA[i] = 0x8
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*QueryGetSuspiciousTransactionRequest)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: QueryGetSuspiciousTransactionRequest: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: QueryGetSuspiciousTransactionRequest: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Id", wireType)
				}
				x.Id = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.Id |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var (
	md_QueryGetSuspiciousTransactionResponse                       protoreflect.MessageDescriptor
	fd_QueryGetSuspiciousTransactionResponse_SuspiciousTransaction protoreflect.FieldDescriptor
)

func init() {
	file_qadena_qadena_query_proto_init()
	md_QueryGetSuspiciousTransactionResponse = File_qadena_qadena_query_proto.Messages().ByName("QueryGetSuspiciousTransactionResponse")
	fd_QueryGetSuspiciousTransactionResponse_SuspiciousTransaction = md_QueryGetSuspiciousTransactionResponse.Fields().ByName("SuspiciousTransaction")
}

var _ protoreflect.Message = (*fastReflection_QueryGetSuspiciousTransactionResponse)(nil)

type fastReflection_QueryGetSuspiciousTransactionResponse QueryGetSuspiciousTransactionResponse

func (x *QueryGetSuspiciousTransactionResponse) ProtoReflect() protoreflect.Message {
	return (*fastReflection_QueryGetSuspiciousTransactionResponse)(x)
}

func (x *QueryGetSuspiciousTransactionResponse) slowProtoReflect() protoreflect.Message {
	mi := &file_qadena_qadena_query_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_QueryGetSuspiciousTransactionResponse_messageType fastReflection_QueryGetSuspiciousTransactionResponse_messageType
var _ protoreflect.MessageType = fastReflection_QueryGetSuspiciousTransactionResponse_messageType{}

type fastReflection_QueryGetSuspiciousTransactionResponse_messageType struct{}

func (x fastReflection_QueryGetSuspiciousTransactionResponse_messageType) Zero() protoreflect.Message {
	return (*fastReflection_QueryGetSuspiciousTransactionResponse)(nil)
}
func (x fastReflection_QueryGetSuspiciousTransactionResponse_messageType) New() protoreflect.Message {
	return new(fastReflection_QueryGetSuspiciousTransactionResponse)
}
func (x fastReflection_QueryGetSuspiciousTransactionResponse_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_QueryGetSuspiciousTransactionResponse
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_QueryGetSuspiciousTransactionResponse) Descriptor() protoreflect.MessageDescriptor {
	return md_QueryGetSuspiciousTransactionResponse
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_QueryGetSuspiciousTransactionResponse) Type() protoreflect.MessageType {
	return _fastReflection_QueryGetSuspiciousTransactionResponse_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_QueryGetSuspiciousTransactionResponse) New() protoreflect.Message {
	return new(fastReflection_QueryGetSuspiciousTransactionResponse)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_QueryGetSuspiciousTransactionResponse) Interface() protoreflect.ProtoMessage {
	return (*QueryGetSuspiciousTransactionResponse)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_QueryGetSuspiciousTransactionResponse) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.SuspiciousTransaction != nil {
		value := protoreflect.ValueOfMessage(x.SuspiciousTransaction.ProtoReflect())
		if !f(fd_QueryGetSuspiciousTransactionResponse_SuspiciousTransaction, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_QueryGetSuspiciousTransactionResponse) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "qadena.qadena.QueryGetSuspiciousTransactionResponse.SuspiciousTransaction":
		return x.SuspiciousTransaction != nil
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: qadena.qadena.QueryGetSuspiciousTransactionResponse"))
		}
		panic(fmt.Errorf("message qadena.qadena.QueryGetSuspiciousTransactionResponse does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_QueryGetSuspiciousTransactionResponse) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "qadena.qadena.QueryGetSuspiciousTransactionResponse.SuspiciousTransaction":
		x.SuspiciousTransaction = nil
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: qadena.qadena.QueryGetSuspiciousTransactionResponse"))
		}
		panic(fmt.Errorf("message qadena.qadena.QueryGetSuspiciousTransactionResponse does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_QueryGetSuspiciousTransactionResponse) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "qadena.qadena.QueryGetSuspiciousTransactionResponse.SuspiciousTransaction":
		value := x.SuspiciousTransaction
		return protoreflect.ValueOfMessage(value.ProtoReflect())
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: qadena.qadena.QueryGetSuspiciousTransactionResponse"))
		}
		panic(fmt.Errorf("message qadena.qadena.QueryGetSuspiciousTransactionResponse does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_QueryGetSuspiciousTransactionResponse) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "qadena.qadena.QueryGetSuspiciousTransactionResponse.SuspiciousTransaction":
		x.SuspiciousTransaction = value.Message().Interface().(*SuspiciousTransaction)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: qadena.qadena.QueryGetSuspiciousTransactionResponse"))
		}
		panic(fmt.Errorf("message qadena.qadena.QueryGetSuspiciousTransactionResponse does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_QueryGetSuspiciousTransactionResponse) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "qadena.qadena.QueryGetSuspiciousTransactionResponse.SuspiciousTransaction":
		if x.SuspiciousTransaction == nil {
			x.SuspiciousTransaction = new(SuspiciousTransaction)
		}
		return protoreflect.ValueOfMessage(x.SuspiciousTransaction.ProtoReflect())
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: qadena.qadena.QueryGetSuspiciousTransactionResponse"))
		}
		panic(fmt.Errorf("message qadena.qadena.QueryGetSuspiciousTransactionResponse does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_QueryGetSuspiciousTransactionResponse) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "qadena.qadena.QueryGetSuspiciousTransactionResponse.SuspiciousTransaction":
		m := new(SuspiciousTransaction)
		return protoreflect.ValueOfMessage(m.ProtoReflect())
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: qadena.qadena.QueryGetSuspiciousTransactionResponse"))
		}
		panic(fmt.Errorf("message qadena.qadena.QueryGetSuspiciousTransactionResponse does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_QueryGetSuspiciousTransactionResponse) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in qadena.qadena.QueryGetSuspiciousTransactionResponse", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_QueryGetSuspiciousTransactionResponse) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_QueryGetSuspiciousTransactionResponse) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_QueryGetSuspiciousTransactionResponse) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_QueryGetSuspiciousTransactionResponse) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*QueryGetSuspiciousTransactionResponse)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		if x.SuspiciousTransaction != nil {
			l = options.Size(x.SuspiciousTransaction)
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*QueryGetSuspiciousTransactionResponse)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if x.SuspiciousTransaction != nil {
			encoded, err := options.Marshal(x.SuspiciousTransaction)
			if err != nil {
				return protoiface.MarshalOutput{
					NoUnkeyedLiterals: input.NoUnkeyedLiterals,
					Buf:               input.Buf,
				}, err
			}
			i -= len(encoded)
			copy(dAtA[i:], encoded)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(encoded)))
			i--
			dAtA[i] = 0xa
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*QueryGetSuspiciousTransactionResponse)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: QueryGetSuspiciousTransactionResponse: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: QueryGetSuspiciousTransactionResponse: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field SuspiciousTransaction", wireType)
				}
				var msglen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					msglen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if msglen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + msglen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if x.SuspiciousTransaction == nil {
					x.SuspiciousTransaction = &SuspiciousTransaction{}
				}
				if err := options.Unmarshal(dAtA[iNdEx:postIndex], x.SuspiciousTransaction); err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				iNdEx = postIndex
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var (
	md_QueryAllSuspiciousTransactionRequest            protoreflect.MessageDescriptor
	fd_QueryAllSuspiciousTransactionRequest_pagination protoreflect.FieldDescriptor
)

func init() {
	file_qadena_qadena_query_proto_init()
	md_QueryAllSuspiciousTransactionRequest = File_qadena_qadena_query_proto.Messages().ByName("QueryAllSuspiciousTransactionRequest")
	fd_QueryAllSuspiciousTransactionRequest_pagination = md_QueryAllSuspiciousTransactionRequest.Fields().ByName("pagination")
}

var _ protoreflect.Message = (*fastReflection_QueryAllSuspiciousTransactionRequest)(nil)

type fastReflection_QueryAllSuspiciousTransactionRequest QueryAllSuspiciousTransactionRequest

func (x *QueryAllSuspiciousTransactionRequest) ProtoReflect() protoreflect.Message {
	return (*fastReflection_QueryAllSuspiciousTransactionRequest)(x)
}

func (x *QueryAllSuspiciousTransactionRequest) slowProtoReflect() protoreflect.Message {
	mi := &file_qadena_qadena_query_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_QueryAllSuspiciousTransactionRequest_messageType fastReflection_QueryAllSuspiciousTransactionRequest_messageType
var _ protoreflect.MessageType = fastReflection_QueryAllSuspiciousTransactionRequest_messageType{}

type fastReflection_QueryAllSuspiciousTransactionRequest_messageType struct{}

func (x fastReflection_QueryAllSuspiciousTransactionRequest_messageType) Zero() protoreflect.Message {
	return (*fastReflection_QueryAllSuspiciousTransactionRequest)(nil)
}
func (x fastReflection_QueryAllSuspiciousTransactionRequest_messageType) New() protoreflect.Message {
	return new(fastReflection_QueryAllSuspiciousTransactionRequest)
}
func (x fastReflection_QueryAllSuspiciousTransactionRequest_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_QueryAllSuspiciousTransactionRequest
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_QueryAllSuspiciousTransactionRequest) Descriptor() protoreflect.MessageDescriptor {
	return md_QueryAllSuspiciousTransactionRequest
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_QueryAllSuspiciousTransactionRequest) Type() protoreflect.MessageType {
	return _fastReflection_QueryAllSuspiciousTransactionRequest_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_QueryAllSuspiciousTransactionRequest) New() protoreflect.Message {
	return new(fastReflection_QueryAllSuspiciousTransactionRequest)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_QueryAllSuspiciousTransactionRequest) Interface() protoreflect.ProtoMessage {
	return (*QueryAllSuspiciousTransactionRequest)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_QueryAllSuspiciousTransactionRequest) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.Pagination != nil {
		value := protoreflect.ValueOfMessage(x.Pagination.ProtoReflect())
		if !f(fd_QueryAllSuspiciousTransactionRequest_pagination, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_QueryAllSuspiciousTransactionRequest) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "qadena.qadena.QueryAllSuspiciousTransactionRequest.pagination":
		return x.Pagination != nil
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: qadena.qadena.QueryAllSuspiciousTransactionRequest"))
		}
		panic(fmt.Errorf("message qadena.qadena.QueryAllSuspiciousTransactionRequest does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_QueryAllSuspiciousTransactionRequest) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "qadena.qadena.QueryAllSuspiciousTransactionRequest.pagination":
		x.Pagination = nil
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: qadena.qadena.QueryAllSuspiciousTransactionRequest"))
		}
		panic(fmt.Errorf("message qadena.qadena.QueryAllSuspiciousTransactionRequest does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_QueryAllSuspiciousTransactionRequest) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "qadena.qadena.QueryAllSuspiciousTransactionRequest.pagination":
		value := x.Pagination
		return protoreflect.ValueOfMessage(value.ProtoReflect())
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: qadena.qadena.QueryAllSuspiciousTransactionRequest"))
		}
		panic(fmt.Errorf("message qadena.qadena.QueryAllSuspiciousTransactionRequest does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_QueryAllSuspiciousTransactionRequest) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "qadena.qadena.QueryAllSuspiciousTransactionRequest.pagination":
		x.Pagination = value.Message().Interface().(*v1beta1.PageRequest)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: qadena.qadena.QueryAllSuspiciousTransactionRequest"))
		}
		panic(fmt.Errorf("message qadena.qadena.QueryAllSuspiciousTransactionRequest does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_QueryAllSuspiciousTransactionRequest) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "qadena.qadena.QueryAllSuspiciousTransactionRequest.pagination":
		if x.Pagination == nil {
			x.Pagination = new(v1beta1.PageRequest)
		}
		return protoreflect.ValueOfMessage(x.Pagination.ProtoReflect())
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: qadena.qadena.QueryAllSuspiciousTransactionRequest"))
		}
		panic(fmt.Errorf("message qadena.qadena.QueryAllSuspiciousTransactionRequest does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_QueryAllSuspiciousTransactionRequest) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "qadena.qadena.QueryAllSuspiciousTransactionRequest.pagination":
		m := new(v1beta1.PageRequest)
		return protoreflect.ValueOfMessage(m.ProtoReflect())
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: qadena.qadena.QueryAllSuspiciousTransactionRequest"))
		}
		panic(fmt.Errorf("message qadena.qadena.QueryAllSuspiciousTransactionRequest does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_QueryAllSuspiciousTransactionRequest) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in qadena.qadena.QueryAllSuspiciousTransactionRequest", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_QueryAllSuspiciousTransactionRequest) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_QueryAllSuspiciousTransactionRequest) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_QueryAllSuspiciousTransactionRequest) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_QueryAllSuspiciousTransactionRequest) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*QueryAllSuspiciousTransactionRequest)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		if x.Pagination != nil {
			l = options.Size(x.Pagination)
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*QueryAllSuspiciousTransactionRequest)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if x.Pagination != nil {
			encoded, err := options.Marshal(x.Pagination)
			if err != nil {
				return protoiface.MarshalOutput{
					NoUnkeyedLiterals: input.NoUnkeyedLiterals,
					Buf:               input.Buf,
				}, err
			}
			i -= len(encoded)
			copy(dAtA[i:], encoded)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(encoded)))
			i--
			dAtA[i] = 0xa
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*QueryAllSuspiciousTransactionRequest)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: QueryAllSuspiciousTransactionRequest: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: QueryAllSuspiciousTransactionRequest: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Pagination", wireType)
				}
				var msglen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					msglen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if msglen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + msglen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if x.Pagination == nil {
					x.Pagination = &v1beta1.PageRequest{}
				}
				if err := options.Unmarshal(dAtA[iNdEx:postIndex], x.Pagination); err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				iNdEx = postIndex
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var _ protoreflect.List = (*_QueryAllSuspiciousTransactionResponse_1_list)(nil)

type _QueryAllSuspiciousTransactionResponse_1_list struct {
	list *[]*SuspiciousTransaction
}

func (x *_QueryAllSuspiciousTransactionResponse_1_list) Len() int {
	if x.list == nil {
		return 0
	}
	return len(*x.list)
}

func (x *_QueryAllSuspiciousTransactionResponse_1_list) Get(i int) protoreflect.Value {
	return protoreflect.ValueOfMessage((*x.list)[i].ProtoReflect())
}

func (x *_QueryAllSuspiciousTransactionResponse_1_list) Set(i int, value protoreflect.Value) {
	valueUnwrapped := value.Message()
	concreteValue := valueUnwrapped.Interface().(*SuspiciousTransaction)
	(*x.list)[i] = concreteValue
}

func (x *_QueryAllSuspiciousTransactionResponse_1_list) Append(value protoreflect.Value) {
	valueUnwrapped := value.Message()
	concreteValue := valueUnwrapped.Interface().(*SuspiciousTransaction)
	*x.list = append(*x.list, concreteValue)
}

func (x *_QueryAllSuspiciousTransactionResponse_1_list) AppendMutable() protoreflect.Value {
	v := new(SuspiciousTransaction)
	*x.list = append(*x.list, v)
	return protoreflect.ValueOfMessage(v.ProtoReflect())
}

func (x *_QueryAllSuspiciousTransactionResponse_1_list) Truncate(n int) {
	for i := n; i < len(*x.list); i++ {
		(*x.list)[i] = nil
	}
	*x.list = (*x.list)[:n]
}

func (x *_QueryAllSuspiciousTransactionResponse_1_list) NewElement() protoreflect.Value {
	v := new(SuspiciousTransaction)
	return protoreflect.ValueOfMessage(v.ProtoReflect())
}

func (x *_QueryAllSuspiciousTransactionResponse_1_list) IsValid() bool {
	return x.list != nil
}

var (
	md_QueryAllSuspiciousTransactionResponse                       protoreflect.MessageDescriptor
	fd_QueryAllSuspiciousTransactionResponse_SuspiciousTransaction protoreflect.FieldDescriptor
	fd_QueryAllSuspiciousTransactionResponse_pagination            protoreflect.FieldDescriptor
)

func init() {
	file_qadena_qadena_query_proto_init()
	md_QueryAllSuspiciousTransactionResponse = File_qadena_qadena_query_proto.Messages().ByName("QueryAllSuspiciousTransactionResponse")
	fd_QueryAllSuspiciousTransactionResponse_SuspiciousTransaction = md_QueryAllSuspiciousTransactionResponse.Fields().ByName("SuspiciousTransaction")
	fd_QueryAllSuspiciousTransactionResponse_pagination = md_QueryAllSuspiciousTransactionResponse.Fields().ByName("pagination")
}

var _ protoreflect.Message = (*fastReflection_QueryAllSuspiciousTransactionResponse)(nil)

type fastReflection_QueryAllSuspiciousTransactionResponse QueryAllSuspiciousTransactionResponse

func (x *QueryAllSuspiciousTransactionResponse) ProtoReflect() protoreflect.Message {
	return (*fastReflection_QueryAllSuspiciousTransactionResponse)(x)
}

func (x *QueryAllSuspiciousTransactionResponse) slowProtoReflect() protoreflect.Message {
	mi := &file_qadena_qadena_query_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_QueryAllSuspiciousTransactionResponse_messageType fastReflection_QueryAllSuspiciousTransactionResponse_messageType
var _ protoreflect.MessageType = fastReflection_QueryAllSuspiciousTransactionResponse_messageType{}

type fastReflection_QueryAllSuspiciousTransactionResponse_messageType struct{}

func (x fastReflection_QueryAllSuspiciousTransactionResponse_messageType) Zero() protoreflect.Message {
	return (*fastReflection_QueryAllSuspiciousTransactionResponse)(nil)
}
func (x fastReflection_QueryAllSuspiciousTransactionResponse_messageType) New() protoreflect.Message {
	return new(fastReflection_QueryAllSuspiciousTransactionResponse)
}
func (x fastReflection_QueryAllSuspiciousTransactionResponse_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_QueryAllSuspiciousTransactionResponse
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_QueryAllSuspiciousTransactionResponse) Descriptor() protoreflect.MessageDescriptor {
	return md_QueryAllSuspiciousTransactionResponse
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_QueryAllSuspiciousTransactionResponse) Type() protoreflect.MessageType {
	return _fastReflection_QueryAllSuspiciousTransactionResponse_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_QueryAllSuspiciousTransactionResponse) New() protoreflect.Message {
	return new(fastReflection_QueryAllSuspiciousTransactionResponse)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_QueryAllSuspiciousTransactionResponse) Interface() protoreflect.ProtoMessage {
	return (*QueryAllSuspiciousTransactionResponse)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_QueryAllSuspiciousTransactionResponse) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if len(x.SuspiciousTransaction) != 0 {
		value := protoreflect.ValueOfList(&_QueryAllSuspiciousTransactionResponse_1_list{list: &x.SuspiciousTransaction})
		if !f(fd_QueryAllSuspiciousTransactionResponse_SuspiciousTransaction, value) {
			return
		}
	}
	if x.Pagination != nil {
		value := protoreflect.ValueOfMessage(x.Pagination.ProtoReflect())
		if !f(fd_QueryAllSuspiciousTransactionResponse_pagination, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_QueryAllSuspiciousTransactionResponse) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "qadena.qadena.QueryAllSuspiciousTransactionResponse.SuspiciousTransaction":
		return len(x.SuspiciousTransaction) != 0
	case "qadena.qadena.QueryAllSuspiciousTransactionResponse.pagination":
		return x.Pagination != nil
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: qadena.qadena.QueryAllSuspiciousTransactionResponse"))
		}
		panic(fmt.Errorf("message qadena.qadena.QueryAllSuspiciousTransactionResponse does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_QueryAllSuspiciousTransactionResponse) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "qadena.qadena.QueryAllSuspiciousTransactionResponse.SuspiciousTransaction":
		x.SuspiciousTransaction = nil
	case "qadena.qadena.QueryAllSuspiciousTransactionResponse.pagination":
		x.Pagination = nil
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: qadena.qadena.QueryAllSuspiciousTransactionResponse"))
		}
		panic(fmt.Errorf("message qadena.qadena.QueryAllSuspiciousTransactionResponse does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_QueryAllSuspiciousTransactionResponse) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "qadena.qadena.QueryAllSuspiciousTransactionResponse.SuspiciousTransaction":
		if len(x.SuspiciousTransaction) == 0 {
			return protoreflect.ValueOfList(&_QueryAllSuspiciousTransactionResponse_1_list{})
		}
		listValue := &_QueryAllSuspiciousTransactionResponse_1_list{list: &x.SuspiciousTransaction}
		return protoreflect.ValueOfList(listValue)
	case "qadena.qadena.QueryAllSuspiciousTransactionResponse.pagination":
		value := x.Pagination
		return protoreflect.ValueOfMessage(value.ProtoReflect())
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: qadena.qadena.QueryAllSuspiciousTransactionResponse"))
		}
		panic(fmt.Errorf("message qadena.qadena.QueryAllSuspiciousTransactionResponse does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_QueryAllSuspiciousTransactionResponse) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "qadena.qadena.QueryAllSuspiciousTransactionResponse.SuspiciousTransaction":
		lv := value.List()
		clv := lv.(*_QueryAllSuspiciousTransactionResponse_1_list)
		x.SuspiciousTransaction = *clv.list
	case "qadena.qadena.QueryAllSuspiciousTransactionResponse.pagination":
		x.Pagination = value.Message().Interface().(*v1beta1.PageResponse)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: qadena.qadena.QueryAllSuspiciousTransactionResponse"))
		}
		panic(fmt.Errorf("message qadena.qadena.QueryAllSuspiciousTransactionResponse does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_QueryAllSuspiciousTransactionResponse) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "qadena.qadena.QueryAllSuspiciousTransactionResponse.SuspiciousTransaction":
		if x.SuspiciousTransaction == nil {
			x.SuspiciousTransaction = []*SuspiciousTransaction{}
		}
		value := &_QueryAllSuspiciousTransactionResponse_1_list{list: &x.SuspiciousTransaction}
		return protoreflect.ValueOfList(value)
	case "qadena.qadena.QueryAllSuspiciousTransactionResponse.pagination":
		if x.Pagination == nil {
			x.Pagination = new(v1beta1.PageResponse)
		}
		return protoreflect.ValueOfMessage(x.Pagination.ProtoReflect())
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: qadena.qadena.QueryAllSuspiciousTransactionResponse"))
		}
		panic(fmt.Errorf("message qadena.qadena.QueryAllSuspiciousTransactionResponse does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_QueryAllSuspiciousTransactionResponse) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "qadena.qadena.QueryAllSuspiciousTransactionResponse.SuspiciousTransaction":
		list := []*SuspiciousTransaction{}
		return protoreflect.ValueOfList(&_QueryAllSuspiciousTransactionResponse_1_list{list: &list})
	case "qadena.qadena.QueryAllSuspiciousTransactionResponse.pagination":
		m := new(v1beta1.PageResponse)
		return protoreflect.ValueOfMessage(m.ProtoReflect())
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: qadena.qadena.QueryAllSuspiciousTransactionResponse"))
		}
		panic(fmt.Errorf("message qadena.qadena.QueryAllSuspiciousTransactionResponse does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_QueryAllSuspiciousTransactionResponse) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in qadena.qadena.QueryAllSuspiciousTransactionResponse", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_QueryAllSuspiciousTransactionResponse) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_QueryAllSuspiciousTransactionResponse) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_QueryAllSuspiciousTransactionResponse) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_QueryAllSuspiciousTransactionResponse) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*QueryAllSuspiciousTransactionResponse)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		if len(x.SuspiciousTransaction) > 0 {
			for _, e := range x.SuspiciousTransaction {
				l = options.Size(e)
				n += 1 + l + runtime.Sov(uint64(l))
			}
		}
		if x.Pagination != nil {
			l = options.Size(x.Pagination)
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*QueryAllSuspiciousTransactionResponse)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if x.Pagination != nil {
			encoded, err := options.Marshal(x.Pagination)
			if err != nil {
				return protoiface.MarshalOutput{
					NoUnkeyedLiterals: input.NoUnkeyedLiterals,
					Buf:               input.Buf,
				}, err
			}
			i -= len(encoded)
			copy(dAtA[i:], encoded)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(encoded)))
			i--
			dAtA[i] = 0x12
		}
		if len(x.SuspiciousTransaction) > 0 {
			for iNdEx := len(x.SuspiciousTransaction) - 1; iNdEx >= 0; iNdEx-- {
				encoded, err := options.Marshal(x.SuspiciousTransaction[iNdEx])
				if err != nil {
					return protoiface.MarshalOutput{
						NoUnkeyedLiterals: input.NoUnkeyedLiterals,
						Buf:               input.Buf,
					}, err
				}
				i -= len(encoded)
				copy(dAtA[i:], encoded)
				i = runtime.EncodeVarint(dAtA, i, uint64(len(encoded)))
				i--
				dAtA[i] = 0xa
			}
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*QueryAllSuspiciousTransactionResponse)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: QueryAllSuspiciousTransactionResponse: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: QueryAllSuspiciousTransactionResponse: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field SuspiciousTransaction", wireType)
				}
				var msglen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					msglen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if msglen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + msglen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.SuspiciousTransaction = append(x.SuspiciousTransaction, &SuspiciousTransaction{})
				if err := options.Unmarshal(dAtA[iNdEx:postIndex], x.SuspiciousTransaction[len(x.SuspiciousTransaction)-1]); err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				iNdEx = postIndex
			case 2:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Pagination", wireType)
				}
				var msglen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					msglen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if msglen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + msglen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if x.Pagination == nil {
					x.Pagination = &v1beta1.PageResponse{}
				}
				if err := options.Unmarshal(dAtA[iNdEx:postIndex], x.Pagination); err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				iNdEx = postIndex
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var (
	md_QueryGetProtectKeyRequest          protoreflect.MessageDescriptor
	fd_QueryGetProtectKeyRequest_walletID protoreflect.FieldDescriptor
)

func init() {
	file_qadena_qadena_query_proto_init()
	md_QueryGetProtectKeyRequest = File_qadena_qadena_query_proto.Messages().ByName("QueryGetProtectKeyRequest")
	fd_QueryGetProtectKeyRequest_walletID = md_QueryGetProtectKeyRequest.Fields().ByName("walletID")
}

var _ protoreflect.Message = (*fastReflection_QueryGetProtectKeyRequest)(nil)

type fastReflection_QueryGetProtectKeyRequest QueryGetProtectKeyRequest

func (x *QueryGetProtectKeyRequest) ProtoReflect() protoreflect.Message {
	return (*fastReflection_QueryGetProtectKeyRequest)(x)
}

func (x *QueryGetProtectKeyRequest) slowProtoReflect() protoreflect.Message {
	mi := &file_qadena_qadena_query_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_QueryGetProtectKeyRequest_messageType fastReflection_QueryGetProtectKeyRequest_messageType
var _ protoreflect.MessageType = fastReflection_QueryGetProtectKeyRequest_messageType{}

type fastReflection_QueryGetProtectKeyRequest_messageType struct{}

func (x fastReflection_QueryGetProtectKeyRequest_messageType) Zero() protoreflect.Message {
	return (*fastReflection_QueryGetProtectKeyRequest)(nil)
}
func (x fastReflection_QueryGetProtectKeyRequest_messageType) New() protoreflect.Message {
	return new(fastReflection_QueryGetProtectKeyRequest)
}
func (x fastReflection_QueryGetProtectKeyRequest_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_QueryGetProtectKeyRequest
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_QueryGetProtectKeyRequest) Descriptor() protoreflect.MessageDescriptor {
	return md_QueryGetProtectKeyRequest
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_QueryGetProtectKeyRequest) Type() protoreflect.MessageType {
	return _fastReflection_QueryGetProtectKeyRequest_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_QueryGetProtectKeyRequest) New() protoreflect.Message {
	return new(fastReflection_QueryGetProtectKeyRequest)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_QueryGetProtectKeyRequest) Interface() protoreflect.ProtoMessage {
	return (*QueryGetProtectKeyRequest)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_QueryGetProtectKeyRequest) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.WalletID != "" {
		value := protoreflect.ValueOfString(x.WalletID)
		if !f(fd_QueryGetProtectKeyRequest_walletID, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_QueryGetProtectKeyRequest) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "qadena.qadena.QueryGetProtectKeyRequest.walletID":
		return x.WalletID != ""
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: qadena.qadena.QueryGetProtectKeyRequest"))
		}
		panic(fmt.Errorf("message qadena.qadena.QueryGetProtectKeyRequest does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_QueryGetProtectKeyRequest) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "qadena.qadena.QueryGetProtectKeyRequest.walletID":
		x.WalletID = ""
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: qadena.qadena.QueryGetProtectKeyRequest"))
		}
		panic(fmt.Errorf("message qadena.qadena.QueryGetProtectKeyRequest does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_QueryGetProtectKeyRequest) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "qadena.qadena.QueryGetProtectKeyRequest.walletID":
		value := x.WalletID
		return protoreflect.ValueOfString(value)
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: qadena.qadena.QueryGetProtectKeyRequest"))
		}
		panic(fmt.Errorf("message qadena.qadena.QueryGetProtectKeyRequest does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_QueryGetProtectKeyRequest) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "qadena.qadena.QueryGetProtectKeyRequest.walletID":
		x.WalletID = value.Interface().(string)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: qadena.qadena.QueryGetProtectKeyRequest"))
		}
		panic(fmt.Errorf("message qadena.qadena.QueryGetProtectKeyRequest does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_QueryGetProtectKeyRequest) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "qadena.qadena.QueryGetProtectKeyRequest.walletID":
		panic(fmt.Errorf("field walletID of message qadena.qadena.QueryGetProtectKeyRequest is not mutable"))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: qadena.qadena.QueryGetProtectKeyRequest"))
		}
		panic(fmt.Errorf("message qadena.qadena.QueryGetProtectKeyRequest does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_QueryGetProtectKeyRequest) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "qadena.qadena.QueryGetProtectKeyRequest.walletID":
		return protoreflect.ValueOfString("")
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: qadena.qadena.QueryGetProtectKeyRequest"))
		}
		panic(fmt.Errorf("message qadena.qadena.QueryGetProtectKeyRequest does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_QueryGetProtectKeyRequest) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in qadena.qadena.QueryGetProtectKeyRequest", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_QueryGetProtectKeyRequest) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_QueryGetProtectKeyRequest) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_QueryGetProtectKeyRequest) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_QueryGetProtectKeyRequest) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*QueryGetProtectKeyRequest)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		l = len(x.WalletID)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*QueryGetProtectKeyRequest)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if len(x.WalletID) > 0 {
			i -= len(x.WalletID)
			copy(dAtA[i:], x.WalletID)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.WalletID)))
			i--
			dAtA[i] = 0xa
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*QueryGetProtectKeyRequest)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: QueryGetProtectKeyRequest: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: QueryGetProtectKeyRequest: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field WalletID", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.WalletID = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var (
	md_QueryGetProtectKeyResponse            protoreflect.MessageDescriptor
	fd_QueryGetProtectKeyResponse_protectKey protoreflect.FieldDescriptor
)

func init() {
	file_qadena_qadena_query_proto_init()
	md_QueryGetProtectKeyResponse = File_qadena_qadena_query_proto.Messages().ByName("QueryGetProtectKeyResponse")
	fd_QueryGetProtectKeyResponse_protectKey = md_QueryGetProtectKeyResponse.Fields().ByName("protectKey")
}

var _ protoreflect.Message = (*fastReflection_QueryGetProtectKeyResponse)(nil)

type fastReflection_QueryGetProtectKeyResponse QueryGetProtectKeyResponse

func (x *QueryGetProtectKeyResponse) ProtoReflect() protoreflect.Message {
	return (*fastReflection_QueryGetProtectKeyResponse)(x)
}

func (x *QueryGetProtectKeyResponse) slowProtoReflect() protoreflect.Message {
	mi := &file_qadena_qadena_query_proto_msgTypes[31]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_QueryGetProtectKeyResponse_messageType fastReflection_QueryGetProtectKeyResponse_messageType
var _ protoreflect.MessageType = fastReflection_QueryGetProtectKeyResponse_messageType{}

type fastReflection_QueryGetProtectKeyResponse_messageType struct{}

func (x fastReflection_QueryGetProtectKeyResponse_messageType) Zero() protoreflect.Message {
	return (*fastReflection_QueryGetProtectKeyResponse)(nil)
}
func (x fastReflection_QueryGetProtectKeyResponse_messageType) New() protoreflect.Message {
	return new(fastReflection_QueryGetProtectKeyResponse)
}
func (x fastReflection_QueryGetProtectKeyResponse_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_QueryGetProtectKeyResponse
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_QueryGetProtectKeyResponse) Descriptor() protoreflect.MessageDescriptor {
	return md_QueryGetProtectKeyResponse
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_QueryGetProtectKeyResponse) Type() protoreflect.MessageType {
	return _fastReflection_QueryGetProtectKeyResponse_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_QueryGetProtectKeyResponse) New() protoreflect.Message {
	return new(fastReflection_QueryGetProtectKeyResponse)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_QueryGetProtectKeyResponse) Interface() protoreflect.ProtoMessage {
	return (*QueryGetProtectKeyResponse)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_QueryGetProtectKeyResponse) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.ProtectKey != nil {
		value := protoreflect.ValueOfMessage(x.ProtectKey.ProtoReflect())
		if !f(fd_QueryGetProtectKeyResponse_protectKey, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_QueryGetProtectKeyResponse) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "qadena.qadena.QueryGetProtectKeyResponse.protectKey":
		return x.ProtectKey != nil
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: qadena.qadena.QueryGetProtectKeyResponse"))
		}
		panic(fmt.Errorf("message qadena.qadena.QueryGetProtectKeyResponse does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_QueryGetProtectKeyResponse) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "qadena.qadena.QueryGetProtectKeyResponse.protectKey":
		x.ProtectKey = nil
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: qadena.qadena.QueryGetProtectKeyResponse"))
		}
		panic(fmt.Errorf("message qadena.qadena.QueryGetProtectKeyResponse does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_QueryGetProtectKeyResponse) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "qadena.qadena.QueryGetProtectKeyResponse.protectKey":
		value := x.ProtectKey
		return protoreflect.ValueOfMessage(value.ProtoReflect())
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: qadena.qadena.QueryGetProtectKeyResponse"))
		}
		panic(fmt.Errorf("message qadena.qadena.QueryGetProtectKeyResponse does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_QueryGetProtectKeyResponse) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "qadena.qadena.QueryGetProtectKeyResponse.protectKey":
		x.ProtectKey = value.Message().Interface().(*ProtectKey)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: qadena.qadena.QueryGetProtectKeyResponse"))
		}
		panic(fmt.Errorf("message qadena.qadena.QueryGetProtectKeyResponse does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_QueryGetProtectKeyResponse) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "qadena.qadena.QueryGetProtectKeyResponse.protectKey":
		if x.ProtectKey == nil {
			x.ProtectKey = new(ProtectKey)
		}
		return protoreflect.ValueOfMessage(x.ProtectKey.ProtoReflect())
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: qadena.qadena.QueryGetProtectKeyResponse"))
		}
		panic(fmt.Errorf("message qadena.qadena.QueryGetProtectKeyResponse does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_QueryGetProtectKeyResponse) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "qadena.qadena.QueryGetProtectKeyResponse.protectKey":
		m := new(ProtectKey)
		return protoreflect.ValueOfMessage(m.ProtoReflect())
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: qadena.qadena.QueryGetProtectKeyResponse"))
		}
		panic(fmt.Errorf("message qadena.qadena.QueryGetProtectKeyResponse does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_QueryGetProtectKeyResponse) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in qadena.qadena.QueryGetProtectKeyResponse", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_QueryGetProtectKeyResponse) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_QueryGetProtectKeyResponse) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_QueryGetProtectKeyResponse) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_QueryGetProtectKeyResponse) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*QueryGetProtectKeyResponse)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		if x.ProtectKey != nil {
			l = options.Size(x.ProtectKey)
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*QueryGetProtectKeyResponse)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if x.ProtectKey != nil {
			encoded, err := options.Marshal(x.ProtectKey)
			if err != nil {
				return protoiface.MarshalOutput{
					NoUnkeyedLiterals: input.NoUnkeyedLiterals,
					Buf:               input.Buf,
				}, err
			}
			i -= len(encoded)
			copy(dAtA[i:], encoded)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(encoded)))
			i--
			dAtA[i] = 0xa
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*QueryGetProtectKeyResponse)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: QueryGetProtectKeyResponse: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: QueryGetProtectKeyResponse: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field ProtectKey", wireType)
				}
				var msglen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					msglen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if msglen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + msglen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if x.ProtectKey == nil {
					x.ProtectKey = &ProtectKey{}
				}
				if err := options.Unmarshal(dAtA[iNdEx:postIndex], x.ProtectKey); err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				iNdEx = postIndex
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var (
	md_QueryAllProtectKeyRequest              protoreflect.MessageDescriptor
	fd_QueryAllProtectKeyRequest_pagination   protoreflect.FieldDescriptor
	fd_QueryAllProtectKeyRequest_credentialID protoreflect.FieldDescriptor
)

func init() {
	file_qadena_qadena_query_proto_init()
	md_QueryAllProtectKeyRequest = File_qadena_qadena_query_proto.Messages().ByName("QueryAllProtectKeyRequest")
	fd_QueryAllProtectKeyRequest_pagination = md_QueryAllProtectKeyRequest.Fields().ByName("pagination")
	fd_QueryAllProtectKeyRequest_credentialID = md_QueryAllProtectKeyRequest.Fields().ByName("credentialID")
}

var _ protoreflect.Message = (*fastReflection_QueryAllProtectKeyRequest)(nil)

type fastReflection_QueryAllProtectKeyRequest QueryAllProtectKeyRequest

func (x *QueryAllProtectKeyRequest) ProtoReflect() protoreflect.Message {
	return (*fastReflection_QueryAllProtectKeyRequest)(x)
}

func (x *QueryAllProtectKeyRequest) slowProtoReflect() protoreflect.Message {
	mi := &file_qadena_qadena_query_proto_msgTypes[32]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_QueryAllProtectKeyRequest_messageType fastReflection_QueryAllProtectKeyRequest_messageType
var _ protoreflect.MessageType = fastReflection_QueryAllProtectKeyRequest_messageType{}

type fastReflection_QueryAllProtectKeyRequest_messageType struct{}

func (x fastReflection_QueryAllProtectKeyRequest_messageType) Zero() protoreflect.Message {
	return (*fastReflection_QueryAllProtectKeyRequest)(nil)
}
func (x fastReflection_QueryAllProtectKeyRequest_messageType) New() protoreflect.Message {
	return new(fastReflection_QueryAllProtectKeyRequest)
}
func (x fastReflection_QueryAllProtectKeyRequest_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_QueryAllProtectKeyRequest
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_QueryAllProtectKeyRequest) Descriptor() protoreflect.MessageDescriptor {
	return md_QueryAllProtectKeyRequest
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_QueryAllProtectKeyRequest) Type() protoreflect.MessageType {
	return _fastReflection_QueryAllProtectKeyRequest_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_QueryAllProtectKeyRequest) New() protoreflect.Message {
	return new(fastReflection_QueryAllProtectKeyRequest)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_QueryAllProtectKeyRequest) Interface() protoreflect.ProtoMessage {
	return (*QueryAllProtectKeyRequest)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_QueryAllProtectKeyRequest) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.Pagination != nil {
		value := protoreflect.ValueOfMessage(x.Pagination.ProtoReflect())
		if !f(fd_QueryAllProtectKeyRequest_pagination, value) {
			return
		}
	}
	if x.CredentialID != "" {
		value := protoreflect.ValueOfString(x.CredentialID)
		if !f(fd_QueryAllProtectKeyRequest_credentialID, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_QueryAllProtectKeyRequest) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "qadena.qadena.QueryAllProtectKeyRequest.pagination":
		return x.Pagination != nil
	case "qadena.qadena.QueryAllProtectKeyRequest.credentialID":
		return x.CredentialID != ""
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: qadena.qadena.QueryAllProtectKeyRequest"))
		}
		panic(fmt.Errorf("message qadena.qadena.QueryAllProtectKeyRequest does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_QueryAllProtectKeyRequest) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "qadena.qadena.QueryAllProtectKeyRequest.pagination":
		x.Pagination = nil
	case "qadena.qadena.QueryAllProtectKeyRequest.credentialID":
		x.CredentialID = ""
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: qadena.qadena.QueryAllProtectKeyRequest"))
		}
		panic(fmt.Errorf("message qadena.qadena.QueryAllProtectKeyRequest does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_QueryAllProtectKeyRequest) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "qadena.qadena.QueryAllProtectKeyRequest.pagination":
		value := x.Pagination
		return protoreflect.ValueOfMessage(value.ProtoReflect())
	case "qadena.qadena.QueryAllProtectKeyRequest.credentialID":
		value := x.CredentialID
		return protoreflect.ValueOfString(value)
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: qadena.qadena.QueryAllProtectKeyRequest"))
		}
		panic(fmt.Errorf("message qadena.qadena.QueryAllProtectKeyRequest does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_QueryAllProtectKeyRequest) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "qadena.qadena.QueryAllProtectKeyRequest.pagination":
		x.Pagination = value.Message().Interface().(*v1beta1.PageRequest)
	case "qadena.qadena.QueryAllProtectKeyRequest.credentialID":
		x.CredentialID = value.Interface().(string)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: qadena.qadena.QueryAllProtectKeyRequest"))
		}
		panic(fmt.Errorf("message qadena.qadena.QueryAllProtectKeyRequest does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_QueryAllProtectKeyRequest) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "qadena.qadena.QueryAllProtectKeyRequest.pagination":
		if x.Pagination == nil {
			x.Pagination = new(v1beta1.PageRequest)
		}
		return protoreflect.ValueOfMessage(x.Pagination.ProtoReflect())
	case "qadena.qadena.QueryAllProtectKeyRequest.credentialID":
		panic(fmt.Errorf("field credentialID of message qadena.qadena.QueryAllProtectKeyRequest is not mutable"))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: qadena.qadena.QueryAllProtectKeyRequest"))
		}
		panic(fmt.Errorf("message qadena.qadena.QueryAllProtectKeyRequest does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_QueryAllProtectKeyRequest) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "qadena.qadena.QueryAllProtectKeyRequest.pagination":
		m := new(v1beta1.PageRequest)
		return protoreflect.ValueOfMessage(m.ProtoReflect())
	case "qadena.qadena.QueryAllProtectKeyRequest.credentialID":
		return protoreflect.ValueOfString("")
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: qadena.qadena.QueryAllProtectKeyRequest"))
		}
		panic(fmt.Errorf("message qadena.qadena.QueryAllProtectKeyRequest does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_QueryAllProtectKeyRequest) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in qadena.qadena.QueryAllProtectKeyRequest", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_QueryAllProtectKeyRequest) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_QueryAllProtectKeyRequest) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_QueryAllProtectKeyRequest) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_QueryAllProtectKeyRequest) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*QueryAllProtectKeyRequest)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		if x.Pagination != nil {
			l = options.Size(x.Pagination)
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.CredentialID)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*QueryAllProtectKeyRequest)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if len(x.CredentialID) > 0 {
			i -= len(x.CredentialID)
			copy(dAtA[i:], x.CredentialID)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.CredentialID)))
			i--
			dAtA[i] = 0x12
		}
		if x.Pagination != nil {
			encoded, err := options.Marshal(x.Pagination)
			if err != nil {
				return protoiface.MarshalOutput{
					NoUnkeyedLiterals: input.NoUnkeyedLiterals,
					Buf:               input.Buf,
				}, err
			}
			i -= len(encoded)
			copy(dAtA[i:], encoded)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(encoded)))
			i--
			dAtA[i] = 0xa
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*QueryAllProtectKeyRequest)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: QueryAllProtectKeyRequest: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: QueryAllProtectKeyRequest: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Pagination", wireType)
				}
				var msglen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					msglen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if msglen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + msglen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if x.Pagination == nil {
					x.Pagination = &v1beta1.PageRequest{}
				}
				if err := options.Unmarshal(dAtA[iNdEx:postIndex], x.Pagination); err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				iNdEx = postIndex
			case 2:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field CredentialID", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.CredentialID = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var _ protoreflect.List = (*_QueryAllProtectKeyResponse_1_list)(nil)

type _QueryAllProtectKeyResponse_1_list struct {
	list *[]*ProtectKey
}

func (x *_QueryAllProtectKeyResponse_1_list) Len() int {
	if x.list == nil {
		return 0
	}
	return len(*x.list)
}

func (x *_QueryAllProtectKeyResponse_1_list) Get(i int) protoreflect.Value {
	return protoreflect.ValueOfMessage((*x.list)[i].ProtoReflect())
}

func (x *_QueryAllProtectKeyResponse_1_list) Set(i int, value protoreflect.Value) {
	valueUnwrapped := value.Message()
	concreteValue := valueUnwrapped.Interface().(*ProtectKey)
	(*x.list)[i] = concreteValue
}

func (x *_QueryAllProtectKeyResponse_1_list) Append(value protoreflect.Value) {
	valueUnwrapped := value.Message()
	concreteValue := valueUnwrapped.Interface().(*ProtectKey)
	*x.list = append(*x.list, concreteValue)
}

func (x *_QueryAllProtectKeyResponse_1_list) AppendMutable() protoreflect.Value {
	v := new(ProtectKey)
	*x.list = append(*x.list, v)
	return protoreflect.ValueOfMessage(v.ProtoReflect())
}

func (x *_QueryAllProtectKeyResponse_1_list) Truncate(n int) {
	for i := n; i < len(*x.list); i++ {
		(*x.list)[i] = nil
	}
	*x.list = (*x.list)[:n]
}

func (x *_QueryAllProtectKeyResponse_1_list) NewElement() protoreflect.Value {
	v := new(ProtectKey)
	return protoreflect.ValueOfMessage(v.ProtoReflect())
}

func (x *_QueryAllProtectKeyResponse_1_list) IsValid() bool {
	return x.list != nil
}

var (
	md_QueryAllProtectKeyResponse            protoreflect.MessageDescriptor
	fd_QueryAllProtectKeyResponse_protectKey protoreflect.FieldDescriptor
	fd_QueryAllProtectKeyResponse_pagination protoreflect.FieldDescriptor
)

func init() {
	file_qadena_qadena_query_proto_init()
	md_QueryAllProtectKeyResponse = File_qadena_qadena_query_proto.Messages().ByName("QueryAllProtectKeyResponse")
	fd_QueryAllProtectKeyResponse_protectKey = md_QueryAllProtectKeyResponse.Fields().ByName("protectKey")
	fd_QueryAllProtectKeyResponse_pagination = md_QueryAllProtectKeyResponse.Fields().ByName("pagination")
}

var _ protoreflect.Message = (*fastReflection_QueryAllProtectKeyResponse)(nil)

type fastReflection_QueryAllProtectKeyResponse QueryAllProtectKeyResponse

func (x *QueryAllProtectKeyResponse) ProtoReflect() protoreflect.Message {
	return (*fastReflection_QueryAllProtectKeyResponse)(x)
}

func (x *QueryAllProtectKeyResponse) slowProtoReflect() protoreflect.Message {
	mi := &file_qadena_qadena_query_proto_msgTypes[33]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_QueryAllProtectKeyResponse_messageType fastReflection_QueryAllProtectKeyResponse_messageType
var _ protoreflect.MessageType = fastReflection_QueryAllProtectKeyResponse_messageType{}

type fastReflection_QueryAllProtectKeyResponse_messageType struct{}

func (x fastReflection_QueryAllProtectKeyResponse_messageType) Zero() protoreflect.Message {
	return (*fastReflection_QueryAllProtectKeyResponse)(nil)
}
func (x fastReflection_QueryAllProtectKeyResponse_messageType) New() protoreflect.Message {
	return new(fastReflection_QueryAllProtectKeyResponse)
}
func (x fastReflection_QueryAllProtectKeyResponse_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_QueryAllProtectKeyResponse
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_QueryAllProtectKeyResponse) Descriptor() protoreflect.MessageDescriptor {
	return md_QueryAllProtectKeyResponse
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_QueryAllProtectKeyResponse) Type() protoreflect.MessageType {
	return _fastReflection_QueryAllProtectKeyResponse_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_QueryAllProtectKeyResponse) New() protoreflect.Message {
	return new(fastReflection_QueryAllProtectKeyResponse)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_QueryAllProtectKeyResponse) Interface() protoreflect.ProtoMessage {
	return (*QueryAllProtectKeyResponse)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_QueryAllProtectKeyResponse) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if len(x.ProtectKey) != 0 {
		value := protoreflect.ValueOfList(&_QueryAllProtectKeyResponse_1_list{list: &x.ProtectKey})
		if !f(fd_QueryAllProtectKeyResponse_protectKey, value) {
			return
		}
	}
	if x.Pagination != nil {
		value := protoreflect.ValueOfMessage(x.Pagination.ProtoReflect())
		if !f(fd_QueryAllProtectKeyResponse_pagination, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_QueryAllProtectKeyResponse) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "qadena.qadena.QueryAllProtectKeyResponse.protectKey":
		return len(x.ProtectKey) != 0
	case "qadena.qadena.QueryAllProtectKeyResponse.pagination":
		return x.Pagination != nil
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: qadena.qadena.QueryAllProtectKeyResponse"))
		}
		panic(fmt.Errorf("message qadena.qadena.QueryAllProtectKeyResponse does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_QueryAllProtectKeyResponse) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "qadena.qadena.QueryAllProtectKeyResponse.protectKey":
		x.ProtectKey = nil
	case "qadena.qadena.QueryAllProtectKeyResponse.pagination":
		x.Pagination = nil
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: qadena.qadena.QueryAllProtectKeyResponse"))
		}
		panic(fmt.Errorf("message qadena.qadena.QueryAllProtectKeyResponse does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_QueryAllProtectKeyResponse) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "qadena.qadena.QueryAllProtectKeyResponse.protectKey":
		if len(x.ProtectKey) == 0 {
			return protoreflect.ValueOfList(&_QueryAllProtectKeyResponse_1_list{})
		}
		listValue := &_QueryAllProtectKeyResponse_1_list{list: &x.ProtectKey}
		return protoreflect.ValueOfList(listValue)
	case "qadena.qadena.QueryAllProtectKeyResponse.pagination":
		value := x.Pagination
		return protoreflect.ValueOfMessage(value.ProtoReflect())
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: qadena.qadena.QueryAllProtectKeyResponse"))
		}
		panic(fmt.Errorf("message qadena.qadena.QueryAllProtectKeyResponse does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_QueryAllProtectKeyResponse) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "qadena.qadena.QueryAllProtectKeyResponse.protectKey":
		lv := value.List()
		clv := lv.(*_QueryAllProtectKeyResponse_1_list)
		x.ProtectKey = *clv.list
	case "qadena.qadena.QueryAllProtectKeyResponse.pagination":
		x.Pagination = value.Message().Interface().(*v1beta1.PageResponse)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: qadena.qadena.QueryAllProtectKeyResponse"))
		}
		panic(fmt.Errorf("message qadena.qadena.QueryAllProtectKeyResponse does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_QueryAllProtectKeyResponse) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "qadena.qadena.QueryAllProtectKeyResponse.protectKey":
		if x.ProtectKey == nil {
			x.ProtectKey = []*ProtectKey{}
		}
		value := &_QueryAllProtectKeyResponse_1_list{list: &x.ProtectKey}
		return protoreflect.ValueOfList(value)
	case "qadena.qadena.QueryAllProtectKeyResponse.pagination":
		if x.Pagination == nil {
			x.Pagination = new(v1beta1.PageResponse)
		}
		return protoreflect.ValueOfMessage(x.Pagination.ProtoReflect())
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: qadena.qadena.QueryAllProtectKeyResponse"))
		}
		panic(fmt.Errorf("message qadena.qadena.QueryAllProtectKeyResponse does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_QueryAllProtectKeyResponse) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "qadena.qadena.QueryAllProtectKeyResponse.protectKey":
		list := []*ProtectKey{}
		return protoreflect.ValueOfList(&_QueryAllProtectKeyResponse_1_list{list: &list})
	case "qadena.qadena.QueryAllProtectKeyResponse.pagination":
		m := new(v1beta1.PageResponse)
		return protoreflect.ValueOfMessage(m.ProtoReflect())
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: qadena.qadena.QueryAllProtectKeyResponse"))
		}
		panic(fmt.Errorf("message qadena.qadena.QueryAllProtectKeyResponse does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_QueryAllProtectKeyResponse) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in qadena.qadena.QueryAllProtectKeyResponse", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_QueryAllProtectKeyResponse) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_QueryAllProtectKeyResponse) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_QueryAllProtectKeyResponse) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_QueryAllProtectKeyResponse) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*QueryAllProtectKeyResponse)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		if len(x.ProtectKey) > 0 {
			for _, e := range x.ProtectKey {
				l = options.Size(e)
				n += 1 + l + runtime.Sov(uint64(l))
			}
		}
		if x.Pagination != nil {
			l = options.Size(x.Pagination)
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*QueryAllProtectKeyResponse)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if x.Pagination != nil {
			encoded, err := options.Marshal(x.Pagination)
			if err != nil {
				return protoiface.MarshalOutput{
					NoUnkeyedLiterals: input.NoUnkeyedLiterals,
					Buf:               input.Buf,
				}, err
			}
			i -= len(encoded)
			copy(dAtA[i:], encoded)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(encoded)))
			i--
			dAtA[i] = 0x12
		}
		if len(x.ProtectKey) > 0 {
			for iNdEx := len(x.ProtectKey) - 1; iNdEx >= 0; iNdEx-- {
				encoded, err := options.Marshal(x.ProtectKey[iNdEx])
				if err != nil {
					return protoiface.MarshalOutput{
						NoUnkeyedLiterals: input.NoUnkeyedLiterals,
						Buf:               input.Buf,
					}, err
				}
				i -= len(encoded)
				copy(dAtA[i:], encoded)
				i = runtime.EncodeVarint(dAtA, i, uint64(len(encoded)))
				i--
				dAtA[i] = 0xa
			}
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*QueryAllProtectKeyResponse)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: QueryAllProtectKeyResponse: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: QueryAllProtectKeyResponse: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field ProtectKey", wireType)
				}
				var msglen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					msglen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if msglen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + msglen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.ProtectKey = append(x.ProtectKey, &ProtectKey{})
				if err := options.Unmarshal(dAtA[iNdEx:postIndex], x.ProtectKey[len(x.ProtectKey)-1]); err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				iNdEx = postIndex
			case 2:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Pagination", wireType)
				}
				var msglen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					msglen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if msglen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + msglen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if x.Pagination == nil {
					x.Pagination = &v1beta1.PageResponse{}
				}
				if err := options.Unmarshal(dAtA[iNdEx:postIndex], x.Pagination); err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				iNdEx = postIndex
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var (
	md_QueryGetRecoverKeyRequest          protoreflect.MessageDescriptor
	fd_QueryGetRecoverKeyRequest_walletID protoreflect.FieldDescriptor
)

func init() {
	file_qadena_qadena_query_proto_init()
	md_QueryGetRecoverKeyRequest = File_qadena_qadena_query_proto.Messages().ByName("QueryGetRecoverKeyRequest")
	fd_QueryGetRecoverKeyRequest_walletID = md_QueryGetRecoverKeyRequest.Fields().ByName("walletID")
}

var _ protoreflect.Message = (*fastReflection_QueryGetRecoverKeyRequest)(nil)

type fastReflection_QueryGetRecoverKeyRequest QueryGetRecoverKeyRequest

func (x *QueryGetRecoverKeyRequest) ProtoReflect() protoreflect.Message {
	return (*fastReflection_QueryGetRecoverKeyRequest)(x)
}

func (x *QueryGetRecoverKeyRequest) slowProtoReflect() protoreflect.Message {
	mi := &file_qadena_qadena_query_proto_msgTypes[34]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_QueryGetRecoverKeyRequest_messageType fastReflection_QueryGetRecoverKeyRequest_messageType
var _ protoreflect.MessageType = fastReflection_QueryGetRecoverKeyRequest_messageType{}

type fastReflection_QueryGetRecoverKeyRequest_messageType struct{}

func (x fastReflection_QueryGetRecoverKeyRequest_messageType) Zero() protoreflect.Message {
	return (*fastReflection_QueryGetRecoverKeyRequest)(nil)
}
func (x fastReflection_QueryGetRecoverKeyRequest_messageType) New() protoreflect.Message {
	return new(fastReflection_QueryGetRecoverKeyRequest)
}
func (x fastReflection_QueryGetRecoverKeyRequest_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_QueryGetRecoverKeyRequest
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_QueryGetRecoverKeyRequest) Descriptor() protoreflect.MessageDescriptor {
	return md_QueryGetRecoverKeyRequest
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_QueryGetRecoverKeyRequest) Type() protoreflect.MessageType {
	return _fastReflection_QueryGetRecoverKeyRequest_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_QueryGetRecoverKeyRequest) New() protoreflect.Message {
	return new(fastReflection_QueryGetRecoverKeyRequest)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_QueryGetRecoverKeyRequest) Interface() protoreflect.ProtoMessage {
	return (*QueryGetRecoverKeyRequest)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_QueryGetRecoverKeyRequest) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.WalletID != "" {
		value := protoreflect.ValueOfString(x.WalletID)
		if !f(fd_QueryGetRecoverKeyRequest_walletID, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_QueryGetRecoverKeyRequest) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "qadena.qadena.QueryGetRecoverKeyRequest.walletID":
		return x.WalletID != ""
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: qadena.qadena.QueryGetRecoverKeyRequest"))
		}
		panic(fmt.Errorf("message qadena.qadena.QueryGetRecoverKeyRequest does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_QueryGetRecoverKeyRequest) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "qadena.qadena.QueryGetRecoverKeyRequest.walletID":
		x.WalletID = ""
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: qadena.qadena.QueryGetRecoverKeyRequest"))
		}
		panic(fmt.Errorf("message qadena.qadena.QueryGetRecoverKeyRequest does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_QueryGetRecoverKeyRequest) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "qadena.qadena.QueryGetRecoverKeyRequest.walletID":
		value := x.WalletID
		return protoreflect.ValueOfString(value)
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: qadena.qadena.QueryGetRecoverKeyRequest"))
		}
		panic(fmt.Errorf("message qadena.qadena.QueryGetRecoverKeyRequest does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_QueryGetRecoverKeyRequest) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "qadena.qadena.QueryGetRecoverKeyRequest.walletID":
		x.WalletID = value.Interface().(string)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: qadena.qadena.QueryGetRecoverKeyRequest"))
		}
		panic(fmt.Errorf("message qadena.qadena.QueryGetRecoverKeyRequest does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_QueryGetRecoverKeyRequest) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "qadena.qadena.QueryGetRecoverKeyRequest.walletID":
		panic(fmt.Errorf("field walletID of message qadena.qadena.QueryGetRecoverKeyRequest is not mutable"))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: qadena.qadena.QueryGetRecoverKeyRequest"))
		}
		panic(fmt.Errorf("message qadena.qadena.QueryGetRecoverKeyRequest does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_QueryGetRecoverKeyRequest) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "qadena.qadena.QueryGetRecoverKeyRequest.walletID":
		return protoreflect.ValueOfString("")
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: qadena.qadena.QueryGetRecoverKeyRequest"))
		}
		panic(fmt.Errorf("message qadena.qadena.QueryGetRecoverKeyRequest does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_QueryGetRecoverKeyRequest) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in qadena.qadena.QueryGetRecoverKeyRequest", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_QueryGetRecoverKeyRequest) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_QueryGetRecoverKeyRequest) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_QueryGetRecoverKeyRequest) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_QueryGetRecoverKeyRequest) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*QueryGetRecoverKeyRequest)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		l = len(x.WalletID)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*QueryGetRecoverKeyRequest)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if len(x.WalletID) > 0 {
			i -= len(x.WalletID)
			copy(dAtA[i:], x.WalletID)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.WalletID)))
			i--
			dAtA[i] = 0xa
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*QueryGetRecoverKeyRequest)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: QueryGetRecoverKeyRequest: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: QueryGetRecoverKeyRequest: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field WalletID", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.WalletID = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var (
	md_QueryGetRecoverKeyResponse            protoreflect.MessageDescriptor
	fd_QueryGetRecoverKeyResponse_recoverKey protoreflect.FieldDescriptor
)

func init() {
	file_qadena_qadena_query_proto_init()
	md_QueryGetRecoverKeyResponse = File_qadena_qadena_query_proto.Messages().ByName("QueryGetRecoverKeyResponse")
	fd_QueryGetRecoverKeyResponse_recoverKey = md_QueryGetRecoverKeyResponse.Fields().ByName("recoverKey")
}

var _ protoreflect.Message = (*fastReflection_QueryGetRecoverKeyResponse)(nil)

type fastReflection_QueryGetRecoverKeyResponse QueryGetRecoverKeyResponse

func (x *QueryGetRecoverKeyResponse) ProtoReflect() protoreflect.Message {
	return (*fastReflection_QueryGetRecoverKeyResponse)(x)
}

func (x *QueryGetRecoverKeyResponse) slowProtoReflect() protoreflect.Message {
	mi := &file_qadena_qadena_query_proto_msgTypes[35]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_QueryGetRecoverKeyResponse_messageType fastReflection_QueryGetRecoverKeyResponse_messageType
var _ protoreflect.MessageType = fastReflection_QueryGetRecoverKeyResponse_messageType{}

type fastReflection_QueryGetRecoverKeyResponse_messageType struct{}

func (x fastReflection_QueryGetRecoverKeyResponse_messageType) Zero() protoreflect.Message {
	return (*fastReflection_QueryGetRecoverKeyResponse)(nil)
}
func (x fastReflection_QueryGetRecoverKeyResponse_messageType) New() protoreflect.Message {
	return new(fastReflection_QueryGetRecoverKeyResponse)
}
func (x fastReflection_QueryGetRecoverKeyResponse_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_QueryGetRecoverKeyResponse
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_QueryGetRecoverKeyResponse) Descriptor() protoreflect.MessageDescriptor {
	return md_QueryGetRecoverKeyResponse
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_QueryGetRecoverKeyResponse) Type() protoreflect.MessageType {
	return _fastReflection_QueryGetRecoverKeyResponse_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_QueryGetRecoverKeyResponse) New() protoreflect.Message {
	return new(fastReflection_QueryGetRecoverKeyResponse)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_QueryGetRecoverKeyResponse) Interface() protoreflect.ProtoMessage {
	return (*QueryGetRecoverKeyResponse)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_QueryGetRecoverKeyResponse) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.RecoverKey != nil {
		value := protoreflect.ValueOfMessage(x.RecoverKey.ProtoReflect())
		if !f(fd_QueryGetRecoverKeyResponse_recoverKey, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_QueryGetRecoverKeyResponse) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "qadena.qadena.QueryGetRecoverKeyResponse.recoverKey":
		return x.RecoverKey != nil
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: qadena.qadena.QueryGetRecoverKeyResponse"))
		}
		panic(fmt.Errorf("message qadena.qadena.QueryGetRecoverKeyResponse does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_QueryGetRecoverKeyResponse) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "qadena.qadena.QueryGetRecoverKeyResponse.recoverKey":
		x.RecoverKey = nil
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: qadena.qadena.QueryGetRecoverKeyResponse"))
		}
		panic(fmt.Errorf("message qadena.qadena.QueryGetRecoverKeyResponse does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_QueryGetRecoverKeyResponse) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "qadena.qadena.QueryGetRecoverKeyResponse.recoverKey":
		value := x.RecoverKey
		return protoreflect.ValueOfMessage(value.ProtoReflect())
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: qadena.qadena.QueryGetRecoverKeyResponse"))
		}
		panic(fmt.Errorf("message qadena.qadena.QueryGetRecoverKeyResponse does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_QueryGetRecoverKeyResponse) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "qadena.qadena.QueryGetRecoverKeyResponse.recoverKey":
		x.RecoverKey = value.Message().Interface().(*RecoverKey)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: qadena.qadena.QueryGetRecoverKeyResponse"))
		}
		panic(fmt.Errorf("message qadena.qadena.QueryGetRecoverKeyResponse does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_QueryGetRecoverKeyResponse) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "qadena.qadena.QueryGetRecoverKeyResponse.recoverKey":
		if x.RecoverKey == nil {
			x.RecoverKey = new(RecoverKey)
		}
		return protoreflect.ValueOfMessage(x.RecoverKey.ProtoReflect())
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: qadena.qadena.QueryGetRecoverKeyResponse"))
		}
		panic(fmt.Errorf("message qadena.qadena.QueryGetRecoverKeyResponse does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_QueryGetRecoverKeyResponse) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "qadena.qadena.QueryGetRecoverKeyResponse.recoverKey":
		m := new(RecoverKey)
		return protoreflect.ValueOfMessage(m.ProtoReflect())
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: qadena.qadena.QueryGetRecoverKeyResponse"))
		}
		panic(fmt.Errorf("message qadena.qadena.QueryGetRecoverKeyResponse does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_QueryGetRecoverKeyResponse) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in qadena.qadena.QueryGetRecoverKeyResponse", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_QueryGetRecoverKeyResponse) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_QueryGetRecoverKeyResponse) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_QueryGetRecoverKeyResponse) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_QueryGetRecoverKeyResponse) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*QueryGetRecoverKeyResponse)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		if x.RecoverKey != nil {
			l = options.Size(x.RecoverKey)
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*QueryGetRecoverKeyResponse)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if x.RecoverKey != nil {
			encoded, err := options.Marshal(x.RecoverKey)
			if err != nil {
				return protoiface.MarshalOutput{
					NoUnkeyedLiterals: input.NoUnkeyedLiterals,
					Buf:               input.Buf,
				}, err
			}
			i -= len(encoded)
			copy(dAtA[i:], encoded)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(encoded)))
			i--
			dAtA[i] = 0xa
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*QueryGetRecoverKeyResponse)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: QueryGetRecoverKeyResponse: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: QueryGetRecoverKeyResponse: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field RecoverKey", wireType)
				}
				var msglen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					msglen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if msglen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + msglen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if x.RecoverKey == nil {
					x.RecoverKey = &RecoverKey{}
				}
				if err := options.Unmarshal(dAtA[iNdEx:postIndex], x.RecoverKey); err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				iNdEx = postIndex
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var (
	md_QueryAllRecoverKeyRequest              protoreflect.MessageDescriptor
	fd_QueryAllRecoverKeyRequest_pagination   protoreflect.FieldDescriptor
	fd_QueryAllRecoverKeyRequest_credentialID protoreflect.FieldDescriptor
)

func init() {
	file_qadena_qadena_query_proto_init()
	md_QueryAllRecoverKeyRequest = File_qadena_qadena_query_proto.Messages().ByName("QueryAllRecoverKeyRequest")
	fd_QueryAllRecoverKeyRequest_pagination = md_QueryAllRecoverKeyRequest.Fields().ByName("pagination")
	fd_QueryAllRecoverKeyRequest_credentialID = md_QueryAllRecoverKeyRequest.Fields().ByName("credentialID")
}

var _ protoreflect.Message = (*fastReflection_QueryAllRecoverKeyRequest)(nil)

type fastReflection_QueryAllRecoverKeyRequest QueryAllRecoverKeyRequest

func (x *QueryAllRecoverKeyRequest) ProtoReflect() protoreflect.Message {
	return (*fastReflection_QueryAllRecoverKeyRequest)(x)
}

func (x *QueryAllRecoverKeyRequest) slowProtoReflect() protoreflect.Message {
	mi := &file_qadena_qadena_query_proto_msgTypes[36]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_QueryAllRecoverKeyRequest_messageType fastReflection_QueryAllRecoverKeyRequest_messageType
var _ protoreflect.MessageType = fastReflection_QueryAllRecoverKeyRequest_messageType{}

type fastReflection_QueryAllRecoverKeyRequest_messageType struct{}

func (x fastReflection_QueryAllRecoverKeyRequest_messageType) Zero() protoreflect.Message {
	return (*fastReflection_QueryAllRecoverKeyRequest)(nil)
}
func (x fastReflection_QueryAllRecoverKeyRequest_messageType) New() protoreflect.Message {
	return new(fastReflection_QueryAllRecoverKeyRequest)
}
func (x fastReflection_QueryAllRecoverKeyRequest_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_QueryAllRecoverKeyRequest
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_QueryAllRecoverKeyRequest) Descriptor() protoreflect.MessageDescriptor {
	return md_QueryAllRecoverKeyRequest
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_QueryAllRecoverKeyRequest) Type() protoreflect.MessageType {
	return _fastReflection_QueryAllRecoverKeyRequest_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_QueryAllRecoverKeyRequest) New() protoreflect.Message {
	return new(fastReflection_QueryAllRecoverKeyRequest)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_QueryAllRecoverKeyRequest) Interface() protoreflect.ProtoMessage {
	return (*QueryAllRecoverKeyRequest)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_QueryAllRecoverKeyRequest) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.Pagination != nil {
		value := protoreflect.ValueOfMessage(x.Pagination.ProtoReflect())
		if !f(fd_QueryAllRecoverKeyRequest_pagination, value) {
			return
		}
	}
	if x.CredentialID != "" {
		value := protoreflect.ValueOfString(x.CredentialID)
		if !f(fd_QueryAllRecoverKeyRequest_credentialID, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_QueryAllRecoverKeyRequest) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "qadena.qadena.QueryAllRecoverKeyRequest.pagination":
		return x.Pagination != nil
	case "qadena.qadena.QueryAllRecoverKeyRequest.credentialID":
		return x.CredentialID != ""
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: qadena.qadena.QueryAllRecoverKeyRequest"))
		}
		panic(fmt.Errorf("message qadena.qadena.QueryAllRecoverKeyRequest does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_QueryAllRecoverKeyRequest) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "qadena.qadena.QueryAllRecoverKeyRequest.pagination":
		x.Pagination = nil
	case "qadena.qadena.QueryAllRecoverKeyRequest.credentialID":
		x.CredentialID = ""
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: qadena.qadena.QueryAllRecoverKeyRequest"))
		}
		panic(fmt.Errorf("message qadena.qadena.QueryAllRecoverKeyRequest does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_QueryAllRecoverKeyRequest) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "qadena.qadena.QueryAllRecoverKeyRequest.pagination":
		value := x.Pagination
		return protoreflect.ValueOfMessage(value.ProtoReflect())
	case "qadena.qadena.QueryAllRecoverKeyRequest.credentialID":
		value := x.CredentialID
		return protoreflect.ValueOfString(value)
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: qadena.qadena.QueryAllRecoverKeyRequest"))
		}
		panic(fmt.Errorf("message qadena.qadena.QueryAllRecoverKeyRequest does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_QueryAllRecoverKeyRequest) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "qadena.qadena.QueryAllRecoverKeyRequest.pagination":
		x.Pagination = value.Message().Interface().(*v1beta1.PageRequest)
	case "qadena.qadena.QueryAllRecoverKeyRequest.credentialID":
		x.CredentialID = value.Interface().(string)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: qadena.qadena.QueryAllRecoverKeyRequest"))
		}
		panic(fmt.Errorf("message qadena.qadena.QueryAllRecoverKeyRequest does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_QueryAllRecoverKeyRequest) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "qadena.qadena.QueryAllRecoverKeyRequest.pagination":
		if x.Pagination == nil {
			x.Pagination = new(v1beta1.PageRequest)
		}
		return protoreflect.ValueOfMessage(x.Pagination.ProtoReflect())
	case "qadena.qadena.QueryAllRecoverKeyRequest.credentialID":
		panic(fmt.Errorf("field credentialID of message qadena.qadena.QueryAllRecoverKeyRequest is not mutable"))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: qadena.qadena.QueryAllRecoverKeyRequest"))
		}
		panic(fmt.Errorf("message qadena.qadena.QueryAllRecoverKeyRequest does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_QueryAllRecoverKeyRequest) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "qadena.qadena.QueryAllRecoverKeyRequest.pagination":
		m := new(v1beta1.PageRequest)
		return protoreflect.ValueOfMessage(m.ProtoReflect())
	case "qadena.qadena.QueryAllRecoverKeyRequest.credentialID":
		return protoreflect.ValueOfString("")
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: qadena.qadena.QueryAllRecoverKeyRequest"))
		}
		panic(fmt.Errorf("message qadena.qadena.QueryAllRecoverKeyRequest does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_QueryAllRecoverKeyRequest) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in qadena.qadena.QueryAllRecoverKeyRequest", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_QueryAllRecoverKeyRequest) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_QueryAllRecoverKeyRequest) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_QueryAllRecoverKeyRequest) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_QueryAllRecoverKeyRequest) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*QueryAllRecoverKeyRequest)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		if x.Pagination != nil {
			l = options.Size(x.Pagination)
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.CredentialID)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*QueryAllRecoverKeyRequest)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if len(x.CredentialID) > 0 {
			i -= len(x.CredentialID)
			copy(dAtA[i:], x.CredentialID)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.CredentialID)))
			i--
			dAtA[i] = 0x12
		}
		if x.Pagination != nil {
			encoded, err := options.Marshal(x.Pagination)
			if err != nil {
				return protoiface.MarshalOutput{
					NoUnkeyedLiterals: input.NoUnkeyedLiterals,
					Buf:               input.Buf,
				}, err
			}
			i -= len(encoded)
			copy(dAtA[i:], encoded)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(encoded)))
			i--
			dAtA[i] = 0xa
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*QueryAllRecoverKeyRequest)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: QueryAllRecoverKeyRequest: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: QueryAllRecoverKeyRequest: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Pagination", wireType)
				}
				var msglen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					msglen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if msglen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + msglen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if x.Pagination == nil {
					x.Pagination = &v1beta1.PageRequest{}
				}
				if err := options.Unmarshal(dAtA[iNdEx:postIndex], x.Pagination); err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				iNdEx = postIndex
			case 2:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field CredentialID", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.CredentialID = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var _ protoreflect.List = (*_QueryAllRecoverKeyResponse_1_list)(nil)

type _QueryAllRecoverKeyResponse_1_list struct {
	list *[]*RecoverKey
}

func (x *_QueryAllRecoverKeyResponse_1_list) Len() int {
	if x.list == nil {
		return 0
	}
	return len(*x.list)
}

func (x *_QueryAllRecoverKeyResponse_1_list) Get(i int) protoreflect.Value {
	return protoreflect.ValueOfMessage((*x.list)[i].ProtoReflect())
}

func (x *_QueryAllRecoverKeyResponse_1_list) Set(i int, value protoreflect.Value) {
	valueUnwrapped := value.Message()
	concreteValue := valueUnwrapped.Interface().(*RecoverKey)
	(*x.list)[i] = concreteValue
}

func (x *_QueryAllRecoverKeyResponse_1_list) Append(value protoreflect.Value) {
	valueUnwrapped := value.Message()
	concreteValue := valueUnwrapped.Interface().(*RecoverKey)
	*x.list = append(*x.list, concreteValue)
}

func (x *_QueryAllRecoverKeyResponse_1_list) AppendMutable() protoreflect.Value {
	v := new(RecoverKey)
	*x.list = append(*x.list, v)
	return protoreflect.ValueOfMessage(v.ProtoReflect())
}

func (x *_QueryAllRecoverKeyResponse_1_list) Truncate(n int) {
	for i := n; i < len(*x.list); i++ {
		(*x.list)[i] = nil
	}
	*x.list = (*x.list)[:n]
}

func (x *_QueryAllRecoverKeyResponse_1_list) NewElement() protoreflect.Value {
	v := new(RecoverKey)
	return protoreflect.ValueOfMessage(v.ProtoReflect())
}

func (x *_QueryAllRecoverKeyResponse_1_list) IsValid() bool {
	return x.list != nil
}

var (
	md_QueryAllRecoverKeyResponse            protoreflect.MessageDescriptor
	fd_QueryAllRecoverKeyResponse_recoverKey protoreflect.FieldDescriptor
	fd_QueryAllRecoverKeyResponse_pagination protoreflect.FieldDescriptor
)

func init() {
	file_qadena_qadena_query_proto_init()
	md_QueryAllRecoverKeyResponse = File_qadena_qadena_query_proto.Messages().ByName("QueryAllRecoverKeyResponse")
	fd_QueryAllRecoverKeyResponse_recoverKey = md_QueryAllRecoverKeyResponse.Fields().ByName("recoverKey")
	fd_QueryAllRecoverKeyResponse_pagination = md_QueryAllRecoverKeyResponse.Fields().ByName("pagination")
}

var _ protoreflect.Message = (*fastReflection_QueryAllRecoverKeyResponse)(nil)

type fastReflection_QueryAllRecoverKeyResponse QueryAllRecoverKeyResponse

func (x *QueryAllRecoverKeyResponse) ProtoReflect() protoreflect.Message {
	return (*fastReflection_QueryAllRecoverKeyResponse)(x)
}

func (x *QueryAllRecoverKeyResponse) slowProtoReflect() protoreflect.Message {
	mi := &file_qadena_qadena_query_proto_msgTypes[37]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_QueryAllRecoverKeyResponse_messageType fastReflection_QueryAllRecoverKeyResponse_messageType
var _ protoreflect.MessageType = fastReflection_QueryAllRecoverKeyResponse_messageType{}

type fastReflection_QueryAllRecoverKeyResponse_messageType struct{}

func (x fastReflection_QueryAllRecoverKeyResponse_messageType) Zero() protoreflect.Message {
	return (*fastReflection_QueryAllRecoverKeyResponse)(nil)
}
func (x fastReflection_QueryAllRecoverKeyResponse_messageType) New() protoreflect.Message {
	return new(fastReflection_QueryAllRecoverKeyResponse)
}
func (x fastReflection_QueryAllRecoverKeyResponse_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_QueryAllRecoverKeyResponse
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_QueryAllRecoverKeyResponse) Descriptor() protoreflect.MessageDescriptor {
	return md_QueryAllRecoverKeyResponse
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_QueryAllRecoverKeyResponse) Type() protoreflect.MessageType {
	return _fastReflection_QueryAllRecoverKeyResponse_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_QueryAllRecoverKeyResponse) New() protoreflect.Message {
	return new(fastReflection_QueryAllRecoverKeyResponse)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_QueryAllRecoverKeyResponse) Interface() protoreflect.ProtoMessage {
	return (*QueryAllRecoverKeyResponse)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_QueryAllRecoverKeyResponse) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if len(x.RecoverKey) != 0 {
		value := protoreflect.ValueOfList(&_QueryAllRecoverKeyResponse_1_list{list: &x.RecoverKey})
		if !f(fd_QueryAllRecoverKeyResponse_recoverKey, value) {
			return
		}
	}
	if x.Pagination != nil {
		value := protoreflect.ValueOfMessage(x.Pagination.ProtoReflect())
		if !f(fd_QueryAllRecoverKeyResponse_pagination, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_QueryAllRecoverKeyResponse) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "qadena.qadena.QueryAllRecoverKeyResponse.recoverKey":
		return len(x.RecoverKey) != 0
	case "qadena.qadena.QueryAllRecoverKeyResponse.pagination":
		return x.Pagination != nil
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: qadena.qadena.QueryAllRecoverKeyResponse"))
		}
		panic(fmt.Errorf("message qadena.qadena.QueryAllRecoverKeyResponse does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_QueryAllRecoverKeyResponse) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "qadena.qadena.QueryAllRecoverKeyResponse.recoverKey":
		x.RecoverKey = nil
	case "qadena.qadena.QueryAllRecoverKeyResponse.pagination":
		x.Pagination = nil
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: qadena.qadena.QueryAllRecoverKeyResponse"))
		}
		panic(fmt.Errorf("message qadena.qadena.QueryAllRecoverKeyResponse does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_QueryAllRecoverKeyResponse) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "qadena.qadena.QueryAllRecoverKeyResponse.recoverKey":
		if len(x.RecoverKey) == 0 {
			return protoreflect.ValueOfList(&_QueryAllRecoverKeyResponse_1_list{})
		}
		listValue := &_QueryAllRecoverKeyResponse_1_list{list: &x.RecoverKey}
		return protoreflect.ValueOfList(listValue)
	case "qadena.qadena.QueryAllRecoverKeyResponse.pagination":
		value := x.Pagination
		return protoreflect.ValueOfMessage(value.ProtoReflect())
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: qadena.qadena.QueryAllRecoverKeyResponse"))
		}
		panic(fmt.Errorf("message qadena.qadena.QueryAllRecoverKeyResponse does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_QueryAllRecoverKeyResponse) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "qadena.qadena.QueryAllRecoverKeyResponse.recoverKey":
		lv := value.List()
		clv := lv.(*_QueryAllRecoverKeyResponse_1_list)
		x.RecoverKey = *clv.list
	case "qadena.qadena.QueryAllRecoverKeyResponse.pagination":
		x.Pagination = value.Message().Interface().(*v1beta1.PageResponse)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: qadena.qadena.QueryAllRecoverKeyResponse"))
		}
		panic(fmt.Errorf("message qadena.qadena.QueryAllRecoverKeyResponse does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_QueryAllRecoverKeyResponse) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "qadena.qadena.QueryAllRecoverKeyResponse.recoverKey":
		if x.RecoverKey == nil {
			x.RecoverKey = []*RecoverKey{}
		}
		value := &_QueryAllRecoverKeyResponse_1_list{list: &x.RecoverKey}
		return protoreflect.ValueOfList(value)
	case "qadena.qadena.QueryAllRecoverKeyResponse.pagination":
		if x.Pagination == nil {
			x.Pagination = new(v1beta1.PageResponse)
		}
		return protoreflect.ValueOfMessage(x.Pagination.ProtoReflect())
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: qadena.qadena.QueryAllRecoverKeyResponse"))
		}
		panic(fmt.Errorf("message qadena.qadena.QueryAllRecoverKeyResponse does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_QueryAllRecoverKeyResponse) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "qadena.qadena.QueryAllRecoverKeyResponse.recoverKey":
		list := []*RecoverKey{}
		return protoreflect.ValueOfList(&_QueryAllRecoverKeyResponse_1_list{list: &list})
	case "qadena.qadena.QueryAllRecoverKeyResponse.pagination":
		m := new(v1beta1.PageResponse)
		return protoreflect.ValueOfMessage(m.ProtoReflect())
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: qadena.qadena.QueryAllRecoverKeyResponse"))
		}
		panic(fmt.Errorf("message qadena.qadena.QueryAllRecoverKeyResponse does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_QueryAllRecoverKeyResponse) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in qadena.qadena.QueryAllRecoverKeyResponse", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_QueryAllRecoverKeyResponse) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_QueryAllRecoverKeyResponse) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_QueryAllRecoverKeyResponse) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_QueryAllRecoverKeyResponse) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*QueryAllRecoverKeyResponse)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		if len(x.RecoverKey) > 0 {
			for _, e := range x.RecoverKey {
				l = options.Size(e)
				n += 1 + l + runtime.Sov(uint64(l))
			}
		}
		if x.Pagination != nil {
			l = options.Size(x.Pagination)
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*QueryAllRecoverKeyResponse)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if x.Pagination != nil {
			encoded, err := options.Marshal(x.Pagination)
			if err != nil {
				return protoiface.MarshalOutput{
					NoUnkeyedLiterals: input.NoUnkeyedLiterals,
					Buf:               input.Buf,
				}, err
			}
			i -= len(encoded)
			copy(dAtA[i:], encoded)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(encoded)))
			i--
			dAtA[i] = 0x12
		}
		if len(x.RecoverKey) > 0 {
			for iNdEx := len(x.RecoverKey) - 1; iNdEx >= 0; iNdEx-- {
				encoded, err := options.Marshal(x.RecoverKey[iNdEx])
				if err != nil {
					return protoiface.MarshalOutput{
						NoUnkeyedLiterals: input.NoUnkeyedLiterals,
						Buf:               input.Buf,
					}, err
				}
				i -= len(encoded)
				copy(dAtA[i:], encoded)
				i = runtime.EncodeVarint(dAtA, i, uint64(len(encoded)))
				i--
				dAtA[i] = 0xa
			}
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*QueryAllRecoverKeyResponse)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: QueryAllRecoverKeyResponse: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: QueryAllRecoverKeyResponse: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field RecoverKey", wireType)
				}
				var msglen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					msglen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if msglen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + msglen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.RecoverKey = append(x.RecoverKey, &RecoverKey{})
				if err := options.Unmarshal(dAtA[iNdEx:postIndex], x.RecoverKey[len(x.RecoverKey)-1]); err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				iNdEx = postIndex
			case 2:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Pagination", wireType)
				}
				var msglen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					msglen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if msglen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + msglen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if x.Pagination == nil {
					x.Pagination = &v1beta1.PageResponse{}
				}
				if err := options.Unmarshal(dAtA[iNdEx:postIndex], x.Pagination); err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				iNdEx = postIndex
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var (
	md_QueryTreasuryRequest protoreflect.MessageDescriptor
)

func init() {
	file_qadena_qadena_query_proto_init()
	md_QueryTreasuryRequest = File_qadena_qadena_query_proto.Messages().ByName("QueryTreasuryRequest")
}

var _ protoreflect.Message = (*fastReflection_QueryTreasuryRequest)(nil)

type fastReflection_QueryTreasuryRequest QueryTreasuryRequest

func (x *QueryTreasuryRequest) ProtoReflect() protoreflect.Message {
	return (*fastReflection_QueryTreasuryRequest)(x)
}

func (x *QueryTreasuryRequest) slowProtoReflect() protoreflect.Message {
	mi := &file_qadena_qadena_query_proto_msgTypes[38]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_QueryTreasuryRequest_messageType fastReflection_QueryTreasuryRequest_messageType
var _ protoreflect.MessageType = fastReflection_QueryTreasuryRequest_messageType{}

type fastReflection_QueryTreasuryRequest_messageType struct{}

func (x fastReflection_QueryTreasuryRequest_messageType) Zero() protoreflect.Message {
	return (*fastReflection_QueryTreasuryRequest)(nil)
}
func (x fastReflection_QueryTreasuryRequest_messageType) New() protoreflect.Message {
	return new(fastReflection_QueryTreasuryRequest)
}
func (x fastReflection_QueryTreasuryRequest_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_QueryTreasuryRequest
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_QueryTreasuryRequest) Descriptor() protoreflect.MessageDescriptor {
	return md_QueryTreasuryRequest
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_QueryTreasuryRequest) Type() protoreflect.MessageType {
	return _fastReflection_QueryTreasuryRequest_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_QueryTreasuryRequest) New() protoreflect.Message {
	return new(fastReflection_QueryTreasuryRequest)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_QueryTreasuryRequest) Interface() protoreflect.ProtoMessage {
	return (*QueryTreasuryRequest)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_QueryTreasuryRequest) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_QueryTreasuryRequest) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: qadena.qadena.QueryTreasuryRequest"))
		}
		panic(fmt.Errorf("message qadena.qadena.QueryTreasuryRequest does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_QueryTreasuryRequest) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: qadena.qadena.QueryTreasuryRequest"))
		}
		panic(fmt.Errorf("message qadena.qadena.QueryTreasuryRequest does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_QueryTreasuryRequest) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: qadena.qadena.QueryTreasuryRequest"))
		}
		panic(fmt.Errorf("message qadena.qadena.QueryTreasuryRequest does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_QueryTreasuryRequest) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: qadena.qadena.QueryTreasuryRequest"))
		}
		panic(fmt.Errorf("message qadena.qadena.QueryTreasuryRequest does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_QueryTreasuryRequest) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: qadena.qadena.QueryTreasuryRequest"))
		}
		panic(fmt.Errorf("message qadena.qadena.QueryTreasuryRequest does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_QueryTreasuryRequest) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: qadena.qadena.QueryTreasuryRequest"))
		}
		panic(fmt.Errorf("message qadena.qadena.QueryTreasuryRequest does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_QueryTreasuryRequest) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in qadena.qadena.QueryTreasuryRequest", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_QueryTreasuryRequest) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_QueryTreasuryRequest) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_QueryTreasuryRequest) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_QueryTreasuryRequest) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*QueryTreasuryRequest)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*QueryTreasuryRequest)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*QueryTreasuryRequest)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: QueryTreasuryRequest: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: QueryTreasuryRequest: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var (
	md_QueryTreasuryResponse                  protoreflect.MessageDescriptor
	fd_QueryTreasuryResponse_totalBalance     protoreflect.FieldDescriptor
	fd_QueryTreasuryResponse_encryptedBalance protoreflect.FieldDescriptor
)

func init() {
	file_qadena_qadena_query_proto_init()
	md_QueryTreasuryResponse = File_qadena_qadena_query_proto.Messages().ByName("QueryTreasuryResponse")
	fd_QueryTreasuryResponse_totalBalance = md_QueryTreasuryResponse.Fields().ByName("totalBalance")
	fd_QueryTreasuryResponse_encryptedBalance = md_QueryTreasuryResponse.Fields().ByName("encryptedBalance")
}

var _ protoreflect.Message = (*fastReflection_QueryTreasuryResponse)(nil)

type fastReflection_QueryTreasuryResponse QueryTreasuryResponse

func (x *QueryTreasuryResponse) ProtoReflect() protoreflect.Message {
	return (*fastReflection_QueryTreasuryResponse)(x)
}

func (x *QueryTreasuryResponse) slowProtoReflect() protoreflect.Message {
	mi := &file_qadena_qadena_query_proto_msgTypes[39]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_QueryTreasuryResponse_messageType fastReflection_QueryTreasuryResponse_messageType
var _ protoreflect.MessageType = fastReflection_QueryTreasuryResponse_messageType{}

type fastReflection_QueryTreasuryResponse_messageType struct{}

func (x fastReflection_QueryTreasuryResponse_messageType) Zero() protoreflect.Message {
	return (*fastReflection_QueryTreasuryResponse)(nil)
}
func (x fastReflection_QueryTreasuryResponse_messageType) New() protoreflect.Message {
	return new(fastReflection_QueryTreasuryResponse)
}
func (x fastReflection_QueryTreasuryResponse_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_QueryTreasuryResponse
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_QueryTreasuryResponse) Descriptor() protoreflect.MessageDescriptor {
	return md_QueryTreasuryResponse
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_QueryTreasuryResponse) Type() protoreflect.MessageType {
	return _fastReflection_QueryTreasuryResponse_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_QueryTreasuryResponse) New() protoreflect.Message {
	return new(fastReflection_QueryTreasuryResponse)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_QueryTreasuryResponse) Interface() protoreflect.ProtoMessage {
	return (*QueryTreasuryResponse)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_QueryTreasuryResponse) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.TotalBalance != nil {
		value := protoreflect.ValueOfMessage(x.TotalBalance.ProtoReflect())
		if !f(fd_QueryTreasuryResponse_totalBalance, value) {
			return
		}
	}
	if x.EncryptedBalance != nil {
		value := protoreflect.ValueOfMessage(x.EncryptedBalance.ProtoReflect())
		if !f(fd_QueryTreasuryResponse_encryptedBalance, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_QueryTreasuryResponse) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "qadena.qadena.QueryTreasuryResponse.totalBalance":
		return x.TotalBalance != nil
	case "qadena.qadena.QueryTreasuryResponse.encryptedBalance":
		return x.EncryptedBalance != nil
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: qadena.qadena.QueryTreasuryResponse"))
		}
		panic(fmt.Errorf("message qadena.qadena.QueryTreasuryResponse does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_QueryTreasuryResponse) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "qadena.qadena.QueryTreasuryResponse.totalBalance":
		x.TotalBalance = nil
	case "qadena.qadena.QueryTreasuryResponse.encryptedBalance":
		x.EncryptedBalance = nil
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: qadena.qadena.QueryTreasuryResponse"))
		}
		panic(fmt.Errorf("message qadena.qadena.QueryTreasuryResponse does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_QueryTreasuryResponse) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "qadena.qadena.QueryTreasuryResponse.totalBalance":
		value := x.TotalBalance
		return protoreflect.ValueOfMessage(value.ProtoReflect())
	case "qadena.qadena.QueryTreasuryResponse.encryptedBalance":
		value := x.EncryptedBalance
		return protoreflect.ValueOfMessage(value.ProtoReflect())
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: qadena.qadena.QueryTreasuryResponse"))
		}
		panic(fmt.Errorf("message qadena.qadena.QueryTreasuryResponse does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_QueryTreasuryResponse) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "qadena.qadena.QueryTreasuryResponse.totalBalance":
		x.TotalBalance = value.Message().Interface().(*v1beta11.Coin)
	case "qadena.qadena.QueryTreasuryResponse.encryptedBalance":
		x.EncryptedBalance = value.Message().Interface().(*v1beta11.Coin)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: qadena.qadena.QueryTreasuryResponse"))
		}
		panic(fmt.Errorf("message qadena.qadena.QueryTreasuryResponse does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_QueryTreasuryResponse) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "qadena.qadena.QueryTreasuryResponse.totalBalance":
		if x.TotalBalance == nil {
			x.TotalBalance = new(v1beta11.Coin)
		}
		return protoreflect.ValueOfMessage(x.TotalBalance.ProtoReflect())
	case "qadena.qadena.QueryTreasuryResponse.encryptedBalance":
		if x.EncryptedBalance == nil {
			x.EncryptedBalance = new(v1beta11.Coin)
		}
		return protoreflect.ValueOfMessage(x.EncryptedBalance.ProtoReflect())
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: qadena.qadena.QueryTreasuryResponse"))
		}
		panic(fmt.Errorf("message qadena.qadena.QueryTreasuryResponse does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_QueryTreasuryResponse) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "qadena.qadena.QueryTreasuryResponse.totalBalance":
		m := new(v1beta11.Coin)
		return protoreflect.ValueOfMessage(m.ProtoReflect())
	case "qadena.qadena.QueryTreasuryResponse.encryptedBalance":
		m := new(v1beta11.Coin)
		return protoreflect.ValueOfMessage(m.ProtoReflect())
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: qadena.qadena.QueryTreasuryResponse"))
		}
		panic(fmt.Errorf("message qadena.qadena.QueryTreasuryResponse does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_QueryTreasuryResponse) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in qadena.qadena.QueryTreasuryResponse", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_QueryTreasuryResponse) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_QueryTreasuryResponse) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_QueryTreasuryResponse) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_QueryTreasuryResponse) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*QueryTreasuryResponse)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		if x.TotalBalance != nil {
			l = options.Size(x.TotalBalance)
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.EncryptedBalance != nil {
			l = options.Size(x.EncryptedBalance)
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*QueryTreasuryResponse)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if x.EncryptedBalance != nil {
			encoded, err := options.Marshal(x.EncryptedBalance)
			if err != nil {
				return protoiface.MarshalOutput{
					NoUnkeyedLiterals: input.NoUnkeyedLiterals,
					Buf:               input.Buf,
				}, err
			}
			i -= len(encoded)
			copy(dAtA[i:], encoded)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(encoded)))
			i--
			dAtA[i] = 0x12
		}
		if x.TotalBalance != nil {
			encoded, err := options.Marshal(x.TotalBalance)
			if err != nil {
				return protoiface.MarshalOutput{
					NoUnkeyedLiterals: input.NoUnkeyedLiterals,
					Buf:               input.Buf,
				}, err
			}
			i -= len(encoded)
			copy(dAtA[i:], encoded)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(encoded)))
			i--
			dAtA[i] = 0xa
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*QueryTreasuryResponse)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: QueryTreasuryResponse: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: QueryTreasuryResponse: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field TotalBalance", wireType)
				}
				var msglen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					msglen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if msglen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + msglen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if x.TotalBalance == nil {
					x.TotalBalance = &v1beta11.Coin{}
				}
				if err := options.Unmarshal(dAtA[iNdEx:postIndex], x.TotalBalance); err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				iNdEx = postIndex
			case 2:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field EncryptedBalance", wireType)
				}
				var msglen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					msglen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if msglen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + msglen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if x.EncryptedBalance == nil {
					x.EncryptedBalance = &v1beta11.Coin{}
				}
				if err := options.Unmarshal(dAtA[iNdEx:postIndex], x.EncryptedBalance); err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				iNdEx = postIndex
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var (
	md_QueryAccountRequest      protoreflect.MessageDescriptor
	fd_QueryAccountRequest_name protoreflect.FieldDescriptor
)

func init() {
	file_qadena_qadena_query_proto_init()
	md_QueryAccountRequest = File_qadena_qadena_query_proto.Messages().ByName("QueryAccountRequest")
	fd_QueryAccountRequest_name = md_QueryAccountRequest.Fields().ByName("name")
}

var _ protoreflect.Message = (*fastReflection_QueryAccountRequest)(nil)

type fastReflection_QueryAccountRequest QueryAccountRequest

func (x *QueryAccountRequest) ProtoReflect() protoreflect.Message {
	return (*fastReflection_QueryAccountRequest)(x)
}

func (x *QueryAccountRequest) slowProtoReflect() protoreflect.Message {
	mi := &file_qadena_qadena_query_proto_msgTypes[40]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_QueryAccountRequest_messageType fastReflection_QueryAccountRequest_messageType
var _ protoreflect.MessageType = fastReflection_QueryAccountRequest_messageType{}

type fastReflection_QueryAccountRequest_messageType struct{}

func (x fastReflection_QueryAccountRequest_messageType) Zero() protoreflect.Message {
	return (*fastReflection_QueryAccountRequest)(nil)
}
func (x fastReflection_QueryAccountRequest_messageType) New() protoreflect.Message {
	return new(fastReflection_QueryAccountRequest)
}
func (x fastReflection_QueryAccountRequest_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_QueryAccountRequest
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_QueryAccountRequest) Descriptor() protoreflect.MessageDescriptor {
	return md_QueryAccountRequest
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_QueryAccountRequest) Type() protoreflect.MessageType {
	return _fastReflection_QueryAccountRequest_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_QueryAccountRequest) New() protoreflect.Message {
	return new(fastReflection_QueryAccountRequest)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_QueryAccountRequest) Interface() protoreflect.ProtoMessage {
	return (*QueryAccountRequest)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_QueryAccountRequest) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.Name != "" {
		value := protoreflect.ValueOfString(x.Name)
		if !f(fd_QueryAccountRequest_name, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_QueryAccountRequest) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "qadena.qadena.QueryAccountRequest.name":
		return x.Name != ""
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: qadena.qadena.QueryAccountRequest"))
		}
		panic(fmt.Errorf("message qadena.qadena.QueryAccountRequest does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_QueryAccountRequest) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "qadena.qadena.QueryAccountRequest.name":
		x.Name = ""
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: qadena.qadena.QueryAccountRequest"))
		}
		panic(fmt.Errorf("message qadena.qadena.QueryAccountRequest does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_QueryAccountRequest) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "qadena.qadena.QueryAccountRequest.name":
		value := x.Name
		return protoreflect.ValueOfString(value)
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: qadena.qadena.QueryAccountRequest"))
		}
		panic(fmt.Errorf("message qadena.qadena.QueryAccountRequest does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_QueryAccountRequest) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "qadena.qadena.QueryAccountRequest.name":
		x.Name = value.Interface().(string)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: qadena.qadena.QueryAccountRequest"))
		}
		panic(fmt.Errorf("message qadena.qadena.QueryAccountRequest does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_QueryAccountRequest) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "qadena.qadena.QueryAccountRequest.name":
		panic(fmt.Errorf("field name of message qadena.qadena.QueryAccountRequest is not mutable"))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: qadena.qadena.QueryAccountRequest"))
		}
		panic(fmt.Errorf("message qadena.qadena.QueryAccountRequest does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_QueryAccountRequest) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "qadena.qadena.QueryAccountRequest.name":
		return protoreflect.ValueOfString("")
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: qadena.qadena.QueryAccountRequest"))
		}
		panic(fmt.Errorf("message qadena.qadena.QueryAccountRequest does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_QueryAccountRequest) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in qadena.qadena.QueryAccountRequest", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_QueryAccountRequest) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_QueryAccountRequest) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_QueryAccountRequest) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_QueryAccountRequest) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*QueryAccountRequest)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		l = len(x.Name)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*QueryAccountRequest)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if len(x.Name) > 0 {
			i -= len(x.Name)
			copy(dAtA[i:], x.Name)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.Name)))
			i--
			dAtA[i] = 0xa
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*QueryAccountRequest)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: QueryAccountRequest: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: QueryAccountRequest: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Name", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Name = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var (
	md_QueryAccountResponse                    protoreflect.MessageDescriptor
	fd_QueryAccountResponse_transparentBalance protoreflect.FieldDescriptor
	fd_QueryAccountResponse_encryptedBalance   protoreflect.FieldDescriptor
)

func init() {
	file_qadena_qadena_query_proto_init()
	md_QueryAccountResponse = File_qadena_qadena_query_proto.Messages().ByName("QueryAccountResponse")
	fd_QueryAccountResponse_transparentBalance = md_QueryAccountResponse.Fields().ByName("transparentBalance")
	fd_QueryAccountResponse_encryptedBalance = md_QueryAccountResponse.Fields().ByName("encryptedBalance")
}

var _ protoreflect.Message = (*fastReflection_QueryAccountResponse)(nil)

type fastReflection_QueryAccountResponse QueryAccountResponse

func (x *QueryAccountResponse) ProtoReflect() protoreflect.Message {
	return (*fastReflection_QueryAccountResponse)(x)
}

func (x *QueryAccountResponse) slowProtoReflect() protoreflect.Message {
	mi := &file_qadena_qadena_query_proto_msgTypes[41]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_QueryAccountResponse_messageType fastReflection_QueryAccountResponse_messageType
var _ protoreflect.MessageType = fastReflection_QueryAccountResponse_messageType{}

type fastReflection_QueryAccountResponse_messageType struct{}

func (x fastReflection_QueryAccountResponse_messageType) Zero() protoreflect.Message {
	return (*fastReflection_QueryAccountResponse)(nil)
}
func (x fastReflection_QueryAccountResponse_messageType) New() protoreflect.Message {
	return new(fastReflection_QueryAccountResponse)
}
func (x fastReflection_QueryAccountResponse_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_QueryAccountResponse
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_QueryAccountResponse) Descriptor() protoreflect.MessageDescriptor {
	return md_QueryAccountResponse
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_QueryAccountResponse) Type() protoreflect.MessageType {
	return _fastReflection_QueryAccountResponse_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_QueryAccountResponse) New() protoreflect.Message {
	return new(fastReflection_QueryAccountResponse)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_QueryAccountResponse) Interface() protoreflect.ProtoMessage {
	return (*QueryAccountResponse)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_QueryAccountResponse) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.TransparentBalance != "" {
		value := protoreflect.ValueOfString(x.TransparentBalance)
		if !f(fd_QueryAccountResponse_transparentBalance, value) {
			return
		}
	}
	if x.EncryptedBalance != "" {
		value := protoreflect.ValueOfString(x.EncryptedBalance)
		if !f(fd_QueryAccountResponse_encryptedBalance, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_QueryAccountResponse) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "qadena.qadena.QueryAccountResponse.transparentBalance":
		return x.TransparentBalance != ""
	case "qadena.qadena.QueryAccountResponse.encryptedBalance":
		return x.EncryptedBalance != ""
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: qadena.qadena.QueryAccountResponse"))
		}
		panic(fmt.Errorf("message qadena.qadena.QueryAccountResponse does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_QueryAccountResponse) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "qadena.qadena.QueryAccountResponse.transparentBalance":
		x.TransparentBalance = ""
	case "qadena.qadena.QueryAccountResponse.encryptedBalance":
		x.EncryptedBalance = ""
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: qadena.qadena.QueryAccountResponse"))
		}
		panic(fmt.Errorf("message qadena.qadena.QueryAccountResponse does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_QueryAccountResponse) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "qadena.qadena.QueryAccountResponse.transparentBalance":
		value := x.TransparentBalance
		return protoreflect.ValueOfString(value)
	case "qadena.qadena.QueryAccountResponse.encryptedBalance":
		value := x.EncryptedBalance
		return protoreflect.ValueOfString(value)
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: qadena.qadena.QueryAccountResponse"))
		}
		panic(fmt.Errorf("message qadena.qadena.QueryAccountResponse does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_QueryAccountResponse) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "qadena.qadena.QueryAccountResponse.transparentBalance":
		x.TransparentBalance = value.Interface().(string)
	case "qadena.qadena.QueryAccountResponse.encryptedBalance":
		x.EncryptedBalance = value.Interface().(string)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: qadena.qadena.QueryAccountResponse"))
		}
		panic(fmt.Errorf("message qadena.qadena.QueryAccountResponse does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_QueryAccountResponse) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "qadena.qadena.QueryAccountResponse.transparentBalance":
		panic(fmt.Errorf("field transparentBalance of message qadena.qadena.QueryAccountResponse is not mutable"))
	case "qadena.qadena.QueryAccountResponse.encryptedBalance":
		panic(fmt.Errorf("field encryptedBalance of message qadena.qadena.QueryAccountResponse is not mutable"))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: qadena.qadena.QueryAccountResponse"))
		}
		panic(fmt.Errorf("message qadena.qadena.QueryAccountResponse does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_QueryAccountResponse) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "qadena.qadena.QueryAccountResponse.transparentBalance":
		return protoreflect.ValueOfString("")
	case "qadena.qadena.QueryAccountResponse.encryptedBalance":
		return protoreflect.ValueOfString("")
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: qadena.qadena.QueryAccountResponse"))
		}
		panic(fmt.Errorf("message qadena.qadena.QueryAccountResponse does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_QueryAccountResponse) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in qadena.qadena.QueryAccountResponse", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_QueryAccountResponse) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_QueryAccountResponse) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_QueryAccountResponse) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_QueryAccountResponse) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*QueryAccountResponse)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		l = len(x.TransparentBalance)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.EncryptedBalance)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*QueryAccountResponse)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if len(x.EncryptedBalance) > 0 {
			i -= len(x.EncryptedBalance)
			copy(dAtA[i:], x.EncryptedBalance)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.EncryptedBalance)))
			i--
			dAtA[i] = 0x12
		}
		if len(x.TransparentBalance) > 0 {
			i -= len(x.TransparentBalance)
			copy(dAtA[i:], x.TransparentBalance)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.TransparentBalance)))
			i--
			dAtA[i] = 0xa
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*QueryAccountResponse)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: QueryAccountResponse: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: QueryAccountResponse: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field TransparentBalance", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.TransparentBalance = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 2:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field EncryptedBalance", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.EncryptedBalance = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var (
	md_QueryIncentivesRequest protoreflect.MessageDescriptor
)

func init() {
	file_qadena_qadena_query_proto_init()
	md_QueryIncentivesRequest = File_qadena_qadena_query_proto.Messages().ByName("QueryIncentivesRequest")
}

var _ protoreflect.Message = (*fastReflection_QueryIncentivesRequest)(nil)

type fastReflection_QueryIncentivesRequest QueryIncentivesRequest

func (x *QueryIncentivesRequest) ProtoReflect() protoreflect.Message {
	return (*fastReflection_QueryIncentivesRequest)(x)
}

func (x *QueryIncentivesRequest) slowProtoReflect() protoreflect.Message {
	mi := &file_qadena_qadena_query_proto_msgTypes[42]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_QueryIncentivesRequest_messageType fastReflection_QueryIncentivesRequest_messageType
var _ protoreflect.MessageType = fastReflection_QueryIncentivesRequest_messageType{}

type fastReflection_QueryIncentivesRequest_messageType struct{}

func (x fastReflection_QueryIncentivesRequest_messageType) Zero() protoreflect.Message {
	return (*fastReflection_QueryIncentivesRequest)(nil)
}
func (x fastReflection_QueryIncentivesRequest_messageType) New() protoreflect.Message {
	return new(fastReflection_QueryIncentivesRequest)
}
func (x fastReflection_QueryIncentivesRequest_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_QueryIncentivesRequest
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_QueryIncentivesRequest) Descriptor() protoreflect.MessageDescriptor {
	return md_QueryIncentivesRequest
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_QueryIncentivesRequest) Type() protoreflect.MessageType {
	return _fastReflection_QueryIncentivesRequest_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_QueryIncentivesRequest) New() protoreflect.Message {
	return new(fastReflection_QueryIncentivesRequest)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_QueryIncentivesRequest) Interface() protoreflect.ProtoMessage {
	return (*QueryIncentivesRequest)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_QueryIncentivesRequest) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_QueryIncentivesRequest) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: qadena.qadena.QueryIncentivesRequest"))
		}
		panic(fmt.Errorf("message qadena.qadena.QueryIncentivesRequest does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_QueryIncentivesRequest) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: qadena.qadena.QueryIncentivesRequest"))
		}
		panic(fmt.Errorf("message qadena.qadena.QueryIncentivesRequest does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_QueryIncentivesRequest) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: qadena.qadena.QueryIncentivesRequest"))
		}
		panic(fmt.Errorf("message qadena.qadena.QueryIncentivesRequest does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_QueryIncentivesRequest) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: qadena.qadena.QueryIncentivesRequest"))
		}
		panic(fmt.Errorf("message qadena.qadena.QueryIncentivesRequest does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_QueryIncentivesRequest) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: qadena.qadena.QueryIncentivesRequest"))
		}
		panic(fmt.Errorf("message qadena.qadena.QueryIncentivesRequest does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_QueryIncentivesRequest) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: qadena.qadena.QueryIncentivesRequest"))
		}
		panic(fmt.Errorf("message qadena.qadena.QueryIncentivesRequest does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_QueryIncentivesRequest) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in qadena.qadena.QueryIncentivesRequest", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_QueryIncentivesRequest) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_QueryIncentivesRequest) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_QueryIncentivesRequest) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_QueryIncentivesRequest) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*QueryIncentivesRequest)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*QueryIncentivesRequest)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*QueryIncentivesRequest)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: QueryIncentivesRequest: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: QueryIncentivesRequest: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var (
	md_QueryIncentivesResponse                                           protoreflect.MessageDescriptor
	fd_QueryIncentivesResponse_createWalletIncentive                     protoreflect.FieldDescriptor
	fd_QueryIncentivesResponse_createEphemeralWalletIncentive            protoreflect.FieldDescriptor
	fd_QueryIncentivesResponse_createWalletTransparentIncentive          protoreflect.FieldDescriptor
	fd_QueryIncentivesResponse_createEphemeralWalletTransparentIncentive protoreflect.FieldDescriptor
)

func init() {
	file_qadena_qadena_query_proto_init()
	md_QueryIncentivesResponse = File_qadena_qadena_query_proto.Messages().ByName("QueryIncentivesResponse")
	fd_QueryIncentivesResponse_createWalletIncentive = md_QueryIncentivesResponse.Fields().ByName("createWalletIncentive")
	fd_QueryIncentivesResponse_createEphemeralWalletIncentive = md_QueryIncentivesResponse.Fields().ByName("createEphemeralWalletIncentive")
	fd_QueryIncentivesResponse_createWalletTransparentIncentive = md_QueryIncentivesResponse.Fields().ByName("createWalletTransparentIncentive")
	fd_QueryIncentivesResponse_createEphemeralWalletTransparentIncentive = md_QueryIncentivesResponse.Fields().ByName("createEphemeralWalletTransparentIncentive")
}

var _ protoreflect.Message = (*fastReflection_QueryIncentivesResponse)(nil)

type fastReflection_QueryIncentivesResponse QueryIncentivesResponse

func (x *QueryIncentivesResponse) ProtoReflect() protoreflect.Message {
	return (*fastReflection_QueryIncentivesResponse)(x)
}

func (x *QueryIncentivesResponse) slowProtoReflect() protoreflect.Message {
	mi := &file_qadena_qadena_query_proto_msgTypes[43]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_QueryIncentivesResponse_messageType fastReflection_QueryIncentivesResponse_messageType
var _ protoreflect.MessageType = fastReflection_QueryIncentivesResponse_messageType{}

type fastReflection_QueryIncentivesResponse_messageType struct{}

func (x fastReflection_QueryIncentivesResponse_messageType) Zero() protoreflect.Message {
	return (*fastReflection_QueryIncentivesResponse)(nil)
}
func (x fastReflection_QueryIncentivesResponse_messageType) New() protoreflect.Message {
	return new(fastReflection_QueryIncentivesResponse)
}
func (x fastReflection_QueryIncentivesResponse_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_QueryIncentivesResponse
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_QueryIncentivesResponse) Descriptor() protoreflect.MessageDescriptor {
	return md_QueryIncentivesResponse
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_QueryIncentivesResponse) Type() protoreflect.MessageType {
	return _fastReflection_QueryIncentivesResponse_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_QueryIncentivesResponse) New() protoreflect.Message {
	return new(fastReflection_QueryIncentivesResponse)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_QueryIncentivesResponse) Interface() protoreflect.ProtoMessage {
	return (*QueryIncentivesResponse)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_QueryIncentivesResponse) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.CreateWalletIncentive != nil {
		value := protoreflect.ValueOfMessage(x.CreateWalletIncentive.ProtoReflect())
		if !f(fd_QueryIncentivesResponse_createWalletIncentive, value) {
			return
		}
	}
	if x.CreateEphemeralWalletIncentive != nil {
		value := protoreflect.ValueOfMessage(x.CreateEphemeralWalletIncentive.ProtoReflect())
		if !f(fd_QueryIncentivesResponse_createEphemeralWalletIncentive, value) {
			return
		}
	}
	if x.CreateWalletTransparentIncentive != nil {
		value := protoreflect.ValueOfMessage(x.CreateWalletTransparentIncentive.ProtoReflect())
		if !f(fd_QueryIncentivesResponse_createWalletTransparentIncentive, value) {
			return
		}
	}
	if x.CreateEphemeralWalletTransparentIncentive != nil {
		value := protoreflect.ValueOfMessage(x.CreateEphemeralWalletTransparentIncentive.ProtoReflect())
		if !f(fd_QueryIncentivesResponse_createEphemeralWalletTransparentIncentive, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_QueryIncentivesResponse) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "qadena.qadena.QueryIncentivesResponse.createWalletIncentive":
		return x.CreateWalletIncentive != nil
	case "qadena.qadena.QueryIncentivesResponse.createEphemeralWalletIncentive":
		return x.CreateEphemeralWalletIncentive != nil
	case "qadena.qadena.QueryIncentivesResponse.createWalletTransparentIncentive":
		return x.CreateWalletTransparentIncentive != nil
	case "qadena.qadena.QueryIncentivesResponse.createEphemeralWalletTransparentIncentive":
		return x.CreateEphemeralWalletTransparentIncentive != nil
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: qadena.qadena.QueryIncentivesResponse"))
		}
		panic(fmt.Errorf("message qadena.qadena.QueryIncentivesResponse does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_QueryIncentivesResponse) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "qadena.qadena.QueryIncentivesResponse.createWalletIncentive":
		x.CreateWalletIncentive = nil
	case "qadena.qadena.QueryIncentivesResponse.createEphemeralWalletIncentive":
		x.CreateEphemeralWalletIncentive = nil
	case "qadena.qadena.QueryIncentivesResponse.createWalletTransparentIncentive":
		x.CreateWalletTransparentIncentive = nil
	case "qadena.qadena.QueryIncentivesResponse.createEphemeralWalletTransparentIncentive":
		x.CreateEphemeralWalletTransparentIncentive = nil
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: qadena.qadena.QueryIncentivesResponse"))
		}
		panic(fmt.Errorf("message qadena.qadena.QueryIncentivesResponse does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_QueryIncentivesResponse) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "qadena.qadena.QueryIncentivesResponse.createWalletIncentive":
		value := x.CreateWalletIncentive
		return protoreflect.ValueOfMessage(value.ProtoReflect())
	case "qadena.qadena.QueryIncentivesResponse.createEphemeralWalletIncentive":
		value := x.CreateEphemeralWalletIncentive
		return protoreflect.ValueOfMessage(value.ProtoReflect())
	case "qadena.qadena.QueryIncentivesResponse.createWalletTransparentIncentive":
		value := x.CreateWalletTransparentIncentive
		return protoreflect.ValueOfMessage(value.ProtoReflect())
	case "qadena.qadena.QueryIncentivesResponse.createEphemeralWalletTransparentIncentive":
		value := x.CreateEphemeralWalletTransparentIncentive
		return protoreflect.ValueOfMessage(value.ProtoReflect())
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: qadena.qadena.QueryIncentivesResponse"))
		}
		panic(fmt.Errorf("message qadena.qadena.QueryIncentivesResponse does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_QueryIncentivesResponse) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "qadena.qadena.QueryIncentivesResponse.createWalletIncentive":
		x.CreateWalletIncentive = value.Message().Interface().(*v1beta11.Coin)
	case "qadena.qadena.QueryIncentivesResponse.createEphemeralWalletIncentive":
		x.CreateEphemeralWalletIncentive = value.Message().Interface().(*v1beta11.Coin)
	case "qadena.qadena.QueryIncentivesResponse.createWalletTransparentIncentive":
		x.CreateWalletTransparentIncentive = value.Message().Interface().(*v1beta11.Coin)
	case "qadena.qadena.QueryIncentivesResponse.createEphemeralWalletTransparentIncentive":
		x.CreateEphemeralWalletTransparentIncentive = value.Message().Interface().(*v1beta11.Coin)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: qadena.qadena.QueryIncentivesResponse"))
		}
		panic(fmt.Errorf("message qadena.qadena.QueryIncentivesResponse does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_QueryIncentivesResponse) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "qadena.qadena.QueryIncentivesResponse.createWalletIncentive":
		if x.CreateWalletIncentive == nil {
			x.CreateWalletIncentive = new(v1beta11.Coin)
		}
		return protoreflect.ValueOfMessage(x.CreateWalletIncentive.ProtoReflect())
	case "qadena.qadena.QueryIncentivesResponse.createEphemeralWalletIncentive":
		if x.CreateEphemeralWalletIncentive == nil {
			x.CreateEphemeralWalletIncentive = new(v1beta11.Coin)
		}
		return protoreflect.ValueOfMessage(x.CreateEphemeralWalletIncentive.ProtoReflect())
	case "qadena.qadena.QueryIncentivesResponse.createWalletTransparentIncentive":
		if x.CreateWalletTransparentIncentive == nil {
			x.CreateWalletTransparentIncentive = new(v1beta11.Coin)
		}
		return protoreflect.ValueOfMessage(x.CreateWalletTransparentIncentive.ProtoReflect())
	case "qadena.qadena.QueryIncentivesResponse.createEphemeralWalletTransparentIncentive":
		if x.CreateEphemeralWalletTransparentIncentive == nil {
			x.CreateEphemeralWalletTransparentIncentive = new(v1beta11.Coin)
		}
		return protoreflect.ValueOfMessage(x.CreateEphemeralWalletTransparentIncentive.ProtoReflect())
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: qadena.qadena.QueryIncentivesResponse"))
		}
		panic(fmt.Errorf("message qadena.qadena.QueryIncentivesResponse does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_QueryIncentivesResponse) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "qadena.qadena.QueryIncentivesResponse.createWalletIncentive":
		m := new(v1beta11.Coin)
		return protoreflect.ValueOfMessage(m.ProtoReflect())
	case "qadena.qadena.QueryIncentivesResponse.createEphemeralWalletIncentive":
		m := new(v1beta11.Coin)
		return protoreflect.ValueOfMessage(m.ProtoReflect())
	case "qadena.qadena.QueryIncentivesResponse.createWalletTransparentIncentive":
		m := new(v1beta11.Coin)
		return protoreflect.ValueOfMessage(m.ProtoReflect())
	case "qadena.qadena.QueryIncentivesResponse.createEphemeralWalletTransparentIncentive":
		m := new(v1beta11.Coin)
		return protoreflect.ValueOfMessage(m.ProtoReflect())
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: qadena.qadena.QueryIncentivesResponse"))
		}
		panic(fmt.Errorf("message qadena.qadena.QueryIncentivesResponse does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_QueryIncentivesResponse) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in qadena.qadena.QueryIncentivesResponse", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_QueryIncentivesResponse) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_QueryIncentivesResponse) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_QueryIncentivesResponse) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_QueryIncentivesResponse) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*QueryIncentivesResponse)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		if x.CreateWalletIncentive != nil {
			l = options.Size(x.CreateWalletIncentive)
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.CreateEphemeralWalletIncentive != nil {
			l = options.Size(x.CreateEphemeralWalletIncentive)
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.CreateWalletTransparentIncentive != nil {
			l = options.Size(x.CreateWalletTransparentIncentive)
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.CreateEphemeralWalletTransparentIncentive != nil {
			l = options.Size(x.CreateEphemeralWalletTransparentIncentive)
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*QueryIncentivesResponse)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if x.CreateEphemeralWalletTransparentIncentive != nil {
			encoded, err := options.Marshal(x.CreateEphemeralWalletTransparentIncentive)
			if err != nil {
				return protoiface.MarshalOutput{
					NoUnkeyedLiterals: input.NoUnkeyedLiterals,
					Buf:               input.Buf,
				}, err
			}
			i -= len(encoded)
			copy(dAtA[i:], encoded)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(encoded)))
			i--
			dAtA[i] = 0x22
		}
		if x.CreateWalletTransparentIncentive != nil {
			encoded, err := options.Marshal(x.CreateWalletTransparentIncentive)
			if err != nil {
				return protoiface.MarshalOutput{
					NoUnkeyedLiterals: input.NoUnkeyedLiterals,
					Buf:               input.Buf,
				}, err
			}
			i -= len(encoded)
			copy(dAtA[i:], encoded)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(encoded)))
			i--
			dAtA[i] = 0x1a
		}
		if x.CreateEphemeralWalletIncentive != nil {
			encoded, err := options.Marshal(x.CreateEphemeralWalletIncentive)
			if err != nil {
				return protoiface.MarshalOutput{
					NoUnkeyedLiterals: input.NoUnkeyedLiterals,
					Buf:               input.Buf,
				}, err
			}
			i -= len(encoded)
			copy(dAtA[i:], encoded)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(encoded)))
			i--
			dAtA[i] = 0x12
		}
		if x.CreateWalletIncentive != nil {
			encoded, err := options.Marshal(x.CreateWalletIncentive)
			if err != nil {
				return protoiface.MarshalOutput{
					NoUnkeyedLiterals: input.NoUnkeyedLiterals,
					Buf:               input.Buf,
				}, err
			}
			i -= len(encoded)
			copy(dAtA[i:], encoded)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(encoded)))
			i--
			dAtA[i] = 0xa
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*QueryIncentivesResponse)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: QueryIncentivesResponse: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: QueryIncentivesResponse: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field CreateWalletIncentive", wireType)
				}
				var msglen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					msglen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if msglen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + msglen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if x.CreateWalletIncentive == nil {
					x.CreateWalletIncentive = &v1beta11.Coin{}
				}
				if err := options.Unmarshal(dAtA[iNdEx:postIndex], x.CreateWalletIncentive); err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				iNdEx = postIndex
			case 2:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field CreateEphemeralWalletIncentive", wireType)
				}
				var msglen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					msglen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if msglen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + msglen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if x.CreateEphemeralWalletIncentive == nil {
					x.CreateEphemeralWalletIncentive = &v1beta11.Coin{}
				}
				if err := options.Unmarshal(dAtA[iNdEx:postIndex], x.CreateEphemeralWalletIncentive); err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				iNdEx = postIndex
			case 3:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field CreateWalletTransparentIncentive", wireType)
				}
				var msglen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					msglen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if msglen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + msglen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if x.CreateWalletTransparentIncentive == nil {
					x.CreateWalletTransparentIncentive = &v1beta11.Coin{}
				}
				if err := options.Unmarshal(dAtA[iNdEx:postIndex], x.CreateWalletTransparentIncentive); err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				iNdEx = postIndex
			case 4:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field CreateEphemeralWalletTransparentIncentive", wireType)
				}
				var msglen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					msglen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if msglen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + msglen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if x.CreateEphemeralWalletTransparentIncentive == nil {
					x.CreateEphemeralWalletTransparentIncentive = &v1beta11.Coin{}
				}
				if err := options.Unmarshal(dAtA[iNdEx:postIndex], x.CreateEphemeralWalletTransparentIncentive); err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				iNdEx = postIndex
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var (
	md_QueryEnclaveValidateEnclaveIdentityRequest              protoreflect.MessageDescriptor
	fd_QueryEnclaveValidateEnclaveIdentityRequest_remoteReport protoreflect.FieldDescriptor
	fd_QueryEnclaveValidateEnclaveIdentityRequest_uniqueID     protoreflect.FieldDescriptor
	fd_QueryEnclaveValidateEnclaveIdentityRequest_signerID     protoreflect.FieldDescriptor
	fd_QueryEnclaveValidateEnclaveIdentityRequest_productID    protoreflect.FieldDescriptor
)

func init() {
	file_qadena_qadena_query_proto_init()
	md_QueryEnclaveValidateEnclaveIdentityRequest = File_qadena_qadena_query_proto.Messages().ByName("QueryEnclaveValidateEnclaveIdentityRequest")
	fd_QueryEnclaveValidateEnclaveIdentityRequest_remoteReport = md_QueryEnclaveValidateEnclaveIdentityRequest.Fields().ByName("remoteReport")
	fd_QueryEnclaveValidateEnclaveIdentityRequest_uniqueID = md_QueryEnclaveValidateEnclaveIdentityRequest.Fields().ByName("uniqueID")
	fd_QueryEnclaveValidateEnclaveIdentityRequest_signerID = md_QueryEnclaveValidateEnclaveIdentityRequest.Fields().ByName("signerID")
	fd_QueryEnclaveValidateEnclaveIdentityRequest_productID = md_QueryEnclaveValidateEnclaveIdentityRequest.Fields().ByName("productID")
}

var _ protoreflect.Message = (*fastReflection_QueryEnclaveValidateEnclaveIdentityRequest)(nil)

type fastReflection_QueryEnclaveValidateEnclaveIdentityRequest QueryEnclaveValidateEnclaveIdentityRequest

func (x *QueryEnclaveValidateEnclaveIdentityRequest) ProtoReflect() protoreflect.Message {
	return (*fastReflection_QueryEnclaveValidateEnclaveIdentityRequest)(x)
}

func (x *QueryEnclaveValidateEnclaveIdentityRequest) slowProtoReflect() protoreflect.Message {
	mi := &file_qadena_qadena_query_proto_msgTypes[44]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_QueryEnclaveValidateEnclaveIdentityRequest_messageType fastReflection_QueryEnclaveValidateEnclaveIdentityRequest_messageType
var _ protoreflect.MessageType = fastReflection_QueryEnclaveValidateEnclaveIdentityRequest_messageType{}

type fastReflection_QueryEnclaveValidateEnclaveIdentityRequest_messageType struct{}

func (x fastReflection_QueryEnclaveValidateEnclaveIdentityRequest_messageType) Zero() protoreflect.Message {
	return (*fastReflection_QueryEnclaveValidateEnclaveIdentityRequest)(nil)
}
func (x fastReflection_QueryEnclaveValidateEnclaveIdentityRequest_messageType) New() protoreflect.Message {
	return new(fastReflection_QueryEnclaveValidateEnclaveIdentityRequest)
}
func (x fastReflection_QueryEnclaveValidateEnclaveIdentityRequest_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_QueryEnclaveValidateEnclaveIdentityRequest
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_QueryEnclaveValidateEnclaveIdentityRequest) Descriptor() protoreflect.MessageDescriptor {
	return md_QueryEnclaveValidateEnclaveIdentityRequest
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_QueryEnclaveValidateEnclaveIdentityRequest) Type() protoreflect.MessageType {
	return _fastReflection_QueryEnclaveValidateEnclaveIdentityRequest_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_QueryEnclaveValidateEnclaveIdentityRequest) New() protoreflect.Message {
	return new(fastReflection_QueryEnclaveValidateEnclaveIdentityRequest)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_QueryEnclaveValidateEnclaveIdentityRequest) Interface() protoreflect.ProtoMessage {
	return (*QueryEnclaveValidateEnclaveIdentityRequest)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_QueryEnclaveValidateEnclaveIdentityRequest) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if len(x.RemoteReport) != 0 {
		value := protoreflect.ValueOfBytes(x.RemoteReport)
		if !f(fd_QueryEnclaveValidateEnclaveIdentityRequest_remoteReport, value) {
			return
		}
	}
	if x.UniqueID != "" {
		value := protoreflect.ValueOfString(x.UniqueID)
		if !f(fd_QueryEnclaveValidateEnclaveIdentityRequest_uniqueID, value) {
			return
		}
	}
	if x.SignerID != "" {
		value := protoreflect.ValueOfString(x.SignerID)
		if !f(fd_QueryEnclaveValidateEnclaveIdentityRequest_signerID, value) {
			return
		}
	}
	if x.ProductID != "" {
		value := protoreflect.ValueOfString(x.ProductID)
		if !f(fd_QueryEnclaveValidateEnclaveIdentityRequest_productID, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_QueryEnclaveValidateEnclaveIdentityRequest) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "qadena.qadena.QueryEnclaveValidateEnclaveIdentityRequest.remoteReport":
		return len(x.RemoteReport) != 0
	case "qadena.qadena.QueryEnclaveValidateEnclaveIdentityRequest.uniqueID":
		return x.UniqueID != ""
	case "qadena.qadena.QueryEnclaveValidateEnclaveIdentityRequest.signerID":
		return x.SignerID != ""
	case "qadena.qadena.QueryEnclaveValidateEnclaveIdentityRequest.productID":
		return x.ProductID != ""
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: qadena.qadena.QueryEnclaveValidateEnclaveIdentityRequest"))
		}
		panic(fmt.Errorf("message qadena.qadena.QueryEnclaveValidateEnclaveIdentityRequest does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_QueryEnclaveValidateEnclaveIdentityRequest) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "qadena.qadena.QueryEnclaveValidateEnclaveIdentityRequest.remoteReport":
		x.RemoteReport = nil
	case "qadena.qadena.QueryEnclaveValidateEnclaveIdentityRequest.uniqueID":
		x.UniqueID = ""
	case "qadena.qadena.QueryEnclaveValidateEnclaveIdentityRequest.signerID":
		x.SignerID = ""
	case "qadena.qadena.QueryEnclaveValidateEnclaveIdentityRequest.productID":
		x.ProductID = ""
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: qadena.qadena.QueryEnclaveValidateEnclaveIdentityRequest"))
		}
		panic(fmt.Errorf("message qadena.qadena.QueryEnclaveValidateEnclaveIdentityRequest does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_QueryEnclaveValidateEnclaveIdentityRequest) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "qadena.qadena.QueryEnclaveValidateEnclaveIdentityRequest.remoteReport":
		value := x.RemoteReport
		return protoreflect.ValueOfBytes(value)
	case "qadena.qadena.QueryEnclaveValidateEnclaveIdentityRequest.uniqueID":
		value := x.UniqueID
		return protoreflect.ValueOfString(value)
	case "qadena.qadena.QueryEnclaveValidateEnclaveIdentityRequest.signerID":
		value := x.SignerID
		return protoreflect.ValueOfString(value)
	case "qadena.qadena.QueryEnclaveValidateEnclaveIdentityRequest.productID":
		value := x.ProductID
		return protoreflect.ValueOfString(value)
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: qadena.qadena.QueryEnclaveValidateEnclaveIdentityRequest"))
		}
		panic(fmt.Errorf("message qadena.qadena.QueryEnclaveValidateEnclaveIdentityRequest does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_QueryEnclaveValidateEnclaveIdentityRequest) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "qadena.qadena.QueryEnclaveValidateEnclaveIdentityRequest.remoteReport":
		x.RemoteReport = value.Bytes()
	case "qadena.qadena.QueryEnclaveValidateEnclaveIdentityRequest.uniqueID":
		x.UniqueID = value.Interface().(string)
	case "qadena.qadena.QueryEnclaveValidateEnclaveIdentityRequest.signerID":
		x.SignerID = value.Interface().(string)
	case "qadena.qadena.QueryEnclaveValidateEnclaveIdentityRequest.productID":
		x.ProductID = value.Interface().(string)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: qadena.qadena.QueryEnclaveValidateEnclaveIdentityRequest"))
		}
		panic(fmt.Errorf("message qadena.qadena.QueryEnclaveValidateEnclaveIdentityRequest does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_QueryEnclaveValidateEnclaveIdentityRequest) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "qadena.qadena.QueryEnclaveValidateEnclaveIdentityRequest.remoteReport":
		panic(fmt.Errorf("field remoteReport of message qadena.qadena.QueryEnclaveValidateEnclaveIdentityRequest is not mutable"))
	case "qadena.qadena.QueryEnclaveValidateEnclaveIdentityRequest.uniqueID":
		panic(fmt.Errorf("field uniqueID of message qadena.qadena.QueryEnclaveValidateEnclaveIdentityRequest is not mutable"))
	case "qadena.qadena.QueryEnclaveValidateEnclaveIdentityRequest.signerID":
		panic(fmt.Errorf("field signerID of message qadena.qadena.QueryEnclaveValidateEnclaveIdentityRequest is not mutable"))
	case "qadena.qadena.QueryEnclaveValidateEnclaveIdentityRequest.productID":
		panic(fmt.Errorf("field productID of message qadena.qadena.QueryEnclaveValidateEnclaveIdentityRequest is not mutable"))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: qadena.qadena.QueryEnclaveValidateEnclaveIdentityRequest"))
		}
		panic(fmt.Errorf("message qadena.qadena.QueryEnclaveValidateEnclaveIdentityRequest does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_QueryEnclaveValidateEnclaveIdentityRequest) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "qadena.qadena.QueryEnclaveValidateEnclaveIdentityRequest.remoteReport":
		return protoreflect.ValueOfBytes(nil)
	case "qadena.qadena.QueryEnclaveValidateEnclaveIdentityRequest.uniqueID":
		return protoreflect.ValueOfString("")
	case "qadena.qadena.QueryEnclaveValidateEnclaveIdentityRequest.signerID":
		return protoreflect.ValueOfString("")
	case "qadena.qadena.QueryEnclaveValidateEnclaveIdentityRequest.productID":
		return protoreflect.ValueOfString("")
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: qadena.qadena.QueryEnclaveValidateEnclaveIdentityRequest"))
		}
		panic(fmt.Errorf("message qadena.qadena.QueryEnclaveValidateEnclaveIdentityRequest does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_QueryEnclaveValidateEnclaveIdentityRequest) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in qadena.qadena.QueryEnclaveValidateEnclaveIdentityRequest", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_QueryEnclaveValidateEnclaveIdentityRequest) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_QueryEnclaveValidateEnclaveIdentityRequest) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_QueryEnclaveValidateEnclaveIdentityRequest) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_QueryEnclaveValidateEnclaveIdentityRequest) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*QueryEnclaveValidateEnclaveIdentityRequest)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		l = len(x.RemoteReport)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.UniqueID)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.SignerID)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.ProductID)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*QueryEnclaveValidateEnclaveIdentityRequest)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if len(x.ProductID) > 0 {
			i -= len(x.ProductID)
			copy(dAtA[i:], x.ProductID)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.ProductID)))
			i--
			dAtA[i] = 0x22
		}
		if len(x.SignerID) > 0 {
			i -= len(x.SignerID)
			copy(dAtA[i:], x.SignerID)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.SignerID)))
			i--
			dAtA[i] = 0x1a
		}
		if len(x.UniqueID) > 0 {
			i -= len(x.UniqueID)
			copy(dAtA[i:], x.UniqueID)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.UniqueID)))
			i--
			dAtA[i] = 0x12
		}
		if len(x.RemoteReport) > 0 {
			i -= len(x.RemoteReport)
			copy(dAtA[i:], x.RemoteReport)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.RemoteReport)))
			i--
			dAtA[i] = 0xa
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*QueryEnclaveValidateEnclaveIdentityRequest)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: QueryEnclaveValidateEnclaveIdentityRequest: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: QueryEnclaveValidateEnclaveIdentityRequest: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field RemoteReport", wireType)
				}
				var byteLen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					byteLen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if byteLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + byteLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.RemoteReport = append(x.RemoteReport[:0], dAtA[iNdEx:postIndex]...)
				if x.RemoteReport == nil {
					x.RemoteReport = []byte{}
				}
				iNdEx = postIndex
			case 2:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field UniqueID", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.UniqueID = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 3:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field SignerID", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.SignerID = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 4:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field ProductID", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.ProductID = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var (
	md_QueryEnclaveValidateEnclaveIdentityResponse              protoreflect.MessageDescriptor
	fd_QueryEnclaveValidateEnclaveIdentityResponse_remoteReport protoreflect.FieldDescriptor
	fd_QueryEnclaveValidateEnclaveIdentityResponse_status       protoreflect.FieldDescriptor
)

func init() {
	file_qadena_qadena_query_proto_init()
	md_QueryEnclaveValidateEnclaveIdentityResponse = File_qadena_qadena_query_proto.Messages().ByName("QueryEnclaveValidateEnclaveIdentityResponse")
	fd_QueryEnclaveValidateEnclaveIdentityResponse_remoteReport = md_QueryEnclaveValidateEnclaveIdentityResponse.Fields().ByName("remoteReport")
	fd_QueryEnclaveValidateEnclaveIdentityResponse_status = md_QueryEnclaveValidateEnclaveIdentityResponse.Fields().ByName("status")
}

var _ protoreflect.Message = (*fastReflection_QueryEnclaveValidateEnclaveIdentityResponse)(nil)

type fastReflection_QueryEnclaveValidateEnclaveIdentityResponse QueryEnclaveValidateEnclaveIdentityResponse

func (x *QueryEnclaveValidateEnclaveIdentityResponse) ProtoReflect() protoreflect.Message {
	return (*fastReflection_QueryEnclaveValidateEnclaveIdentityResponse)(x)
}

func (x *QueryEnclaveValidateEnclaveIdentityResponse) slowProtoReflect() protoreflect.Message {
	mi := &file_qadena_qadena_query_proto_msgTypes[45]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_QueryEnclaveValidateEnclaveIdentityResponse_messageType fastReflection_QueryEnclaveValidateEnclaveIdentityResponse_messageType
var _ protoreflect.MessageType = fastReflection_QueryEnclaveValidateEnclaveIdentityResponse_messageType{}

type fastReflection_QueryEnclaveValidateEnclaveIdentityResponse_messageType struct{}

func (x fastReflection_QueryEnclaveValidateEnclaveIdentityResponse_messageType) Zero() protoreflect.Message {
	return (*fastReflection_QueryEnclaveValidateEnclaveIdentityResponse)(nil)
}
func (x fastReflection_QueryEnclaveValidateEnclaveIdentityResponse_messageType) New() protoreflect.Message {
	return new(fastReflection_QueryEnclaveValidateEnclaveIdentityResponse)
}
func (x fastReflection_QueryEnclaveValidateEnclaveIdentityResponse_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_QueryEnclaveValidateEnclaveIdentityResponse
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_QueryEnclaveValidateEnclaveIdentityResponse) Descriptor() protoreflect.MessageDescriptor {
	return md_QueryEnclaveValidateEnclaveIdentityResponse
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_QueryEnclaveValidateEnclaveIdentityResponse) Type() protoreflect.MessageType {
	return _fastReflection_QueryEnclaveValidateEnclaveIdentityResponse_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_QueryEnclaveValidateEnclaveIdentityResponse) New() protoreflect.Message {
	return new(fastReflection_QueryEnclaveValidateEnclaveIdentityResponse)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_QueryEnclaveValidateEnclaveIdentityResponse) Interface() protoreflect.ProtoMessage {
	return (*QueryEnclaveValidateEnclaveIdentityResponse)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_QueryEnclaveValidateEnclaveIdentityResponse) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if len(x.RemoteReport) != 0 {
		value := protoreflect.ValueOfBytes(x.RemoteReport)
		if !f(fd_QueryEnclaveValidateEnclaveIdentityResponse_remoteReport, value) {
			return
		}
	}
	if x.Status != "" {
		value := protoreflect.ValueOfString(x.Status)
		if !f(fd_QueryEnclaveValidateEnclaveIdentityResponse_status, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_QueryEnclaveValidateEnclaveIdentityResponse) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "qadena.qadena.QueryEnclaveValidateEnclaveIdentityResponse.remoteReport":
		return len(x.RemoteReport) != 0
	case "qadena.qadena.QueryEnclaveValidateEnclaveIdentityResponse.status":
		return x.Status != ""
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: qadena.qadena.QueryEnclaveValidateEnclaveIdentityResponse"))
		}
		panic(fmt.Errorf("message qadena.qadena.QueryEnclaveValidateEnclaveIdentityResponse does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_QueryEnclaveValidateEnclaveIdentityResponse) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "qadena.qadena.QueryEnclaveValidateEnclaveIdentityResponse.remoteReport":
		x.RemoteReport = nil
	case "qadena.qadena.QueryEnclaveValidateEnclaveIdentityResponse.status":
		x.Status = ""
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: qadena.qadena.QueryEnclaveValidateEnclaveIdentityResponse"))
		}
		panic(fmt.Errorf("message qadena.qadena.QueryEnclaveValidateEnclaveIdentityResponse does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_QueryEnclaveValidateEnclaveIdentityResponse) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "qadena.qadena.QueryEnclaveValidateEnclaveIdentityResponse.remoteReport":
		value := x.RemoteReport
		return protoreflect.ValueOfBytes(value)
	case "qadena.qadena.QueryEnclaveValidateEnclaveIdentityResponse.status":
		value := x.Status
		return protoreflect.ValueOfString(value)
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: qadena.qadena.QueryEnclaveValidateEnclaveIdentityResponse"))
		}
		panic(fmt.Errorf("message qadena.qadena.QueryEnclaveValidateEnclaveIdentityResponse does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_QueryEnclaveValidateEnclaveIdentityResponse) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "qadena.qadena.QueryEnclaveValidateEnclaveIdentityResponse.remoteReport":
		x.RemoteReport = value.Bytes()
	case "qadena.qadena.QueryEnclaveValidateEnclaveIdentityResponse.status":
		x.Status = value.Interface().(string)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: qadena.qadena.QueryEnclaveValidateEnclaveIdentityResponse"))
		}
		panic(fmt.Errorf("message qadena.qadena.QueryEnclaveValidateEnclaveIdentityResponse does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_QueryEnclaveValidateEnclaveIdentityResponse) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "qadena.qadena.QueryEnclaveValidateEnclaveIdentityResponse.remoteReport":
		panic(fmt.Errorf("field remoteReport of message qadena.qadena.QueryEnclaveValidateEnclaveIdentityResponse is not mutable"))
	case "qadena.qadena.QueryEnclaveValidateEnclaveIdentityResponse.status":
		panic(fmt.Errorf("field status of message qadena.qadena.QueryEnclaveValidateEnclaveIdentityResponse is not mutable"))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: qadena.qadena.QueryEnclaveValidateEnclaveIdentityResponse"))
		}
		panic(fmt.Errorf("message qadena.qadena.QueryEnclaveValidateEnclaveIdentityResponse does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_QueryEnclaveValidateEnclaveIdentityResponse) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "qadena.qadena.QueryEnclaveValidateEnclaveIdentityResponse.remoteReport":
		return protoreflect.ValueOfBytes(nil)
	case "qadena.qadena.QueryEnclaveValidateEnclaveIdentityResponse.status":
		return protoreflect.ValueOfString("")
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: qadena.qadena.QueryEnclaveValidateEnclaveIdentityResponse"))
		}
		panic(fmt.Errorf("message qadena.qadena.QueryEnclaveValidateEnclaveIdentityResponse does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_QueryEnclaveValidateEnclaveIdentityResponse) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in qadena.qadena.QueryEnclaveValidateEnclaveIdentityResponse", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_QueryEnclaveValidateEnclaveIdentityResponse) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_QueryEnclaveValidateEnclaveIdentityResponse) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_QueryEnclaveValidateEnclaveIdentityResponse) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_QueryEnclaveValidateEnclaveIdentityResponse) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*QueryEnclaveValidateEnclaveIdentityResponse)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		l = len(x.RemoteReport)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.Status)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*QueryEnclaveValidateEnclaveIdentityResponse)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if len(x.Status) > 0 {
			i -= len(x.Status)
			copy(dAtA[i:], x.Status)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.Status)))
			i--
			dAtA[i] = 0x12
		}
		if len(x.RemoteReport) > 0 {
			i -= len(x.RemoteReport)
			copy(dAtA[i:], x.RemoteReport)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.RemoteReport)))
			i--
			dAtA[i] = 0xa
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*QueryEnclaveValidateEnclaveIdentityResponse)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: QueryEnclaveValidateEnclaveIdentityResponse: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: QueryEnclaveValidateEnclaveIdentityResponse: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field RemoteReport", wireType)
				}
				var byteLen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					byteLen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if byteLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + byteLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.RemoteReport = append(x.RemoteReport[:0], dAtA[iNdEx:postIndex]...)
				if x.RemoteReport == nil {
					x.RemoteReport = []byte{}
				}
				iNdEx = postIndex
			case 2:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Status", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Status = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var (
	md_QueryEnclaveSyncEnclaveRequest              protoreflect.MessageDescriptor
	fd_QueryEnclaveSyncEnclaveRequest_remoteReport protoreflect.FieldDescriptor
	fd_QueryEnclaveSyncEnclaveRequest_enclavePubK  protoreflect.FieldDescriptor
)

func init() {
	file_qadena_qadena_query_proto_init()
	md_QueryEnclaveSyncEnclaveRequest = File_qadena_qadena_query_proto.Messages().ByName("QueryEnclaveSyncEnclaveRequest")
	fd_QueryEnclaveSyncEnclaveRequest_remoteReport = md_QueryEnclaveSyncEnclaveRequest.Fields().ByName("remoteReport")
	fd_QueryEnclaveSyncEnclaveRequest_enclavePubK = md_QueryEnclaveSyncEnclaveRequest.Fields().ByName("enclavePubK")
}

var _ protoreflect.Message = (*fastReflection_QueryEnclaveSyncEnclaveRequest)(nil)

type fastReflection_QueryEnclaveSyncEnclaveRequest QueryEnclaveSyncEnclaveRequest

func (x *QueryEnclaveSyncEnclaveRequest) ProtoReflect() protoreflect.Message {
	return (*fastReflection_QueryEnclaveSyncEnclaveRequest)(x)
}

func (x *QueryEnclaveSyncEnclaveRequest) slowProtoReflect() protoreflect.Message {
	mi := &file_qadena_qadena_query_proto_msgTypes[46]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_QueryEnclaveSyncEnclaveRequest_messageType fastReflection_QueryEnclaveSyncEnclaveRequest_messageType
var _ protoreflect.MessageType = fastReflection_QueryEnclaveSyncEnclaveRequest_messageType{}

type fastReflection_QueryEnclaveSyncEnclaveRequest_messageType struct{}

func (x fastReflection_QueryEnclaveSyncEnclaveRequest_messageType) Zero() protoreflect.Message {
	return (*fastReflection_QueryEnclaveSyncEnclaveRequest)(nil)
}
func (x fastReflection_QueryEnclaveSyncEnclaveRequest_messageType) New() protoreflect.Message {
	return new(fastReflection_QueryEnclaveSyncEnclaveRequest)
}
func (x fastReflection_QueryEnclaveSyncEnclaveRequest_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_QueryEnclaveSyncEnclaveRequest
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_QueryEnclaveSyncEnclaveRequest) Descriptor() protoreflect.MessageDescriptor {
	return md_QueryEnclaveSyncEnclaveRequest
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_QueryEnclaveSyncEnclaveRequest) Type() protoreflect.MessageType {
	return _fastReflection_QueryEnclaveSyncEnclaveRequest_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_QueryEnclaveSyncEnclaveRequest) New() protoreflect.Message {
	return new(fastReflection_QueryEnclaveSyncEnclaveRequest)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_QueryEnclaveSyncEnclaveRequest) Interface() protoreflect.ProtoMessage {
	return (*QueryEnclaveSyncEnclaveRequest)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_QueryEnclaveSyncEnclaveRequest) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if len(x.RemoteReport) != 0 {
		value := protoreflect.ValueOfBytes(x.RemoteReport)
		if !f(fd_QueryEnclaveSyncEnclaveRequest_remoteReport, value) {
			return
		}
	}
	if x.EnclavePubK != "" {
		value := protoreflect.ValueOfString(x.EnclavePubK)
		if !f(fd_QueryEnclaveSyncEnclaveRequest_enclavePubK, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_QueryEnclaveSyncEnclaveRequest) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "qadena.qadena.QueryEnclaveSyncEnclaveRequest.remoteReport":
		return len(x.RemoteReport) != 0
	case "qadena.qadena.QueryEnclaveSyncEnclaveRequest.enclavePubK":
		return x.EnclavePubK != ""
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: qadena.qadena.QueryEnclaveSyncEnclaveRequest"))
		}
		panic(fmt.Errorf("message qadena.qadena.QueryEnclaveSyncEnclaveRequest does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_QueryEnclaveSyncEnclaveRequest) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "qadena.qadena.QueryEnclaveSyncEnclaveRequest.remoteReport":
		x.RemoteReport = nil
	case "qadena.qadena.QueryEnclaveSyncEnclaveRequest.enclavePubK":
		x.EnclavePubK = ""
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: qadena.qadena.QueryEnclaveSyncEnclaveRequest"))
		}
		panic(fmt.Errorf("message qadena.qadena.QueryEnclaveSyncEnclaveRequest does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_QueryEnclaveSyncEnclaveRequest) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "qadena.qadena.QueryEnclaveSyncEnclaveRequest.remoteReport":
		value := x.RemoteReport
		return protoreflect.ValueOfBytes(value)
	case "qadena.qadena.QueryEnclaveSyncEnclaveRequest.enclavePubK":
		value := x.EnclavePubK
		return protoreflect.ValueOfString(value)
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: qadena.qadena.QueryEnclaveSyncEnclaveRequest"))
		}
		panic(fmt.Errorf("message qadena.qadena.QueryEnclaveSyncEnclaveRequest does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_QueryEnclaveSyncEnclaveRequest) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "qadena.qadena.QueryEnclaveSyncEnclaveRequest.remoteReport":
		x.RemoteReport = value.Bytes()
	case "qadena.qadena.QueryEnclaveSyncEnclaveRequest.enclavePubK":
		x.EnclavePubK = value.Interface().(string)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: qadena.qadena.QueryEnclaveSyncEnclaveRequest"))
		}
		panic(fmt.Errorf("message qadena.qadena.QueryEnclaveSyncEnclaveRequest does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_QueryEnclaveSyncEnclaveRequest) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "qadena.qadena.QueryEnclaveSyncEnclaveRequest.remoteReport":
		panic(fmt.Errorf("field remoteReport of message qadena.qadena.QueryEnclaveSyncEnclaveRequest is not mutable"))
	case "qadena.qadena.QueryEnclaveSyncEnclaveRequest.enclavePubK":
		panic(fmt.Errorf("field enclavePubK of message qadena.qadena.QueryEnclaveSyncEnclaveRequest is not mutable"))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: qadena.qadena.QueryEnclaveSyncEnclaveRequest"))
		}
		panic(fmt.Errorf("message qadena.qadena.QueryEnclaveSyncEnclaveRequest does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_QueryEnclaveSyncEnclaveRequest) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "qadena.qadena.QueryEnclaveSyncEnclaveRequest.remoteReport":
		return protoreflect.ValueOfBytes(nil)
	case "qadena.qadena.QueryEnclaveSyncEnclaveRequest.enclavePubK":
		return protoreflect.ValueOfString("")
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: qadena.qadena.QueryEnclaveSyncEnclaveRequest"))
		}
		panic(fmt.Errorf("message qadena.qadena.QueryEnclaveSyncEnclaveRequest does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_QueryEnclaveSyncEnclaveRequest) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in qadena.qadena.QueryEnclaveSyncEnclaveRequest", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_QueryEnclaveSyncEnclaveRequest) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_QueryEnclaveSyncEnclaveRequest) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_QueryEnclaveSyncEnclaveRequest) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_QueryEnclaveSyncEnclaveRequest) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*QueryEnclaveSyncEnclaveRequest)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		l = len(x.RemoteReport)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.EnclavePubK)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*QueryEnclaveSyncEnclaveRequest)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if len(x.EnclavePubK) > 0 {
			i -= len(x.EnclavePubK)
			copy(dAtA[i:], x.EnclavePubK)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.EnclavePubK)))
			i--
			dAtA[i] = 0x12
		}
		if len(x.RemoteReport) > 0 {
			i -= len(x.RemoteReport)
			copy(dAtA[i:], x.RemoteReport)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.RemoteReport)))
			i--
			dAtA[i] = 0xa
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*QueryEnclaveSyncEnclaveRequest)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: QueryEnclaveSyncEnclaveRequest: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: QueryEnclaveSyncEnclaveRequest: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field RemoteReport", wireType)
				}
				var byteLen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					byteLen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if byteLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + byteLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.RemoteReport = append(x.RemoteReport[:0], dAtA[iNdEx:postIndex]...)
				if x.RemoteReport == nil {
					x.RemoteReport = []byte{}
				}
				iNdEx = postIndex
			case 2:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field EnclavePubK", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.EnclavePubK = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var (
	md_QueryEnclaveSyncEnclaveResponse                             protoreflect.MessageDescriptor
	fd_QueryEnclaveSyncEnclaveResponse_remoteReport                protoreflect.FieldDescriptor
	fd_QueryEnclaveSyncEnclaveResponse_encEnclaveParamsEnclavePubK protoreflect.FieldDescriptor
)

func init() {
	file_qadena_qadena_query_proto_init()
	md_QueryEnclaveSyncEnclaveResponse = File_qadena_qadena_query_proto.Messages().ByName("QueryEnclaveSyncEnclaveResponse")
	fd_QueryEnclaveSyncEnclaveResponse_remoteReport = md_QueryEnclaveSyncEnclaveResponse.Fields().ByName("remoteReport")
	fd_QueryEnclaveSyncEnclaveResponse_encEnclaveParamsEnclavePubK = md_QueryEnclaveSyncEnclaveResponse.Fields().ByName("encEnclaveParamsEnclavePubK")
}

var _ protoreflect.Message = (*fastReflection_QueryEnclaveSyncEnclaveResponse)(nil)

type fastReflection_QueryEnclaveSyncEnclaveResponse QueryEnclaveSyncEnclaveResponse

func (x *QueryEnclaveSyncEnclaveResponse) ProtoReflect() protoreflect.Message {
	return (*fastReflection_QueryEnclaveSyncEnclaveResponse)(x)
}

func (x *QueryEnclaveSyncEnclaveResponse) slowProtoReflect() protoreflect.Message {
	mi := &file_qadena_qadena_query_proto_msgTypes[47]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_QueryEnclaveSyncEnclaveResponse_messageType fastReflection_QueryEnclaveSyncEnclaveResponse_messageType
var _ protoreflect.MessageType = fastReflection_QueryEnclaveSyncEnclaveResponse_messageType{}

type fastReflection_QueryEnclaveSyncEnclaveResponse_messageType struct{}

func (x fastReflection_QueryEnclaveSyncEnclaveResponse_messageType) Zero() protoreflect.Message {
	return (*fastReflection_QueryEnclaveSyncEnclaveResponse)(nil)
}
func (x fastReflection_QueryEnclaveSyncEnclaveResponse_messageType) New() protoreflect.Message {
	return new(fastReflection_QueryEnclaveSyncEnclaveResponse)
}
func (x fastReflection_QueryEnclaveSyncEnclaveResponse_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_QueryEnclaveSyncEnclaveResponse
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_QueryEnclaveSyncEnclaveResponse) Descriptor() protoreflect.MessageDescriptor {
	return md_QueryEnclaveSyncEnclaveResponse
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_QueryEnclaveSyncEnclaveResponse) Type() protoreflect.MessageType {
	return _fastReflection_QueryEnclaveSyncEnclaveResponse_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_QueryEnclaveSyncEnclaveResponse) New() protoreflect.Message {
	return new(fastReflection_QueryEnclaveSyncEnclaveResponse)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_QueryEnclaveSyncEnclaveResponse) Interface() protoreflect.ProtoMessage {
	return (*QueryEnclaveSyncEnclaveResponse)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_QueryEnclaveSyncEnclaveResponse) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if len(x.RemoteReport) != 0 {
		value := protoreflect.ValueOfBytes(x.RemoteReport)
		if !f(fd_QueryEnclaveSyncEnclaveResponse_remoteReport, value) {
			return
		}
	}
	if len(x.EncEnclaveParamsEnclavePubK) != 0 {
		value := protoreflect.ValueOfBytes(x.EncEnclaveParamsEnclavePubK)
		if !f(fd_QueryEnclaveSyncEnclaveResponse_encEnclaveParamsEnclavePubK, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_QueryEnclaveSyncEnclaveResponse) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "qadena.qadena.QueryEnclaveSyncEnclaveResponse.remoteReport":
		return len(x.RemoteReport) != 0
	case "qadena.qadena.QueryEnclaveSyncEnclaveResponse.encEnclaveParamsEnclavePubK":
		return len(x.EncEnclaveParamsEnclavePubK) != 0
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: qadena.qadena.QueryEnclaveSyncEnclaveResponse"))
		}
		panic(fmt.Errorf("message qadena.qadena.QueryEnclaveSyncEnclaveResponse does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_QueryEnclaveSyncEnclaveResponse) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "qadena.qadena.QueryEnclaveSyncEnclaveResponse.remoteReport":
		x.RemoteReport = nil
	case "qadena.qadena.QueryEnclaveSyncEnclaveResponse.encEnclaveParamsEnclavePubK":
		x.EncEnclaveParamsEnclavePubK = nil
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: qadena.qadena.QueryEnclaveSyncEnclaveResponse"))
		}
		panic(fmt.Errorf("message qadena.qadena.QueryEnclaveSyncEnclaveResponse does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_QueryEnclaveSyncEnclaveResponse) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "qadena.qadena.QueryEnclaveSyncEnclaveResponse.remoteReport":
		value := x.RemoteReport
		return protoreflect.ValueOfBytes(value)
	case "qadena.qadena.QueryEnclaveSyncEnclaveResponse.encEnclaveParamsEnclavePubK":
		value := x.EncEnclaveParamsEnclavePubK
		return protoreflect.ValueOfBytes(value)
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: qadena.qadena.QueryEnclaveSyncEnclaveResponse"))
		}
		panic(fmt.Errorf("message qadena.qadena.QueryEnclaveSyncEnclaveResponse does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_QueryEnclaveSyncEnclaveResponse) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "qadena.qadena.QueryEnclaveSyncEnclaveResponse.remoteReport":
		x.RemoteReport = value.Bytes()
	case "qadena.qadena.QueryEnclaveSyncEnclaveResponse.encEnclaveParamsEnclavePubK":
		x.EncEnclaveParamsEnclavePubK = value.Bytes()
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: qadena.qadena.QueryEnclaveSyncEnclaveResponse"))
		}
		panic(fmt.Errorf("message qadena.qadena.QueryEnclaveSyncEnclaveResponse does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_QueryEnclaveSyncEnclaveResponse) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "qadena.qadena.QueryEnclaveSyncEnclaveResponse.remoteReport":
		panic(fmt.Errorf("field remoteReport of message qadena.qadena.QueryEnclaveSyncEnclaveResponse is not mutable"))
	case "qadena.qadena.QueryEnclaveSyncEnclaveResponse.encEnclaveParamsEnclavePubK":
		panic(fmt.Errorf("field encEnclaveParamsEnclavePubK of message qadena.qadena.QueryEnclaveSyncEnclaveResponse is not mutable"))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: qadena.qadena.QueryEnclaveSyncEnclaveResponse"))
		}
		panic(fmt.Errorf("message qadena.qadena.QueryEnclaveSyncEnclaveResponse does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_QueryEnclaveSyncEnclaveResponse) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "qadena.qadena.QueryEnclaveSyncEnclaveResponse.remoteReport":
		return protoreflect.ValueOfBytes(nil)
	case "qadena.qadena.QueryEnclaveSyncEnclaveResponse.encEnclaveParamsEnclavePubK":
		return protoreflect.ValueOfBytes(nil)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: qadena.qadena.QueryEnclaveSyncEnclaveResponse"))
		}
		panic(fmt.Errorf("message qadena.qadena.QueryEnclaveSyncEnclaveResponse does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_QueryEnclaveSyncEnclaveResponse) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in qadena.qadena.QueryEnclaveSyncEnclaveResponse", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_QueryEnclaveSyncEnclaveResponse) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_QueryEnclaveSyncEnclaveResponse) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_QueryEnclaveSyncEnclaveResponse) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_QueryEnclaveSyncEnclaveResponse) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*QueryEnclaveSyncEnclaveResponse)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		l = len(x.RemoteReport)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.EncEnclaveParamsEnclavePubK)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*QueryEnclaveSyncEnclaveResponse)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if len(x.EncEnclaveParamsEnclavePubK) > 0 {
			i -= len(x.EncEnclaveParamsEnclavePubK)
			copy(dAtA[i:], x.EncEnclaveParamsEnclavePubK)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.EncEnclaveParamsEnclavePubK)))
			i--
			dAtA[i] = 0x12
		}
		if len(x.RemoteReport) > 0 {
			i -= len(x.RemoteReport)
			copy(dAtA[i:], x.RemoteReport)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.RemoteReport)))
			i--
			dAtA[i] = 0xa
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*QueryEnclaveSyncEnclaveResponse)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: QueryEnclaveSyncEnclaveResponse: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: QueryEnclaveSyncEnclaveResponse: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field RemoteReport", wireType)
				}
				var byteLen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					byteLen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if byteLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + byteLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.RemoteReport = append(x.RemoteReport[:0], dAtA[iNdEx:postIndex]...)
				if x.RemoteReport == nil {
					x.RemoteReport = []byte{}
				}
				iNdEx = postIndex
			case 2:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field EncEnclaveParamsEnclavePubK", wireType)
				}
				var byteLen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					byteLen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if byteLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + byteLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.EncEnclaveParamsEnclavePubK = append(x.EncEnclaveParamsEnclavePubK[:0], dAtA[iNdEx:postIndex]...)
				if x.EncEnclaveParamsEnclavePubK == nil {
					x.EncEnclaveParamsEnclavePubK = []byte{}
				}
				iNdEx = postIndex
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var (
	md_QueryEnclaveSecretShareRequest              protoreflect.MessageDescriptor
	fd_QueryEnclaveSecretShareRequest_remoteReport protoreflect.FieldDescriptor
	fd_QueryEnclaveSecretShareRequest_enclavePubK  protoreflect.FieldDescriptor
	fd_QueryEnclaveSecretShareRequest_pubKID       protoreflect.FieldDescriptor
)

func init() {
	file_qadena_qadena_query_proto_init()
	md_QueryEnclaveSecretShareRequest = File_qadena_qadena_query_proto.Messages().ByName("QueryEnclaveSecretShareRequest")
	fd_QueryEnclaveSecretShareRequest_remoteReport = md_QueryEnclaveSecretShareRequest.Fields().ByName("remoteReport")
	fd_QueryEnclaveSecretShareRequest_enclavePubK = md_QueryEnclaveSecretShareRequest.Fields().ByName("enclavePubK")
	fd_QueryEnclaveSecretShareRequest_pubKID = md_QueryEnclaveSecretShareRequest.Fields().ByName("pubKID")
}

var _ protoreflect.Message = (*fastReflection_QueryEnclaveSecretShareRequest)(nil)

type fastReflection_QueryEnclaveSecretShareRequest QueryEnclaveSecretShareRequest

func (x *QueryEnclaveSecretShareRequest) ProtoReflect() protoreflect.Message {
	return (*fastReflection_QueryEnclaveSecretShareRequest)(x)
}

func (x *QueryEnclaveSecretShareRequest) slowProtoReflect() protoreflect.Message {
	mi := &file_qadena_qadena_query_proto_msgTypes[48]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_QueryEnclaveSecretShareRequest_messageType fastReflection_QueryEnclaveSecretShareRequest_messageType
var _ protoreflect.MessageType = fastReflection_QueryEnclaveSecretShareRequest_messageType{}

type fastReflection_QueryEnclaveSecretShareRequest_messageType struct{}

func (x fastReflection_QueryEnclaveSecretShareRequest_messageType) Zero() protoreflect.Message {
	return (*fastReflection_QueryEnclaveSecretShareRequest)(nil)
}
func (x fastReflection_QueryEnclaveSecretShareRequest_messageType) New() protoreflect.Message {
	return new(fastReflection_QueryEnclaveSecretShareRequest)
}
func (x fastReflection_QueryEnclaveSecretShareRequest_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_QueryEnclaveSecretShareRequest
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_QueryEnclaveSecretShareRequest) Descriptor() protoreflect.MessageDescriptor {
	return md_QueryEnclaveSecretShareRequest
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_QueryEnclaveSecretShareRequest) Type() protoreflect.MessageType {
	return _fastReflection_QueryEnclaveSecretShareRequest_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_QueryEnclaveSecretShareRequest) New() protoreflect.Message {
	return new(fastReflection_QueryEnclaveSecretShareRequest)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_QueryEnclaveSecretShareRequest) Interface() protoreflect.ProtoMessage {
	return (*QueryEnclaveSecretShareRequest)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_QueryEnclaveSecretShareRequest) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if len(x.RemoteReport) != 0 {
		value := protoreflect.ValueOfBytes(x.RemoteReport)
		if !f(fd_QueryEnclaveSecretShareRequest_remoteReport, value) {
			return
		}
	}
	if x.EnclavePubK != "" {
		value := protoreflect.ValueOfString(x.EnclavePubK)
		if !f(fd_QueryEnclaveSecretShareRequest_enclavePubK, value) {
			return
		}
	}
	if x.PubKID != "" {
		value := protoreflect.ValueOfString(x.PubKID)
		if !f(fd_QueryEnclaveSecretShareRequest_pubKID, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_QueryEnclaveSecretShareRequest) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "qadena.qadena.QueryEnclaveSecretShareRequest.remoteReport":
		return len(x.RemoteReport) != 0
	case "qadena.qadena.QueryEnclaveSecretShareRequest.enclavePubK":
		return x.EnclavePubK != ""
	case "qadena.qadena.QueryEnclaveSecretShareRequest.pubKID":
		return x.PubKID != ""
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: qadena.qadena.QueryEnclaveSecretShareRequest"))
		}
		panic(fmt.Errorf("message qadena.qadena.QueryEnclaveSecretShareRequest does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_QueryEnclaveSecretShareRequest) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "qadena.qadena.QueryEnclaveSecretShareRequest.remoteReport":
		x.RemoteReport = nil
	case "qadena.qadena.QueryEnclaveSecretShareRequest.enclavePubK":
		x.EnclavePubK = ""
	case "qadena.qadena.QueryEnclaveSecretShareRequest.pubKID":
		x.PubKID = ""
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: qadena.qadena.QueryEnclaveSecretShareRequest"))
		}
		panic(fmt.Errorf("message qadena.qadena.QueryEnclaveSecretShareRequest does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_QueryEnclaveSecretShareRequest) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "qadena.qadena.QueryEnclaveSecretShareRequest.remoteReport":
		value := x.RemoteReport
		return protoreflect.ValueOfBytes(value)
	case "qadena.qadena.QueryEnclaveSecretShareRequest.enclavePubK":
		value := x.EnclavePubK
		return protoreflect.ValueOfString(value)
	case "qadena.qadena.QueryEnclaveSecretShareRequest.pubKID":
		value := x.PubKID
		return protoreflect.ValueOfString(value)
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: qadena.qadena.QueryEnclaveSecretShareRequest"))
		}
		panic(fmt.Errorf("message qadena.qadena.QueryEnclaveSecretShareRequest does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_QueryEnclaveSecretShareRequest) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "qadena.qadena.QueryEnclaveSecretShareRequest.remoteReport":
		x.RemoteReport = value.Bytes()
	case "qadena.qadena.QueryEnclaveSecretShareRequest.enclavePubK":
		x.EnclavePubK = value.Interface().(string)
	case "qadena.qadena.QueryEnclaveSecretShareRequest.pubKID":
		x.PubKID = value.Interface().(string)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: qadena.qadena.QueryEnclaveSecretShareRequest"))
		}
		panic(fmt.Errorf("message qadena.qadena.QueryEnclaveSecretShareRequest does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_QueryEnclaveSecretShareRequest) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "qadena.qadena.QueryEnclaveSecretShareRequest.remoteReport":
		panic(fmt.Errorf("field remoteReport of message qadena.qadena.QueryEnclaveSecretShareRequest is not mutable"))
	case "qadena.qadena.QueryEnclaveSecretShareRequest.enclavePubK":
		panic(fmt.Errorf("field enclavePubK of message qadena.qadena.QueryEnclaveSecretShareRequest is not mutable"))
	case "qadena.qadena.QueryEnclaveSecretShareRequest.pubKID":
		panic(fmt.Errorf("field pubKID of message qadena.qadena.QueryEnclaveSecretShareRequest is not mutable"))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: qadena.qadena.QueryEnclaveSecretShareRequest"))
		}
		panic(fmt.Errorf("message qadena.qadena.QueryEnclaveSecretShareRequest does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_QueryEnclaveSecretShareRequest) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "qadena.qadena.QueryEnclaveSecretShareRequest.remoteReport":
		return protoreflect.ValueOfBytes(nil)
	case "qadena.qadena.QueryEnclaveSecretShareRequest.enclavePubK":
		return protoreflect.ValueOfString("")
	case "qadena.qadena.QueryEnclaveSecretShareRequest.pubKID":
		return protoreflect.ValueOfString("")
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: qadena.qadena.QueryEnclaveSecretShareRequest"))
		}
		panic(fmt.Errorf("message qadena.qadena.QueryEnclaveSecretShareRequest does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_QueryEnclaveSecretShareRequest) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in qadena.qadena.QueryEnclaveSecretShareRequest", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_QueryEnclaveSecretShareRequest) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_QueryEnclaveSecretShareRequest) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_QueryEnclaveSecretShareRequest) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_QueryEnclaveSecretShareRequest) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*QueryEnclaveSecretShareRequest)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		l = len(x.RemoteReport)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.EnclavePubK)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.PubKID)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*QueryEnclaveSecretShareRequest)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if len(x.PubKID) > 0 {
			i -= len(x.PubKID)
			copy(dAtA[i:], x.PubKID)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.PubKID)))
			i--
			dAtA[i] = 0x1a
		}
		if len(x.EnclavePubK) > 0 {
			i -= len(x.EnclavePubK)
			copy(dAtA[i:], x.EnclavePubK)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.EnclavePubK)))
			i--
			dAtA[i] = 0x12
		}
		if len(x.RemoteReport) > 0 {
			i -= len(x.RemoteReport)
			copy(dAtA[i:], x.RemoteReport)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.RemoteReport)))
			i--
			dAtA[i] = 0xa
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*QueryEnclaveSecretShareRequest)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: QueryEnclaveSecretShareRequest: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: QueryEnclaveSecretShareRequest: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field RemoteReport", wireType)
				}
				var byteLen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					byteLen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if byteLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + byteLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.RemoteReport = append(x.RemoteReport[:0], dAtA[iNdEx:postIndex]...)
				if x.RemoteReport == nil {
					x.RemoteReport = []byte{}
				}
				iNdEx = postIndex
			case 2:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field EnclavePubK", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.EnclavePubK = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 3:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field PubKID", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.PubKID = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var (
	md_QueryEnclaveSecretShareResponse                           protoreflect.MessageDescriptor
	fd_QueryEnclaveSecretShareResponse_remoteReport              protoreflect.FieldDescriptor
	fd_QueryEnclaveSecretShareResponse_encSecretShareEnclavePubK protoreflect.FieldDescriptor
)

func init() {
	file_qadena_qadena_query_proto_init()
	md_QueryEnclaveSecretShareResponse = File_qadena_qadena_query_proto.Messages().ByName("QueryEnclaveSecretShareResponse")
	fd_QueryEnclaveSecretShareResponse_remoteReport = md_QueryEnclaveSecretShareResponse.Fields().ByName("remoteReport")
	fd_QueryEnclaveSecretShareResponse_encSecretShareEnclavePubK = md_QueryEnclaveSecretShareResponse.Fields().ByName("encSecretShareEnclavePubK")
}

var _ protoreflect.Message = (*fastReflection_QueryEnclaveSecretShareResponse)(nil)

type fastReflection_QueryEnclaveSecretShareResponse QueryEnclaveSecretShareResponse

func (x *QueryEnclaveSecretShareResponse) ProtoReflect() protoreflect.Message {
	return (*fastReflection_QueryEnclaveSecretShareResponse)(x)
}

func (x *QueryEnclaveSecretShareResponse) slowProtoReflect() protoreflect.Message {
	mi := &file_qadena_qadena_query_proto_msgTypes[49]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_QueryEnclaveSecretShareResponse_messageType fastReflection_QueryEnclaveSecretShareResponse_messageType
var _ protoreflect.MessageType = fastReflection_QueryEnclaveSecretShareResponse_messageType{}

type fastReflection_QueryEnclaveSecretShareResponse_messageType struct{}

func (x fastReflection_QueryEnclaveSecretShareResponse_messageType) Zero() protoreflect.Message {
	return (*fastReflection_QueryEnclaveSecretShareResponse)(nil)
}
func (x fastReflection_QueryEnclaveSecretShareResponse_messageType) New() protoreflect.Message {
	return new(fastReflection_QueryEnclaveSecretShareResponse)
}
func (x fastReflection_QueryEnclaveSecretShareResponse_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_QueryEnclaveSecretShareResponse
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_QueryEnclaveSecretShareResponse) Descriptor() protoreflect.MessageDescriptor {
	return md_QueryEnclaveSecretShareResponse
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_QueryEnclaveSecretShareResponse) Type() protoreflect.MessageType {
	return _fastReflection_QueryEnclaveSecretShareResponse_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_QueryEnclaveSecretShareResponse) New() protoreflect.Message {
	return new(fastReflection_QueryEnclaveSecretShareResponse)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_QueryEnclaveSecretShareResponse) Interface() protoreflect.ProtoMessage {
	return (*QueryEnclaveSecretShareResponse)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_QueryEnclaveSecretShareResponse) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if len(x.RemoteReport) != 0 {
		value := protoreflect.ValueOfBytes(x.RemoteReport)
		if !f(fd_QueryEnclaveSecretShareResponse_remoteReport, value) {
			return
		}
	}
	if len(x.EncSecretShareEnclavePubK) != 0 {
		value := protoreflect.ValueOfBytes(x.EncSecretShareEnclavePubK)
		if !f(fd_QueryEnclaveSecretShareResponse_encSecretShareEnclavePubK, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_QueryEnclaveSecretShareResponse) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "qadena.qadena.QueryEnclaveSecretShareResponse.remoteReport":
		return len(x.RemoteReport) != 0
	case "qadena.qadena.QueryEnclaveSecretShareResponse.encSecretShareEnclavePubK":
		return len(x.EncSecretShareEnclavePubK) != 0
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: qadena.qadena.QueryEnclaveSecretShareResponse"))
		}
		panic(fmt.Errorf("message qadena.qadena.QueryEnclaveSecretShareResponse does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_QueryEnclaveSecretShareResponse) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "qadena.qadena.QueryEnclaveSecretShareResponse.remoteReport":
		x.RemoteReport = nil
	case "qadena.qadena.QueryEnclaveSecretShareResponse.encSecretShareEnclavePubK":
		x.EncSecretShareEnclavePubK = nil
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: qadena.qadena.QueryEnclaveSecretShareResponse"))
		}
		panic(fmt.Errorf("message qadena.qadena.QueryEnclaveSecretShareResponse does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_QueryEnclaveSecretShareResponse) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "qadena.qadena.QueryEnclaveSecretShareResponse.remoteReport":
		value := x.RemoteReport
		return protoreflect.ValueOfBytes(value)
	case "qadena.qadena.QueryEnclaveSecretShareResponse.encSecretShareEnclavePubK":
		value := x.EncSecretShareEnclavePubK
		return protoreflect.ValueOfBytes(value)
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: qadena.qadena.QueryEnclaveSecretShareResponse"))
		}
		panic(fmt.Errorf("message qadena.qadena.QueryEnclaveSecretShareResponse does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_QueryEnclaveSecretShareResponse) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "qadena.qadena.QueryEnclaveSecretShareResponse.remoteReport":
		x.RemoteReport = value.Bytes()
	case "qadena.qadena.QueryEnclaveSecretShareResponse.encSecretShareEnclavePubK":
		x.EncSecretShareEnclavePubK = value.Bytes()
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: qadena.qadena.QueryEnclaveSecretShareResponse"))
		}
		panic(fmt.Errorf("message qadena.qadena.QueryEnclaveSecretShareResponse does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_QueryEnclaveSecretShareResponse) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "qadena.qadena.QueryEnclaveSecretShareResponse.remoteReport":
		panic(fmt.Errorf("field remoteReport of message qadena.qadena.QueryEnclaveSecretShareResponse is not mutable"))
	case "qadena.qadena.QueryEnclaveSecretShareResponse.encSecretShareEnclavePubK":
		panic(fmt.Errorf("field encSecretShareEnclavePubK of message qadena.qadena.QueryEnclaveSecretShareResponse is not mutable"))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: qadena.qadena.QueryEnclaveSecretShareResponse"))
		}
		panic(fmt.Errorf("message qadena.qadena.QueryEnclaveSecretShareResponse does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_QueryEnclaveSecretShareResponse) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "qadena.qadena.QueryEnclaveSecretShareResponse.remoteReport":
		return protoreflect.ValueOfBytes(nil)
	case "qadena.qadena.QueryEnclaveSecretShareResponse.encSecretShareEnclavePubK":
		return protoreflect.ValueOfBytes(nil)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: qadena.qadena.QueryEnclaveSecretShareResponse"))
		}
		panic(fmt.Errorf("message qadena.qadena.QueryEnclaveSecretShareResponse does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_QueryEnclaveSecretShareResponse) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in qadena.qadena.QueryEnclaveSecretShareResponse", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_QueryEnclaveSecretShareResponse) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_QueryEnclaveSecretShareResponse) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_QueryEnclaveSecretShareResponse) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_QueryEnclaveSecretShareResponse) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*QueryEnclaveSecretShareResponse)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		l = len(x.RemoteReport)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.EncSecretShareEnclavePubK)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*QueryEnclaveSecretShareResponse)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if len(x.EncSecretShareEnclavePubK) > 0 {
			i -= len(x.EncSecretShareEnclavePubK)
			copy(dAtA[i:], x.EncSecretShareEnclavePubK)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.EncSecretShareEnclavePubK)))
			i--
			dAtA[i] = 0x12
		}
		if len(x.RemoteReport) > 0 {
			i -= len(x.RemoteReport)
			copy(dAtA[i:], x.RemoteReport)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.RemoteReport)))
			i--
			dAtA[i] = 0xa
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*QueryEnclaveSecretShareResponse)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: QueryEnclaveSecretShareResponse: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: QueryEnclaveSecretShareResponse: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field RemoteReport", wireType)
				}
				var byteLen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					byteLen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if byteLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + byteLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.RemoteReport = append(x.RemoteReport[:0], dAtA[iNdEx:postIndex]...)
				if x.RemoteReport == nil {
					x.RemoteReport = []byte{}
				}
				iNdEx = postIndex
			case 2:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field EncSecretShareEnclavePubK", wireType)
				}
				var byteLen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					byteLen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if byteLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + byteLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.EncSecretShareEnclavePubK = append(x.EncSecretShareEnclavePubK[:0], dAtA[iNdEx:postIndex]...)
				if x.EncSecretShareEnclavePubK == nil {
					x.EncSecretShareEnclavePubK = []byte{}
				}
				iNdEx = postIndex
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var (
	md_QueryEnclaveRecoverKeyShareRequest                    protoreflect.MessageDescriptor
	fd_QueryEnclaveRecoverKeyShareRequest_remoteReport       protoreflect.FieldDescriptor
	fd_QueryEnclaveRecoverKeyShareRequest_newWalletID        protoreflect.FieldDescriptor
	fd_QueryEnclaveRecoverKeyShareRequest_shareWalletID      protoreflect.FieldDescriptor
	fd_QueryEnclaveRecoverKeyShareRequest_encShareWalletPubK protoreflect.FieldDescriptor
)

func init() {
	file_qadena_qadena_query_proto_init()
	md_QueryEnclaveRecoverKeyShareRequest = File_qadena_qadena_query_proto.Messages().ByName("QueryEnclaveRecoverKeyShareRequest")
	fd_QueryEnclaveRecoverKeyShareRequest_remoteReport = md_QueryEnclaveRecoverKeyShareRequest.Fields().ByName("remoteReport")
	fd_QueryEnclaveRecoverKeyShareRequest_newWalletID = md_QueryEnclaveRecoverKeyShareRequest.Fields().ByName("newWalletID")
	fd_QueryEnclaveRecoverKeyShareRequest_shareWalletID = md_QueryEnclaveRecoverKeyShareRequest.Fields().ByName("shareWalletID")
	fd_QueryEnclaveRecoverKeyShareRequest_encShareWalletPubK = md_QueryEnclaveRecoverKeyShareRequest.Fields().ByName("encShareWalletPubK")
}

var _ protoreflect.Message = (*fastReflection_QueryEnclaveRecoverKeyShareRequest)(nil)

type fastReflection_QueryEnclaveRecoverKeyShareRequest QueryEnclaveRecoverKeyShareRequest

func (x *QueryEnclaveRecoverKeyShareRequest) ProtoReflect() protoreflect.Message {
	return (*fastReflection_QueryEnclaveRecoverKeyShareRequest)(x)
}

func (x *QueryEnclaveRecoverKeyShareRequest) slowProtoReflect() protoreflect.Message {
	mi := &file_qadena_qadena_query_proto_msgTypes[50]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_QueryEnclaveRecoverKeyShareRequest_messageType fastReflection_QueryEnclaveRecoverKeyShareRequest_messageType
var _ protoreflect.MessageType = fastReflection_QueryEnclaveRecoverKeyShareRequest_messageType{}

type fastReflection_QueryEnclaveRecoverKeyShareRequest_messageType struct{}

func (x fastReflection_QueryEnclaveRecoverKeyShareRequest_messageType) Zero() protoreflect.Message {
	return (*fastReflection_QueryEnclaveRecoverKeyShareRequest)(nil)
}
func (x fastReflection_QueryEnclaveRecoverKeyShareRequest_messageType) New() protoreflect.Message {
	return new(fastReflection_QueryEnclaveRecoverKeyShareRequest)
}
func (x fastReflection_QueryEnclaveRecoverKeyShareRequest_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_QueryEnclaveRecoverKeyShareRequest
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_QueryEnclaveRecoverKeyShareRequest) Descriptor() protoreflect.MessageDescriptor {
	return md_QueryEnclaveRecoverKeyShareRequest
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_QueryEnclaveRecoverKeyShareRequest) Type() protoreflect.MessageType {
	return _fastReflection_QueryEnclaveRecoverKeyShareRequest_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_QueryEnclaveRecoverKeyShareRequest) New() protoreflect.Message {
	return new(fastReflection_QueryEnclaveRecoverKeyShareRequest)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_QueryEnclaveRecoverKeyShareRequest) Interface() protoreflect.ProtoMessage {
	return (*QueryEnclaveRecoverKeyShareRequest)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_QueryEnclaveRecoverKeyShareRequest) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if len(x.RemoteReport) != 0 {
		value := protoreflect.ValueOfBytes(x.RemoteReport)
		if !f(fd_QueryEnclaveRecoverKeyShareRequest_remoteReport, value) {
			return
		}
	}
	if x.NewWalletID != "" {
		value := protoreflect.ValueOfString(x.NewWalletID)
		if !f(fd_QueryEnclaveRecoverKeyShareRequest_newWalletID, value) {
			return
		}
	}
	if x.ShareWalletID != "" {
		value := protoreflect.ValueOfString(x.ShareWalletID)
		if !f(fd_QueryEnclaveRecoverKeyShareRequest_shareWalletID, value) {
			return
		}
	}
	if len(x.EncShareWalletPubK) != 0 {
		value := protoreflect.ValueOfBytes(x.EncShareWalletPubK)
		if !f(fd_QueryEnclaveRecoverKeyShareRequest_encShareWalletPubK, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_QueryEnclaveRecoverKeyShareRequest) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "qadena.qadena.QueryEnclaveRecoverKeyShareRequest.remoteReport":
		return len(x.RemoteReport) != 0
	case "qadena.qadena.QueryEnclaveRecoverKeyShareRequest.newWalletID":
		return x.NewWalletID != ""
	case "qadena.qadena.QueryEnclaveRecoverKeyShareRequest.shareWalletID":
		return x.ShareWalletID != ""
	case "qadena.qadena.QueryEnclaveRecoverKeyShareRequest.encShareWalletPubK":
		return len(x.EncShareWalletPubK) != 0
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: qadena.qadena.QueryEnclaveRecoverKeyShareRequest"))
		}
		panic(fmt.Errorf("message qadena.qadena.QueryEnclaveRecoverKeyShareRequest does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_QueryEnclaveRecoverKeyShareRequest) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "qadena.qadena.QueryEnclaveRecoverKeyShareRequest.remoteReport":
		x.RemoteReport = nil
	case "qadena.qadena.QueryEnclaveRecoverKeyShareRequest.newWalletID":
		x.NewWalletID = ""
	case "qadena.qadena.QueryEnclaveRecoverKeyShareRequest.shareWalletID":
		x.ShareWalletID = ""
	case "qadena.qadena.QueryEnclaveRecoverKeyShareRequest.encShareWalletPubK":
		x.EncShareWalletPubK = nil
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: qadena.qadena.QueryEnclaveRecoverKeyShareRequest"))
		}
		panic(fmt.Errorf("message qadena.qadena.QueryEnclaveRecoverKeyShareRequest does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_QueryEnclaveRecoverKeyShareRequest) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "qadena.qadena.QueryEnclaveRecoverKeyShareRequest.remoteReport":
		value := x.RemoteReport
		return protoreflect.ValueOfBytes(value)
	case "qadena.qadena.QueryEnclaveRecoverKeyShareRequest.newWalletID":
		value := x.NewWalletID
		return protoreflect.ValueOfString(value)
	case "qadena.qadena.QueryEnclaveRecoverKeyShareRequest.shareWalletID":
		value := x.ShareWalletID
		return protoreflect.ValueOfString(value)
	case "qadena.qadena.QueryEnclaveRecoverKeyShareRequest.encShareWalletPubK":
		value := x.EncShareWalletPubK
		return protoreflect.ValueOfBytes(value)
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: qadena.qadena.QueryEnclaveRecoverKeyShareRequest"))
		}
		panic(fmt.Errorf("message qadena.qadena.QueryEnclaveRecoverKeyShareRequest does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_QueryEnclaveRecoverKeyShareRequest) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "qadena.qadena.QueryEnclaveRecoverKeyShareRequest.remoteReport":
		x.RemoteReport = value.Bytes()
	case "qadena.qadena.QueryEnclaveRecoverKeyShareRequest.newWalletID":
		x.NewWalletID = value.Interface().(string)
	case "qadena.qadena.QueryEnclaveRecoverKeyShareRequest.shareWalletID":
		x.ShareWalletID = value.Interface().(string)
	case "qadena.qadena.QueryEnclaveRecoverKeyShareRequest.encShareWalletPubK":
		x.EncShareWalletPubK = value.Bytes()
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: qadena.qadena.QueryEnclaveRecoverKeyShareRequest"))
		}
		panic(fmt.Errorf("message qadena.qadena.QueryEnclaveRecoverKeyShareRequest does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_QueryEnclaveRecoverKeyShareRequest) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "qadena.qadena.QueryEnclaveRecoverKeyShareRequest.remoteReport":
		panic(fmt.Errorf("field remoteReport of message qadena.qadena.QueryEnclaveRecoverKeyShareRequest is not mutable"))
	case "qadena.qadena.QueryEnclaveRecoverKeyShareRequest.newWalletID":
		panic(fmt.Errorf("field newWalletID of message qadena.qadena.QueryEnclaveRecoverKeyShareRequest is not mutable"))
	case "qadena.qadena.QueryEnclaveRecoverKeyShareRequest.shareWalletID":
		panic(fmt.Errorf("field shareWalletID of message qadena.qadena.QueryEnclaveRecoverKeyShareRequest is not mutable"))
	case "qadena.qadena.QueryEnclaveRecoverKeyShareRequest.encShareWalletPubK":
		panic(fmt.Errorf("field encShareWalletPubK of message qadena.qadena.QueryEnclaveRecoverKeyShareRequest is not mutable"))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: qadena.qadena.QueryEnclaveRecoverKeyShareRequest"))
		}
		panic(fmt.Errorf("message qadena.qadena.QueryEnclaveRecoverKeyShareRequest does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_QueryEnclaveRecoverKeyShareRequest) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "qadena.qadena.QueryEnclaveRecoverKeyShareRequest.remoteReport":
		return protoreflect.ValueOfBytes(nil)
	case "qadena.qadena.QueryEnclaveRecoverKeyShareRequest.newWalletID":
		return protoreflect.ValueOfString("")
	case "qadena.qadena.QueryEnclaveRecoverKeyShareRequest.shareWalletID":
		return protoreflect.ValueOfString("")
	case "qadena.qadena.QueryEnclaveRecoverKeyShareRequest.encShareWalletPubK":
		return protoreflect.ValueOfBytes(nil)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: qadena.qadena.QueryEnclaveRecoverKeyShareRequest"))
		}
		panic(fmt.Errorf("message qadena.qadena.QueryEnclaveRecoverKeyShareRequest does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_QueryEnclaveRecoverKeyShareRequest) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in qadena.qadena.QueryEnclaveRecoverKeyShareRequest", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_QueryEnclaveRecoverKeyShareRequest) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_QueryEnclaveRecoverKeyShareRequest) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_QueryEnclaveRecoverKeyShareRequest) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_QueryEnclaveRecoverKeyShareRequest) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*QueryEnclaveRecoverKeyShareRequest)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		l = len(x.RemoteReport)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.NewWalletID)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.ShareWalletID)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.EncShareWalletPubK)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*QueryEnclaveRecoverKeyShareRequest)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if len(x.EncShareWalletPubK) > 0 {
			i -= len(x.EncShareWalletPubK)
			copy(dAtA[i:], x.EncShareWalletPubK)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.EncShareWalletPubK)))
			i--
			dAtA[i] = 0x22
		}
		if len(x.ShareWalletID) > 0 {
			i -= len(x.ShareWalletID)
			copy(dAtA[i:], x.ShareWalletID)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.ShareWalletID)))
			i--
			dAtA[i] = 0x1a
		}
		if len(x.NewWalletID) > 0 {
			i -= len(x.NewWalletID)
			copy(dAtA[i:], x.NewWalletID)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.NewWalletID)))
			i--
			dAtA[i] = 0x12
		}
		if len(x.RemoteReport) > 0 {
			i -= len(x.RemoteReport)
			copy(dAtA[i:], x.RemoteReport)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.RemoteReport)))
			i--
			dAtA[i] = 0xa
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*QueryEnclaveRecoverKeyShareRequest)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: QueryEnclaveRecoverKeyShareRequest: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: QueryEnclaveRecoverKeyShareRequest: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field RemoteReport", wireType)
				}
				var byteLen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					byteLen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if byteLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + byteLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.RemoteReport = append(x.RemoteReport[:0], dAtA[iNdEx:postIndex]...)
				if x.RemoteReport == nil {
					x.RemoteReport = []byte{}
				}
				iNdEx = postIndex
			case 2:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field NewWalletID", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.NewWalletID = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 3:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field ShareWalletID", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.ShareWalletID = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 4:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field EncShareWalletPubK", wireType)
				}
				var byteLen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					byteLen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if byteLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + byteLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.EncShareWalletPubK = append(x.EncShareWalletPubK[:0], dAtA[iNdEx:postIndex]...)
				if x.EncShareWalletPubK == nil {
					x.EncShareWalletPubK = []byte{}
				}
				iNdEx = postIndex
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var (
	md_QueryEnclaveRecoverKeyShareResponse                    protoreflect.MessageDescriptor
	fd_QueryEnclaveRecoverKeyShareResponse_remoteReport       protoreflect.FieldDescriptor
	fd_QueryEnclaveRecoverKeyShareResponse_encShareWalletPubK protoreflect.FieldDescriptor
)

func init() {
	file_qadena_qadena_query_proto_init()
	md_QueryEnclaveRecoverKeyShareResponse = File_qadena_qadena_query_proto.Messages().ByName("QueryEnclaveRecoverKeyShareResponse")
	fd_QueryEnclaveRecoverKeyShareResponse_remoteReport = md_QueryEnclaveRecoverKeyShareResponse.Fields().ByName("remoteReport")
	fd_QueryEnclaveRecoverKeyShareResponse_encShareWalletPubK = md_QueryEnclaveRecoverKeyShareResponse.Fields().ByName("encShareWalletPubK")
}

var _ protoreflect.Message = (*fastReflection_QueryEnclaveRecoverKeyShareResponse)(nil)

type fastReflection_QueryEnclaveRecoverKeyShareResponse QueryEnclaveRecoverKeyShareResponse

func (x *QueryEnclaveRecoverKeyShareResponse) ProtoReflect() protoreflect.Message {
	return (*fastReflection_QueryEnclaveRecoverKeyShareResponse)(x)
}

func (x *QueryEnclaveRecoverKeyShareResponse) slowProtoReflect() protoreflect.Message {
	mi := &file_qadena_qadena_query_proto_msgTypes[51]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_QueryEnclaveRecoverKeyShareResponse_messageType fastReflection_QueryEnclaveRecoverKeyShareResponse_messageType
var _ protoreflect.MessageType = fastReflection_QueryEnclaveRecoverKeyShareResponse_messageType{}

type fastReflection_QueryEnclaveRecoverKeyShareResponse_messageType struct{}

func (x fastReflection_QueryEnclaveRecoverKeyShareResponse_messageType) Zero() protoreflect.Message {
	return (*fastReflection_QueryEnclaveRecoverKeyShareResponse)(nil)
}
func (x fastReflection_QueryEnclaveRecoverKeyShareResponse_messageType) New() protoreflect.Message {
	return new(fastReflection_QueryEnclaveRecoverKeyShareResponse)
}
func (x fastReflection_QueryEnclaveRecoverKeyShareResponse_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_QueryEnclaveRecoverKeyShareResponse
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_QueryEnclaveRecoverKeyShareResponse) Descriptor() protoreflect.MessageDescriptor {
	return md_QueryEnclaveRecoverKeyShareResponse
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_QueryEnclaveRecoverKeyShareResponse) Type() protoreflect.MessageType {
	return _fastReflection_QueryEnclaveRecoverKeyShareResponse_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_QueryEnclaveRecoverKeyShareResponse) New() protoreflect.Message {
	return new(fastReflection_QueryEnclaveRecoverKeyShareResponse)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_QueryEnclaveRecoverKeyShareResponse) Interface() protoreflect.ProtoMessage {
	return (*QueryEnclaveRecoverKeyShareResponse)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_QueryEnclaveRecoverKeyShareResponse) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if len(x.RemoteReport) != 0 {
		value := protoreflect.ValueOfBytes(x.RemoteReport)
		if !f(fd_QueryEnclaveRecoverKeyShareResponse_remoteReport, value) {
			return
		}
	}
	if len(x.EncShareWalletPubK) != 0 {
		value := protoreflect.ValueOfBytes(x.EncShareWalletPubK)
		if !f(fd_QueryEnclaveRecoverKeyShareResponse_encShareWalletPubK, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_QueryEnclaveRecoverKeyShareResponse) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "qadena.qadena.QueryEnclaveRecoverKeyShareResponse.remoteReport":
		return len(x.RemoteReport) != 0
	case "qadena.qadena.QueryEnclaveRecoverKeyShareResponse.encShareWalletPubK":
		return len(x.EncShareWalletPubK) != 0
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: qadena.qadena.QueryEnclaveRecoverKeyShareResponse"))
		}
		panic(fmt.Errorf("message qadena.qadena.QueryEnclaveRecoverKeyShareResponse does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_QueryEnclaveRecoverKeyShareResponse) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "qadena.qadena.QueryEnclaveRecoverKeyShareResponse.remoteReport":
		x.RemoteReport = nil
	case "qadena.qadena.QueryEnclaveRecoverKeyShareResponse.encShareWalletPubK":
		x.EncShareWalletPubK = nil
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: qadena.qadena.QueryEnclaveRecoverKeyShareResponse"))
		}
		panic(fmt.Errorf("message qadena.qadena.QueryEnclaveRecoverKeyShareResponse does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_QueryEnclaveRecoverKeyShareResponse) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "qadena.qadena.QueryEnclaveRecoverKeyShareResponse.remoteReport":
		value := x.RemoteReport
		return protoreflect.ValueOfBytes(value)
	case "qadena.qadena.QueryEnclaveRecoverKeyShareResponse.encShareWalletPubK":
		value := x.EncShareWalletPubK
		return protoreflect.ValueOfBytes(value)
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: qadena.qadena.QueryEnclaveRecoverKeyShareResponse"))
		}
		panic(fmt.Errorf("message qadena.qadena.QueryEnclaveRecoverKeyShareResponse does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_QueryEnclaveRecoverKeyShareResponse) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "qadena.qadena.QueryEnclaveRecoverKeyShareResponse.remoteReport":
		x.RemoteReport = value.Bytes()
	case "qadena.qadena.QueryEnclaveRecoverKeyShareResponse.encShareWalletPubK":
		x.EncShareWalletPubK = value.Bytes()
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: qadena.qadena.QueryEnclaveRecoverKeyShareResponse"))
		}
		panic(fmt.Errorf("message qadena.qadena.QueryEnclaveRecoverKeyShareResponse does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_QueryEnclaveRecoverKeyShareResponse) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "qadena.qadena.QueryEnclaveRecoverKeyShareResponse.remoteReport":
		panic(fmt.Errorf("field remoteReport of message qadena.qadena.QueryEnclaveRecoverKeyShareResponse is not mutable"))
	case "qadena.qadena.QueryEnclaveRecoverKeyShareResponse.encShareWalletPubK":
		panic(fmt.Errorf("field encShareWalletPubK of message qadena.qadena.QueryEnclaveRecoverKeyShareResponse is not mutable"))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: qadena.qadena.QueryEnclaveRecoverKeyShareResponse"))
		}
		panic(fmt.Errorf("message qadena.qadena.QueryEnclaveRecoverKeyShareResponse does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_QueryEnclaveRecoverKeyShareResponse) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "qadena.qadena.QueryEnclaveRecoverKeyShareResponse.remoteReport":
		return protoreflect.ValueOfBytes(nil)
	case "qadena.qadena.QueryEnclaveRecoverKeyShareResponse.encShareWalletPubK":
		return protoreflect.ValueOfBytes(nil)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: qadena.qadena.QueryEnclaveRecoverKeyShareResponse"))
		}
		panic(fmt.Errorf("message qadena.qadena.QueryEnclaveRecoverKeyShareResponse does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_QueryEnclaveRecoverKeyShareResponse) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in qadena.qadena.QueryEnclaveRecoverKeyShareResponse", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_QueryEnclaveRecoverKeyShareResponse) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_QueryEnclaveRecoverKeyShareResponse) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_QueryEnclaveRecoverKeyShareResponse) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_QueryEnclaveRecoverKeyShareResponse) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*QueryEnclaveRecoverKeyShareResponse)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		l = len(x.RemoteReport)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.EncShareWalletPubK)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*QueryEnclaveRecoverKeyShareResponse)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if len(x.EncShareWalletPubK) > 0 {
			i -= len(x.EncShareWalletPubK)
			copy(dAtA[i:], x.EncShareWalletPubK)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.EncShareWalletPubK)))
			i--
			dAtA[i] = 0x12
		}
		if len(x.RemoteReport) > 0 {
			i -= len(x.RemoteReport)
			copy(dAtA[i:], x.RemoteReport)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.RemoteReport)))
			i--
			dAtA[i] = 0xa
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*QueryEnclaveRecoverKeyShareResponse)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: QueryEnclaveRecoverKeyShareResponse: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: QueryEnclaveRecoverKeyShareResponse: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field RemoteReport", wireType)
				}
				var byteLen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					byteLen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if byteLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + byteLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.RemoteReport = append(x.RemoteReport[:0], dAtA[iNdEx:postIndex]...)
				if x.RemoteReport == nil {
					x.RemoteReport = []byte{}
				}
				iNdEx = postIndex
			case 2:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field EncShareWalletPubK", wireType)
				}
				var byteLen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					byteLen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if byteLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + byteLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.EncShareWalletPubK = append(x.EncShareWalletPubK[:0], dAtA[iNdEx:postIndex]...)
				if x.EncShareWalletPubK == nil {
					x.EncShareWalletPubK = []byte{}
				}
				iNdEx = postIndex
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var (
	md_QueryFindCredentialRequest                                     protoreflect.MessageDescriptor
	fd_QueryFindCredentialRequest_credentialPC                        protoreflect.FieldDescriptor
	fd_QueryFindCredentialRequest_credentialType                      protoreflect.FieldDescriptor
	fd_QueryFindCredentialRequest_sSIntervalPubKID                    protoreflect.FieldDescriptor
	fd_QueryFindCredentialRequest_encUserCredentialPubKSSIntervalPubK protoreflect.FieldDescriptor
	fd_QueryFindCredentialRequest_encProofPCSSIntervalPubK            protoreflect.FieldDescriptor
	fd_QueryFindCredentialRequest_encCheckPCSSIntervalPubK            protoreflect.FieldDescriptor
)

func init() {
	file_qadena_qadena_query_proto_init()
	md_QueryFindCredentialRequest = File_qadena_qadena_query_proto.Messages().ByName("QueryFindCredentialRequest")
	fd_QueryFindCredentialRequest_credentialPC = md_QueryFindCredentialRequest.Fields().ByName("credentialPC")
	fd_QueryFindCredentialRequest_credentialType = md_QueryFindCredentialRequest.Fields().ByName("credentialType")
	fd_QueryFindCredentialRequest_sSIntervalPubKID = md_QueryFindCredentialRequest.Fields().ByName("sSIntervalPubKID")
	fd_QueryFindCredentialRequest_encUserCredentialPubKSSIntervalPubK = md_QueryFindCredentialRequest.Fields().ByName("encUserCredentialPubKSSIntervalPubK")
	fd_QueryFindCredentialRequest_encProofPCSSIntervalPubK = md_QueryFindCredentialRequest.Fields().ByName("encProofPCSSIntervalPubK")
	fd_QueryFindCredentialRequest_encCheckPCSSIntervalPubK = md_QueryFindCredentialRequest.Fields().ByName("encCheckPCSSIntervalPubK")
}

var _ protoreflect.Message = (*fastReflection_QueryFindCredentialRequest)(nil)

type fastReflection_QueryFindCredentialRequest QueryFindCredentialRequest

func (x *QueryFindCredentialRequest) ProtoReflect() protoreflect.Message {
	return (*fastReflection_QueryFindCredentialRequest)(x)
}

func (x *QueryFindCredentialRequest) slowProtoReflect() protoreflect.Message {
	mi := &file_qadena_qadena_query_proto_msgTypes[52]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_QueryFindCredentialRequest_messageType fastReflection_QueryFindCredentialRequest_messageType
var _ protoreflect.MessageType = fastReflection_QueryFindCredentialRequest_messageType{}

type fastReflection_QueryFindCredentialRequest_messageType struct{}

func (x fastReflection_QueryFindCredentialRequest_messageType) Zero() protoreflect.Message {
	return (*fastReflection_QueryFindCredentialRequest)(nil)
}
func (x fastReflection_QueryFindCredentialRequest_messageType) New() protoreflect.Message {
	return new(fastReflection_QueryFindCredentialRequest)
}
func (x fastReflection_QueryFindCredentialRequest_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_QueryFindCredentialRequest
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_QueryFindCredentialRequest) Descriptor() protoreflect.MessageDescriptor {
	return md_QueryFindCredentialRequest
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_QueryFindCredentialRequest) Type() protoreflect.MessageType {
	return _fastReflection_QueryFindCredentialRequest_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_QueryFindCredentialRequest) New() protoreflect.Message {
	return new(fastReflection_QueryFindCredentialRequest)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_QueryFindCredentialRequest) Interface() protoreflect.ProtoMessage {
	return (*QueryFindCredentialRequest)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_QueryFindCredentialRequest) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if len(x.CredentialPC) != 0 {
		value := protoreflect.ValueOfBytes(x.CredentialPC)
		if !f(fd_QueryFindCredentialRequest_credentialPC, value) {
			return
		}
	}
	if x.CredentialType != "" {
		value := protoreflect.ValueOfString(x.CredentialType)
		if !f(fd_QueryFindCredentialRequest_credentialType, value) {
			return
		}
	}
	if x.SSIntervalPubKID != "" {
		value := protoreflect.ValueOfString(x.SSIntervalPubKID)
		if !f(fd_QueryFindCredentialRequest_sSIntervalPubKID, value) {
			return
		}
	}
	if len(x.EncUserCredentialPubKSSIntervalPubK) != 0 {
		value := protoreflect.ValueOfBytes(x.EncUserCredentialPubKSSIntervalPubK)
		if !f(fd_QueryFindCredentialRequest_encUserCredentialPubKSSIntervalPubK, value) {
			return
		}
	}
	if len(x.EncProofPCSSIntervalPubK) != 0 {
		value := protoreflect.ValueOfBytes(x.EncProofPCSSIntervalPubK)
		if !f(fd_QueryFindCredentialRequest_encProofPCSSIntervalPubK, value) {
			return
		}
	}
	if len(x.EncCheckPCSSIntervalPubK) != 0 {
		value := protoreflect.ValueOfBytes(x.EncCheckPCSSIntervalPubK)
		if !f(fd_QueryFindCredentialRequest_encCheckPCSSIntervalPubK, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_QueryFindCredentialRequest) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "qadena.qadena.QueryFindCredentialRequest.credentialPC":
		return len(x.CredentialPC) != 0
	case "qadena.qadena.QueryFindCredentialRequest.credentialType":
		return x.CredentialType != ""
	case "qadena.qadena.QueryFindCredentialRequest.sSIntervalPubKID":
		return x.SSIntervalPubKID != ""
	case "qadena.qadena.QueryFindCredentialRequest.encUserCredentialPubKSSIntervalPubK":
		return len(x.EncUserCredentialPubKSSIntervalPubK) != 0
	case "qadena.qadena.QueryFindCredentialRequest.encProofPCSSIntervalPubK":
		return len(x.EncProofPCSSIntervalPubK) != 0
	case "qadena.qadena.QueryFindCredentialRequest.encCheckPCSSIntervalPubK":
		return len(x.EncCheckPCSSIntervalPubK) != 0
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: qadena.qadena.QueryFindCredentialRequest"))
		}
		panic(fmt.Errorf("message qadena.qadena.QueryFindCredentialRequest does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_QueryFindCredentialRequest) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "qadena.qadena.QueryFindCredentialRequest.credentialPC":
		x.CredentialPC = nil
	case "qadena.qadena.QueryFindCredentialRequest.credentialType":
		x.CredentialType = ""
	case "qadena.qadena.QueryFindCredentialRequest.sSIntervalPubKID":
		x.SSIntervalPubKID = ""
	case "qadena.qadena.QueryFindCredentialRequest.encUserCredentialPubKSSIntervalPubK":
		x.EncUserCredentialPubKSSIntervalPubK = nil
	case "qadena.qadena.QueryFindCredentialRequest.encProofPCSSIntervalPubK":
		x.EncProofPCSSIntervalPubK = nil
	case "qadena.qadena.QueryFindCredentialRequest.encCheckPCSSIntervalPubK":
		x.EncCheckPCSSIntervalPubK = nil
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: qadena.qadena.QueryFindCredentialRequest"))
		}
		panic(fmt.Errorf("message qadena.qadena.QueryFindCredentialRequest does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_QueryFindCredentialRequest) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "qadena.qadena.QueryFindCredentialRequest.credentialPC":
		value := x.CredentialPC
		return protoreflect.ValueOfBytes(value)
	case "qadena.qadena.QueryFindCredentialRequest.credentialType":
		value := x.CredentialType
		return protoreflect.ValueOfString(value)
	case "qadena.qadena.QueryFindCredentialRequest.sSIntervalPubKID":
		value := x.SSIntervalPubKID
		return protoreflect.ValueOfString(value)
	case "qadena.qadena.QueryFindCredentialRequest.encUserCredentialPubKSSIntervalPubK":
		value := x.EncUserCredentialPubKSSIntervalPubK
		return protoreflect.ValueOfBytes(value)
	case "qadena.qadena.QueryFindCredentialRequest.encProofPCSSIntervalPubK":
		value := x.EncProofPCSSIntervalPubK
		return protoreflect.ValueOfBytes(value)
	case "qadena.qadena.QueryFindCredentialRequest.encCheckPCSSIntervalPubK":
		value := x.EncCheckPCSSIntervalPubK
		return protoreflect.ValueOfBytes(value)
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: qadena.qadena.QueryFindCredentialRequest"))
		}
		panic(fmt.Errorf("message qadena.qadena.QueryFindCredentialRequest does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_QueryFindCredentialRequest) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "qadena.qadena.QueryFindCredentialRequest.credentialPC":
		x.CredentialPC = value.Bytes()
	case "qadena.qadena.QueryFindCredentialRequest.credentialType":
		x.CredentialType = value.Interface().(string)
	case "qadena.qadena.QueryFindCredentialRequest.sSIntervalPubKID":
		x.SSIntervalPubKID = value.Interface().(string)
	case "qadena.qadena.QueryFindCredentialRequest.encUserCredentialPubKSSIntervalPubK":
		x.EncUserCredentialPubKSSIntervalPubK = value.Bytes()
	case "qadena.qadena.QueryFindCredentialRequest.encProofPCSSIntervalPubK":
		x.EncProofPCSSIntervalPubK = value.Bytes()
	case "qadena.qadena.QueryFindCredentialRequest.encCheckPCSSIntervalPubK":
		x.EncCheckPCSSIntervalPubK = value.Bytes()
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: qadena.qadena.QueryFindCredentialRequest"))
		}
		panic(fmt.Errorf("message qadena.qadena.QueryFindCredentialRequest does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_QueryFindCredentialRequest) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "qadena.qadena.QueryFindCredentialRequest.credentialPC":
		panic(fmt.Errorf("field credentialPC of message qadena.qadena.QueryFindCredentialRequest is not mutable"))
	case "qadena.qadena.QueryFindCredentialRequest.credentialType":
		panic(fmt.Errorf("field credentialType of message qadena.qadena.QueryFindCredentialRequest is not mutable"))
	case "qadena.qadena.QueryFindCredentialRequest.sSIntervalPubKID":
		panic(fmt.Errorf("field sSIntervalPubKID of message qadena.qadena.QueryFindCredentialRequest is not mutable"))
	case "qadena.qadena.QueryFindCredentialRequest.encUserCredentialPubKSSIntervalPubK":
		panic(fmt.Errorf("field encUserCredentialPubKSSIntervalPubK of message qadena.qadena.QueryFindCredentialRequest is not mutable"))
	case "qadena.qadena.QueryFindCredentialRequest.encProofPCSSIntervalPubK":
		panic(fmt.Errorf("field encProofPCSSIntervalPubK of message qadena.qadena.QueryFindCredentialRequest is not mutable"))
	case "qadena.qadena.QueryFindCredentialRequest.encCheckPCSSIntervalPubK":
		panic(fmt.Errorf("field encCheckPCSSIntervalPubK of message qadena.qadena.QueryFindCredentialRequest is not mutable"))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: qadena.qadena.QueryFindCredentialRequest"))
		}
		panic(fmt.Errorf("message qadena.qadena.QueryFindCredentialRequest does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_QueryFindCredentialRequest) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "qadena.qadena.QueryFindCredentialRequest.credentialPC":
		return protoreflect.ValueOfBytes(nil)
	case "qadena.qadena.QueryFindCredentialRequest.credentialType":
		return protoreflect.ValueOfString("")
	case "qadena.qadena.QueryFindCredentialRequest.sSIntervalPubKID":
		return protoreflect.ValueOfString("")
	case "qadena.qadena.QueryFindCredentialRequest.encUserCredentialPubKSSIntervalPubK":
		return protoreflect.ValueOfBytes(nil)
	case "qadena.qadena.QueryFindCredentialRequest.encProofPCSSIntervalPubK":
		return protoreflect.ValueOfBytes(nil)
	case "qadena.qadena.QueryFindCredentialRequest.encCheckPCSSIntervalPubK":
		return protoreflect.ValueOfBytes(nil)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: qadena.qadena.QueryFindCredentialRequest"))
		}
		panic(fmt.Errorf("message qadena.qadena.QueryFindCredentialRequest does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_QueryFindCredentialRequest) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in qadena.qadena.QueryFindCredentialRequest", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_QueryFindCredentialRequest) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_QueryFindCredentialRequest) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_QueryFindCredentialRequest) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_QueryFindCredentialRequest) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*QueryFindCredentialRequest)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		l = len(x.CredentialPC)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.CredentialType)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.SSIntervalPubKID)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.EncUserCredentialPubKSSIntervalPubK)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.EncProofPCSSIntervalPubK)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.EncCheckPCSSIntervalPubK)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*QueryFindCredentialRequest)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if len(x.EncCheckPCSSIntervalPubK) > 0 {
			i -= len(x.EncCheckPCSSIntervalPubK)
			copy(dAtA[i:], x.EncCheckPCSSIntervalPubK)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.EncCheckPCSSIntervalPubK)))
			i--
			dAtA[i] = 0x32
		}
		if len(x.EncProofPCSSIntervalPubK) > 0 {
			i -= len(x.EncProofPCSSIntervalPubK)
			copy(dAtA[i:], x.EncProofPCSSIntervalPubK)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.EncProofPCSSIntervalPubK)))
			i--
			dAtA[i] = 0x2a
		}
		if len(x.EncUserCredentialPubKSSIntervalPubK) > 0 {
			i -= len(x.EncUserCredentialPubKSSIntervalPubK)
			copy(dAtA[i:], x.EncUserCredentialPubKSSIntervalPubK)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.EncUserCredentialPubKSSIntervalPubK)))
			i--
			dAtA[i] = 0x22
		}
		if len(x.SSIntervalPubKID) > 0 {
			i -= len(x.SSIntervalPubKID)
			copy(dAtA[i:], x.SSIntervalPubKID)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.SSIntervalPubKID)))
			i--
			dAtA[i] = 0x1a
		}
		if len(x.CredentialType) > 0 {
			i -= len(x.CredentialType)
			copy(dAtA[i:], x.CredentialType)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.CredentialType)))
			i--
			dAtA[i] = 0x12
		}
		if len(x.CredentialPC) > 0 {
			i -= len(x.CredentialPC)
			copy(dAtA[i:], x.CredentialPC)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.CredentialPC)))
			i--
			dAtA[i] = 0xa
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*QueryFindCredentialRequest)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: QueryFindCredentialRequest: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: QueryFindCredentialRequest: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field CredentialPC", wireType)
				}
				var byteLen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					byteLen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if byteLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + byteLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.CredentialPC = append(x.CredentialPC[:0], dAtA[iNdEx:postIndex]...)
				if x.CredentialPC == nil {
					x.CredentialPC = []byte{}
				}
				iNdEx = postIndex
			case 2:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field CredentialType", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.CredentialType = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 3:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field SSIntervalPubKID", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.SSIntervalPubKID = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 4:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field EncUserCredentialPubKSSIntervalPubK", wireType)
				}
				var byteLen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					byteLen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if byteLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + byteLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.EncUserCredentialPubKSSIntervalPubK = append(x.EncUserCredentialPubKSSIntervalPubK[:0], dAtA[iNdEx:postIndex]...)
				if x.EncUserCredentialPubKSSIntervalPubK == nil {
					x.EncUserCredentialPubKSSIntervalPubK = []byte{}
				}
				iNdEx = postIndex
			case 5:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field EncProofPCSSIntervalPubK", wireType)
				}
				var byteLen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					byteLen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if byteLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + byteLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.EncProofPCSSIntervalPubK = append(x.EncProofPCSSIntervalPubK[:0], dAtA[iNdEx:postIndex]...)
				if x.EncProofPCSSIntervalPubK == nil {
					x.EncProofPCSSIntervalPubK = []byte{}
				}
				iNdEx = postIndex
			case 6:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field EncCheckPCSSIntervalPubK", wireType)
				}
				var byteLen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					byteLen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if byteLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + byteLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.EncCheckPCSSIntervalPubK = append(x.EncCheckPCSSIntervalPubK[:0], dAtA[iNdEx:postIndex]...)
				if x.EncCheckPCSSIntervalPubK == nil {
					x.EncCheckPCSSIntervalPubK = []byte{}
				}
				iNdEx = postIndex
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var (
	md_QueryFindCredentialResponse                                   protoreflect.MessageDescriptor
	fd_QueryFindCredentialResponse_encPersonalInfoUserCredentialPubK protoreflect.FieldDescriptor
	fd_QueryFindCredentialResponse_encCredentialIDUserCredentialPubK protoreflect.FieldDescriptor
)

func init() {
	file_qadena_qadena_query_proto_init()
	md_QueryFindCredentialResponse = File_qadena_qadena_query_proto.Messages().ByName("QueryFindCredentialResponse")
	fd_QueryFindCredentialResponse_encPersonalInfoUserCredentialPubK = md_QueryFindCredentialResponse.Fields().ByName("encPersonalInfoUserCredentialPubK")
	fd_QueryFindCredentialResponse_encCredentialIDUserCredentialPubK = md_QueryFindCredentialResponse.Fields().ByName("encCredentialIDUserCredentialPubK")
}

var _ protoreflect.Message = (*fastReflection_QueryFindCredentialResponse)(nil)

type fastReflection_QueryFindCredentialResponse QueryFindCredentialResponse

func (x *QueryFindCredentialResponse) ProtoReflect() protoreflect.Message {
	return (*fastReflection_QueryFindCredentialResponse)(x)
}

func (x *QueryFindCredentialResponse) slowProtoReflect() protoreflect.Message {
	mi := &file_qadena_qadena_query_proto_msgTypes[53]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_QueryFindCredentialResponse_messageType fastReflection_QueryFindCredentialResponse_messageType
var _ protoreflect.MessageType = fastReflection_QueryFindCredentialResponse_messageType{}

type fastReflection_QueryFindCredentialResponse_messageType struct{}

func (x fastReflection_QueryFindCredentialResponse_messageType) Zero() protoreflect.Message {
	return (*fastReflection_QueryFindCredentialResponse)(nil)
}
func (x fastReflection_QueryFindCredentialResponse_messageType) New() protoreflect.Message {
	return new(fastReflection_QueryFindCredentialResponse)
}
func (x fastReflection_QueryFindCredentialResponse_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_QueryFindCredentialResponse
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_QueryFindCredentialResponse) Descriptor() protoreflect.MessageDescriptor {
	return md_QueryFindCredentialResponse
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_QueryFindCredentialResponse) Type() protoreflect.MessageType {
	return _fastReflection_QueryFindCredentialResponse_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_QueryFindCredentialResponse) New() protoreflect.Message {
	return new(fastReflection_QueryFindCredentialResponse)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_QueryFindCredentialResponse) Interface() protoreflect.ProtoMessage {
	return (*QueryFindCredentialResponse)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_QueryFindCredentialResponse) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if len(x.EncPersonalInfoUserCredentialPubK) != 0 {
		value := protoreflect.ValueOfBytes(x.EncPersonalInfoUserCredentialPubK)
		if !f(fd_QueryFindCredentialResponse_encPersonalInfoUserCredentialPubK, value) {
			return
		}
	}
	if len(x.EncCredentialIDUserCredentialPubK) != 0 {
		value := protoreflect.ValueOfBytes(x.EncCredentialIDUserCredentialPubK)
		if !f(fd_QueryFindCredentialResponse_encCredentialIDUserCredentialPubK, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_QueryFindCredentialResponse) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "qadena.qadena.QueryFindCredentialResponse.encPersonalInfoUserCredentialPubK":
		return len(x.EncPersonalInfoUserCredentialPubK) != 0
	case "qadena.qadena.QueryFindCredentialResponse.encCredentialIDUserCredentialPubK":
		return len(x.EncCredentialIDUserCredentialPubK) != 0
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: qadena.qadena.QueryFindCredentialResponse"))
		}
		panic(fmt.Errorf("message qadena.qadena.QueryFindCredentialResponse does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_QueryFindCredentialResponse) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "qadena.qadena.QueryFindCredentialResponse.encPersonalInfoUserCredentialPubK":
		x.EncPersonalInfoUserCredentialPubK = nil
	case "qadena.qadena.QueryFindCredentialResponse.encCredentialIDUserCredentialPubK":
		x.EncCredentialIDUserCredentialPubK = nil
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: qadena.qadena.QueryFindCredentialResponse"))
		}
		panic(fmt.Errorf("message qadena.qadena.QueryFindCredentialResponse does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_QueryFindCredentialResponse) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "qadena.qadena.QueryFindCredentialResponse.encPersonalInfoUserCredentialPubK":
		value := x.EncPersonalInfoUserCredentialPubK
		return protoreflect.ValueOfBytes(value)
	case "qadena.qadena.QueryFindCredentialResponse.encCredentialIDUserCredentialPubK":
		value := x.EncCredentialIDUserCredentialPubK
		return protoreflect.ValueOfBytes(value)
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: qadena.qadena.QueryFindCredentialResponse"))
		}
		panic(fmt.Errorf("message qadena.qadena.QueryFindCredentialResponse does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_QueryFindCredentialResponse) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "qadena.qadena.QueryFindCredentialResponse.encPersonalInfoUserCredentialPubK":
		x.EncPersonalInfoUserCredentialPubK = value.Bytes()
	case "qadena.qadena.QueryFindCredentialResponse.encCredentialIDUserCredentialPubK":
		x.EncCredentialIDUserCredentialPubK = value.Bytes()
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: qadena.qadena.QueryFindCredentialResponse"))
		}
		panic(fmt.Errorf("message qadena.qadena.QueryFindCredentialResponse does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_QueryFindCredentialResponse) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "qadena.qadena.QueryFindCredentialResponse.encPersonalInfoUserCredentialPubK":
		panic(fmt.Errorf("field encPersonalInfoUserCredentialPubK of message qadena.qadena.QueryFindCredentialResponse is not mutable"))
	case "qadena.qadena.QueryFindCredentialResponse.encCredentialIDUserCredentialPubK":
		panic(fmt.Errorf("field encCredentialIDUserCredentialPubK of message qadena.qadena.QueryFindCredentialResponse is not mutable"))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: qadena.qadena.QueryFindCredentialResponse"))
		}
		panic(fmt.Errorf("message qadena.qadena.QueryFindCredentialResponse does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_QueryFindCredentialResponse) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "qadena.qadena.QueryFindCredentialResponse.encPersonalInfoUserCredentialPubK":
		return protoreflect.ValueOfBytes(nil)
	case "qadena.qadena.QueryFindCredentialResponse.encCredentialIDUserCredentialPubK":
		return protoreflect.ValueOfBytes(nil)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: qadena.qadena.QueryFindCredentialResponse"))
		}
		panic(fmt.Errorf("message qadena.qadena.QueryFindCredentialResponse does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_QueryFindCredentialResponse) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in qadena.qadena.QueryFindCredentialResponse", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_QueryFindCredentialResponse) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_QueryFindCredentialResponse) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_QueryFindCredentialResponse) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_QueryFindCredentialResponse) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*QueryFindCredentialResponse)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		l = len(x.EncPersonalInfoUserCredentialPubK)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.EncCredentialIDUserCredentialPubK)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*QueryFindCredentialResponse)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if len(x.EncCredentialIDUserCredentialPubK) > 0 {
			i -= len(x.EncCredentialIDUserCredentialPubK)
			copy(dAtA[i:], x.EncCredentialIDUserCredentialPubK)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.EncCredentialIDUserCredentialPubK)))
			i--
			dAtA[i] = 0x12
		}
		if len(x.EncPersonalInfoUserCredentialPubK) > 0 {
			i -= len(x.EncPersonalInfoUserCredentialPubK)
			copy(dAtA[i:], x.EncPersonalInfoUserCredentialPubK)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.EncPersonalInfoUserCredentialPubK)))
			i--
			dAtA[i] = 0xa
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*QueryFindCredentialResponse)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: QueryFindCredentialResponse: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: QueryFindCredentialResponse: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field EncPersonalInfoUserCredentialPubK", wireType)
				}
				var byteLen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					byteLen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if byteLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + byteLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.EncPersonalInfoUserCredentialPubK = append(x.EncPersonalInfoUserCredentialPubK[:0], dAtA[iNdEx:postIndex]...)
				if x.EncPersonalInfoUserCredentialPubK == nil {
					x.EncPersonalInfoUserCredentialPubK = []byte{}
				}
				iNdEx = postIndex
			case 2:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field EncCredentialIDUserCredentialPubK", wireType)
				}
				var byteLen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					byteLen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if byteLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + byteLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.EncCredentialIDUserCredentialPubK = append(x.EncCredentialIDUserCredentialPubK[:0], dAtA[iNdEx:postIndex]...)
				if x.EncCredentialIDUserCredentialPubK == nil {
					x.EncCredentialIDUserCredentialPubK = []byte{}
				}
				iNdEx = postIndex
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var (
	md_QueryGetEnclaveIdentityRequest          protoreflect.MessageDescriptor
	fd_QueryGetEnclaveIdentityRequest_uniqueID protoreflect.FieldDescriptor
)

func init() {
	file_qadena_qadena_query_proto_init()
	md_QueryGetEnclaveIdentityRequest = File_qadena_qadena_query_proto.Messages().ByName("QueryGetEnclaveIdentityRequest")
	fd_QueryGetEnclaveIdentityRequest_uniqueID = md_QueryGetEnclaveIdentityRequest.Fields().ByName("uniqueID")
}

var _ protoreflect.Message = (*fastReflection_QueryGetEnclaveIdentityRequest)(nil)

type fastReflection_QueryGetEnclaveIdentityRequest QueryGetEnclaveIdentityRequest

func (x *QueryGetEnclaveIdentityRequest) ProtoReflect() protoreflect.Message {
	return (*fastReflection_QueryGetEnclaveIdentityRequest)(x)
}

func (x *QueryGetEnclaveIdentityRequest) slowProtoReflect() protoreflect.Message {
	mi := &file_qadena_qadena_query_proto_msgTypes[54]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_QueryGetEnclaveIdentityRequest_messageType fastReflection_QueryGetEnclaveIdentityRequest_messageType
var _ protoreflect.MessageType = fastReflection_QueryGetEnclaveIdentityRequest_messageType{}

type fastReflection_QueryGetEnclaveIdentityRequest_messageType struct{}

func (x fastReflection_QueryGetEnclaveIdentityRequest_messageType) Zero() protoreflect.Message {
	return (*fastReflection_QueryGetEnclaveIdentityRequest)(nil)
}
func (x fastReflection_QueryGetEnclaveIdentityRequest_messageType) New() protoreflect.Message {
	return new(fastReflection_QueryGetEnclaveIdentityRequest)
}
func (x fastReflection_QueryGetEnclaveIdentityRequest_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_QueryGetEnclaveIdentityRequest
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_QueryGetEnclaveIdentityRequest) Descriptor() protoreflect.MessageDescriptor {
	return md_QueryGetEnclaveIdentityRequest
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_QueryGetEnclaveIdentityRequest) Type() protoreflect.MessageType {
	return _fastReflection_QueryGetEnclaveIdentityRequest_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_QueryGetEnclaveIdentityRequest) New() protoreflect.Message {
	return new(fastReflection_QueryGetEnclaveIdentityRequest)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_QueryGetEnclaveIdentityRequest) Interface() protoreflect.ProtoMessage {
	return (*QueryGetEnclaveIdentityRequest)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_QueryGetEnclaveIdentityRequest) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.UniqueID != "" {
		value := protoreflect.ValueOfString(x.UniqueID)
		if !f(fd_QueryGetEnclaveIdentityRequest_uniqueID, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_QueryGetEnclaveIdentityRequest) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "qadena.qadena.QueryGetEnclaveIdentityRequest.uniqueID":
		return x.UniqueID != ""
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: qadena.qadena.QueryGetEnclaveIdentityRequest"))
		}
		panic(fmt.Errorf("message qadena.qadena.QueryGetEnclaveIdentityRequest does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_QueryGetEnclaveIdentityRequest) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "qadena.qadena.QueryGetEnclaveIdentityRequest.uniqueID":
		x.UniqueID = ""
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: qadena.qadena.QueryGetEnclaveIdentityRequest"))
		}
		panic(fmt.Errorf("message qadena.qadena.QueryGetEnclaveIdentityRequest does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_QueryGetEnclaveIdentityRequest) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "qadena.qadena.QueryGetEnclaveIdentityRequest.uniqueID":
		value := x.UniqueID
		return protoreflect.ValueOfString(value)
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: qadena.qadena.QueryGetEnclaveIdentityRequest"))
		}
		panic(fmt.Errorf("message qadena.qadena.QueryGetEnclaveIdentityRequest does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_QueryGetEnclaveIdentityRequest) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "qadena.qadena.QueryGetEnclaveIdentityRequest.uniqueID":
		x.UniqueID = value.Interface().(string)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: qadena.qadena.QueryGetEnclaveIdentityRequest"))
		}
		panic(fmt.Errorf("message qadena.qadena.QueryGetEnclaveIdentityRequest does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_QueryGetEnclaveIdentityRequest) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "qadena.qadena.QueryGetEnclaveIdentityRequest.uniqueID":
		panic(fmt.Errorf("field uniqueID of message qadena.qadena.QueryGetEnclaveIdentityRequest is not mutable"))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: qadena.qadena.QueryGetEnclaveIdentityRequest"))
		}
		panic(fmt.Errorf("message qadena.qadena.QueryGetEnclaveIdentityRequest does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_QueryGetEnclaveIdentityRequest) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "qadena.qadena.QueryGetEnclaveIdentityRequest.uniqueID":
		return protoreflect.ValueOfString("")
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: qadena.qadena.QueryGetEnclaveIdentityRequest"))
		}
		panic(fmt.Errorf("message qadena.qadena.QueryGetEnclaveIdentityRequest does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_QueryGetEnclaveIdentityRequest) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in qadena.qadena.QueryGetEnclaveIdentityRequest", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_QueryGetEnclaveIdentityRequest) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_QueryGetEnclaveIdentityRequest) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_QueryGetEnclaveIdentityRequest) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_QueryGetEnclaveIdentityRequest) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*QueryGetEnclaveIdentityRequest)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		l = len(x.UniqueID)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*QueryGetEnclaveIdentityRequest)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if len(x.UniqueID) > 0 {
			i -= len(x.UniqueID)
			copy(dAtA[i:], x.UniqueID)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.UniqueID)))
			i--
			dAtA[i] = 0xa
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*QueryGetEnclaveIdentityRequest)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: QueryGetEnclaveIdentityRequest: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: QueryGetEnclaveIdentityRequest: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field UniqueID", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.UniqueID = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var (
	md_QueryGetEnclaveIdentityResponse                 protoreflect.MessageDescriptor
	fd_QueryGetEnclaveIdentityResponse_enclaveIdentity protoreflect.FieldDescriptor
)

func init() {
	file_qadena_qadena_query_proto_init()
	md_QueryGetEnclaveIdentityResponse = File_qadena_qadena_query_proto.Messages().ByName("QueryGetEnclaveIdentityResponse")
	fd_QueryGetEnclaveIdentityResponse_enclaveIdentity = md_QueryGetEnclaveIdentityResponse.Fields().ByName("enclaveIdentity")
}

var _ protoreflect.Message = (*fastReflection_QueryGetEnclaveIdentityResponse)(nil)

type fastReflection_QueryGetEnclaveIdentityResponse QueryGetEnclaveIdentityResponse

func (x *QueryGetEnclaveIdentityResponse) ProtoReflect() protoreflect.Message {
	return (*fastReflection_QueryGetEnclaveIdentityResponse)(x)
}

func (x *QueryGetEnclaveIdentityResponse) slowProtoReflect() protoreflect.Message {
	mi := &file_qadena_qadena_query_proto_msgTypes[55]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_QueryGetEnclaveIdentityResponse_messageType fastReflection_QueryGetEnclaveIdentityResponse_messageType
var _ protoreflect.MessageType = fastReflection_QueryGetEnclaveIdentityResponse_messageType{}

type fastReflection_QueryGetEnclaveIdentityResponse_messageType struct{}

func (x fastReflection_QueryGetEnclaveIdentityResponse_messageType) Zero() protoreflect.Message {
	return (*fastReflection_QueryGetEnclaveIdentityResponse)(nil)
}
func (x fastReflection_QueryGetEnclaveIdentityResponse_messageType) New() protoreflect.Message {
	return new(fastReflection_QueryGetEnclaveIdentityResponse)
}
func (x fastReflection_QueryGetEnclaveIdentityResponse_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_QueryGetEnclaveIdentityResponse
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_QueryGetEnclaveIdentityResponse) Descriptor() protoreflect.MessageDescriptor {
	return md_QueryGetEnclaveIdentityResponse
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_QueryGetEnclaveIdentityResponse) Type() protoreflect.MessageType {
	return _fastReflection_QueryGetEnclaveIdentityResponse_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_QueryGetEnclaveIdentityResponse) New() protoreflect.Message {
	return new(fastReflection_QueryGetEnclaveIdentityResponse)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_QueryGetEnclaveIdentityResponse) Interface() protoreflect.ProtoMessage {
	return (*QueryGetEnclaveIdentityResponse)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_QueryGetEnclaveIdentityResponse) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.EnclaveIdentity != nil {
		value := protoreflect.ValueOfMessage(x.EnclaveIdentity.ProtoReflect())
		if !f(fd_QueryGetEnclaveIdentityResponse_enclaveIdentity, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_QueryGetEnclaveIdentityResponse) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "qadena.qadena.QueryGetEnclaveIdentityResponse.enclaveIdentity":
		return x.EnclaveIdentity != nil
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: qadena.qadena.QueryGetEnclaveIdentityResponse"))
		}
		panic(fmt.Errorf("message qadena.qadena.QueryGetEnclaveIdentityResponse does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_QueryGetEnclaveIdentityResponse) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "qadena.qadena.QueryGetEnclaveIdentityResponse.enclaveIdentity":
		x.EnclaveIdentity = nil
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: qadena.qadena.QueryGetEnclaveIdentityResponse"))
		}
		panic(fmt.Errorf("message qadena.qadena.QueryGetEnclaveIdentityResponse does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_QueryGetEnclaveIdentityResponse) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "qadena.qadena.QueryGetEnclaveIdentityResponse.enclaveIdentity":
		value := x.EnclaveIdentity
		return protoreflect.ValueOfMessage(value.ProtoReflect())
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: qadena.qadena.QueryGetEnclaveIdentityResponse"))
		}
		panic(fmt.Errorf("message qadena.qadena.QueryGetEnclaveIdentityResponse does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_QueryGetEnclaveIdentityResponse) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "qadena.qadena.QueryGetEnclaveIdentityResponse.enclaveIdentity":
		x.EnclaveIdentity = value.Message().Interface().(*EnclaveIdentity)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: qadena.qadena.QueryGetEnclaveIdentityResponse"))
		}
		panic(fmt.Errorf("message qadena.qadena.QueryGetEnclaveIdentityResponse does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_QueryGetEnclaveIdentityResponse) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "qadena.qadena.QueryGetEnclaveIdentityResponse.enclaveIdentity":
		if x.EnclaveIdentity == nil {
			x.EnclaveIdentity = new(EnclaveIdentity)
		}
		return protoreflect.ValueOfMessage(x.EnclaveIdentity.ProtoReflect())
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: qadena.qadena.QueryGetEnclaveIdentityResponse"))
		}
		panic(fmt.Errorf("message qadena.qadena.QueryGetEnclaveIdentityResponse does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_QueryGetEnclaveIdentityResponse) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "qadena.qadena.QueryGetEnclaveIdentityResponse.enclaveIdentity":
		m := new(EnclaveIdentity)
		return protoreflect.ValueOfMessage(m.ProtoReflect())
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: qadena.qadena.QueryGetEnclaveIdentityResponse"))
		}
		panic(fmt.Errorf("message qadena.qadena.QueryGetEnclaveIdentityResponse does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_QueryGetEnclaveIdentityResponse) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in qadena.qadena.QueryGetEnclaveIdentityResponse", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_QueryGetEnclaveIdentityResponse) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_QueryGetEnclaveIdentityResponse) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_QueryGetEnclaveIdentityResponse) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_QueryGetEnclaveIdentityResponse) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*QueryGetEnclaveIdentityResponse)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		if x.EnclaveIdentity != nil {
			l = options.Size(x.EnclaveIdentity)
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*QueryGetEnclaveIdentityResponse)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if x.EnclaveIdentity != nil {
			encoded, err := options.Marshal(x.EnclaveIdentity)
			if err != nil {
				return protoiface.MarshalOutput{
					NoUnkeyedLiterals: input.NoUnkeyedLiterals,
					Buf:               input.Buf,
				}, err
			}
			i -= len(encoded)
			copy(dAtA[i:], encoded)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(encoded)))
			i--
			dAtA[i] = 0xa
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*QueryGetEnclaveIdentityResponse)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: QueryGetEnclaveIdentityResponse: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: QueryGetEnclaveIdentityResponse: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field EnclaveIdentity", wireType)
				}
				var msglen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					msglen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if msglen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + msglen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if x.EnclaveIdentity == nil {
					x.EnclaveIdentity = &EnclaveIdentity{}
				}
				if err := options.Unmarshal(dAtA[iNdEx:postIndex], x.EnclaveIdentity); err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				iNdEx = postIndex
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var (
	md_QueryAllEnclaveIdentityRequest            protoreflect.MessageDescriptor
	fd_QueryAllEnclaveIdentityRequest_pagination protoreflect.FieldDescriptor
)

func init() {
	file_qadena_qadena_query_proto_init()
	md_QueryAllEnclaveIdentityRequest = File_qadena_qadena_query_proto.Messages().ByName("QueryAllEnclaveIdentityRequest")
	fd_QueryAllEnclaveIdentityRequest_pagination = md_QueryAllEnclaveIdentityRequest.Fields().ByName("pagination")
}

var _ protoreflect.Message = (*fastReflection_QueryAllEnclaveIdentityRequest)(nil)

type fastReflection_QueryAllEnclaveIdentityRequest QueryAllEnclaveIdentityRequest

func (x *QueryAllEnclaveIdentityRequest) ProtoReflect() protoreflect.Message {
	return (*fastReflection_QueryAllEnclaveIdentityRequest)(x)
}

func (x *QueryAllEnclaveIdentityRequest) slowProtoReflect() protoreflect.Message {
	mi := &file_qadena_qadena_query_proto_msgTypes[56]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_QueryAllEnclaveIdentityRequest_messageType fastReflection_QueryAllEnclaveIdentityRequest_messageType
var _ protoreflect.MessageType = fastReflection_QueryAllEnclaveIdentityRequest_messageType{}

type fastReflection_QueryAllEnclaveIdentityRequest_messageType struct{}

func (x fastReflection_QueryAllEnclaveIdentityRequest_messageType) Zero() protoreflect.Message {
	return (*fastReflection_QueryAllEnclaveIdentityRequest)(nil)
}
func (x fastReflection_QueryAllEnclaveIdentityRequest_messageType) New() protoreflect.Message {
	return new(fastReflection_QueryAllEnclaveIdentityRequest)
}
func (x fastReflection_QueryAllEnclaveIdentityRequest_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_QueryAllEnclaveIdentityRequest
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_QueryAllEnclaveIdentityRequest) Descriptor() protoreflect.MessageDescriptor {
	return md_QueryAllEnclaveIdentityRequest
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_QueryAllEnclaveIdentityRequest) Type() protoreflect.MessageType {
	return _fastReflection_QueryAllEnclaveIdentityRequest_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_QueryAllEnclaveIdentityRequest) New() protoreflect.Message {
	return new(fastReflection_QueryAllEnclaveIdentityRequest)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_QueryAllEnclaveIdentityRequest) Interface() protoreflect.ProtoMessage {
	return (*QueryAllEnclaveIdentityRequest)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_QueryAllEnclaveIdentityRequest) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.Pagination != nil {
		value := protoreflect.ValueOfMessage(x.Pagination.ProtoReflect())
		if !f(fd_QueryAllEnclaveIdentityRequest_pagination, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_QueryAllEnclaveIdentityRequest) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "qadena.qadena.QueryAllEnclaveIdentityRequest.pagination":
		return x.Pagination != nil
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: qadena.qadena.QueryAllEnclaveIdentityRequest"))
		}
		panic(fmt.Errorf("message qadena.qadena.QueryAllEnclaveIdentityRequest does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_QueryAllEnclaveIdentityRequest) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "qadena.qadena.QueryAllEnclaveIdentityRequest.pagination":
		x.Pagination = nil
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: qadena.qadena.QueryAllEnclaveIdentityRequest"))
		}
		panic(fmt.Errorf("message qadena.qadena.QueryAllEnclaveIdentityRequest does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_QueryAllEnclaveIdentityRequest) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "qadena.qadena.QueryAllEnclaveIdentityRequest.pagination":
		value := x.Pagination
		return protoreflect.ValueOfMessage(value.ProtoReflect())
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: qadena.qadena.QueryAllEnclaveIdentityRequest"))
		}
		panic(fmt.Errorf("message qadena.qadena.QueryAllEnclaveIdentityRequest does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_QueryAllEnclaveIdentityRequest) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "qadena.qadena.QueryAllEnclaveIdentityRequest.pagination":
		x.Pagination = value.Message().Interface().(*v1beta1.PageRequest)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: qadena.qadena.QueryAllEnclaveIdentityRequest"))
		}
		panic(fmt.Errorf("message qadena.qadena.QueryAllEnclaveIdentityRequest does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_QueryAllEnclaveIdentityRequest) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "qadena.qadena.QueryAllEnclaveIdentityRequest.pagination":
		if x.Pagination == nil {
			x.Pagination = new(v1beta1.PageRequest)
		}
		return protoreflect.ValueOfMessage(x.Pagination.ProtoReflect())
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: qadena.qadena.QueryAllEnclaveIdentityRequest"))
		}
		panic(fmt.Errorf("message qadena.qadena.QueryAllEnclaveIdentityRequest does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_QueryAllEnclaveIdentityRequest) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "qadena.qadena.QueryAllEnclaveIdentityRequest.pagination":
		m := new(v1beta1.PageRequest)
		return protoreflect.ValueOfMessage(m.ProtoReflect())
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: qadena.qadena.QueryAllEnclaveIdentityRequest"))
		}
		panic(fmt.Errorf("message qadena.qadena.QueryAllEnclaveIdentityRequest does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_QueryAllEnclaveIdentityRequest) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in qadena.qadena.QueryAllEnclaveIdentityRequest", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_QueryAllEnclaveIdentityRequest) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_QueryAllEnclaveIdentityRequest) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_QueryAllEnclaveIdentityRequest) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_QueryAllEnclaveIdentityRequest) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*QueryAllEnclaveIdentityRequest)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		if x.Pagination != nil {
			l = options.Size(x.Pagination)
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*QueryAllEnclaveIdentityRequest)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if x.Pagination != nil {
			encoded, err := options.Marshal(x.Pagination)
			if err != nil {
				return protoiface.MarshalOutput{
					NoUnkeyedLiterals: input.NoUnkeyedLiterals,
					Buf:               input.Buf,
				}, err
			}
			i -= len(encoded)
			copy(dAtA[i:], encoded)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(encoded)))
			i--
			dAtA[i] = 0xa
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*QueryAllEnclaveIdentityRequest)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: QueryAllEnclaveIdentityRequest: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: QueryAllEnclaveIdentityRequest: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Pagination", wireType)
				}
				var msglen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					msglen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if msglen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + msglen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if x.Pagination == nil {
					x.Pagination = &v1beta1.PageRequest{}
				}
				if err := options.Unmarshal(dAtA[iNdEx:postIndex], x.Pagination); err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				iNdEx = postIndex
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var _ protoreflect.List = (*_QueryAllEnclaveIdentityResponse_1_list)(nil)

type _QueryAllEnclaveIdentityResponse_1_list struct {
	list *[]*EnclaveIdentity
}

func (x *_QueryAllEnclaveIdentityResponse_1_list) Len() int {
	if x.list == nil {
		return 0
	}
	return len(*x.list)
}

func (x *_QueryAllEnclaveIdentityResponse_1_list) Get(i int) protoreflect.Value {
	return protoreflect.ValueOfMessage((*x.list)[i].ProtoReflect())
}

func (x *_QueryAllEnclaveIdentityResponse_1_list) Set(i int, value protoreflect.Value) {
	valueUnwrapped := value.Message()
	concreteValue := valueUnwrapped.Interface().(*EnclaveIdentity)
	(*x.list)[i] = concreteValue
}

func (x *_QueryAllEnclaveIdentityResponse_1_list) Append(value protoreflect.Value) {
	valueUnwrapped := value.Message()
	concreteValue := valueUnwrapped.Interface().(*EnclaveIdentity)
	*x.list = append(*x.list, concreteValue)
}

func (x *_QueryAllEnclaveIdentityResponse_1_list) AppendMutable() protoreflect.Value {
	v := new(EnclaveIdentity)
	*x.list = append(*x.list, v)
	return protoreflect.ValueOfMessage(v.ProtoReflect())
}

func (x *_QueryAllEnclaveIdentityResponse_1_list) Truncate(n int) {
	for i := n; i < len(*x.list); i++ {
		(*x.list)[i] = nil
	}
	*x.list = (*x.list)[:n]
}

func (x *_QueryAllEnclaveIdentityResponse_1_list) NewElement() protoreflect.Value {
	v := new(EnclaveIdentity)
	return protoreflect.ValueOfMessage(v.ProtoReflect())
}

func (x *_QueryAllEnclaveIdentityResponse_1_list) IsValid() bool {
	return x.list != nil
}

var (
	md_QueryAllEnclaveIdentityResponse                 protoreflect.MessageDescriptor
	fd_QueryAllEnclaveIdentityResponse_enclaveIdentity protoreflect.FieldDescriptor
	fd_QueryAllEnclaveIdentityResponse_pagination      protoreflect.FieldDescriptor
)

func init() {
	file_qadena_qadena_query_proto_init()
	md_QueryAllEnclaveIdentityResponse = File_qadena_qadena_query_proto.Messages().ByName("QueryAllEnclaveIdentityResponse")
	fd_QueryAllEnclaveIdentityResponse_enclaveIdentity = md_QueryAllEnclaveIdentityResponse.Fields().ByName("enclaveIdentity")
	fd_QueryAllEnclaveIdentityResponse_pagination = md_QueryAllEnclaveIdentityResponse.Fields().ByName("pagination")
}

var _ protoreflect.Message = (*fastReflection_QueryAllEnclaveIdentityResponse)(nil)

type fastReflection_QueryAllEnclaveIdentityResponse QueryAllEnclaveIdentityResponse

func (x *QueryAllEnclaveIdentityResponse) ProtoReflect() protoreflect.Message {
	return (*fastReflection_QueryAllEnclaveIdentityResponse)(x)
}

func (x *QueryAllEnclaveIdentityResponse) slowProtoReflect() protoreflect.Message {
	mi := &file_qadena_qadena_query_proto_msgTypes[57]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_QueryAllEnclaveIdentityResponse_messageType fastReflection_QueryAllEnclaveIdentityResponse_messageType
var _ protoreflect.MessageType = fastReflection_QueryAllEnclaveIdentityResponse_messageType{}

type fastReflection_QueryAllEnclaveIdentityResponse_messageType struct{}

func (x fastReflection_QueryAllEnclaveIdentityResponse_messageType) Zero() protoreflect.Message {
	return (*fastReflection_QueryAllEnclaveIdentityResponse)(nil)
}
func (x fastReflection_QueryAllEnclaveIdentityResponse_messageType) New() protoreflect.Message {
	return new(fastReflection_QueryAllEnclaveIdentityResponse)
}
func (x fastReflection_QueryAllEnclaveIdentityResponse_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_QueryAllEnclaveIdentityResponse
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_QueryAllEnclaveIdentityResponse) Descriptor() protoreflect.MessageDescriptor {
	return md_QueryAllEnclaveIdentityResponse
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_QueryAllEnclaveIdentityResponse) Type() protoreflect.MessageType {
	return _fastReflection_QueryAllEnclaveIdentityResponse_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_QueryAllEnclaveIdentityResponse) New() protoreflect.Message {
	return new(fastReflection_QueryAllEnclaveIdentityResponse)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_QueryAllEnclaveIdentityResponse) Interface() protoreflect.ProtoMessage {
	return (*QueryAllEnclaveIdentityResponse)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_QueryAllEnclaveIdentityResponse) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if len(x.EnclaveIdentity) != 0 {
		value := protoreflect.ValueOfList(&_QueryAllEnclaveIdentityResponse_1_list{list: &x.EnclaveIdentity})
		if !f(fd_QueryAllEnclaveIdentityResponse_enclaveIdentity, value) {
			return
		}
	}
	if x.Pagination != nil {
		value := protoreflect.ValueOfMessage(x.Pagination.ProtoReflect())
		if !f(fd_QueryAllEnclaveIdentityResponse_pagination, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_QueryAllEnclaveIdentityResponse) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "qadena.qadena.QueryAllEnclaveIdentityResponse.enclaveIdentity":
		return len(x.EnclaveIdentity) != 0
	case "qadena.qadena.QueryAllEnclaveIdentityResponse.pagination":
		return x.Pagination != nil
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: qadena.qadena.QueryAllEnclaveIdentityResponse"))
		}
		panic(fmt.Errorf("message qadena.qadena.QueryAllEnclaveIdentityResponse does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_QueryAllEnclaveIdentityResponse) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "qadena.qadena.QueryAllEnclaveIdentityResponse.enclaveIdentity":
		x.EnclaveIdentity = nil
	case "qadena.qadena.QueryAllEnclaveIdentityResponse.pagination":
		x.Pagination = nil
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: qadena.qadena.QueryAllEnclaveIdentityResponse"))
		}
		panic(fmt.Errorf("message qadena.qadena.QueryAllEnclaveIdentityResponse does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_QueryAllEnclaveIdentityResponse) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "qadena.qadena.QueryAllEnclaveIdentityResponse.enclaveIdentity":
		if len(x.EnclaveIdentity) == 0 {
			return protoreflect.ValueOfList(&_QueryAllEnclaveIdentityResponse_1_list{})
		}
		listValue := &_QueryAllEnclaveIdentityResponse_1_list{list: &x.EnclaveIdentity}
		return protoreflect.ValueOfList(listValue)
	case "qadena.qadena.QueryAllEnclaveIdentityResponse.pagination":
		value := x.Pagination
		return protoreflect.ValueOfMessage(value.ProtoReflect())
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: qadena.qadena.QueryAllEnclaveIdentityResponse"))
		}
		panic(fmt.Errorf("message qadena.qadena.QueryAllEnclaveIdentityResponse does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_QueryAllEnclaveIdentityResponse) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "qadena.qadena.QueryAllEnclaveIdentityResponse.enclaveIdentity":
		lv := value.List()
		clv := lv.(*_QueryAllEnclaveIdentityResponse_1_list)
		x.EnclaveIdentity = *clv.list
	case "qadena.qadena.QueryAllEnclaveIdentityResponse.pagination":
		x.Pagination = value.Message().Interface().(*v1beta1.PageResponse)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: qadena.qadena.QueryAllEnclaveIdentityResponse"))
		}
		panic(fmt.Errorf("message qadena.qadena.QueryAllEnclaveIdentityResponse does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_QueryAllEnclaveIdentityResponse) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "qadena.qadena.QueryAllEnclaveIdentityResponse.enclaveIdentity":
		if x.EnclaveIdentity == nil {
			x.EnclaveIdentity = []*EnclaveIdentity{}
		}
		value := &_QueryAllEnclaveIdentityResponse_1_list{list: &x.EnclaveIdentity}
		return protoreflect.ValueOfList(value)
	case "qadena.qadena.QueryAllEnclaveIdentityResponse.pagination":
		if x.Pagination == nil {
			x.Pagination = new(v1beta1.PageResponse)
		}
		return protoreflect.ValueOfMessage(x.Pagination.ProtoReflect())
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: qadena.qadena.QueryAllEnclaveIdentityResponse"))
		}
		panic(fmt.Errorf("message qadena.qadena.QueryAllEnclaveIdentityResponse does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_QueryAllEnclaveIdentityResponse) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "qadena.qadena.QueryAllEnclaveIdentityResponse.enclaveIdentity":
		list := []*EnclaveIdentity{}
		return protoreflect.ValueOfList(&_QueryAllEnclaveIdentityResponse_1_list{list: &list})
	case "qadena.qadena.QueryAllEnclaveIdentityResponse.pagination":
		m := new(v1beta1.PageResponse)
		return protoreflect.ValueOfMessage(m.ProtoReflect())
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: qadena.qadena.QueryAllEnclaveIdentityResponse"))
		}
		panic(fmt.Errorf("message qadena.qadena.QueryAllEnclaveIdentityResponse does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_QueryAllEnclaveIdentityResponse) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in qadena.qadena.QueryAllEnclaveIdentityResponse", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_QueryAllEnclaveIdentityResponse) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_QueryAllEnclaveIdentityResponse) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_QueryAllEnclaveIdentityResponse) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_QueryAllEnclaveIdentityResponse) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*QueryAllEnclaveIdentityResponse)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		if len(x.EnclaveIdentity) > 0 {
			for _, e := range x.EnclaveIdentity {
				l = options.Size(e)
				n += 1 + l + runtime.Sov(uint64(l))
			}
		}
		if x.Pagination != nil {
			l = options.Size(x.Pagination)
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*QueryAllEnclaveIdentityResponse)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if x.Pagination != nil {
			encoded, err := options.Marshal(x.Pagination)
			if err != nil {
				return protoiface.MarshalOutput{
					NoUnkeyedLiterals: input.NoUnkeyedLiterals,
					Buf:               input.Buf,
				}, err
			}
			i -= len(encoded)
			copy(dAtA[i:], encoded)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(encoded)))
			i--
			dAtA[i] = 0x12
		}
		if len(x.EnclaveIdentity) > 0 {
			for iNdEx := len(x.EnclaveIdentity) - 1; iNdEx >= 0; iNdEx-- {
				encoded, err := options.Marshal(x.EnclaveIdentity[iNdEx])
				if err != nil {
					return protoiface.MarshalOutput{
						NoUnkeyedLiterals: input.NoUnkeyedLiterals,
						Buf:               input.Buf,
					}, err
				}
				i -= len(encoded)
				copy(dAtA[i:], encoded)
				i = runtime.EncodeVarint(dAtA, i, uint64(len(encoded)))
				i--
				dAtA[i] = 0xa
			}
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*QueryAllEnclaveIdentityResponse)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: QueryAllEnclaveIdentityResponse: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: QueryAllEnclaveIdentityResponse: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field EnclaveIdentity", wireType)
				}
				var msglen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					msglen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if msglen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + msglen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.EnclaveIdentity = append(x.EnclaveIdentity, &EnclaveIdentity{})
				if err := options.Unmarshal(dAtA[iNdEx:postIndex], x.EnclaveIdentity[len(x.EnclaveIdentity)-1]); err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				iNdEx = postIndex
			case 2:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Pagination", wireType)
				}
				var msglen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					msglen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if msglen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + msglen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if x.Pagination == nil {
					x.Pagination = &v1beta1.PageResponse{}
				}
				if err := options.Unmarshal(dAtA[iNdEx:postIndex], x.Pagination); err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				iNdEx = postIndex
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.0
// 	protoc        (unknown)
// source: qadena/qadena/query.proto

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// QueryParamsRequest is request type for the Query/Params RPC method.
type QueryParamsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *QueryParamsRequest) Reset() {
	*x = QueryParamsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_qadena_qadena_query_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryParamsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryParamsRequest) ProtoMessage() {}

// Deprecated: Use QueryParamsRequest.ProtoReflect.Descriptor instead.
func (*QueryParamsRequest) Descriptor() ([]byte, []int) {
	return file_qadena_qadena_query_proto_rawDescGZIP(), []int{0}
}

// QueryParamsResponse is response type for the Query/Params RPC method.
type QueryParamsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// params holds all the parameters of this module.
	Params *Params `protobuf:"bytes,1,opt,name=params,proto3" json:"params,omitempty"`
}

func (x *QueryParamsResponse) Reset() {
	*x = QueryParamsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_qadena_qadena_query_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryParamsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryParamsResponse) ProtoMessage() {}

// Deprecated: Use QueryParamsResponse.ProtoReflect.Descriptor instead.
func (*QueryParamsResponse) Descriptor() ([]byte, []int) {
	return file_qadena_qadena_query_proto_rawDescGZIP(), []int{1}
}

func (x *QueryParamsResponse) GetParams() *Params {
	if x != nil {
		return x.Params
	}
	return nil
}

type QueryGetCredentialRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CredentialID   string `protobuf:"bytes,1,opt,name=credentialID,proto3" json:"credentialID,omitempty"`
	CredentialType string `protobuf:"bytes,2,opt,name=credentialType,proto3" json:"credentialType,omitempty"`
}

func (x *QueryGetCredentialRequest) Reset() {
	*x = QueryGetCredentialRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_qadena_qadena_query_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryGetCredentialRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryGetCredentialRequest) ProtoMessage() {}

// Deprecated: Use QueryGetCredentialRequest.ProtoReflect.Descriptor instead.
func (*QueryGetCredentialRequest) Descriptor() ([]byte, []int) {
	return file_qadena_qadena_query_proto_rawDescGZIP(), []int{2}
}

func (x *QueryGetCredentialRequest) GetCredentialID() string {
	if x != nil {
		return x.CredentialID
	}
	return ""
}

func (x *QueryGetCredentialRequest) GetCredentialType() string {
	if x != nil {
		return x.CredentialType
	}
	return ""
}

type QueryGetCredentialResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Credential *Credential `protobuf:"bytes,1,opt,name=credential,proto3" json:"credential,omitempty"`
}

func (x *QueryGetCredentialResponse) Reset() {
	*x = QueryGetCredentialResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_qadena_qadena_query_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryGetCredentialResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryGetCredentialResponse) ProtoMessage() {}

// Deprecated: Use QueryGetCredentialResponse.ProtoReflect.Descriptor instead.
func (*QueryGetCredentialResponse) Descriptor() ([]byte, []int) {
	return file_qadena_qadena_query_proto_rawDescGZIP(), []int{3}
}

func (x *QueryGetCredentialResponse) GetCredential() *Credential {
	if x != nil {
		return x.Credential
	}
	return nil
}

type QueryAllCredentialRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Pagination *v1beta1.PageRequest `protobuf:"bytes,1,opt,name=pagination,proto3" json:"pagination,omitempty"`
}

func (x *QueryAllCredentialRequest) Reset() {
	*x = QueryAllCredentialRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_qadena_qadena_query_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryAllCredentialRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryAllCredentialRequest) ProtoMessage() {}

// Deprecated: Use QueryAllCredentialRequest.ProtoReflect.Descriptor instead.
func (*QueryAllCredentialRequest) Descriptor() ([]byte, []int) {
	return file_qadena_qadena_query_proto_rawDescGZIP(), []int{4}
}

func (x *QueryAllCredentialRequest) GetPagination() *v1beta1.PageRequest {
	if x != nil {
		return x.Pagination
	}
	return nil
}

type QueryAllCredentialResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Credential []*Credential         `protobuf:"bytes,1,rep,name=credential,proto3" json:"credential,omitempty"`
	Pagination *v1beta1.PageResponse `protobuf:"bytes,2,opt,name=pagination,proto3" json:"pagination,omitempty"`
}

func (x *QueryAllCredentialResponse) Reset() {
	*x = QueryAllCredentialResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_qadena_qadena_query_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryAllCredentialResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryAllCredentialResponse) ProtoMessage() {}

// Deprecated: Use QueryAllCredentialResponse.ProtoReflect.Descriptor instead.
func (*QueryAllCredentialResponse) Descriptor() ([]byte, []int) {
	return file_qadena_qadena_query_proto_rawDescGZIP(), []int{5}
}

func (x *QueryAllCredentialResponse) GetCredential() []*Credential {
	if x != nil {
		return x.Credential
	}
	return nil
}

func (x *QueryAllCredentialResponse) GetPagination() *v1beta1.PageResponse {
	if x != nil {
		return x.Pagination
	}
	return nil
}

type QueryGetPublicKeyRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PubKID   string `protobuf:"bytes,1,opt,name=pubKID,proto3" json:"pubKID,omitempty"`
	PubKType string `protobuf:"bytes,2,opt,name=pubKType,proto3" json:"pubKType,omitempty"`
}

func (x *QueryGetPublicKeyRequest) Reset() {
	*x = QueryGetPublicKeyRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_qadena_qadena_query_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryGetPublicKeyRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryGetPublicKeyRequest) ProtoMessage() {}

// Deprecated: Use QueryGetPublicKeyRequest.ProtoReflect.Descriptor instead.
func (*QueryGetPublicKeyRequest) Descriptor() ([]byte, []int) {
	return file_qadena_qadena_query_proto_rawDescGZIP(), []int{6}
}

func (x *QueryGetPublicKeyRequest) GetPubKID() string {
	if x != nil {
		return x.PubKID
	}
	return ""
}

func (x *QueryGetPublicKeyRequest) GetPubKType() string {
	if x != nil {
		return x.PubKType
	}
	return ""
}

type QueryGetPublicKeyResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PublicKey *PublicKey `protobuf:"bytes,1,opt,name=publicKey,proto3" json:"publicKey,omitempty"`
}

func (x *QueryGetPublicKeyResponse) Reset() {
	*x = QueryGetPublicKeyResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_qadena_qadena_query_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryGetPublicKeyResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryGetPublicKeyResponse) ProtoMessage() {}

// Deprecated: Use QueryGetPublicKeyResponse.ProtoReflect.Descriptor instead.
func (*QueryGetPublicKeyResponse) Descriptor() ([]byte, []int) {
	return file_qadena_qadena_query_proto_rawDescGZIP(), []int{7}
}

func (x *QueryGetPublicKeyResponse) GetPublicKey() *PublicKey {
	if x != nil {
		return x.PublicKey
	}
	return nil
}

type QueryAllPublicKeyRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Pagination *v1beta1.PageRequest `protobuf:"bytes,1,opt,name=pagination,proto3" json:"pagination,omitempty"`
}

func (x *QueryAllPublicKeyRequest) Reset() {
	*x = QueryAllPublicKeyRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_qadena_qadena_query_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryAllPublicKeyRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryAllPublicKeyRequest) ProtoMessage() {}

// Deprecated: Use QueryAllPublicKeyRequest.ProtoReflect.Descriptor instead.
func (*QueryAllPublicKeyRequest) Descriptor() ([]byte, []int) {
	return file_qadena_qadena_query_proto_rawDescGZIP(), []int{8}
}

func (x *QueryAllPublicKeyRequest) GetPagination() *v1beta1.PageRequest {
	if x != nil {
		return x.Pagination
	}
	return nil
}

type QueryAllPublicKeyResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PublicKey  []*PublicKey          `protobuf:"bytes,1,rep,name=publicKey,proto3" json:"publicKey,omitempty"`
	Pagination *v1beta1.PageResponse `protobuf:"bytes,2,opt,name=pagination,proto3" json:"pagination,omitempty"`
}

func (x *QueryAllPublicKeyResponse) Reset() {
	*x = QueryAllPublicKeyResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_qadena_qadena_query_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryAllPublicKeyResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryAllPublicKeyResponse) ProtoMessage() {}

// Deprecated: Use QueryAllPublicKeyResponse.ProtoReflect.Descriptor instead.
func (*QueryAllPublicKeyResponse) Descriptor() ([]byte, []int) {
	return file_qadena_qadena_query_proto_rawDescGZIP(), []int{9}
}

func (x *QueryAllPublicKeyResponse) GetPublicKey() []*PublicKey {
	if x != nil {
		return x.PublicKey
	}
	return nil
}

func (x *QueryAllPublicKeyResponse) GetPagination() *v1beta1.PageResponse {
	if x != nil {
		return x.Pagination
	}
	return nil
}

type QueryGetWalletRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	WalletID string `protobuf:"bytes,1,opt,name=walletID,proto3" json:"walletID,omitempty"`
}

func (x *QueryGetWalletRequest) Reset() {
	*x = QueryGetWalletRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_qadena_qadena_query_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryGetWalletRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryGetWalletRequest) ProtoMessage() {}

// Deprecated: Use QueryGetWalletRequest.ProtoReflect.Descriptor instead.
func (*QueryGetWalletRequest) Descriptor() ([]byte, []int) {
	return file_qadena_qadena_query_proto_rawDescGZIP(), []int{10}
}

func (x *QueryGetWalletRequest) GetWalletID() string {
	if x != nil {
		return x.WalletID
	}
	return ""
}

type QueryGetWalletResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Wallet *Wallet `protobuf:"bytes,1,opt,name=wallet,proto3" json:"wallet,omitempty"`
}

func (x *QueryGetWalletResponse) Reset() {
	*x = QueryGetWalletResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_qadena_qadena_query_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryGetWalletResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryGetWalletResponse) ProtoMessage() {}

// Deprecated: Use QueryGetWalletResponse.ProtoReflect.Descriptor instead.
func (*QueryGetWalletResponse) Descriptor() ([]byte, []int) {
	return file_qadena_qadena_query_proto_rawDescGZIP(), []int{11}
}

func (x *QueryGetWalletResponse) GetWallet() *Wallet {
	if x != nil {
		return x.Wallet
	}
	return nil
}

type QueryAllWalletRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Pagination *v1beta1.PageRequest `protobuf:"bytes,1,opt,name=pagination,proto3" json:"pagination,omitempty"`
}

func (x *QueryAllWalletRequest) Reset() {
	*x = QueryAllWalletRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_qadena_qadena_query_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryAllWalletRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryAllWalletRequest) ProtoMessage() {}

// Deprecated: Use QueryAllWalletRequest.ProtoReflect.Descriptor instead.
func (*QueryAllWalletRequest) Descriptor() ([]byte, []int) {
	return file_qadena_qadena_query_proto_rawDescGZIP(), []int{12}
}

func (x *QueryAllWalletRequest) GetPagination() *v1beta1.PageRequest {
	if x != nil {
		return x.Pagination
	}
	return nil
}

type QueryAllWalletResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Wallet     []*Wallet             `protobuf:"bytes,1,rep,name=wallet,proto3" json:"wallet,omitempty"`
	Pagination *v1beta1.PageResponse `protobuf:"bytes,2,opt,name=pagination,proto3" json:"pagination,omitempty"`
}

func (x *QueryAllWalletResponse) Reset() {
	*x = QueryAllWalletResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_qadena_qadena_query_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryAllWalletResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryAllWalletResponse) ProtoMessage() {}

// Deprecated: Use QueryAllWalletResponse.ProtoReflect.Descriptor instead.
func (*QueryAllWalletResponse) Descriptor() ([]byte, []int) {
	return file_qadena_qadena_query_proto_rawDescGZIP(), []int{13}
}

func (x *QueryAllWalletResponse) GetWallet() []*Wallet {
	if x != nil {
		return x.Wallet
	}
	return nil
}

func (x *QueryAllWalletResponse) GetPagination() *v1beta1.PageResponse {
	if x != nil {
		return x.Pagination
	}
	return nil
}

type QueryGetIntervalPublicKeyIDRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NodeID   string `protobuf:"bytes,1,opt,name=nodeID,proto3" json:"nodeID,omitempty"`
	NodeType string `protobuf:"bytes,2,opt,name=nodeType,proto3" json:"nodeType,omitempty"`
}

func (x *QueryGetIntervalPublicKeyIDRequest) Reset() {
	*x = QueryGetIntervalPublicKeyIDRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_qadena_qadena_query_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryGetIntervalPublicKeyIDRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryGetIntervalPublicKeyIDRequest) ProtoMessage() {}

// Deprecated: Use QueryGetIntervalPublicKeyIDRequest.ProtoReflect.Descriptor instead.
func (*QueryGetIntervalPublicKeyIDRequest) Descriptor() ([]byte, []int) {
	return file_qadena_qadena_query_proto_rawDescGZIP(), []int{14}
}

func (x *QueryGetIntervalPublicKeyIDRequest) GetNodeID() string {
	if x != nil {
		return x.NodeID
	}
	return ""
}

func (x *QueryGetIntervalPublicKeyIDRequest) GetNodeType() string {
	if x != nil {
		return x.NodeType
	}
	return ""
}

type QueryGetIntervalPublicKeyIDResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IntervalPublicKeyID *IntervalPublicKeyID `protobuf:"bytes,1,opt,name=intervalPublicKeyID,proto3" json:"intervalPublicKeyID,omitempty"`
}

func (x *QueryGetIntervalPublicKeyIDResponse) Reset() {
	*x = QueryGetIntervalPublicKeyIDResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_qadena_qadena_query_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryGetIntervalPublicKeyIDResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryGetIntervalPublicKeyIDResponse) ProtoMessage() {}

// Deprecated: Use QueryGetIntervalPublicKeyIDResponse.ProtoReflect.Descriptor instead.
func (*QueryGetIntervalPublicKeyIDResponse) Descriptor() ([]byte, []int) {
	return file_qadena_qadena_query_proto_rawDescGZIP(), []int{15}
}

func (x *QueryGetIntervalPublicKeyIDResponse) GetIntervalPublicKeyID() *IntervalPublicKeyID {
	if x != nil {
		return x.IntervalPublicKeyID
	}
	return nil
}

type QueryAllIntervalPublicKeyIDRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Pagination *v1beta1.PageRequest `protobuf:"bytes,1,opt,name=pagination,proto3" json:"pagination,omitempty"`
}

func (x *QueryAllIntervalPublicKeyIDRequest) Reset() {
	*x = QueryAllIntervalPublicKeyIDRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_qadena_qadena_query_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryAllIntervalPublicKeyIDRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryAllIntervalPublicKeyIDRequest) ProtoMessage() {}

// Deprecated: Use QueryAllIntervalPublicKeyIDRequest.ProtoReflect.Descriptor instead.
func (*QueryAllIntervalPublicKeyIDRequest) Descriptor() ([]byte, []int) {
	return file_qadena_qadena_query_proto_rawDescGZIP(), []int{16}
}

func (x *QueryAllIntervalPublicKeyIDRequest) GetPagination() *v1beta1.PageRequest {
	if x != nil {
		return x.Pagination
	}
	return nil
}

type QueryAllIntervalPublicKeyIDResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IntervalPublicKeyID []*IntervalPublicKeyID `protobuf:"bytes,1,rep,name=intervalPublicKeyID,proto3" json:"intervalPublicKeyID,omitempty"`
	Pagination          *v1beta1.PageResponse  `protobuf:"bytes,2,opt,name=pagination,proto3" json:"pagination,omitempty"`
}

func (x *QueryAllIntervalPublicKeyIDResponse) Reset() {
	*x = QueryAllIntervalPublicKeyIDResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_qadena_qadena_query_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryAllIntervalPublicKeyIDResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryAllIntervalPublicKeyIDResponse) ProtoMessage() {}

// Deprecated: Use QueryAllIntervalPublicKeyIDResponse.ProtoReflect.Descriptor instead.
func (*QueryAllIntervalPublicKeyIDResponse) Descriptor() ([]byte, []int) {
	return file_qadena_qadena_query_proto_rawDescGZIP(), []int{17}
}

func (x *QueryAllIntervalPublicKeyIDResponse) GetIntervalPublicKeyID() []*IntervalPublicKeyID {
	if x != nil {
		return x.IntervalPublicKeyID
	}
	return nil
}

func (x *QueryAllIntervalPublicKeyIDResponse) GetPagination() *v1beta1.PageResponse {
	if x != nil {
		return x.Pagination
	}
	return nil
}

type QueryGetPioneerJarRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PioneerID string `protobuf:"bytes,1,opt,name=pioneerID,proto3" json:"pioneerID,omitempty"`
}

func (x *QueryGetPioneerJarRequest) Reset() {
	*x = QueryGetPioneerJarRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_qadena_qadena_query_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryGetPioneerJarRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryGetPioneerJarRequest) ProtoMessage() {}

// Deprecated: Use QueryGetPioneerJarRequest.ProtoReflect.Descriptor instead.
func (*QueryGetPioneerJarRequest) Descriptor() ([]byte, []int) {
	return file_qadena_qadena_query_proto_rawDescGZIP(), []int{18}
}

func (x *QueryGetPioneerJarRequest) GetPioneerID() string {
	if x != nil {
		return x.PioneerID
	}
	return ""
}

type QueryGetPioneerJarResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PioneerJar *PioneerJar `protobuf:"bytes,1,opt,name=pioneerJar,proto3" json:"pioneerJar,omitempty"`
}

func (x *QueryGetPioneerJarResponse) Reset() {
	*x = QueryGetPioneerJarResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_qadena_qadena_query_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryGetPioneerJarResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryGetPioneerJarResponse) ProtoMessage() {}

// Deprecated: Use QueryGetPioneerJarResponse.ProtoReflect.Descriptor instead.
func (*QueryGetPioneerJarResponse) Descriptor() ([]byte, []int) {
	return file_qadena_qadena_query_proto_rawDescGZIP(), []int{19}
}

func (x *QueryGetPioneerJarResponse) GetPioneerJar() *PioneerJar {
	if x != nil {
		return x.PioneerJar
	}
	return nil
}

type QueryAllPioneerJarRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Pagination *v1beta1.PageRequest `protobuf:"bytes,1,opt,name=pagination,proto3" json:"pagination,omitempty"`
}

func (x *QueryAllPioneerJarRequest) Reset() {
	*x = QueryAllPioneerJarRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_qadena_qadena_query_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryAllPioneerJarRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryAllPioneerJarRequest) ProtoMessage() {}

// Deprecated: Use QueryAllPioneerJarRequest.ProtoReflect.Descriptor instead.
func (*QueryAllPioneerJarRequest) Descriptor() ([]byte, []int) {
	return file_qadena_qadena_query_proto_rawDescGZIP(), []int{20}
}

func (x *QueryAllPioneerJarRequest) GetPagination() *v1beta1.PageRequest {
	if x != nil {
		return x.Pagination
	}
	return nil
}

type QueryAllPioneerJarResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PioneerJar []*PioneerJar         `protobuf:"bytes,1,rep,name=pioneerJar,proto3" json:"pioneerJar,omitempty"`
	Pagination *v1beta1.PageResponse `protobuf:"bytes,2,opt,name=pagination,proto3" json:"pagination,omitempty"`
}

func (x *QueryAllPioneerJarResponse) Reset() {
	*x = QueryAllPioneerJarResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_qadena_qadena_query_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryAllPioneerJarResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryAllPioneerJarResponse) ProtoMessage() {}

// Deprecated: Use QueryAllPioneerJarResponse.ProtoReflect.Descriptor instead.
func (*QueryAllPioneerJarResponse) Descriptor() ([]byte, []int) {
	return file_qadena_qadena_query_proto_rawDescGZIP(), []int{21}
}

func (x *QueryAllPioneerJarResponse) GetPioneerJar() []*PioneerJar {
	if x != nil {
		return x.PioneerJar
	}
	return nil
}

func (x *QueryAllPioneerJarResponse) GetPagination() *v1beta1.PageResponse {
	if x != nil {
		return x.Pagination
	}
	return nil
}

type QueryGetJarRegulatorRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	JarID string `protobuf:"bytes,1,opt,name=jarID,proto3" json:"jarID,omitempty"`
}

func (x *QueryGetJarRegulatorRequest) Reset() {
	*x = QueryGetJarRegulatorRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_qadena_qadena_query_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryGetJarRegulatorRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryGetJarRegulatorRequest) ProtoMessage() {}

// Deprecated: Use QueryGetJarRegulatorRequest.ProtoReflect.Descriptor instead.
func (*QueryGetJarRegulatorRequest) Descriptor() ([]byte, []int) {
	return file_qadena_qadena_query_proto_rawDescGZIP(), []int{22}
}

func (x *QueryGetJarRegulatorRequest) GetJarID() string {
	if x != nil {
		return x.JarID
	}
	return ""
}

type QueryGetJarRegulatorResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	JarRegulator *JarRegulator `protobuf:"bytes,1,opt,name=jarRegulator,proto3" json:"jarRegulator,omitempty"`
}

func (x *QueryGetJarRegulatorResponse) Reset() {
	*x = QueryGetJarRegulatorResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_qadena_qadena_query_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryGetJarRegulatorResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryGetJarRegulatorResponse) ProtoMessage() {}

// Deprecated: Use QueryGetJarRegulatorResponse.ProtoReflect.Descriptor instead.
func (*QueryGetJarRegulatorResponse) Descriptor() ([]byte, []int) {
	return file_qadena_qadena_query_proto_rawDescGZIP(), []int{23}
}

func (x *QueryGetJarRegulatorResponse) GetJarRegulator() *JarRegulator {
	if x != nil {
		return x.JarRegulator
	}
	return nil
}

type QueryAllJarRegulatorRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Pagination *v1beta1.PageRequest `protobuf:"bytes,1,opt,name=pagination,proto3" json:"pagination,omitempty"`
}

func (x *QueryAllJarRegulatorRequest) Reset() {
	*x = QueryAllJarRegulatorRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_qadena_qadena_query_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryAllJarRegulatorRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryAllJarRegulatorRequest) ProtoMessage() {}

// Deprecated: Use QueryAllJarRegulatorRequest.ProtoReflect.Descriptor instead.
func (*QueryAllJarRegulatorRequest) Descriptor() ([]byte, []int) {
	return file_qadena_qadena_query_proto_rawDescGZIP(), []int{24}
}

func (x *QueryAllJarRegulatorRequest) GetPagination() *v1beta1.PageRequest {
	if x != nil {
		return x.Pagination
	}
	return nil
}

type QueryAllJarRegulatorResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	JarRegulator []*JarRegulator       `protobuf:"bytes,1,rep,name=jarRegulator,proto3" json:"jarRegulator,omitempty"`
	Pagination   *v1beta1.PageResponse `protobuf:"bytes,2,opt,name=pagination,proto3" json:"pagination,omitempty"`
}

func (x *QueryAllJarRegulatorResponse) Reset() {
	*x = QueryAllJarRegulatorResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_qadena_qadena_query_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryAllJarRegulatorResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryAllJarRegulatorResponse) ProtoMessage() {}

// Deprecated: Use QueryAllJarRegulatorResponse.ProtoReflect.Descriptor instead.
func (*QueryAllJarRegulatorResponse) Descriptor() ([]byte, []int) {
	return file_qadena_qadena_query_proto_rawDescGZIP(), []int{25}
}

func (x *QueryAllJarRegulatorResponse) GetJarRegulator() []*JarRegulator {
	if x != nil {
		return x.JarRegulator
	}
	return nil
}

func (x *QueryAllJarRegulatorResponse) GetPagination() *v1beta1.PageResponse {
	if x != nil {
		return x.Pagination
	}
	return nil
}

type QueryGetSuspiciousTransactionRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id uint64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *QueryGetSuspiciousTransactionRequest) Reset() {
	*x = QueryGetSuspiciousTransactionRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_qadena_qadena_query_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryGetSuspiciousTransactionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryGetSuspiciousTransactionRequest) ProtoMessage() {}

// Deprecated: Use QueryGetSuspiciousTransactionRequest.ProtoReflect.Descriptor instead.
func (*QueryGetSuspiciousTransactionRequest) Descriptor() ([]byte, []int) {
	return file_qadena_qadena_query_proto_rawDescGZIP(), []int{26}
}

func (x *QueryGetSuspiciousTransactionRequest) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type QueryGetSuspiciousTransactionResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SuspiciousTransaction *SuspiciousTransaction `protobuf:"bytes,1,opt,name=SuspiciousTransaction,proto3" json:"SuspiciousTransaction,omitempty"`
}

func (x *QueryGetSuspiciousTransactionResponse) Reset() {
	*x = QueryGetSuspiciousTransactionResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_qadena_qadena_query_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryGetSuspiciousTransactionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryGetSuspiciousTransactionResponse) ProtoMessage() {}

// Deprecated: Use QueryGetSuspiciousTransactionResponse.ProtoReflect.Descriptor instead.
func (*QueryGetSuspiciousTransactionResponse) Descriptor() ([]byte, []int) {
	return file_qadena_qadena_query_proto_rawDescGZIP(), []int{27}
}

func (x *QueryGetSuspiciousTransactionResponse) GetSuspiciousTransaction() *SuspiciousTransaction {
	if x != nil {
		return x.SuspiciousTransaction
	}
	return nil
}

type QueryAllSuspiciousTransactionRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Pagination *v1beta1.PageRequest `protobuf:"bytes,1,opt,name=pagination,proto3" json:"pagination,omitempty"`
}

func (x *QueryAllSuspiciousTransactionRequest) Reset() {
	*x = QueryAllSuspiciousTransactionRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_qadena_qadena_query_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryAllSuspiciousTransactionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryAllSuspiciousTransactionRequest) ProtoMessage() {}

// Deprecated: Use QueryAllSuspiciousTransactionRequest.ProtoReflect.Descriptor instead.
func (*QueryAllSuspiciousTransactionRequest) Descriptor() ([]byte, []int) {
	return file_qadena_qadena_query_proto_rawDescGZIP(), []int{28}
}

func (x *QueryAllSuspiciousTransactionRequest) GetPagination() *v1beta1.PageRequest {
	if x != nil {
		return x.Pagination
	}
	return nil
}

type QueryAllSuspiciousTransactionResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SuspiciousTransaction []*SuspiciousTransaction `protobuf:"bytes,1,rep,name=SuspiciousTransaction,proto3" json:"SuspiciousTransaction,omitempty"`
	Pagination            *v1beta1.PageResponse    `protobuf:"bytes,2,opt,name=pagination,proto3" json:"pagination,omitempty"`
}

func (x *QueryAllSuspiciousTransactionResponse) Reset() {
	*x = QueryAllSuspiciousTransactionResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_qadena_qadena_query_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryAllSuspiciousTransactionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryAllSuspiciousTransactionResponse) ProtoMessage() {}

// Deprecated: Use QueryAllSuspiciousTransactionResponse.ProtoReflect.Descriptor instead.
func (*QueryAllSuspiciousTransactionResponse) Descriptor() ([]byte, []int) {
	return file_qadena_qadena_query_proto_rawDescGZIP(), []int{29}
}

func (x *QueryAllSuspiciousTransactionResponse) GetSuspiciousTransaction() []*SuspiciousTransaction {
	if x != nil {
		return x.SuspiciousTransaction
	}
	return nil
}

func (x *QueryAllSuspiciousTransactionResponse) GetPagination() *v1beta1.PageResponse {
	if x != nil {
		return x.Pagination
	}
	return nil
}

type QueryGetProtectKeyRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	WalletID string `protobuf:"bytes,1,opt,name=walletID,proto3" json:"walletID,omitempty"`
}

func (x *QueryGetProtectKeyRequest) Reset() {
	*x = QueryGetProtectKeyRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_qadena_qadena_query_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryGetProtectKeyRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryGetProtectKeyRequest) ProtoMessage() {}

// Deprecated: Use QueryGetProtectKeyRequest.ProtoReflect.Descriptor instead.
func (*QueryGetProtectKeyRequest) Descriptor() ([]byte, []int) {
	return file_qadena_qadena_query_proto_rawDescGZIP(), []int{30}
}

func (x *QueryGetProtectKeyRequest) GetWalletID() string {
	if x != nil {
		return x.WalletID
	}
	return ""
}

type QueryGetProtectKeyResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProtectKey *ProtectKey `protobuf:"bytes,1,opt,name=protectKey,proto3" json:"protectKey,omitempty"`
}

func (x *QueryGetProtectKeyResponse) Reset() {
	*x = QueryGetProtectKeyResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_qadena_qadena_query_proto_msgTypes[31]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryGetProtectKeyResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryGetProtectKeyResponse) ProtoMessage() {}

// Deprecated: Use QueryGetProtectKeyResponse.ProtoReflect.Descriptor instead.
func (*QueryGetProtectKeyResponse) Descriptor() ([]byte, []int) {
	return file_qadena_qadena_query_proto_rawDescGZIP(), []int{31}
}

func (x *QueryGetProtectKeyResponse) GetProtectKey() *ProtectKey {
	if x != nil {
		return x.ProtectKey
	}
	return nil
}

type QueryAllProtectKeyRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Pagination   *v1beta1.PageRequest `protobuf:"bytes,1,opt,name=pagination,proto3" json:"pagination,omitempty"`
	CredentialID string               `protobuf:"bytes,2,opt,name=credentialID,proto3" json:"credentialID,omitempty"`
}

func (x *QueryAllProtectKeyRequest) Reset() {
	*x = QueryAllProtectKeyRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_qadena_qadena_query_proto_msgTypes[32]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryAllProtectKeyRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryAllProtectKeyRequest) ProtoMessage() {}

// Deprecated: Use QueryAllProtectKeyRequest.ProtoReflect.Descriptor instead.
func (*QueryAllProtectKeyRequest) Descriptor() ([]byte, []int) {
	return file_qadena_qadena_query_proto_rawDescGZIP(), []int{32}
}

func (x *QueryAllProtectKeyRequest) GetPagination() *v1beta1.PageRequest {
	if x != nil {
		return x.Pagination
	}
	return nil
}

func (x *QueryAllProtectKeyRequest) GetCredentialID() string {
	if x != nil {
		return x.CredentialID
	}
	return ""
}

type QueryAllProtectKeyResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProtectKey []*ProtectKey         `protobuf:"bytes,1,rep,name=protectKey,proto3" json:"protectKey,omitempty"`
	Pagination *v1beta1.PageResponse `protobuf:"bytes,2,opt,name=pagination,proto3" json:"pagination,omitempty"`
}

func (x *QueryAllProtectKeyResponse) Reset() {
	*x = QueryAllProtectKeyResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_qadena_qadena_query_proto_msgTypes[33]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryAllProtectKeyResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryAllProtectKeyResponse) ProtoMessage() {}

// Deprecated: Use QueryAllProtectKeyResponse.ProtoReflect.Descriptor instead.
func (*QueryAllProtectKeyResponse) Descriptor() ([]byte, []int) {
	return file_qadena_qadena_query_proto_rawDescGZIP(), []int{33}
}

func (x *QueryAllProtectKeyResponse) GetProtectKey() []*ProtectKey {
	if x != nil {
		return x.ProtectKey
	}
	return nil
}

func (x *QueryAllProtectKeyResponse) GetPagination() *v1beta1.PageResponse {
	if x != nil {
		return x.Pagination
	}
	return nil
}

type QueryGetRecoverKeyRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	WalletID string `protobuf:"bytes,1,opt,name=walletID,proto3" json:"walletID,omitempty"`
}

func (x *QueryGetRecoverKeyRequest) Reset() {
	*x = QueryGetRecoverKeyRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_qadena_qadena_query_proto_msgTypes[34]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryGetRecoverKeyRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryGetRecoverKeyRequest) ProtoMessage() {}

// Deprecated: Use QueryGetRecoverKeyRequest.ProtoReflect.Descriptor instead.
func (*QueryGetRecoverKeyRequest) Descriptor() ([]byte, []int) {
	return file_qadena_qadena_query_proto_rawDescGZIP(), []int{34}
}

func (x *QueryGetRecoverKeyRequest) GetWalletID() string {
	if x != nil {
		return x.WalletID
	}
	return ""
}

type QueryGetRecoverKeyResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RecoverKey *RecoverKey `protobuf:"bytes,1,opt,name=recoverKey,proto3" json:"recoverKey,omitempty"`
}

func (x *QueryGetRecoverKeyResponse) Reset() {
	*x = QueryGetRecoverKeyResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_qadena_qadena_query_proto_msgTypes[35]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryGetRecoverKeyResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryGetRecoverKeyResponse) ProtoMessage() {}

// Deprecated: Use QueryGetRecoverKeyResponse.ProtoReflect.Descriptor instead.
func (*QueryGetRecoverKeyResponse) Descriptor() ([]byte, []int) {
	return file_qadena_qadena_query_proto_rawDescGZIP(), []int{35}
}

func (x *QueryGetRecoverKeyResponse) GetRecoverKey() *RecoverKey {
	if x != nil {
		return x.RecoverKey
	}
	return nil
}

type QueryAllRecoverKeyRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Pagination   *v1beta1.PageRequest `protobuf:"bytes,1,opt,name=pagination,proto3" json:"pagination,omitempty"`
	CredentialID string               `protobuf:"bytes,2,opt,name=credentialID,proto3" json:"credentialID,omitempty"`
}

func (x *QueryAllRecoverKeyRequest) Reset() {
	*x = QueryAllRecoverKeyRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_qadena_qadena_query_proto_msgTypes[36]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryAllRecoverKeyRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryAllRecoverKeyRequest) ProtoMessage() {}

// Deprecated: Use QueryAllRecoverKeyRequest.ProtoReflect.Descriptor instead.
func (*QueryAllRecoverKeyRequest) Descriptor() ([]byte, []int) {
	return file_qadena_qadena_query_proto_rawDescGZIP(), []int{36}
}

func (x *QueryAllRecoverKeyRequest) GetPagination() *v1beta1.PageRequest {
	if x != nil {
		return x.Pagination
	}
	return nil
}

func (x *QueryAllRecoverKeyRequest) GetCredentialID() string {
	if x != nil {
		return x.CredentialID
	}
	return ""
}

type QueryAllRecoverKeyResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RecoverKey []*RecoverKey         `protobuf:"bytes,1,rep,name=recoverKey,proto3" json:"recoverKey,omitempty"`
	Pagination *v1beta1.PageResponse `protobuf:"bytes,2,opt,name=pagination,proto3" json:"pagination,omitempty"`
}

func (x *QueryAllRecoverKeyResponse) Reset() {
	*x = QueryAllRecoverKeyResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_qadena_qadena_query_proto_msgTypes[37]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryAllRecoverKeyResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryAllRecoverKeyResponse) ProtoMessage() {}

// Deprecated: Use QueryAllRecoverKeyResponse.ProtoReflect.Descriptor instead.
func (*QueryAllRecoverKeyResponse) Descriptor() ([]byte, []int) {
	return file_qadena_qadena_query_proto_rawDescGZIP(), []int{37}
}

func (x *QueryAllRecoverKeyResponse) GetRecoverKey() []*RecoverKey {
	if x != nil {
		return x.RecoverKey
	}
	return nil
}

func (x *QueryAllRecoverKeyResponse) GetPagination() *v1beta1.PageResponse {
	if x != nil {
		return x.Pagination
	}
	return nil
}

type QueryTreasuryRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *QueryTreasuryRequest) Reset() {
	*x = QueryTreasuryRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_qadena_qadena_query_proto_msgTypes[38]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryTreasuryRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryTreasuryRequest) ProtoMessage() {}

// Deprecated: Use QueryTreasuryRequest.ProtoReflect.Descriptor instead.
func (*QueryTreasuryRequest) Descriptor() ([]byte, []int) {
	return file_qadena_qadena_query_proto_rawDescGZIP(), []int{38}
}

type QueryTreasuryResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TotalBalance     *v1beta11.Coin `protobuf:"bytes,1,opt,name=totalBalance,proto3" json:"totalBalance,omitempty"`
	EncryptedBalance *v1beta11.Coin `protobuf:"bytes,2,opt,name=encryptedBalance,proto3" json:"encryptedBalance,omitempty"`
}

func (x *QueryTreasuryResponse) Reset() {
	*x = QueryTreasuryResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_qadena_qadena_query_proto_msgTypes[39]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryTreasuryResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryTreasuryResponse) ProtoMessage() {}

// Deprecated: Use QueryTreasuryResponse.ProtoReflect.Descriptor instead.
func (*QueryTreasuryResponse) Descriptor() ([]byte, []int) {
	return file_qadena_qadena_query_proto_rawDescGZIP(), []int{39}
}

func (x *QueryTreasuryResponse) GetTotalBalance() *v1beta11.Coin {
	if x != nil {
		return x.TotalBalance
	}
	return nil
}

func (x *QueryTreasuryResponse) GetEncryptedBalance() *v1beta11.Coin {
	if x != nil {
		return x.EncryptedBalance
	}
	return nil
}

type QueryAccountRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *QueryAccountRequest) Reset() {
	*x = QueryAccountRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_qadena_qadena_query_proto_msgTypes[40]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryAccountRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryAccountRequest) ProtoMessage() {}

// Deprecated: Use QueryAccountRequest.ProtoReflect.Descriptor instead.
func (*QueryAccountRequest) Descriptor() ([]byte, []int) {
	return file_qadena_qadena_query_proto_rawDescGZIP(), []int{40}
}

func (x *QueryAccountRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type QueryAccountResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TransparentBalance string `protobuf:"bytes,1,opt,name=transparentBalance,proto3" json:"transparentBalance,omitempty"`
	EncryptedBalance   string `protobuf:"bytes,2,opt,name=encryptedBalance,proto3" json:"encryptedBalance,omitempty"`
}

func (x *QueryAccountResponse) Reset() {
	*x = QueryAccountResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_qadena_qadena_query_proto_msgTypes[41]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryAccountResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryAccountResponse) ProtoMessage() {}

// Deprecated: Use QueryAccountResponse.ProtoReflect.Descriptor instead.
func (*QueryAccountResponse) Descriptor() ([]byte, []int) {
	return file_qadena_qadena_query_proto_rawDescGZIP(), []int{41}
}

func (x *QueryAccountResponse) GetTransparentBalance() string {
	if x != nil {
		return x.TransparentBalance
	}
	return ""
}

func (x *QueryAccountResponse) GetEncryptedBalance() string {
	if x != nil {
		return x.EncryptedBalance
	}
	return ""
}

type QueryIncentivesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *QueryIncentivesRequest) Reset() {
	*x = QueryIncentivesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_qadena_qadena_query_proto_msgTypes[42]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryIncentivesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryIncentivesRequest) ProtoMessage() {}

// Deprecated: Use QueryIncentivesRequest.ProtoReflect.Descriptor instead.
func (*QueryIncentivesRequest) Descriptor() ([]byte, []int) {
	return file_qadena_qadena_query_proto_rawDescGZIP(), []int{42}
}

type QueryIncentivesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CreateWalletIncentive                     *v1beta11.Coin `protobuf:"bytes,1,opt,name=createWalletIncentive,proto3" json:"createWalletIncentive,omitempty"`
	CreateEphemeralWalletIncentive            *v1beta11.Coin `protobuf:"bytes,2,opt,name=createEphemeralWalletIncentive,proto3" json:"createEphemeralWalletIncentive,omitempty"`
	CreateWalletTransparentIncentive          *v1beta11.Coin `protobuf:"bytes,3,opt,name=createWalletTransparentIncentive,proto3" json:"createWalletTransparentIncentive,omitempty"`
	CreateEphemeralWalletTransparentIncentive *v1beta11.Coin `protobuf:"bytes,4,opt,name=createEphemeralWalletTransparentIncentive,proto3" json:"createEphemeralWalletTransparentIncentive,omitempty"`
}

func (x *QueryIncentivesResponse) Reset() {
	*x = QueryIncentivesResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_qadena_qadena_query_proto_msgTypes[43]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryIncentivesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryIncentivesResponse) ProtoMessage() {}

// Deprecated: Use QueryIncentivesResponse.ProtoReflect.Descriptor instead.
func (*QueryIncentivesResponse) Descriptor() ([]byte, []int) {
	return file_qadena_qadena_query_proto_rawDescGZIP(), []int{43}
}

func (x *QueryIncentivesResponse) GetCreateWalletIncentive() *v1beta11.Coin {
	if x != nil {
		return x.CreateWalletIncentive
	}
	return nil
}

func (x *QueryIncentivesResponse) GetCreateEphemeralWalletIncentive() *v1beta11.Coin {
	if x != nil {
		return x.CreateEphemeralWalletIncentive
	}
	return nil
}

func (x *QueryIncentivesResponse) GetCreateWalletTransparentIncentive() *v1beta11.Coin {
	if x != nil {
		return x.CreateWalletTransparentIncentive
	}
	return nil
}

func (x *QueryIncentivesResponse) GetCreateEphemeralWalletTransparentIncentive() *v1beta11.Coin {
	if x != nil {
		return x.CreateEphemeralWalletTransparentIncentive
	}
	return nil
}

type QueryEnclaveValidateEnclaveIdentityRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RemoteReport []byte `protobuf:"bytes,1,opt,name=remoteReport,proto3" json:"remoteReport,omitempty"`
	UniqueID     string `protobuf:"bytes,2,opt,name=uniqueID,proto3" json:"uniqueID,omitempty"`
	SignerID     string `protobuf:"bytes,3,opt,name=signerID,proto3" json:"signerID,omitempty"`
	ProductID    string `protobuf:"bytes,4,opt,name=productID,proto3" json:"productID,omitempty"`
}

func (x *QueryEnclaveValidateEnclaveIdentityRequest) Reset() {
	*x = QueryEnclaveValidateEnclaveIdentityRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_qadena_qadena_query_proto_msgTypes[44]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryEnclaveValidateEnclaveIdentityRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryEnclaveValidateEnclaveIdentityRequest) ProtoMessage() {}

// Deprecated: Use QueryEnclaveValidateEnclaveIdentityRequest.ProtoReflect.Descriptor instead.
func (*QueryEnclaveValidateEnclaveIdentityRequest) Descriptor() ([]byte, []int) {
	return file_qadena_qadena_query_proto_rawDescGZIP(), []int{44}
}

func (x *QueryEnclaveValidateEnclaveIdentityRequest) GetRemoteReport() []byte {
	if x != nil {
		return x.RemoteReport
	}
	return nil
}

func (x *QueryEnclaveValidateEnclaveIdentityRequest) GetUniqueID() string {
	if x != nil {
		return x.UniqueID
	}
	return ""
}

func (x *QueryEnclaveValidateEnclaveIdentityRequest) GetSignerID() string {
	if x != nil {
		return x.SignerID
	}
	return ""
}

func (x *QueryEnclaveValidateEnclaveIdentityRequest) GetProductID() string {
	if x != nil {
		return x.ProductID
	}
	return ""
}

type QueryEnclaveValidateEnclaveIdentityResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RemoteReport []byte `protobuf:"bytes,1,opt,name=remoteReport,proto3" json:"remoteReport,omitempty"`
	Status       string `protobuf:"bytes,2,opt,name=status,proto3" json:"status,omitempty"`
}

func (x *QueryEnclaveValidateEnclaveIdentityResponse) Reset() {
	*x = QueryEnclaveValidateEnclaveIdentityResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_qadena_qadena_query_proto_msgTypes[45]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryEnclaveValidateEnclaveIdentityResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryEnclaveValidateEnclaveIdentityResponse) ProtoMessage() {}

// Deprecated: Use QueryEnclaveValidateEnclaveIdentityResponse.ProtoReflect.Descriptor instead.
func (*QueryEnclaveValidateEnclaveIdentityResponse) Descriptor() ([]byte, []int) {
	return file_qadena_qadena_query_proto_rawDescGZIP(), []int{45}
}

func (x *QueryEnclaveValidateEnclaveIdentityResponse) GetRemoteReport() []byte {
	if x != nil {
		return x.RemoteReport
	}
	return nil
}

func (x *QueryEnclaveValidateEnclaveIdentityResponse) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

type QueryEnclaveSyncEnclaveRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RemoteReport []byte `protobuf:"bytes,1,opt,name=remoteReport,proto3" json:"remoteReport,omitempty"`
	EnclavePubK  string `protobuf:"bytes,2,opt,name=enclavePubK,proto3" json:"enclavePubK,omitempty"`
}

func (x *QueryEnclaveSyncEnclaveRequest) Reset() {
	*x = QueryEnclaveSyncEnclaveRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_qadena_qadena_query_proto_msgTypes[46]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryEnclaveSyncEnclaveRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryEnclaveSyncEnclaveRequest) ProtoMessage() {}

// Deprecated: Use QueryEnclaveSyncEnclaveRequest.ProtoReflect.Descriptor instead.
func (*QueryEnclaveSyncEnclaveRequest) Descriptor() ([]byte, []int) {
	return file_qadena_qadena_query_proto_rawDescGZIP(), []int{46}
}

func (x *QueryEnclaveSyncEnclaveRequest) GetRemoteReport() []byte {
	if x != nil {
		return x.RemoteReport
	}
	return nil
}

func (x *QueryEnclaveSyncEnclaveRequest) GetEnclavePubK() string {
	if x != nil {
		return x.EnclavePubK
	}
	return ""
}

type QueryEnclaveSyncEnclaveResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RemoteReport                []byte `protobuf:"bytes,1,opt,name=remoteReport,proto3" json:"remoteReport,omitempty"`
	EncEnclaveParamsEnclavePubK []byte `protobuf:"bytes,2,opt,name=encEnclaveParamsEnclavePubK,proto3" json:"encEnclaveParamsEnclavePubK,omitempty"`
}

func (x *QueryEnclaveSyncEnclaveResponse) Reset() {
	*x = QueryEnclaveSyncEnclaveResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_qadena_qadena_query_proto_msgTypes[47]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryEnclaveSyncEnclaveResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryEnclaveSyncEnclaveResponse) ProtoMessage() {}

// Deprecated: Use QueryEnclaveSyncEnclaveResponse.ProtoReflect.Descriptor instead.
func (*QueryEnclaveSyncEnclaveResponse) Descriptor() ([]byte, []int) {
	return file_qadena_qadena_query_proto_rawDescGZIP(), []int{47}
}

func (x *QueryEnclaveSyncEnclaveResponse) GetRemoteReport() []byte {
	if x != nil {
		return x.RemoteReport
	}
	return nil
}

func (x *QueryEnclaveSyncEnclaveResponse) GetEncEnclaveParamsEnclavePubK() []byte {
	if x != nil {
		return x.EncEnclaveParamsEnclavePubK
	}
	return nil
}

type QueryEnclaveSecretShareRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RemoteReport []byte `protobuf:"bytes,1,opt,name=remoteReport,proto3" json:"remoteReport,omitempty"`
	EnclavePubK  string `protobuf:"bytes,2,opt,name=enclavePubK,proto3" json:"enclavePubK,omitempty"`
	PubKID       string `protobuf:"bytes,3,opt,name=pubKID,proto3" json:"pubKID,omitempty"`
}

func (x *QueryEnclaveSecretShareRequest) Reset() {
	*x = QueryEnclaveSecretShareRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_qadena_qadena_query_proto_msgTypes[48]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryEnclaveSecretShareRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryEnclaveSecretShareRequest) ProtoMessage() {}

// Deprecated: Use QueryEnclaveSecretShareRequest.ProtoReflect.Descriptor instead.
func (*QueryEnclaveSecretShareRequest) Descriptor() ([]byte, []int) {
	return file_qadena_qadena_query_proto_rawDescGZIP(), []int{48}
}

func (x *QueryEnclaveSecretShareRequest) GetRemoteReport() []byte {
	if x != nil {
		return x.RemoteReport
	}
	return nil
}

func (x *QueryEnclaveSecretShareRequest) GetEnclavePubK() string {
	if x != nil {
		return x.EnclavePubK
	}
	return ""
}

func (x *QueryEnclaveSecretShareRequest) GetPubKID() string {
	if x != nil {
		return x.PubKID
	}
	return ""
}

type QueryEnclaveSecretShareResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RemoteReport              []byte `protobuf:"bytes,1,opt,name=remoteReport,proto3" json:"remoteReport,omitempty"`
	EncSecretShareEnclavePubK []byte `protobuf:"bytes,2,opt,name=encSecretShareEnclavePubK,proto3" json:"encSecretShareEnclavePubK,omitempty"`
}

func (x *QueryEnclaveSecretShareResponse) Reset() {
	*x = QueryEnclaveSecretShareResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_qadena_qadena_query_proto_msgTypes[49]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryEnclaveSecretShareResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryEnclaveSecretShareResponse) ProtoMessage() {}

// Deprecated: Use QueryEnclaveSecretShareResponse.ProtoReflect.Descriptor instead.
func (*QueryEnclaveSecretShareResponse) Descriptor() ([]byte, []int) {
	return file_qadena_qadena_query_proto_rawDescGZIP(), []int{49}
}

func (x *QueryEnclaveSecretShareResponse) GetRemoteReport() []byte {
	if x != nil {
		return x.RemoteReport
	}
	return nil
}

func (x *QueryEnclaveSecretShareResponse) GetEncSecretShareEnclavePubK() []byte {
	if x != nil {
		return x.EncSecretShareEnclavePubK
	}
	return nil
}

type QueryEnclaveRecoverKeyShareRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RemoteReport       []byte `protobuf:"bytes,1,opt,name=remoteReport,proto3" json:"remoteReport,omitempty"`
	NewWalletID        string `protobuf:"bytes,2,opt,name=newWalletID,proto3" json:"newWalletID,omitempty"`
	ShareWalletID      string `protobuf:"bytes,3,opt,name=shareWalletID,proto3" json:"shareWalletID,omitempty"`
	EncShareWalletPubK []byte `protobuf:"bytes,4,opt,name=encShareWalletPubK,proto3" json:"encShareWalletPubK,omitempty"`
}

func (x *QueryEnclaveRecoverKeyShareRequest) Reset() {
	*x = QueryEnclaveRecoverKeyShareRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_qadena_qadena_query_proto_msgTypes[50]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryEnclaveRecoverKeyShareRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryEnclaveRecoverKeyShareRequest) ProtoMessage() {}

// Deprecated: Use QueryEnclaveRecoverKeyShareRequest.ProtoReflect.Descriptor instead.
func (*QueryEnclaveRecoverKeyShareRequest) Descriptor() ([]byte, []int) {
	return file_qadena_qadena_query_proto_rawDescGZIP(), []int{50}
}

func (x *QueryEnclaveRecoverKeyShareRequest) GetRemoteReport() []byte {
	if x != nil {
		return x.RemoteReport
	}
	return nil
}

func (x *QueryEnclaveRecoverKeyShareRequest) GetNewWalletID() string {
	if x != nil {
		return x.NewWalletID
	}
	return ""
}

func (x *QueryEnclaveRecoverKeyShareRequest) GetShareWalletID() string {
	if x != nil {
		return x.ShareWalletID
	}
	return ""
}

func (x *QueryEnclaveRecoverKeyShareRequest) GetEncShareWalletPubK() []byte {
	if x != nil {
		return x.EncShareWalletPubK
	}
	return nil
}

type QueryEnclaveRecoverKeyShareResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RemoteReport       []byte `protobuf:"bytes,1,opt,name=remoteReport,proto3" json:"remoteReport,omitempty"`
	EncShareWalletPubK []byte `protobuf:"bytes,2,opt,name=encShareWalletPubK,proto3" json:"encShareWalletPubK,omitempty"`
}

func (x *QueryEnclaveRecoverKeyShareResponse) Reset() {
	*x = QueryEnclaveRecoverKeyShareResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_qadena_qadena_query_proto_msgTypes[51]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryEnclaveRecoverKeyShareResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryEnclaveRecoverKeyShareResponse) ProtoMessage() {}

// Deprecated: Use QueryEnclaveRecoverKeyShareResponse.ProtoReflect.Descriptor instead.
func (*QueryEnclaveRecoverKeyShareResponse) Descriptor() ([]byte, []int) {
	return file_qadena_qadena_query_proto_rawDescGZIP(), []int{51}
}

func (x *QueryEnclaveRecoverKeyShareResponse) GetRemoteReport() []byte {
	if x != nil {
		return x.RemoteReport
	}
	return nil
}

func (x *QueryEnclaveRecoverKeyShareResponse) GetEncShareWalletPubK() []byte {
	if x != nil {
		return x.EncShareWalletPubK
	}
	return nil
}

type QueryFindCredentialRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CredentialPC                        []byte `protobuf:"bytes,1,opt,name=credentialPC,proto3" json:"credentialPC,omitempty"`
	CredentialType                      string `protobuf:"bytes,2,opt,name=credentialType,proto3" json:"credentialType,omitempty"`
	SSIntervalPubKID                    string `protobuf:"bytes,3,opt,name=sSIntervalPubKID,proto3" json:"sSIntervalPubKID,omitempty"`
	EncUserCredentialPubKSSIntervalPubK []byte `protobuf:"bytes,4,opt,name=encUserCredentialPubKSSIntervalPubK,proto3" json:"encUserCredentialPubKSSIntervalPubK,omitempty"`
	EncProofPCSSIntervalPubK            []byte `protobuf:"bytes,5,opt,name=encProofPCSSIntervalPubK,proto3" json:"encProofPCSSIntervalPubK,omitempty"`
	EncCheckPCSSIntervalPubK            []byte `protobuf:"bytes,6,opt,name=encCheckPCSSIntervalPubK,proto3" json:"encCheckPCSSIntervalPubK,omitempty"`
}

func (x *QueryFindCredentialRequest) Reset() {
	*x = QueryFindCredentialRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_qadena_qadena_query_proto_msgTypes[52]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryFindCredentialRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryFindCredentialRequest) ProtoMessage() {}

// Deprecated: Use QueryFindCredentialRequest.ProtoReflect.Descriptor instead.
func (*QueryFindCredentialRequest) Descriptor() ([]byte, []int) {
	return file_qadena_qadena_query_proto_rawDescGZIP(), []int{52}
}

func (x *QueryFindCredentialRequest) GetCredentialPC() []byte {
	if x != nil {
		return x.CredentialPC
	}
	return nil
}

func (x *QueryFindCredentialRequest) GetCredentialType() string {
	if x != nil {
		return x.CredentialType
	}
	return ""
}

func (x *QueryFindCredentialRequest) GetSSIntervalPubKID() string {
	if x != nil {
		return x.SSIntervalPubKID
	}
	return ""
}

func (x *QueryFindCredentialRequest) GetEncUserCredentialPubKSSIntervalPubK() []byte {
	if x != nil {
		return x.EncUserCredentialPubKSSIntervalPubK
	}
	return nil
}

func (x *QueryFindCredentialRequest) GetEncProofPCSSIntervalPubK() []byte {
	if x != nil {
		return x.EncProofPCSSIntervalPubK
	}
	return nil
}

func (x *QueryFindCredentialRequest) GetEncCheckPCSSIntervalPubK() []byte {
	if x != nil {
		return x.EncCheckPCSSIntervalPubK
	}
	return nil
}

type QueryFindCredentialResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EncPersonalInfoUserCredentialPubK []byte `protobuf:"bytes,1,opt,name=encPersonalInfoUserCredentialPubK,proto3" json:"encPersonalInfoUserCredentialPubK,omitempty"`
	EncCredentialIDUserCredentialPubK []byte `protobuf:"bytes,2,opt,name=encCredentialIDUserCredentialPubK,proto3" json:"encCredentialIDUserCredentialPubK,omitempty"`
}

func (x *QueryFindCredentialResponse) Reset() {
	*x = QueryFindCredentialResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_qadena_qadena_query_proto_msgTypes[53]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryFindCredentialResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryFindCredentialResponse) ProtoMessage() {}

// Deprecated: Use QueryFindCredentialResponse.ProtoReflect.Descriptor instead.
func (*QueryFindCredentialResponse) Descriptor() ([]byte, []int) {
	return file_qadena_qadena_query_proto_rawDescGZIP(), []int{53}
}

func (x *QueryFindCredentialResponse) GetEncPersonalInfoUserCredentialPubK() []byte {
	if x != nil {
		return x.EncPersonalInfoUserCredentialPubK
	}
	return nil
}

func (x *QueryFindCredentialResponse) GetEncCredentialIDUserCredentialPubK() []byte {
	if x != nil {
		return x.EncCredentialIDUserCredentialPubK
	}
	return nil
}

type QueryGetEnclaveIdentityRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UniqueID string `protobuf:"bytes,1,opt,name=uniqueID,proto3" json:"uniqueID,omitempty"`
}

func (x *QueryGetEnclaveIdentityRequest) Reset() {
	*x = QueryGetEnclaveIdentityRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_qadena_qadena_query_proto_msgTypes[54]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryGetEnclaveIdentityRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryGetEnclaveIdentityRequest) ProtoMessage() {}

// Deprecated: Use QueryGetEnclaveIdentityRequest.ProtoReflect.Descriptor instead.
func (*QueryGetEnclaveIdentityRequest) Descriptor() ([]byte, []int) {
	return file_qadena_qadena_query_proto_rawDescGZIP(), []int{54}
}

func (x *QueryGetEnclaveIdentityRequest) GetUniqueID() string {
	if x != nil {
		return x.UniqueID
	}
	return ""
}

type QueryGetEnclaveIdentityResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EnclaveIdentity *EnclaveIdentity `protobuf:"bytes,1,opt,name=enclaveIdentity,proto3" json:"enclaveIdentity,omitempty"`
}

func (x *QueryGetEnclaveIdentityResponse) Reset() {
	*x = QueryGetEnclaveIdentityResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_qadena_qadena_query_proto_msgTypes[55]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryGetEnclaveIdentityResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryGetEnclaveIdentityResponse) ProtoMessage() {}

// Deprecated: Use QueryGetEnclaveIdentityResponse.ProtoReflect.Descriptor instead.
func (*QueryGetEnclaveIdentityResponse) Descriptor() ([]byte, []int) {
	return file_qadena_qadena_query_proto_rawDescGZIP(), []int{55}
}

func (x *QueryGetEnclaveIdentityResponse) GetEnclaveIdentity() *EnclaveIdentity {
	if x != nil {
		return x.EnclaveIdentity
	}
	return nil
}

type QueryAllEnclaveIdentityRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Pagination *v1beta1.PageRequest `protobuf:"bytes,1,opt,name=pagination,proto3" json:"pagination,omitempty"`
}

func (x *QueryAllEnclaveIdentityRequest) Reset() {
	*x = QueryAllEnclaveIdentityRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_qadena_qadena_query_proto_msgTypes[56]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryAllEnclaveIdentityRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryAllEnclaveIdentityRequest) ProtoMessage() {}

// Deprecated: Use QueryAllEnclaveIdentityRequest.ProtoReflect.Descriptor instead.
func (*QueryAllEnclaveIdentityRequest) Descriptor() ([]byte, []int) {
	return file_qadena_qadena_query_proto_rawDescGZIP(), []int{56}
}

func (x *QueryAllEnclaveIdentityRequest) GetPagination() *v1beta1.PageRequest {
	if x != nil {
		return x.Pagination
	}
	return nil
}

type QueryAllEnclaveIdentityResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EnclaveIdentity []*EnclaveIdentity    `protobuf:"bytes,1,rep,name=enclaveIdentity,proto3" json:"enclaveIdentity,omitempty"`
	Pagination      *v1beta1.PageResponse `protobuf:"bytes,2,opt,name=pagination,proto3" json:"pagination,omitempty"`
}

func (x *QueryAllEnclaveIdentityResponse) Reset() {
	*x = QueryAllEnclaveIdentityResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_qadena_qadena_query_proto_msgTypes[57]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryAllEnclaveIdentityResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryAllEnclaveIdentityResponse) ProtoMessage() {}

// Deprecated: Use QueryAllEnclaveIdentityResponse.ProtoReflect.Descriptor instead.
func (*QueryAllEnclaveIdentityResponse) Descriptor() ([]byte, []int) {
	return file_qadena_qadena_query_proto_rawDescGZIP(), []int{57}
}

func (x *QueryAllEnclaveIdentityResponse) GetEnclaveIdentity() []*EnclaveIdentity {
	if x != nil {
		return x.EnclaveIdentity
	}
	return nil
}

func (x *QueryAllEnclaveIdentityResponse) GetPagination() *v1beta1.PageResponse {
	if x != nil {
		return x.Pagination
	}
	return nil
}

var File_qadena_qadena_query_proto protoreflect.FileDescriptor

var file_qadena_qadena_query_proto_rawDesc = []byte{
	0x0a, 0x19, 0x71, 0x61, 0x64, 0x65, 0x6e, 0x61, 0x2f, 0x71, 0x61, 0x64, 0x65, 0x6e, 0x61, 0x2f,
	0x71, 0x75, 0x65, 0x72, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0d, 0x71, 0x61, 0x64,
	0x65, 0x6e, 0x61, 0x2e, 0x71, 0x61, 0x64, 0x65, 0x6e, 0x61, 0x1a, 0x11, 0x61, 0x6d, 0x69, 0x6e,
	0x6f, 0x2f, 0x61, 0x6d, 0x69, 0x6e, 0x6f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x14, 0x67,
	0x6f, 0x67, 0x6f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x67, 0x6f, 0x67, 0x6f, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x1a, 0x1c, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f,
	0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x1a, 0x2a, 0x63, 0x6f, 0x73, 0x6d, 0x6f, 0x73, 0x2f, 0x62, 0x61, 0x73, 0x65, 0x2f, 0x71,
	0x75, 0x65, 0x72, 0x79, 0x2f, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x2f, 0x70, 0x61, 0x67,
	0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1a, 0x71,
	0x61, 0x64, 0x65, 0x6e, 0x61, 0x2f, 0x71, 0x61, 0x64, 0x65, 0x6e, 0x61, 0x2f, 0x70, 0x61, 0x72,
	0x61, 0x6d, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1e, 0x71, 0x61, 0x64, 0x65, 0x6e,
	0x61, 0x2f, 0x71, 0x61, 0x64, 0x65, 0x6e, 0x61, 0x2f, 0x63, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74,
	0x69, 0x61, 0x6c, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1e, 0x71, 0x61, 0x64, 0x65, 0x6e,
	0x61, 0x2f, 0x71, 0x61, 0x64, 0x65, 0x6e, 0x61, 0x2f, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x5f,
	0x6b, 0x65, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1a, 0x71, 0x61, 0x64, 0x65, 0x6e,
	0x61, 0x2f, 0x71, 0x61, 0x64, 0x65, 0x6e, 0x61, 0x2f, 0x77, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x2b, 0x71, 0x61, 0x64, 0x65, 0x6e, 0x61, 0x2f, 0x71, 0x61,
	0x64, 0x65, 0x6e, 0x61, 0x2f, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x76, 0x61, 0x6c, 0x5f, 0x70, 0x75,
	0x62, 0x6c, 0x69, 0x63, 0x5f, 0x6b, 0x65, 0x79, 0x5f, 0x69, 0x5f, 0x64, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x1a, 0x1f, 0x71, 0x61, 0x64, 0x65, 0x6e, 0x61, 0x2f, 0x71, 0x61, 0x64, 0x65, 0x6e,
	0x61, 0x2f, 0x70, 0x69, 0x6f, 0x6e, 0x65, 0x65, 0x72, 0x5f, 0x6a, 0x61, 0x72, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x1a, 0x21, 0x71, 0x61, 0x64, 0x65, 0x6e, 0x61, 0x2f, 0x71, 0x61, 0x64, 0x65,
	0x6e, 0x61, 0x2f, 0x6a, 0x61, 0x72, 0x5f, 0x72, 0x65, 0x67, 0x75, 0x6c, 0x61, 0x74, 0x6f, 0x72,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x2a, 0x71, 0x61, 0x64, 0x65, 0x6e, 0x61, 0x2f, 0x71,
	0x61, 0x64, 0x65, 0x6e, 0x61, 0x2f, 0x73, 0x75, 0x73, 0x70, 0x69, 0x63, 0x69, 0x6f, 0x75, 0x73,
	0x5f, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x1a, 0x1f, 0x71, 0x61, 0x64, 0x65, 0x6e, 0x61, 0x2f, 0x71, 0x61, 0x64, 0x65, 0x6e,
	0x61, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x65, 0x63, 0x74, 0x5f, 0x6b, 0x65, 0x79, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x1a, 0x21, 0x71, 0x61, 0x64, 0x65, 0x6e, 0x61, 0x2f, 0x71, 0x61, 0x64, 0x65,
	0x6e, 0x61, 0x2f, 0x72, 0x65, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x5f, 0x73, 0x68, 0x61, 0x72, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1f, 0x71, 0x61, 0x64, 0x65, 0x6e, 0x61, 0x2f, 0x71,
	0x61, 0x64, 0x65, 0x6e, 0x61, 0x2f, 0x72, 0x65, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x5f, 0x6b, 0x65,
	0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1e, 0x63, 0x6f, 0x73, 0x6d, 0x6f, 0x73, 0x2f,
	0x62, 0x61, 0x73, 0x65, 0x2f, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x2f, 0x63, 0x6f, 0x69,
	0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x25, 0x71, 0x61, 0x64, 0x65, 0x6e, 0x61, 0x2f,
	0x71, 0x61, 0x64, 0x65, 0x6e, 0x61, 0x2f, 0x62, 0x5f, 0x70, 0x65, 0x64, 0x65, 0x72, 0x73, 0x65,
	0x6e, 0x5f, 0x63, 0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x24,
	0x71, 0x61, 0x64, 0x65, 0x6e, 0x61, 0x2f, 0x71, 0x61, 0x64, 0x65, 0x6e, 0x61, 0x2f, 0x65, 0x6e,
	0x63, 0x6c, 0x61, 0x76, 0x65, 0x5f, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x22, 0x14, 0x0a, 0x12, 0x51, 0x75, 0x65, 0x72, 0x79, 0x50, 0x61, 0x72,
	0x61, 0x6d, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x4f, 0x0a, 0x13, 0x51, 0x75,
	0x65, 0x72, 0x79, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x38, 0x0a, 0x06, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x15, 0x2e, 0x71, 0x61, 0x64, 0x65, 0x6e, 0x61, 0x2e, 0x71, 0x61, 0x64, 0x65, 0x6e,
	0x61, 0x2e, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x42, 0x09, 0xc8, 0xde, 0x1f, 0x00, 0xa8, 0xe7,
	0xb0, 0x2a, 0x01, 0x52, 0x06, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x22, 0x67, 0x0a, 0x19, 0x51,
	0x75, 0x65, 0x72, 0x79, 0x47, 0x65, 0x74, 0x43, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61,
	0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x22, 0x0a, 0x0c, 0x63, 0x72, 0x65, 0x64,
	0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c,
	0x63, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x49, 0x44, 0x12, 0x26, 0x0a, 0x0e,
	0x63, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x54, 0x79, 0x70, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x63, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c,
	0x54, 0x79, 0x70, 0x65, 0x22, 0x5d, 0x0a, 0x1a, 0x51, 0x75, 0x65, 0x72, 0x79, 0x47, 0x65, 0x74,
	0x43, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x3f, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x71, 0x61, 0x64, 0x65, 0x6e, 0x61, 0x2e,
	0x71, 0x61, 0x64, 0x65, 0x6e, 0x61, 0x2e, 0x43, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61,
	0x6c, 0x42, 0x04, 0xc8, 0xde, 0x1f, 0x00, 0x52, 0x0a, 0x63, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74,
	0x69, 0x61, 0x6c, 0x22, 0x63, 0x0a, 0x19, 0x51, 0x75, 0x65, 0x72, 0x79, 0x41, 0x6c, 0x6c, 0x43,
	0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x46, 0x0a, 0x0a, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x63, 0x6f, 0x73, 0x6d, 0x6f, 0x73, 0x2e, 0x62, 0x61,
	0x73, 0x65, 0x2e, 0x71, 0x75, 0x65, 0x72, 0x79, 0x2e, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31,
	0x2e, 0x50, 0x61, 0x67, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x0a, 0x70, 0x61,
	0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0xa6, 0x01, 0x0a, 0x1a, 0x51, 0x75, 0x65,
	0x72, 0x79, 0x41, 0x6c, 0x6c, 0x43, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3f, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x64, 0x65,
	0x6e, 0x74, 0x69, 0x61, 0x6c, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x71, 0x61,
	0x64, 0x65, 0x6e, 0x61, 0x2e, 0x71, 0x61, 0x64, 0x65, 0x6e, 0x61, 0x2e, 0x43, 0x72, 0x65, 0x64,
	0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x42, 0x04, 0xc8, 0xde, 0x1f, 0x00, 0x52, 0x0a, 0x63, 0x72,
	0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x12, 0x47, 0x0a, 0x0a, 0x70, 0x61, 0x67, 0x69,
	0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x63,
	0x6f, 0x73, 0x6d, 0x6f, 0x73, 0x2e, 0x62, 0x61, 0x73, 0x65, 0x2e, 0x71, 0x75, 0x65, 0x72, 0x79,
	0x2e, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x2e, 0x50, 0x61, 0x67, 0x65, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x0a, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x22, 0x4e, 0x0a, 0x18, 0x51, 0x75, 0x65, 0x72, 0x79, 0x47, 0x65, 0x74, 0x50, 0x75, 0x62,
	0x6c, 0x69, 0x63, 0x4b, 0x65, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a,
	0x06, 0x70, 0x75, 0x62, 0x4b, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x70,
	0x75, 0x62, 0x4b, 0x49, 0x44, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x75, 0x62, 0x4b, 0x54, 0x79, 0x70,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x75, 0x62, 0x4b, 0x54, 0x79, 0x70,
	0x65, 0x22, 0x59, 0x0a, 0x19, 0x51, 0x75, 0x65, 0x72, 0x79, 0x47, 0x65, 0x74, 0x50, 0x75, 0x62,
	0x6c, 0x69, 0x63, 0x4b, 0x65, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3c,
	0x0a, 0x09, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x4b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x18, 0x2e, 0x71, 0x61, 0x64, 0x65, 0x6e, 0x61, 0x2e, 0x71, 0x61, 0x64, 0x65, 0x6e,
	0x61, 0x2e, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x4b, 0x65, 0x79, 0x42, 0x04, 0xc8, 0xde, 0x1f,
	0x00, 0x52, 0x09, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x4b, 0x65, 0x79, 0x22, 0x62, 0x0a, 0x18,
	0x51, 0x75, 0x65, 0x72, 0x79, 0x41, 0x6c, 0x6c, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x4b, 0x65,
	0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x46, 0x0a, 0x0a, 0x70, 0x61, 0x67, 0x69,
	0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x63,
	0x6f, 0x73, 0x6d, 0x6f, 0x73, 0x2e, 0x62, 0x61, 0x73, 0x65, 0x2e, 0x71, 0x75, 0x65, 0x72, 0x79,
	0x2e, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x2e, 0x50, 0x61, 0x67, 0x65, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x52, 0x0a, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x22, 0xa2, 0x01, 0x0a, 0x19, 0x51, 0x75, 0x65, 0x72, 0x79, 0x41, 0x6c, 0x6c, 0x50, 0x75, 0x62,
	0x6c, 0x69, 0x63, 0x4b, 0x65, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3c,
	0x0a, 0x09, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x4b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x18, 0x2e, 0x71, 0x61, 0x64, 0x65, 0x6e, 0x61, 0x2e, 0x71, 0x61, 0x64, 0x65, 0x6e,
	0x61, 0x2e, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x4b, 0x65, 0x79, 0x42, 0x04, 0xc8, 0xde, 0x1f,
	0x00, 0x52, 0x09, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x4b, 0x65, 0x79, 0x12, 0x47, 0x0a, 0x0a,
	0x70, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x27, 0x2e, 0x63, 0x6f, 0x73, 0x6d, 0x6f, 0x73, 0x2e, 0x62, 0x61, 0x73, 0x65, 0x2e, 0x71,
	0x75, 0x65, 0x72, 0x79, 0x2e, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x2e, 0x50, 0x61, 0x67,
	0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x0a, 0x70, 0x61, 0x67, 0x69, 0x6e,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x33, 0x0a, 0x15, 0x51, 0x75, 0x65, 0x72, 0x79, 0x47, 0x65,
	0x74, 0x57, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1a,
	0x0a, 0x08, 0x77, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x77, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x49, 0x44, 0x22, 0x4d, 0x0a, 0x16, 0x51, 0x75,
	0x65, 0x72, 0x79, 0x47, 0x65, 0x74, 0x57, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x33, 0x0a, 0x06, 0x77, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x71, 0x61, 0x64, 0x65, 0x6e, 0x61, 0x2e, 0x71, 0x61,
	0x64, 0x65, 0x6e, 0x61, 0x2e, 0x57, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x42, 0x04, 0xc8, 0xde, 0x1f,
	0x00, 0x52, 0x06, 0x77, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x22, 0x5f, 0x0a, 0x15, 0x51, 0x75, 0x65,
	0x72, 0x79, 0x41, 0x6c, 0x6c, 0x57, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x46, 0x0a, 0x0a, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x63, 0x6f, 0x73, 0x6d, 0x6f, 0x73, 0x2e,
	0x62, 0x61, 0x73, 0x65, 0x2e, 0x71, 0x75, 0x65, 0x72, 0x79, 0x2e, 0x76, 0x31, 0x62, 0x65, 0x74,
	0x61, 0x31, 0x2e, 0x50, 0x61, 0x67, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x0a,
	0x70, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x96, 0x01, 0x0a, 0x16, 0x51,
	0x75, 0x65, 0x72, 0x79, 0x41, 0x6c, 0x6c, 0x57, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x33, 0x0a, 0x06, 0x77, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x71, 0x61, 0x64, 0x65, 0x6e, 0x61, 0x2e, 0x71,
	0x61, 0x64, 0x65, 0x6e, 0x61, 0x2e, 0x57, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x42, 0x04, 0xc8, 0xde,
	0x1f, 0x00, 0x52, 0x06, 0x77, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x12, 0x47, 0x0a, 0x0a, 0x70, 0x61,
	0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x27,
	0x2e, 0x63, 0x6f, 0x73, 0x6d, 0x6f, 0x73, 0x2e, 0x62, 0x61, 0x73, 0x65, 0x2e, 0x71, 0x75, 0x65,
	0x72, 0x79, 0x2e, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x2e, 0x50, 0x61, 0x67, 0x65, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x0a, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x22, 0x58, 0x0a, 0x22, 0x51, 0x75, 0x65, 0x72, 0x79, 0x47, 0x65, 0x74, 0x49,
	0x6e, 0x74, 0x65, 0x72, 0x76, 0x61, 0x6c, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x4b, 0x65, 0x79,
	0x49, 0x44, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x6e, 0x6f, 0x64,
	0x65, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6e, 0x6f, 0x64, 0x65, 0x49,
	0x44, 0x12, 0x1a, 0x0a, 0x08, 0x6e, 0x6f, 0x64, 0x65, 0x54, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x6e, 0x6f, 0x64, 0x65, 0x54, 0x79, 0x70, 0x65, 0x22, 0x81, 0x01,
	0x0a, 0x23, 0x51, 0x75, 0x65, 0x72, 0x79, 0x47, 0x65, 0x74, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x76,
	0x61, 0x6c, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x4b, 0x65, 0x79, 0x49, 0x44, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x5a, 0x0a, 0x13, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x76, 0x61,
	0x6c, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x4b, 0x65, 0x79, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x22, 0x2e, 0x71, 0x61, 0x64, 0x65, 0x6e, 0x61, 0x2e, 0x71, 0x61, 0x64, 0x65,
	0x6e, 0x61, 0x2e, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x76, 0x61, 0x6c, 0x50, 0x75, 0x62, 0x6c, 0x69,
	0x63, 0x4b, 0x65, 0x79, 0x49, 0x44, 0x42, 0x04, 0xc8, 0xde, 0x1f, 0x00, 0x52, 0x13, 0x69, 0x6e,
	0x74, 0x65, 0x72, 0x76, 0x61, 0x6c, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x4b, 0x65, 0x79, 0x49,
	0x44, 0x22, 0x6c, 0x0a, 0x22, 0x51, 0x75, 0x65, 0x72, 0x79, 0x41, 0x6c, 0x6c, 0x49, 0x6e, 0x74,
	0x65, 0x72, 0x76, 0x61, 0x6c, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x4b, 0x65, 0x79, 0x49, 0x44,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x46, 0x0a, 0x0a, 0x70, 0x61, 0x67, 0x69, 0x6e,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x63, 0x6f,
	0x73, 0x6d, 0x6f, 0x73, 0x2e, 0x62, 0x61, 0x73, 0x65, 0x2e, 0x71, 0x75, 0x65, 0x72, 0x79, 0x2e,
	0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x2e, 0x50, 0x61, 0x67, 0x65, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x52, 0x0a, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22,
	0xca, 0x01, 0x0a, 0x23, 0x51, 0x75, 0x65, 0x72, 0x79, 0x41, 0x6c, 0x6c, 0x49, 0x6e, 0x74, 0x65,
	0x72, 0x76, 0x61, 0x6c, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x4b, 0x65, 0x79, 0x49, 0x44, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x5a, 0x0a, 0x13, 0x69, 0x6e, 0x74, 0x65, 0x72,
	0x76, 0x61, 0x6c, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x4b, 0x65, 0x79, 0x49, 0x44, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x71, 0x61, 0x64, 0x65, 0x6e, 0x61, 0x2e, 0x71, 0x61,
	0x64, 0x65, 0x6e, 0x61, 0x2e, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x76, 0x61, 0x6c, 0x50, 0x75, 0x62,
	0x6c, 0x69, 0x63, 0x4b, 0x65, 0x79, 0x49, 0x44, 0x42, 0x04, 0xc8, 0xde, 0x1f, 0x00, 0x52, 0x13,
	0x69, 0x6e, 0x74, 0x65, 0x72, 0x76, 0x61, 0x6c, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x4b, 0x65,
	0x79, 0x49, 0x44, 0x12, 0x47, 0x0a, 0x0a, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x63, 0x6f, 0x73, 0x6d, 0x6f, 0x73,
	0x2e, 0x62, 0x61, 0x73, 0x65, 0x2e, 0x71, 0x75, 0x65, 0x72, 0x79, 0x2e, 0x76, 0x31, 0x62, 0x65,
	0x74, 0x61, 0x31, 0x2e, 0x50, 0x61, 0x67, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x52, 0x0a, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x39, 0x0a, 0x19,
	0x51, 0x75, 0x65, 0x72, 0x79, 0x47, 0x65, 0x74, 0x50, 0x69, 0x6f, 0x6e, 0x65, 0x65, 0x72, 0x4a,
	0x61, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x70, 0x69, 0x6f,
	0x6e, 0x65, 0x65, 0x72, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x70, 0x69,
	0x6f, 0x6e, 0x65, 0x65, 0x72, 0x49, 0x44, 0x22, 0x5d, 0x0a, 0x1a, 0x51, 0x75, 0x65, 0x72, 0x79,
	0x47, 0x65, 0x74, 0x50, 0x69, 0x6f, 0x6e, 0x65, 0x65, 0x72, 0x4a, 0x61, 0x72, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3f, 0x0a, 0x0a, 0x70, 0x69, 0x6f, 0x6e, 0x65, 0x65, 0x72,
	0x4a, 0x61, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x71, 0x61, 0x64, 0x65,
	0x6e, 0x61, 0x2e, 0x71, 0x61, 0x64, 0x65, 0x6e, 0x61, 0x2e, 0x50, 0x69, 0x6f, 0x6e, 0x65, 0x65,
	0x72, 0x4a, 0x61, 0x72, 0x42, 0x04, 0xc8, 0xde, 0x1f, 0x00, 0x52, 0x0a, 0x70, 0x69, 0x6f, 0x6e,
	0x65, 0x65, 0x72, 0x4a, 0x61, 0x72, 0x22, 0x63, 0x0a, 0x19, 0x51, 0x75, 0x65, 0x72, 0x79, 0x41,
	0x6c, 0x6c, 0x50, 0x69, 0x6f, 0x6e, 0x65, 0x65, 0x72, 0x4a, 0x61, 0x72, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x46, 0x0a, 0x0a, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x63, 0x6f, 0x73, 0x6d, 0x6f, 0x73,
	0x2e, 0x62, 0x61, 0x73, 0x65, 0x2e, 0x71, 0x75, 0x65, 0x72, 0x79, 0x2e, 0x76, 0x31, 0x62, 0x65,
	0x74, 0x61, 0x31, 0x2e, 0x50, 0x61, 0x67, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52,
	0x0a, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0xa6, 0x01, 0x0a, 0x1a,
	0x51, 0x75, 0x65, 0x72, 0x79, 0x41, 0x6c, 0x6c, 0x50, 0x69, 0x6f, 0x6e, 0x65, 0x65, 0x72, 0x4a,
	0x61, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3f, 0x0a, 0x0a, 0x70, 0x69,
	0x6f, 0x6e, 0x65, 0x65, 0x72, 0x4a, 0x61, 0x72, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x19,
	0x2e, 0x71, 0x61, 0x64, 0x65, 0x6e, 0x61, 0x2e, 0x71, 0x61, 0x64, 0x65, 0x6e, 0x61, 0x2e, 0x50,
	0x69, 0x6f, 0x6e, 0x65, 0x65, 0x72, 0x4a, 0x61, 0x72, 0x42, 0x04, 0xc8, 0xde, 0x1f, 0x00, 0x52,
	0x0a, 0x70, 0x69, 0x6f, 0x6e, 0x65, 0x65, 0x72, 0x4a, 0x61, 0x72, 0x12, 0x47, 0x0a, 0x0a, 0x70,
	0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x27, 0x2e, 0x63, 0x6f, 0x73, 0x6d, 0x6f, 0x73, 0x2e, 0x62, 0x61, 0x73, 0x65, 0x2e, 0x71, 0x75,
	0x65, 0x72, 0x79, 0x2e, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x2e, 0x50, 0x61, 0x67, 0x65,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x0a, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x22, 0x33, 0x0a, 0x1b, 0x51, 0x75, 0x65, 0x72, 0x79, 0x47, 0x65, 0x74,
	0x4a, 0x61, 0x72, 0x52, 0x65, 0x67, 0x75, 0x6c, 0x61, 0x74, 0x6f, 0x72, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x6a, 0x61, 0x72, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x6a, 0x61, 0x72, 0x49, 0x44, 0x22, 0x65, 0x0a, 0x1c, 0x51, 0x75, 0x65,
	0x72, 0x79, 0x47, 0x65, 0x74, 0x4a, 0x61, 0x72, 0x52, 0x65, 0x67, 0x75, 0x6c, 0x61, 0x74, 0x6f,
	0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x45, 0x0a, 0x0c, 0x6a, 0x61, 0x72,
	0x52, 0x65, 0x67, 0x75, 0x6c, 0x61, 0x74, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1b, 0x2e, 0x71, 0x61, 0x64, 0x65, 0x6e, 0x61, 0x2e, 0x71, 0x61, 0x64, 0x65, 0x6e, 0x61, 0x2e,
	0x4a, 0x61, 0x72, 0x52, 0x65, 0x67, 0x75, 0x6c, 0x61, 0x74, 0x6f, 0x72, 0x42, 0x04, 0xc8, 0xde,
	0x1f, 0x00, 0x52, 0x0c, 0x6a, 0x61, 0x72, 0x52, 0x65, 0x67, 0x75, 0x6c, 0x61, 0x74, 0x6f, 0x72,
	0x22, 0x65, 0x0a, 0x1b, 0x51, 0x75, 0x65, 0x72, 0x79, 0x41, 0x6c, 0x6c, 0x4a, 0x61, 0x72, 0x52,
	0x65, 0x67, 0x75, 0x6c, 0x61, 0x74, 0x6f, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x46, 0x0a, 0x0a, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x63, 0x6f, 0x73, 0x6d, 0x6f, 0x73, 0x2e, 0x62, 0x61, 0x73,
	0x65, 0x2e, 0x71, 0x75, 0x65, 0x72, 0x79, 0x2e, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x2e,
	0x50, 0x61, 0x67, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x0a, 0x70, 0x61, 0x67,
	0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0xae, 0x01, 0x0a, 0x1c, 0x51, 0x75, 0x65, 0x72,
	0x79, 0x41, 0x6c, 0x6c, 0x4a, 0x61, 0x72, 0x52, 0x65, 0x67, 0x75, 0x6c, 0x61, 0x74, 0x6f, 0x72,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x45, 0x0a, 0x0c, 0x6a, 0x61, 0x72, 0x52,
	0x65, 0x67, 0x75, 0x6c, 0x61, 0x74, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1b,
	0x2e, 0x71, 0x61, 0x64, 0x65, 0x6e, 0x61, 0x2e, 0x71, 0x61, 0x64, 0x65, 0x6e, 0x61, 0x2e, 0x4a,
	0x61, 0x72, 0x52, 0x65, 0x67, 0x75, 0x6c, 0x61, 0x74, 0x6f, 0x72, 0x42, 0x04, 0xc8, 0xde, 0x1f,
	0x00, 0x52, 0x0c, 0x6a, 0x61, 0x72, 0x52, 0x65, 0x67, 0x75, 0x6c, 0x61, 0x74, 0x6f, 0x72, 0x12,
	0x47, 0x0a, 0x0a, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x63, 0x6f, 0x73, 0x6d, 0x6f, 0x73, 0x2e, 0x62, 0x61, 0x73,
	0x65, 0x2e, 0x71, 0x75, 0x65, 0x72, 0x79, 0x2e, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x2e,
	0x50, 0x61, 0x67, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x0a, 0x70, 0x61,
	0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x36, 0x0a, 0x24, 0x51, 0x75, 0x65, 0x72,
	0x79, 0x47, 0x65, 0x74, 0x53, 0x75, 0x73, 0x70, 0x69, 0x63, 0x69, 0x6f, 0x75, 0x73, 0x54, 0x72,
	0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x02, 0x69, 0x64,
	0x22, 0x89, 0x01, 0x0a, 0x25, 0x51, 0x75, 0x65, 0x72, 0x79, 0x47, 0x65, 0x74, 0x53, 0x75, 0x73,
	0x70, 0x69, 0x63, 0x69, 0x6f, 0x75, 0x73, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x60, 0x0a, 0x15, 0x53, 0x75,
	0x73, 0x70, 0x69, 0x63, 0x69, 0x6f, 0x75, 0x73, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x71, 0x61, 0x64, 0x65,
	0x6e, 0x61, 0x2e, 0x71, 0x61, 0x64, 0x65, 0x6e, 0x61, 0x2e, 0x53, 0x75, 0x73, 0x70, 0x69, 0x63,
	0x69, 0x6f, 0x75, 0x73, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x42,
	0x04, 0xc8, 0xde, 0x1f, 0x00, 0x52, 0x15, 0x53, 0x75, 0x73, 0x70, 0x69, 0x63, 0x69, 0x6f, 0x75,
	0x73, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x6e, 0x0a, 0x24,
	0x51, 0x75, 0x65, 0x72, 0x79, 0x41, 0x6c, 0x6c, 0x53, 0x75, 0x73, 0x70, 0x69, 0x63, 0x69, 0x6f,
	0x75, 0x73, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x46, 0x0a, 0x0a, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x63, 0x6f, 0x73, 0x6d, 0x6f,
	0x73, 0x2e, 0x62, 0x61, 0x73, 0x65, 0x2e, 0x71, 0x75, 0x65, 0x72, 0x79, 0x2e, 0x76, 0x31, 0x62,
	0x65, 0x74, 0x61, 0x31, 0x2e, 0x50, 0x61, 0x67, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x52, 0x0a, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0xd2, 0x01, 0x0a,
	0x25, 0x51, 0x75, 0x65, 0x72, 0x79, 0x41, 0x6c, 0x6c, 0x53, 0x75, 0x73, 0x70, 0x69, 0x63, 0x69,
	0x6f, 0x75, 0x73, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x60, 0x0a, 0x15, 0x53, 0x75, 0x73, 0x70, 0x69, 0x63,
	0x69, 0x6f, 0x75, 0x73, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x71, 0x61, 0x64, 0x65, 0x6e, 0x61, 0x2e, 0x71,
	0x61, 0x64, 0x65, 0x6e, 0x61, 0x2e, 0x53, 0x75, 0x73, 0x70, 0x69, 0x63, 0x69, 0x6f, 0x75, 0x73,
	0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x42, 0x04, 0xc8, 0xde, 0x1f,
	0x00, 0x52, 0x15, 0x53, 0x75, 0x73, 0x70, 0x69, 0x63, 0x69, 0x6f, 0x75, 0x73, 0x54, 0x72, 0x61,
	0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x47, 0x0a, 0x0a, 0x70, 0x61, 0x67, 0x69,
	0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x63,
	0x6f, 0x73, 0x6d, 0x6f, 0x73, 0x2e, 0x62, 0x61, 0x73, 0x65, 0x2e, 0x71, 0x75, 0x65, 0x72, 0x79,
	0x2e, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x2e, 0x50, 0x61, 0x67, 0x65, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x0a, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x22, 0x37, 0x0a, 0x19, 0x51, 0x75, 0x65, 0x72, 0x79, 0x47, 0x65, 0x74, 0x50, 0x72, 0x6f,
	0x74, 0x65, 0x63, 0x74, 0x4b, 0x65, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1a,
	0x0a, 0x08, 0x77, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x77, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x49, 0x44, 0x22, 0x5d, 0x0a, 0x1a, 0x51, 0x75,
	0x65, 0x72, 0x79, 0x47, 0x65, 0x74, 0x50, 0x72, 0x6f, 0x74, 0x65, 0x63, 0x74, 0x4b, 0x65, 0x79,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3f, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x74,
	0x65, 0x63, 0x74, 0x4b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x71,
	0x61, 0x64, 0x65, 0x6e, 0x61, 0x2e, 0x71, 0x61, 0x64, 0x65, 0x6e, 0x61, 0x2e, 0x50, 0x72, 0x6f,
	0x74, 0x65, 0x63, 0x74, 0x4b, 0x65, 0x79, 0x42, 0x04, 0xc8, 0xde, 0x1f, 0x00, 0x52, 0x0a, 0x70,
	0x72, 0x6f, 0x74, 0x65, 0x63, 0x74, 0x4b, 0x65, 0x79, 0x22, 0x87, 0x01, 0x0a, 0x19, 0x51, 0x75,
	0x65, 0x72, 0x79, 0x41, 0x6c, 0x6c, 0x50, 0x72, 0x6f, 0x74, 0x65, 0x63, 0x74, 0x4b, 0x65, 0x79,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x46, 0x0a, 0x0a, 0x70, 0x61, 0x67, 0x69, 0x6e,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x63, 0x6f,
	0x73, 0x6d, 0x6f, 0x73, 0x2e, 0x62, 0x61, 0x73, 0x65, 0x2e, 0x71, 0x75, 0x65, 0x72, 0x79, 0x2e,
	0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x2e, 0x50, 0x61, 0x67, 0x65, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x52, 0x0a, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12,
	0x22, 0x0a, 0x0c, 0x63, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x49, 0x44, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x63, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61,
	0x6c, 0x49, 0x44, 0x22, 0xa6, 0x01, 0x0a, 0x1a, 0x51, 0x75, 0x65, 0x72, 0x79, 0x41, 0x6c, 0x6c,
	0x50, 0x72, 0x6f, 0x74, 0x65, 0x63, 0x74, 0x4b, 0x65, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x3f, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x74, 0x65, 0x63, 0x74, 0x4b, 0x65, 0x79,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x71, 0x61, 0x64, 0x65, 0x6e, 0x61, 0x2e,
	0x71, 0x61, 0x64, 0x65, 0x6e, 0x61, 0x2e, 0x50, 0x72, 0x6f, 0x74, 0x65, 0x63, 0x74, 0x4b, 0x65,
	0x79, 0x42, 0x04, 0xc8, 0xde, 0x1f, 0x00, 0x52, 0x0a, 0x70, 0x72, 0x6f, 0x74, 0x65, 0x63, 0x74,
	0x4b, 0x65, 0x79, 0x12, 0x47, 0x0a, 0x0a, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x63, 0x6f, 0x73, 0x6d, 0x6f, 0x73,
	0x2e, 0x62, 0x61, 0x73, 0x65, 0x2e, 0x71, 0x75, 0x65, 0x72, 0x79, 0x2e, 0x76, 0x31, 0x62, 0x65,
	0x74, 0x61, 0x31, 0x2e, 0x50, 0x61, 0x67, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x52, 0x0a, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x37, 0x0a, 0x19,
	0x51, 0x75, 0x65, 0x72, 0x79, 0x47, 0x65, 0x74, 0x52, 0x65, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x4b,
	0x65, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x77, 0x61, 0x6c,
	0x6c, 0x65, 0x74, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x77, 0x61, 0x6c,
	0x6c, 0x65, 0x74, 0x49, 0x44, 0x22, 0x5d, 0x0a, 0x1a, 0x51, 0x75, 0x65, 0x72, 0x79, 0x47, 0x65,
	0x74, 0x52, 0x65, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x4b, 0x65, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x3f, 0x0a, 0x0a, 0x72, 0x65, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x4b, 0x65,
	0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x71, 0x61, 0x64, 0x65, 0x6e, 0x61,
	0x2e, 0x71, 0x61, 0x64, 0x65, 0x6e, 0x61, 0x2e, 0x52, 0x65, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x4b,
	0x65, 0x79, 0x42, 0x04, 0xc8, 0xde, 0x1f, 0x00, 0x52, 0x0a, 0x72, 0x65, 0x63, 0x6f, 0x76, 0x65,
	0x72, 0x4b, 0x65, 0x79, 0x22, 0x87, 0x01, 0x0a, 0x19, 0x51, 0x75, 0x65, 0x72, 0x79, 0x41, 0x6c,
	0x6c, 0x52, 0x65, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x4b, 0x65, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x46, 0x0a, 0x0a, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x63, 0x6f, 0x73, 0x6d, 0x6f, 0x73, 0x2e,
	0x62, 0x61, 0x73, 0x65, 0x2e, 0x71, 0x75, 0x65, 0x72, 0x79, 0x2e, 0x76, 0x31, 0x62, 0x65, 0x74,
	0x61, 0x31, 0x2e, 0x50, 0x61, 0x67, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x0a,
	0x70, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x22, 0x0a, 0x0c, 0x63, 0x72,
	0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0c, 0x63, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x49, 0x44, 0x22, 0xa6,
	0x01, 0x0a, 0x1a, 0x51, 0x75, 0x65, 0x72, 0x79, 0x41, 0x6c, 0x6c, 0x52, 0x65, 0x63, 0x6f, 0x76,
	0x65, 0x72, 0x4b, 0x65, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3f, 0x0a,
	0x0a, 0x72, 0x65, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x4b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x19, 0x2e, 0x71, 0x61, 0x64, 0x65, 0x6e, 0x61, 0x2e, 0x71, 0x61, 0x64, 0x65, 0x6e,
	0x61, 0x2e, 0x52, 0x65, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x4b, 0x65, 0x79, 0x42, 0x04, 0xc8, 0xde,
	0x1f, 0x00, 0x52, 0x0a, 0x72, 0x65, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x4b, 0x65, 0x79, 0x12, 0x47,
	0x0a, 0x0a, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x27, 0x2e, 0x63, 0x6f, 0x73, 0x6d, 0x6f, 0x73, 0x2e, 0x62, 0x61, 0x73, 0x65,
	0x2e, 0x71, 0x75, 0x65, 0x72, 0x79, 0x2e, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x2e, 0x50,
	0x61, 0x67, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x0a, 0x70, 0x61, 0x67,
	0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x16, 0x0a, 0x14, 0x51, 0x75, 0x65, 0x72, 0x79,
	0x54, 0x72, 0x65, 0x61, 0x73, 0x75, 0x72, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22,
	0xa9, 0x01, 0x0a, 0x15, 0x51, 0x75, 0x65, 0x72, 0x79, 0x54, 0x72, 0x65, 0x61, 0x73, 0x75, 0x72,
	0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x43, 0x0a, 0x0c, 0x74, 0x6f, 0x74,
	0x61, 0x6c, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x19, 0x2e, 0x63, 0x6f, 0x73, 0x6d, 0x6f, 0x73, 0x2e, 0x62, 0x61, 0x73, 0x65, 0x2e, 0x76, 0x31,
	0x62, 0x65, 0x74, 0x61, 0x31, 0x2e, 0x43, 0x6f, 0x69, 0x6e, 0x42, 0x04, 0xc8, 0xde, 0x1f, 0x00,
	0x52, 0x0c, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x12, 0x4b,
	0x0a, 0x10, 0x65, 0x6e, 0x63, 0x72, 0x79, 0x70, 0x74, 0x65, 0x64, 0x42, 0x61, 0x6c, 0x61, 0x6e,
	0x63, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x63, 0x6f, 0x73, 0x6d, 0x6f,
	0x73, 0x2e, 0x62, 0x61, 0x73, 0x65, 0x2e, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x2e, 0x43,
	0x6f, 0x69, 0x6e, 0x42, 0x04, 0xc8, 0xde, 0x1f, 0x00, 0x52, 0x10, 0x65, 0x6e, 0x63, 0x72, 0x79,
	0x70, 0x74, 0x65, 0x64, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x22, 0x29, 0x0a, 0x13, 0x51,
	0x75, 0x65, 0x72, 0x79, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x72, 0x0a, 0x14, 0x51, 0x75, 0x65, 0x72, 0x79, 0x41,
	0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2e,
	0x0a, 0x12, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x42, 0x61, 0x6c,
	0x61, 0x6e, 0x63, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x12, 0x74, 0x72, 0x61, 0x6e,
	0x73, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x12, 0x2a,
	0x0a, 0x10, 0x65, 0x6e, 0x63, 0x72, 0x79, 0x70, 0x74, 0x65, 0x64, 0x42, 0x61, 0x6c, 0x61, 0x6e,
	0x63, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x65, 0x6e, 0x63, 0x72, 0x79, 0x70,
	0x74, 0x65, 0x64, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x22, 0x18, 0x0a, 0x16, 0x51, 0x75,
	0x65, 0x72, 0x79, 0x49, 0x6e, 0x63, 0x65, 0x6e, 0x74, 0x69, 0x76, 0x65, 0x73, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x22, 0xc5, 0x03, 0x0a, 0x17, 0x51, 0x75, 0x65, 0x72, 0x79, 0x49, 0x6e,
	0x63, 0x65, 0x6e, 0x74, 0x69, 0x76, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x55, 0x0a, 0x15, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x57, 0x61, 0x6c, 0x6c, 0x65, 0x74,
	0x49, 0x6e, 0x63, 0x65, 0x6e, 0x74, 0x69, 0x76, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x19, 0x2e, 0x63, 0x6f, 0x73, 0x6d, 0x6f, 0x73, 0x2e, 0x62, 0x61, 0x73, 0x65, 0x2e, 0x76, 0x31,
	0x62, 0x65, 0x74, 0x61, 0x31, 0x2e, 0x43, 0x6f, 0x69, 0x6e, 0x42, 0x04, 0xc8, 0xde, 0x1f, 0x00,
	0x52, 0x15, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x57, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x49, 0x6e,
	0x63, 0x65, 0x6e, 0x74, 0x69, 0x76, 0x65, 0x12, 0x67, 0x0a, 0x1e, 0x63, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x45, 0x70, 0x68, 0x65, 0x6d, 0x65, 0x72, 0x61, 0x6c, 0x57, 0x61, 0x6c, 0x6c, 0x65, 0x74,
	0x49, 0x6e, 0x63, 0x65, 0x6e, 0x74, 0x69, 0x76, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x19, 0x2e, 0x63, 0x6f, 0x73, 0x6d, 0x6f, 0x73, 0x2e, 0x62, 0x61, 0x73, 0x65, 0x2e, 0x76, 0x31,
	0x62, 0x65, 0x74, 0x61, 0x31, 0x2e, 0x43, 0x6f, 0x69, 0x6e, 0x42, 0x04, 0xc8, 0xde, 0x1f, 0x00,
	0x52, 0x1e, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x45, 0x70, 0x68, 0x65, 0x6d, 0x65, 0x72, 0x61,
	0x6c, 0x57, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x49, 0x6e, 0x63, 0x65, 0x6e, 0x74, 0x69, 0x76, 0x65,
	0x12, 0x6b, 0x0a, 0x20, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x57, 0x61, 0x6c, 0x6c, 0x65, 0x74,
	0x54, 0x72, 0x61, 0x6e, 0x73, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x49, 0x6e, 0x63, 0x65, 0x6e,
	0x74, 0x69, 0x76, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x63, 0x6f, 0x73,
	0x6d, 0x6f, 0x73, 0x2e, 0x62, 0x61, 0x73, 0x65, 0x2e, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31,
	0x2e, 0x43, 0x6f, 0x69, 0x6e, 0x42, 0x04, 0xc8, 0xde, 0x1f, 0x00, 0x52, 0x20, 0x63, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x57, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x70, 0x61,
	0x72, 0x65, 0x6e, 0x74, 0x49, 0x6e, 0x63, 0x65, 0x6e, 0x74, 0x69, 0x76, 0x65, 0x12, 0x7d, 0x0a,
	0x29, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x45, 0x70, 0x68, 0x65, 0x6d, 0x65, 0x72, 0x61, 0x6c,
	0x57, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x70, 0x61, 0x72, 0x65, 0x6e,
	0x74, 0x49, 0x6e, 0x63, 0x65, 0x6e, 0x74, 0x69, 0x76, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x19, 0x2e, 0x63, 0x6f, 0x73, 0x6d, 0x6f, 0x73, 0x2e, 0x62, 0x61, 0x73, 0x65, 0x2e, 0x76,
	0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x2e, 0x43, 0x6f, 0x69, 0x6e, 0x42, 0x04, 0xc8, 0xde, 0x1f,
	0x00, 0x52, 0x29, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x45, 0x70, 0x68, 0x65, 0x6d, 0x65, 0x72,
	0x61, 0x6c, 0x57, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x70, 0x61, 0x72,
	0x65, 0x6e, 0x74, 0x49, 0x6e, 0x63, 0x65, 0x6e, 0x74, 0x69, 0x76, 0x65, 0x22, 0xa6, 0x01, 0x0a,
	0x2a, 0x51, 0x75, 0x65, 0x72, 0x79, 0x45, 0x6e, 0x63, 0x6c, 0x61, 0x76, 0x65, 0x56, 0x61, 0x6c,
	0x69, 0x64, 0x61, 0x74, 0x65, 0x45, 0x6e, 0x63, 0x6c, 0x61, 0x76, 0x65, 0x49, 0x64, 0x65, 0x6e,
	0x74, 0x69, 0x74, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x22, 0x0a, 0x0c, 0x72,
	0x65, 0x6d, 0x6f, 0x74, 0x65, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0c, 0x52, 0x0c, 0x72, 0x65, 0x6d, 0x6f, 0x74, 0x65, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x12,
	0x1a, 0x0a, 0x08, 0x75, 0x6e, 0x69, 0x71, 0x75, 0x65, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x75, 0x6e, 0x69, 0x71, 0x75, 0x65, 0x49, 0x44, 0x12, 0x1a, 0x0a, 0x08, 0x73,
	0x69, 0x67, 0x6e, 0x65, 0x72, 0x49, 0x44, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x73,
	0x69, 0x67, 0x6e, 0x65, 0x72, 0x49, 0x44, 0x12, 0x1c, 0x0a, 0x09, 0x70, 0x72, 0x6f, 0x64, 0x75,
	0x63, 0x74, 0x49, 0x44, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x64,
	0x75, 0x63, 0x74, 0x49, 0x44, 0x22, 0x69, 0x0a, 0x2b, 0x51, 0x75, 0x65, 0x72, 0x79, 0x45, 0x6e,
	0x63, 0x6c, 0x61, 0x76, 0x65, 0x56, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x45, 0x6e, 0x63,
	0x6c, 0x61, 0x76, 0x65, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x22, 0x0a, 0x0c, 0x72, 0x65, 0x6d, 0x6f, 0x74, 0x65, 0x52, 0x65,
	0x70, 0x6f, 0x72, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0c, 0x72, 0x65, 0x6d, 0x6f,
	0x74, 0x65, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x22, 0x66, 0x0a, 0x1e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x45, 0x6e, 0x63, 0x6c, 0x61, 0x76, 0x65,
	0x53, 0x79, 0x6e, 0x63, 0x45, 0x6e, 0x63, 0x6c, 0x61, 0x76, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x22, 0x0a, 0x0c, 0x72, 0x65, 0x6d, 0x6f, 0x74, 0x65, 0x52, 0x65, 0x70, 0x6f,
	0x72, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0c, 0x72, 0x65, 0x6d, 0x6f, 0x74, 0x65,
	0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x12, 0x20, 0x0a, 0x0b, 0x65, 0x6e, 0x63, 0x6c, 0x61, 0x76,
	0x65, 0x50, 0x75, 0x62, 0x4b, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x65, 0x6e, 0x63,
	0x6c, 0x61, 0x76, 0x65, 0x50, 0x75, 0x62, 0x4b, 0x22, 0x87, 0x01, 0x0a, 0x1f, 0x51, 0x75, 0x65,
	0x72, 0x79, 0x45, 0x6e, 0x63, 0x6c, 0x61, 0x76, 0x65, 0x53, 0x79, 0x6e, 0x63, 0x45, 0x6e, 0x63,
	0x6c, 0x61, 0x76, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x22, 0x0a, 0x0c,
	0x72, 0x65, 0x6d, 0x6f, 0x74, 0x65, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0c, 0x52, 0x0c, 0x72, 0x65, 0x6d, 0x6f, 0x74, 0x65, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74,
	0x12, 0x40, 0x0a, 0x1b, 0x65, 0x6e, 0x63, 0x45, 0x6e, 0x63, 0x6c, 0x61, 0x76, 0x65, 0x50, 0x61,
	0x72, 0x61, 0x6d, 0x73, 0x45, 0x6e, 0x63, 0x6c, 0x61, 0x76, 0x65, 0x50, 0x75, 0x62, 0x4b, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x1b, 0x65, 0x6e, 0x63, 0x45, 0x6e, 0x63, 0x6c, 0x61, 0x76,
	0x65, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x45, 0x6e, 0x63, 0x6c, 0x61, 0x76, 0x65, 0x50, 0x75,
	0x62, 0x4b, 0x22, 0x7e, 0x0a, 0x1e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x45, 0x6e, 0x63, 0x6c, 0x61,
	0x76, 0x65, 0x53, 0x65, 0x63, 0x72, 0x65, 0x74, 0x53, 0x68, 0x61, 0x72, 0x65, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x22, 0x0a, 0x0c, 0x72, 0x65, 0x6d, 0x6f, 0x74, 0x65, 0x52, 0x65,
	0x70, 0x6f, 0x72, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0c, 0x72, 0x65, 0x6d, 0x6f,
	0x74, 0x65, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x12, 0x20, 0x0a, 0x0b, 0x65, 0x6e, 0x63, 0x6c,
	0x61, 0x76, 0x65, 0x50, 0x75, 0x62, 0x4b, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x65,
	0x6e, 0x63, 0x6c, 0x61, 0x76, 0x65, 0x50, 0x75, 0x62, 0x4b, 0x12, 0x16, 0x0a, 0x06, 0x70, 0x75,
	0x62, 0x4b, 0x49, 0x44, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x70, 0x75, 0x62, 0x4b,
	0x49, 0x44, 0x22, 0x83, 0x01, 0x0a, 0x1f, 0x51, 0x75, 0x65, 0x72, 0x79, 0x45, 0x6e, 0x63, 0x6c,
	0x61, 0x76, 0x65, 0x53, 0x65, 0x63, 0x72, 0x65, 0x74, 0x53, 0x68, 0x61, 0x72, 0x65, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x22, 0x0a, 0x0c, 0x72, 0x65, 0x6d, 0x6f, 0x74, 0x65,
	0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0c, 0x72, 0x65,
	0x6d, 0x6f, 0x74, 0x65, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x12, 0x3c, 0x0a, 0x19, 0x65, 0x6e,
	0x63, 0x53, 0x65, 0x63, 0x72, 0x65, 0x74, 0x53, 0x68, 0x61, 0x72, 0x65, 0x45, 0x6e, 0x63, 0x6c,
	0x61, 0x76, 0x65, 0x50, 0x75, 0x62, 0x4b, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x19, 0x65,
	0x6e, 0x63, 0x53, 0x65, 0x63, 0x72, 0x65, 0x74, 0x53, 0x68, 0x61, 0x72, 0x65, 0x45, 0x6e, 0x63,
	0x6c, 0x61, 0x76, 0x65, 0x50, 0x75, 0x62, 0x4b, 0x22, 0xc0, 0x01, 0x0a, 0x22, 0x51, 0x75, 0x65,
	0x72, 0x79, 0x45, 0x6e, 0x63, 0x6c, 0x61, 0x76, 0x65, 0x52, 0x65, 0x63, 0x6f, 0x76, 0x65, 0x72,
	0x4b, 0x65, 0x79, 0x53, 0x68, 0x61, 0x72, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x22, 0x0a, 0x0c, 0x72, 0x65, 0x6d, 0x6f, 0x74, 0x65, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0c, 0x72, 0x65, 0x6d, 0x6f, 0x74, 0x65, 0x52, 0x65, 0x70,
	0x6f, 0x72, 0x74, 0x12, 0x20, 0x0a, 0x0b, 0x6e, 0x65, 0x77, 0x57, 0x61, 0x6c, 0x6c, 0x65, 0x74,
	0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x6e, 0x65, 0x77, 0x57, 0x61, 0x6c,
	0x6c, 0x65, 0x74, 0x49, 0x44, 0x12, 0x24, 0x0a, 0x0d, 0x73, 0x68, 0x61, 0x72, 0x65, 0x57, 0x61,
	0x6c, 0x6c, 0x65, 0x74, 0x49, 0x44, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x73, 0x68,
	0x61, 0x72, 0x65, 0x57, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x49, 0x44, 0x12, 0x2e, 0x0a, 0x12, 0x65,
	0x6e, 0x63, 0x53, 0x68, 0x61, 0x72, 0x65, 0x57, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x50, 0x75, 0x62,
	0x4b, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x12, 0x65, 0x6e, 0x63, 0x53, 0x68, 0x61, 0x72,
	0x65, 0x57, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x50, 0x75, 0x62, 0x4b, 0x22, 0x79, 0x0a, 0x23, 0x51,
	0x75, 0x65, 0x72, 0x79, 0x45, 0x6e, 0x63, 0x6c, 0x61, 0x76, 0x65, 0x52, 0x65, 0x63, 0x6f, 0x76,
	0x65, 0x72, 0x4b, 0x65, 0x79, 0x53, 0x68, 0x61, 0x72, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x22, 0x0a, 0x0c, 0x72, 0x65, 0x6d, 0x6f, 0x74, 0x65, 0x52, 0x65, 0x70, 0x6f,
	0x72, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0c, 0x72, 0x65, 0x6d, 0x6f, 0x74, 0x65,
	0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x12, 0x2e, 0x0a, 0x12, 0x65, 0x6e, 0x63, 0x53, 0x68, 0x61,
	0x72, 0x65, 0x57, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x50, 0x75, 0x62, 0x4b, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0c, 0x52, 0x12, 0x65, 0x6e, 0x63, 0x53, 0x68, 0x61, 0x72, 0x65, 0x57, 0x61, 0x6c, 0x6c,
	0x65, 0x74, 0x50, 0x75, 0x62, 0x4b, 0x22, 0xde, 0x02, 0x0a, 0x1a, 0x51, 0x75, 0x65, 0x72, 0x79,
	0x46, 0x69, 0x6e, 0x64, 0x43, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x22, 0x0a, 0x0c, 0x63, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74,
	0x69, 0x61, 0x6c, 0x50, 0x43, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0c, 0x63, 0x72, 0x65,
	0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x50, 0x43, 0x12, 0x26, 0x0a, 0x0e, 0x63, 0x72, 0x65,
	0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x54, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0e, 0x63, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x54, 0x79, 0x70,
	0x65, 0x12, 0x2a, 0x0a, 0x10, 0x73, 0x53, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x76, 0x61, 0x6c, 0x50,
	0x75, 0x62, 0x4b, 0x49, 0x44, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x73, 0x53, 0x49,
	0x6e, 0x74, 0x65, 0x72, 0x76, 0x61, 0x6c, 0x50, 0x75, 0x62, 0x4b, 0x49, 0x44, 0x12, 0x50, 0x0a,
	0x23, 0x65, 0x6e, 0x63, 0x55, 0x73, 0x65, 0x72, 0x43, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69,
	0x61, 0x6c, 0x50, 0x75, 0x62, 0x4b, 0x53, 0x53, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x76, 0x61, 0x6c,
	0x50, 0x75, 0x62, 0x4b, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x23, 0x65, 0x6e, 0x63, 0x55,
	0x73, 0x65, 0x72, 0x43, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x50, 0x75, 0x62,
	0x4b, 0x53, 0x53, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x76, 0x61, 0x6c, 0x50, 0x75, 0x62, 0x4b, 0x12,
	0x3a, 0x0a, 0x18, 0x65, 0x6e, 0x63, 0x50, 0x72, 0x6f, 0x6f, 0x66, 0x50, 0x43, 0x53, 0x53, 0x49,
	0x6e, 0x74, 0x65, 0x72, 0x76, 0x61, 0x6c, 0x50, 0x75, 0x62, 0x4b, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x0c, 0x52, 0x18, 0x65, 0x6e, 0x63, 0x50, 0x72, 0x6f, 0x6f, 0x66, 0x50, 0x43, 0x53, 0x53, 0x49,
	0x6e, 0x74, 0x65, 0x72, 0x76, 0x61, 0x6c, 0x50, 0x75, 0x62, 0x4b, 0x12, 0x3a, 0x0a, 0x18, 0x65,
	0x6e, 0x63, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x50, 0x43, 0x53, 0x53, 0x49, 0x6e, 0x74, 0x65, 0x72,
	0x76, 0x61, 0x6c, 0x50, 0x75, 0x62, 0x4b, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x18, 0x65,
	0x6e, 0x63, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x50, 0x43, 0x53, 0x53, 0x49, 0x6e, 0x74, 0x65, 0x72,
	0x76, 0x61, 0x6c, 0x50, 0x75, 0x62, 0x4b, 0x22, 0xb9, 0x01, 0x0a, 0x1b, 0x51, 0x75, 0x65, 0x72,
	0x79, 0x46, 0x69, 0x6e, 0x64, 0x43, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4c, 0x0a, 0x21, 0x65, 0x6e, 0x63, 0x50, 0x65,
	0x72, 0x73, 0x6f, 0x6e, 0x61, 0x6c, 0x49, 0x6e, 0x66, 0x6f, 0x55, 0x73, 0x65, 0x72, 0x43, 0x72,
	0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x50, 0x75, 0x62, 0x4b, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0c, 0x52, 0x21, 0x65, 0x6e, 0x63, 0x50, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x61, 0x6c, 0x49,
	0x6e, 0x66, 0x6f, 0x55, 0x73, 0x65, 0x72, 0x43, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61,
	0x6c, 0x50, 0x75, 0x62, 0x4b, 0x12, 0x4c, 0x0a, 0x21, 0x65, 0x6e, 0x63, 0x43, 0x72, 0x65, 0x64,
	0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x49, 0x44, 0x55, 0x73, 0x65, 0x72, 0x43, 0x72, 0x65, 0x64,
	0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x50, 0x75, 0x62, 0x4b, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c,
	0x52, 0x21, 0x65, 0x6e, 0x63, 0x43, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x49,
	0x44, 0x55, 0x73, 0x65, 0x72, 0x43, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x50,
	0x75, 0x62, 0x4b, 0x22, 0x3c, 0x0a, 0x1e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x47, 0x65, 0x74, 0x45,
	0x6e, 0x63, 0x6c, 0x61, 0x76, 0x65, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x75, 0x6e, 0x69, 0x71, 0x75, 0x65, 0x49,
	0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x6e, 0x69, 0x71, 0x75, 0x65, 0x49,
	0x44, 0x22, 0x71, 0x0a, 0x1f, 0x51, 0x75, 0x65, 0x72, 0x79, 0x47, 0x65, 0x74, 0x45, 0x6e, 0x63,
	0x6c, 0x61, 0x76, 0x65, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4e, 0x0a, 0x0f, 0x65, 0x6e, 0x63, 0x6c, 0x61, 0x76, 0x65, 0x49,
	0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e,
	0x71, 0x61, 0x64, 0x65, 0x6e, 0x61, 0x2e, 0x71, 0x61, 0x64, 0x65, 0x6e, 0x61, 0x2e, 0x45, 0x6e,
	0x63, 0x6c, 0x61, 0x76, 0x65, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x42, 0x04, 0xc8,
	0xde, 0x1f, 0x00, 0x52, 0x0f, 0x65, 0x6e, 0x63, 0x6c, 0x61, 0x76, 0x65, 0x49, 0x64, 0x65, 0x6e,
	0x74, 0x69, 0x74, 0x79, 0x22, 0x68, 0x0a, 0x1e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x41, 0x6c, 0x6c,
	0x45, 0x6e, 0x63, 0x6c, 0x61, 0x76, 0x65, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x46, 0x0a, 0x0a, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x63, 0x6f, 0x73,
	0x6d, 0x6f, 0x73, 0x2e, 0x62, 0x61, 0x73, 0x65, 0x2e, 0x71, 0x75, 0x65, 0x72, 0x79, 0x2e, 0x76,
	0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x2e, 0x50, 0x61, 0x67, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x52, 0x0a, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0xba,
	0x01, 0x0a, 0x1f, 0x51, 0x75, 0x65, 0x72, 0x79, 0x41, 0x6c, 0x6c, 0x45, 0x6e, 0x63, 0x6c, 0x61,
	0x76, 0x65, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x4e, 0x0a, 0x0f, 0x65, 0x6e, 0x63, 0x6c, 0x61, 0x76, 0x65, 0x49, 0x64, 0x65,
	0x6e, 0x74, 0x69, 0x74, 0x79, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x71, 0x61,
	0x64, 0x65, 0x6e, 0x61, 0x2e, 0x71, 0x61, 0x64, 0x65, 0x6e, 0x61, 0x2e, 0x45, 0x6e, 0x63, 0x6c,
	0x61, 0x76, 0x65, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x42, 0x04, 0xc8, 0xde, 0x1f,
	0x00, 0x52, 0x0f, 0x65, 0x6e, 0x63, 0x6c, 0x61, 0x76, 0x65, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69,
	0x74, 0x79, 0x12, 0x47, 0x0a, 0x0a, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x63, 0x6f, 0x73, 0x6d, 0x6f, 0x73, 0x2e,
	0x62, 0x61, 0x73, 0x65, 0x2e, 0x71, 0x75, 0x65, 0x72, 0x79, 0x2e, 0x76, 0x31, 0x62, 0x65, 0x74,
	0x61, 0x31, 0x2e, 0x50, 0x61, 0x67, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52,
	0x0a, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x32, 0x8d, 0x25, 0x0a, 0x05,
	0x51, 0x75, 0x65, 0x72, 0x79, 0x12, 0x6e, 0x0a, 0x06, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x12,
	0x21, 0x2e, 0x71, 0x61, 0x64, 0x65, 0x6e, 0x61, 0x2e, 0x71, 0x61, 0x64, 0x65, 0x6e, 0x61, 0x2e,
	0x51, 0x75, 0x65, 0x72, 0x79, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x22, 0x2e, 0x71, 0x61, 0x64, 0x65, 0x6e, 0x61, 0x2e, 0x71, 0x61, 0x64, 0x65,
	0x6e, 0x61, 0x2e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x1d, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x17, 0x12, 0x15,
	0x2f, 0x71, 0x61, 0x64, 0x65, 0x6e, 0x61, 0x2f, 0x71, 0x61, 0x64, 0x65, 0x6e, 0x61, 0x2f, 0x70,
	0x61, 0x72, 0x61, 0x6d, 0x73, 0x12, 0xa4, 0x01, 0x0a, 0x0a, 0x43, 0x72, 0x65, 0x64, 0x65, 0x6e,
	0x74, 0x69, 0x61, 0x6c, 0x12, 0x28, 0x2e, 0x71, 0x61, 0x64, 0x65, 0x6e, 0x61, 0x2e, 0x71, 0x61,
	0x64, 0x65, 0x6e, 0x61, 0x2e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x47, 0x65, 0x74, 0x43, 0x72, 0x65,
	0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x29,
	0x2e, 0x71, 0x61, 0x64, 0x65, 0x6e, 0x61, 0x2e, 0x71, 0x61, 0x64, 0x65, 0x6e, 0x61, 0x2e, 0x51,
	0x75, 0x65, 0x72, 0x79, 0x47, 0x65, 0x74, 0x43, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61,
	0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x41, 0x82, 0xd3, 0xe4, 0x93, 0x02,
	0x3b, 0x12, 0x39, 0x2f, 0x71, 0x61, 0x64, 0x65, 0x6e, 0x61, 0x2f, 0x71, 0x61, 0x64, 0x65, 0x6e,
	0x61, 0x2f, 0x63, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x2f, 0x7b, 0x63, 0x72,
	0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x49, 0x44, 0x7d, 0x2f, 0x7b, 0x63, 0x72, 0x65,
	0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x54, 0x79, 0x70, 0x65, 0x7d, 0x12, 0x87, 0x01, 0x0a,
	0x0d, 0x43, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x41, 0x6c, 0x6c, 0x12, 0x28,
	0x2e, 0x71, 0x61, 0x64, 0x65, 0x6e, 0x61, 0x2e, 0x71, 0x61, 0x64, 0x65, 0x6e, 0x61, 0x2e, 0x51,
	0x75, 0x65, 0x72, 0x79, 0x41, 0x6c, 0x6c, 0x43, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61,
	0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x29, 0x2e, 0x71, 0x61, 0x64, 0x65, 0x6e,
	0x61, 0x2e, 0x71, 0x61, 0x64, 0x65, 0x6e, 0x61, 0x2e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x41, 0x6c,
	0x6c, 0x43, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x21, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1b, 0x12, 0x19, 0x2f, 0x71, 0x61,
	0x64, 0x65, 0x6e, 0x61, 0x2f, 0x71, 0x61, 0x64, 0x65, 0x6e, 0x61, 0x2f, 0x63, 0x72, 0x65, 0x64,
	0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x12, 0x95, 0x01, 0x0a, 0x09, 0x50, 0x75, 0x62, 0x6c, 0x69,
	0x63, 0x4b, 0x65, 0x79, 0x12, 0x27, 0x2e, 0x71, 0x61, 0x64, 0x65, 0x6e, 0x61, 0x2e, 0x71, 0x61,
	0x64, 0x65, 0x6e, 0x61, 0x2e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x47, 0x65, 0x74, 0x50, 0x75, 0x62,
	0x6c, 0x69, 0x63, 0x4b, 0x65, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x28, 0x2e,
	0x71, 0x61, 0x64, 0x65, 0x6e, 0x61, 0x2e, 0x71, 0x61, 0x64, 0x65, 0x6e, 0x61, 0x2e, 0x51, 0x75,
	0x65, 0x72, 0x79, 0x47, 0x65, 0x74, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x4b, 0x65, 0x79, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x35, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x2f, 0x12,
	0x2d, 0x2f, 0x71, 0x61, 0x64, 0x65, 0x6e, 0x61, 0x2f, 0x71, 0x61, 0x64, 0x65, 0x6e, 0x61, 0x2f,
	0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x5f, 0x6b, 0x65, 0x79, 0x2f, 0x7b, 0x70, 0x75, 0x62, 0x4b,
	0x49, 0x44, 0x7d, 0x2f, 0x7b, 0x70, 0x75, 0x62, 0x4b, 0x54, 0x79, 0x70, 0x65, 0x7d, 0x12, 0x84,
	0x01, 0x0a, 0x0c, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x4b, 0x65, 0x79, 0x41, 0x6c, 0x6c, 0x12,
	0x27, 0x2e, 0x71, 0x61, 0x64, 0x65, 0x6e, 0x61, 0x2e, 0x71, 0x61, 0x64, 0x65, 0x6e, 0x61, 0x2e,
	0x51, 0x75, 0x65, 0x72, 0x79, 0x41, 0x6c, 0x6c, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x4b, 0x65,
	0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x28, 0x2e, 0x71, 0x61, 0x64, 0x65, 0x6e,
	0x61, 0x2e, 0x71, 0x61, 0x64, 0x65, 0x6e, 0x61, 0x2e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x41, 0x6c,
	0x6c, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x4b, 0x65, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x21, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1b, 0x12, 0x19, 0x2f, 0x71, 0x61, 0x64,
	0x65, 0x6e, 0x61, 0x2f, 0x71, 0x61, 0x64, 0x65, 0x6e, 0x61, 0x2f, 0x70, 0x75, 0x62, 0x6c, 0x69,
	0x63, 0x5f, 0x6b, 0x65, 0x79, 0x12, 0x7f, 0x0a, 0x06, 0x57, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x12,
	0x24, 0x2e, 0x71, 0x61, 0x64, 0x65, 0x6e, 0x61, 0x2e, 0x71, 0x61, 0x64, 0x65, 0x6e, 0x61, 0x2e,
	0x51, 0x75, 0x65, 0x72, 0x79, 0x47, 0x65, 0x74, 0x57, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x25, 0x2e, 0x71, 0x61, 0x64, 0x65, 0x6e, 0x61, 0x2e, 0x71,
	0x61, 0x64, 0x65, 0x6e, 0x61, 0x2e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x47, 0x65, 0x74, 0x57, 0x61,
	0x6c, 0x6c, 0x65, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x28, 0x82, 0xd3,
	0xe4, 0x93, 0x02, 0x22, 0x12, 0x20, 0x2f, 0x71, 0x61, 0x64, 0x65, 0x6e, 0x61, 0x2f, 0x71, 0x61,
	0x64, 0x65, 0x6e, 0x61, 0x2f, 0x77, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x2f, 0x7b, 0x77, 0x61, 0x6c,
	0x6c, 0x65, 0x74, 0x49, 0x44, 0x7d, 0x12, 0x77, 0x0a, 0x09, 0x57, 0x61, 0x6c, 0x6c, 0x65, 0x74,
	0x41, 0x6c, 0x6c, 0x12, 0x24, 0x2e, 0x71, 0x61, 0x64, 0x65, 0x6e, 0x61, 0x2e, 0x71, 0x61, 0x64,
	0x65, 0x6e, 0x61, 0x2e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x41, 0x6c, 0x6c, 0x57, 0x61, 0x6c, 0x6c,
	0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x25, 0x2e, 0x71, 0x61, 0x64, 0x65,
	0x6e, 0x61, 0x2e, 0x71, 0x61, 0x64, 0x65, 0x6e, 0x61, 0x2e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x41,
	0x6c, 0x6c, 0x57, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x1d, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x17, 0x12, 0x15, 0x2f, 0x71, 0x61, 0x64, 0x65, 0x6e,
	0x61, 0x2f, 0x71, 0x61, 0x64, 0x65, 0x6e, 0x61, 0x2f, 0x77, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x12,
	0xc0, 0x01, 0x0a, 0x13, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x76, 0x61, 0x6c, 0x50, 0x75, 0x62, 0x6c,
	0x69, 0x63, 0x4b, 0x65, 0x79, 0x49, 0x44, 0x12, 0x31, 0x2e, 0x71, 0x61, 0x64, 0x65, 0x6e, 0x61,
	0x2e, 0x71, 0x61, 0x64, 0x65, 0x6e, 0x61, 0x2e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x47, 0x65, 0x74,
	0x49, 0x6e, 0x74, 0x65, 0x72, 0x76, 0x61, 0x6c, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x4b, 0x65,
	0x79, 0x49, 0x44, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x32, 0x2e, 0x71, 0x61, 0x64,
	0x65, 0x6e, 0x61, 0x2e, 0x71, 0x61, 0x64, 0x65, 0x6e, 0x61, 0x2e, 0x51, 0x75, 0x65, 0x72, 0x79,
	0x47, 0x65, 0x74, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x76, 0x61, 0x6c, 0x50, 0x75, 0x62, 0x6c, 0x69,
	0x63, 0x4b, 0x65, 0x79, 0x49, 0x44, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x42,
	0x82, 0xd3, 0xe4, 0x93, 0x02, 0x3c, 0x12, 0x3a, 0x2f, 0x71, 0x61, 0x64, 0x65, 0x6e, 0x61, 0x2f,
	0x71, 0x61, 0x64, 0x65, 0x6e, 0x61, 0x2f, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x76, 0x61, 0x6c, 0x5f,
	0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x5f, 0x6b, 0x65, 0x79, 0x5f, 0x69, 0x5f, 0x64, 0x2f, 0x7b,
	0x6e, 0x6f, 0x64, 0x65, 0x49, 0x44, 0x7d, 0x2f, 0x7b, 0x6e, 0x6f, 0x64, 0x65, 0x54, 0x79, 0x70,
	0x65, 0x7d, 0x12, 0xaf, 0x01, 0x0a, 0x16, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x76, 0x61, 0x6c, 0x50,
	0x75, 0x62, 0x6c, 0x69, 0x63, 0x4b, 0x65, 0x79, 0x49, 0x44, 0x41, 0x6c, 0x6c, 0x12, 0x31, 0x2e,
	0x71, 0x61, 0x64, 0x65, 0x6e, 0x61, 0x2e, 0x71, 0x61, 0x64, 0x65, 0x6e, 0x61, 0x2e, 0x51, 0x75,
	0x65, 0x72, 0x79, 0x41, 0x6c, 0x6c, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x76, 0x61, 0x6c, 0x50, 0x75,
	0x62, 0x6c, 0x69, 0x63, 0x4b, 0x65, 0x79, 0x49, 0x44, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x32, 0x2e, 0x71, 0x61, 0x64, 0x65, 0x6e, 0x61, 0x2e, 0x71, 0x61, 0x64, 0x65, 0x6e, 0x61,
	0x2e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x41, 0x6c, 0x6c, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x76, 0x61,
	0x6c, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x4b, 0x65, 0x79, 0x49, 0x44, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x2e, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x28, 0x12, 0x26, 0x2f, 0x71,
	0x61, 0x64, 0x65, 0x6e, 0x61, 0x2f, 0x71, 0x61, 0x64, 0x65, 0x6e, 0x61, 0x2f, 0x69, 0x6e, 0x74,
	0x65, 0x72, 0x76, 0x61, 0x6c, 0x5f, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x5f, 0x6b, 0x65, 0x79,
	0x5f, 0x69, 0x5f, 0x64, 0x12, 0x91, 0x01, 0x0a, 0x0a, 0x50, 0x69, 0x6f, 0x6e, 0x65, 0x65, 0x72,
	0x4a, 0x61, 0x72, 0x12, 0x28, 0x2e, 0x71, 0x61, 0x64, 0x65, 0x6e, 0x61, 0x2e, 0x71, 0x61, 0x64,
	0x65, 0x6e, 0x61, 0x2e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x47, 0x65, 0x74, 0x50, 0x69, 0x6f, 0x6e,
	0x65, 0x65, 0x72, 0x4a, 0x61, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x29, 0x2e,
	0x71, 0x61, 0x64, 0x65, 0x6e, 0x61, 0x2e, 0x71, 0x61, 0x64, 0x65, 0x6e, 0x61, 0x2e, 0x51, 0x75,
	0x65, 0x72, 0x79, 0x47, 0x65, 0x74, 0x50, 0x69, 0x6f, 0x6e, 0x65, 0x65, 0x72, 0x4a, 0x61, 0x72,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x2e, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x28,
	0x12, 0x26, 0x2f, 0x71, 0x61, 0x64, 0x65, 0x6e, 0x61, 0x2f, 0x71, 0x61, 0x64, 0x65, 0x6e, 0x61,
	0x2f, 0x70, 0x69, 0x6f, 0x6e, 0x65, 0x65, 0x72, 0x5f, 0x6a, 0x61, 0x72, 0x2f, 0x7b, 0x70, 0x69,
	0x6f, 0x6e, 0x65, 0x65, 0x72, 0x49, 0x44, 0x7d, 0x12, 0x88, 0x01, 0x0a, 0x0d, 0x50, 0x69, 0x6f,
	0x6e, 0x65, 0x65, 0x72, 0x4a, 0x61, 0x72, 0x41, 0x6c, 0x6c, 0x12, 0x28, 0x2e, 0x71, 0x61, 0x64,
	0x65, 0x6e, 0x61, 0x2e, 0x71, 0x61, 0x64, 0x65, 0x6e, 0x61, 0x2e, 0x51, 0x75, 0x65, 0x72, 0x79,
	0x41, 0x6c, 0x6c, 0x50, 0x69, 0x6f, 0x6e, 0x65, 0x65, 0x72, 0x4a, 0x61, 0x72, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x29, 0x2e, 0x71, 0x61, 0x64, 0x65, 0x6e, 0x61, 0x2e, 0x71, 0x61,
	0x64, 0x65, 0x6e, 0x61, 0x2e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x41, 0x6c, 0x6c, 0x50, 0x69, 0x6f,
	0x6e, 0x65, 0x65, 0x72, 0x4a, 0x61, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x22, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1c, 0x12, 0x1a, 0x2f, 0x71, 0x61, 0x64, 0x65, 0x6e, 0x61,
	0x2f, 0x71, 0x61, 0x64, 0x65, 0x6e, 0x61, 0x2f, 0x70, 0x69, 0x6f, 0x6e, 0x65, 0x65, 0x72, 0x5f,
	0x6a, 0x61, 0x72, 0x12, 0x95, 0x01, 0x0a, 0x0c, 0x4a, 0x61, 0x72, 0x52, 0x65, 0x67, 0x75, 0x6c,
	0x61, 0x74, 0x6f, 0x72, 0x12, 0x2a, 0x2e, 0x71, 0x61, 0x64, 0x65, 0x6e, 0x61, 0x2e, 0x71, 0x61,
	0x64, 0x65, 0x6e, 0x61, 0x2e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x47, 0x65, 0x74, 0x4a, 0x61, 0x72,
	0x52, 0x65, 0x67, 0x75, 0x6c, 0x61, 0x74, 0x6f, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x2b, 0x2e, 0x71, 0x61, 0x64, 0x65, 0x6e, 0x61, 0x2e, 0x71, 0x61, 0x64, 0x65, 0x6e, 0x61,
	0x2e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x47, 0x65, 0x74, 0x4a, 0x61, 0x72, 0x52, 0x65, 0x67, 0x75,
	0x6c, 0x61, 0x74, 0x6f, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x2c, 0x82,
	0xd3, 0xe4, 0x93, 0x02, 0x26, 0x12, 0x24, 0x2f, 0x71, 0x61, 0x64, 0x65, 0x6e, 0x61, 0x2f, 0x71,
	0x61, 0x64, 0x65, 0x6e, 0x61, 0x2f, 0x6a, 0x61, 0x72, 0x5f, 0x72, 0x65, 0x67, 0x75, 0x6c, 0x61,
	0x74, 0x6f, 0x72, 0x2f, 0x7b, 0x6a, 0x61, 0x72, 0x49, 0x44, 0x7d, 0x12, 0x90, 0x01, 0x0a, 0x0f,
	0x4a, 0x61, 0x72, 0x52, 0x65, 0x67, 0x75, 0x6c, 0x61, 0x74, 0x6f, 0x72, 0x41, 0x6c, 0x6c, 0x12,
	0x2a, 0x2e, 0x71, 0x61, 0x64, 0x65, 0x6e, 0x61, 0x2e, 0x71, 0x61, 0x64, 0x65, 0x6e, 0x61, 0x2e,
	0x51, 0x75, 0x65, 0x72, 0x79, 0x41, 0x6c, 0x6c, 0x4a, 0x61, 0x72, 0x52, 0x65, 0x67, 0x75, 0x6c,
	0x61, 0x74, 0x6f, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2b, 0x2e, 0x71, 0x61,
	0x64, 0x65, 0x6e, 0x61, 0x2e, 0x71, 0x61, 0x64, 0x65, 0x6e, 0x61, 0x2e, 0x51, 0x75, 0x65, 0x72,
	0x79, 0x41, 0x6c, 0x6c, 0x4a, 0x61, 0x72, 0x52, 0x65, 0x67, 0x75, 0x6c, 0x61, 0x74, 0x6f, 0x72,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x24, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1e,
	0x12, 0x1c, 0x2f, 0x71, 0x61, 0x64, 0x65, 0x6e, 0x61, 0x2f, 0x71, 0x61, 0x64, 0x65, 0x6e, 0x61,
	0x2f, 0x6a, 0x61, 0x72, 0x5f, 0x72, 0x65, 0x67, 0x75, 0x6c, 0x61, 0x74, 0x6f, 0x72, 0x12, 0xb6,
	0x01, 0x0a, 0x15, 0x53, 0x75, 0x73, 0x70, 0x69, 0x63, 0x69, 0x6f, 0x75, 0x73, 0x54, 0x72, 0x61,
	0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x33, 0x2e, 0x71, 0x61, 0x64, 0x65, 0x6e,
	0x61, 0x2e, 0x71, 0x61, 0x64, 0x65, 0x6e, 0x61, 0x2e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x47, 0x65,
	0x74, 0x53, 0x75, 0x73, 0x70, 0x69, 0x63, 0x69, 0x6f, 0x75, 0x73, 0x54, 0x72, 0x61, 0x6e, 0x73,
	0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x34, 0x2e,
	0x71, 0x61, 0x64, 0x65, 0x6e, 0x61, 0x2e, 0x71, 0x61, 0x64, 0x65, 0x6e, 0x61, 0x2e, 0x51, 0x75,
	0x65, 0x72, 0x79, 0x47, 0x65, 0x74, 0x53, 0x75, 0x73, 0x70, 0x69, 0x63, 0x69, 0x6f, 0x75, 0x73,
	0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x32, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x2c, 0x12, 0x2a, 0x2f, 0x71, 0x61,
	0x64, 0x65, 0x6e, 0x61, 0x2f, 0x71, 0x61, 0x64, 0x65, 0x6e, 0x61, 0x2f, 0x73, 0x75, 0x73, 0x70,
	0x69, 0x63, 0x69, 0x6f, 0x75, 0x73, 0x5f, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x2f, 0x7b, 0x69, 0x64, 0x7d, 0x12, 0xb4, 0x01, 0x0a, 0x18, 0x53, 0x75, 0x73, 0x70,
	0x69, 0x63, 0x69, 0x6f, 0x75, 0x73, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x41, 0x6c, 0x6c, 0x12, 0x33, 0x2e, 0x71, 0x61, 0x64, 0x65, 0x6e, 0x61, 0x2e, 0x71, 0x61,
	0x64, 0x65, 0x6e, 0x61, 0x2e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x41, 0x6c, 0x6c, 0x53, 0x75, 0x73,
	0x70, 0x69, 0x63, 0x69, 0x6f, 0x75, 0x73, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x34, 0x2e, 0x71, 0x61, 0x64, 0x65,
	0x6e, 0x61, 0x2e, 0x71, 0x61, 0x64, 0x65, 0x6e, 0x61, 0x2e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x41,
	0x6c, 0x6c, 0x53, 0x75, 0x73, 0x70, 0x69, 0x63, 0x69, 0x6f, 0x75, 0x73, 0x54, 0x72, 0x61, 0x6e,
	0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x2d, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x27, 0x12, 0x25, 0x2f, 0x71, 0x61, 0x64, 0x65, 0x6e, 0x61,
	0x2f, 0x71, 0x61, 0x64, 0x65, 0x6e, 0x61, 0x2f, 0x73, 0x75, 0x73, 0x70, 0x69, 0x63, 0x69, 0x6f,
	0x75, 0x73, 0x5f, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x90,
	0x01, 0x0a, 0x0a, 0x50, 0x72, 0x6f, 0x74, 0x65, 0x63, 0x74, 0x4b, 0x65, 0x79, 0x12, 0x28, 0x2e,
	0x71, 0x61, 0x64, 0x65, 0x6e, 0x61, 0x2e, 0x71, 0x61, 0x64, 0x65, 0x6e, 0x61, 0x2e, 0x51, 0x75,
	0x65, 0x72, 0x79, 0x47, 0x65, 0x74, 0x50, 0x72, 0x6f, 0x74, 0x65, 0x63, 0x74, 0x4b, 0x65, 0x79,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x29, 0x2e, 0x71, 0x61, 0x64, 0x65, 0x6e, 0x61,
	0x2e, 0x71, 0x61, 0x64, 0x65, 0x6e, 0x61, 0x2e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x47, 0x65, 0x74,
	0x50, 0x72, 0x6f, 0x74, 0x65, 0x63, 0x74, 0x4b, 0x65, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x2d, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x27, 0x12, 0x25, 0x2f, 0x71, 0x61, 0x64,
	0x65, 0x6e, 0x61, 0x2f, 0x71, 0x61, 0x64, 0x65, 0x6e, 0x61, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x65,
	0x63, 0x74, 0x5f, 0x6b, 0x65, 0x79, 0x2f, 0x7b, 0x77, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x49, 0x44,
	0x7d, 0x12, 0x88, 0x01, 0x0a, 0x0d, 0x50, 0x72, 0x6f, 0x74, 0x65, 0x63, 0x74, 0x4b, 0x65, 0x79,
	0x41, 0x6c, 0x6c, 0x12, 0x28, 0x2e, 0x71, 0x61, 0x64, 0x65, 0x6e, 0x61, 0x2e, 0x71, 0x61, 0x64,
	0x65, 0x6e, 0x61, 0x2e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x41, 0x6c, 0x6c, 0x50, 0x72, 0x6f, 0x74,
	0x65, 0x63, 0x74, 0x4b, 0x65, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x29, 0x2e,
	0x71, 0x61, 0x64, 0x65, 0x6e, 0x61, 0x2e, 0x71, 0x61, 0x64, 0x65, 0x6e, 0x61, 0x2e, 0x51, 0x75,
	0x65, 0x72, 0x79, 0x41, 0x6c, 0x6c, 0x50, 0x72, 0x6f, 0x74, 0x65, 0x63, 0x74, 0x4b, 0x65, 0x79,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x22, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1c,
	0x12, 0x1a, 0x2f, 0x71, 0x61, 0x64, 0x65, 0x6e, 0x61, 0x2f, 0x71, 0x61, 0x64, 0x65, 0x6e, 0x61,
	0x2f, 0x70, 0x72, 0x6f, 0x74, 0x65, 0x63, 0x74, 0x5f, 0x6b, 0x65, 0x79, 0x12, 0x90, 0x01, 0x0a,
	0x0a, 0x52, 0x65, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x4b, 0x65, 0x79, 0x12, 0x28, 0x2e, 0x71, 0x61,
	0x64, 0x65, 0x6e, 0x61, 0x2e, 0x71, 0x61, 0x64, 0x65, 0x6e, 0x61, 0x2e, 0x51, 0x75, 0x65, 0x72,
	0x79, 0x47, 0x65, 0x74, 0x52, 0x65, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x4b, 0x65, 0x79, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x29, 0x2e, 0x71, 0x61, 0x64, 0x65, 0x6e, 0x61, 0x2e, 0x71,
	0x61, 0x64, 0x65, 0x6e, 0x61, 0x2e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x47, 0x65, 0x74, 0x52, 0x65,
	0x63, 0x6f, 0x76, 0x65, 0x72, 0x4b, 0x65, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x2d, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x27, 0x12, 0x25, 0x2f, 0x71, 0x61, 0x64, 0x65, 0x6e,
	0x61, 0x2f, 0x71, 0x61, 0x64, 0x65, 0x6e, 0x61, 0x2f, 0x72, 0x65, 0x63, 0x6f, 0x76, 0x65, 0x72,
	0x5f, 0x6b, 0x65, 0x79, 0x2f, 0x7b, 0x77, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x49, 0x44, 0x7d, 0x12,
	0x88, 0x01, 0x0a, 0x0d, 0x52, 0x65, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x4b, 0x65, 0x79, 0x41, 0x6c,
	0x6c, 0x12, 0x28, 0x2e, 0x71, 0x61, 0x64, 0x65, 0x6e, 0x61, 0x2e, 0x71, 0x61, 0x64, 0x65, 0x6e,
	0x61, 0x2e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x41, 0x6c, 0x6c, 0x52, 0x65, 0x63, 0x6f, 0x76, 0x65,
	0x72, 0x4b, 0x65, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x29, 0x2e, 0x71, 0x61,
	0x64, 0x65, 0x6e, 0x61, 0x2e, 0x71, 0x61, 0x64, 0x65, 0x6e, 0x61, 0x2e, 0x51, 0x75, 0x65, 0x72,
	0x79, 0x41, 0x6c, 0x6c, 0x52, 0x65, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x4b, 0x65, 0x79, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x22, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1c, 0x12, 0x1a,
	0x2f, 0x71, 0x61, 0x64, 0x65, 0x6e, 0x61, 0x2f, 0x71, 0x61, 0x64, 0x65, 0x6e, 0x61, 0x2f, 0x72,
	0x65, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x5f, 0x6b, 0x65, 0x79, 0x12, 0x76, 0x0a, 0x08, 0x54, 0x72,
	0x65, 0x61, 0x73, 0x75, 0x72, 0x79, 0x12, 0x23, 0x2e, 0x71, 0x61, 0x64, 0x65, 0x6e, 0x61, 0x2e,
	0x71, 0x61, 0x64, 0x65, 0x6e, 0x61, 0x2e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x54, 0x72, 0x65, 0x61,
	0x73, 0x75, 0x72, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x24, 0x2e, 0x71, 0x61,
	0x64, 0x65, 0x6e, 0x61, 0x2e, 0x71, 0x61, 0x64, 0x65, 0x6e, 0x61, 0x2e, 0x51, 0x75, 0x65, 0x72,
	0x79, 0x54, 0x72, 0x65, 0x61, 0x73, 0x75, 0x72, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x1f, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x19, 0x12, 0x17, 0x2f, 0x71, 0x61, 0x64, 0x65,
	0x6e, 0x61, 0x2f, 0x71, 0x61, 0x64, 0x65, 0x6e, 0x61, 0x2f, 0x74, 0x72, 0x65, 0x61, 0x73, 0x75,
	0x72, 0x79, 0x12, 0x79, 0x0a, 0x07, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x22, 0x2e,
	0x71, 0x61, 0x64, 0x65, 0x6e, 0x61, 0x2e, 0x71, 0x61, 0x64, 0x65, 0x6e, 0x61, 0x2e, 0x51, 0x75,
	0x65, 0x72, 0x79, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x23, 0x2e, 0x71, 0x61, 0x64, 0x65, 0x6e, 0x61, 0x2e, 0x71, 0x61, 0x64, 0x65, 0x6e,
	0x61, 0x2e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x25, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1f, 0x12, 0x1d,
	0x2f, 0x71, 0x61, 0x64, 0x65, 0x6e, 0x61, 0x2f, 0x71, 0x61, 0x64, 0x65, 0x6e, 0x61, 0x2f, 0x61,
	0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2f, 0x7b, 0x6e, 0x61, 0x6d, 0x65, 0x7d, 0x12, 0x7e, 0x0a,
	0x0a, 0x49, 0x6e, 0x63, 0x65, 0x6e, 0x74, 0x69, 0x76, 0x65, 0x73, 0x12, 0x25, 0x2e, 0x71, 0x61,
	0x64, 0x65, 0x6e, 0x61, 0x2e, 0x71, 0x61, 0x64, 0x65, 0x6e, 0x61, 0x2e, 0x51, 0x75, 0x65, 0x72,
	0x79, 0x49, 0x6e, 0x63, 0x65, 0x6e, 0x74, 0x69, 0x76, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x26, 0x2e, 0x71, 0x61, 0x64, 0x65, 0x6e, 0x61, 0x2e, 0x71, 0x61, 0x64, 0x65,
	0x6e, 0x61, 0x2e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x49, 0x6e, 0x63, 0x65, 0x6e, 0x74, 0x69, 0x76,
	0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x21, 0x82, 0xd3, 0xe4, 0x93,
	0x02, 0x1b, 0x12, 0x19, 0x2f, 0x71, 0x61, 0x64, 0x65, 0x6e, 0x61, 0x2f, 0x71, 0x61, 0x64, 0x65,
	0x6e, 0x61, 0x2f, 0x69, 0x6e, 0x63, 0x65, 0x6e, 0x74, 0x69, 0x76, 0x65, 0x73, 0x12, 0xbd, 0x01,
	0x0a, 0x12, 0x45, 0x6e, 0x63, 0x6c, 0x61, 0x76, 0x65, 0x53, 0x79, 0x6e, 0x63, 0x45, 0x6e, 0x63,
	0x6c, 0x61, 0x76, 0x65, 0x12, 0x2d, 0x2e, 0x71, 0x61, 0x64, 0x65, 0x6e, 0x61, 0x2e, 0x71, 0x61,
	0x64, 0x65, 0x6e, 0x61, 0x2e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x45, 0x6e, 0x63, 0x6c, 0x61, 0x76,
	0x65, 0x53, 0x79, 0x6e, 0x63, 0x45, 0x6e, 0x63, 0x6c, 0x61, 0x76, 0x65, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x2e, 0x2e, 0x71, 0x61, 0x64, 0x65, 0x6e, 0x61, 0x2e, 0x71, 0x61, 0x64,
	0x65, 0x6e, 0x61, 0x2e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x45, 0x6e, 0x63, 0x6c, 0x61, 0x76, 0x65,
	0x53, 0x79, 0x6e, 0x63, 0x45, 0x6e, 0x63, 0x6c, 0x61, 0x76, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x48, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x42, 0x12, 0x40, 0x2f, 0x71, 0x61,
	0x64, 0x65, 0x6e, 0x61, 0x2f, 0x71, 0x61, 0x64, 0x65, 0x6e, 0x61, 0x2f, 0x65, 0x6e, 0x63, 0x6c,
	0x61, 0x76, 0x65, 0x5f, 0x73, 0x79, 0x6e, 0x63, 0x5f, 0x65, 0x6e, 0x63, 0x6c, 0x61, 0x76, 0x65,
	0x2f, 0x7b, 0x72, 0x65, 0x6d, 0x6f, 0x74, 0x65, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x7d, 0x2f,
	0x7b, 0x65, 0x6e, 0x63, 0x6c, 0x61, 0x76, 0x65, 0x50, 0x75, 0x62, 0x4b, 0x7d, 0x12, 0xc6, 0x01,
	0x0a, 0x12, 0x45, 0x6e, 0x63, 0x6c, 0x61, 0x76, 0x65, 0x53, 0x65, 0x63, 0x72, 0x65, 0x74, 0x53,
	0x68, 0x61, 0x72, 0x65, 0x12, 0x2d, 0x2e, 0x71, 0x61, 0x64, 0x65, 0x6e, 0x61, 0x2e, 0x71, 0x61,
	0x64, 0x65, 0x6e, 0x61, 0x2e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x45, 0x6e, 0x63, 0x6c, 0x61, 0x76,
	0x65, 0x53, 0x65, 0x63, 0x72, 0x65, 0x74, 0x53, 0x68, 0x61, 0x72, 0x65, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x2e, 0x2e, 0x71, 0x61, 0x64, 0x65, 0x6e, 0x61, 0x2e, 0x71, 0x61, 0x64,
	0x65, 0x6e, 0x61, 0x2e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x45, 0x6e, 0x63, 0x6c, 0x61, 0x76, 0x65,
	0x53, 0x65, 0x63, 0x72, 0x65, 0x74, 0x53, 0x68, 0x61, 0x72, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x51, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x4b, 0x12, 0x49, 0x2f, 0x71, 0x61,
	0x64, 0x65, 0x6e, 0x61, 0x2f, 0x71, 0x61, 0x64, 0x65, 0x6e, 0x61, 0x2f, 0x65, 0x6e, 0x63, 0x6c,
	0x61, 0x76, 0x65, 0x5f, 0x73, 0x65, 0x63, 0x72, 0x65, 0x74, 0x5f, 0x73, 0x68, 0x61, 0x72, 0x65,
	0x2f, 0x7b, 0x72, 0x65, 0x6d, 0x6f, 0x74, 0x65, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x7d, 0x2f,
	0x7b, 0x65, 0x6e, 0x63, 0x6c, 0x61, 0x76, 0x65, 0x50, 0x75, 0x62, 0x4b, 0x7d, 0x2f, 0x7b, 0x70,
	0x75, 0x62, 0x4b, 0x49, 0x44, 0x7d, 0x12, 0xf3, 0x01, 0x0a, 0x16, 0x45, 0x6e, 0x63, 0x6c, 0x61,
	0x76, 0x65, 0x52, 0x65, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x4b, 0x65, 0x79, 0x53, 0x68, 0x61, 0x72,
	0x65, 0x12, 0x31, 0x2e, 0x71, 0x61, 0x64, 0x65, 0x6e, 0x61, 0x2e, 0x71, 0x61, 0x64, 0x65, 0x6e,
	0x61, 0x2e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x45, 0x6e, 0x63, 0x6c, 0x61, 0x76, 0x65, 0x52, 0x65,
	0x63, 0x6f, 0x76, 0x65, 0x72, 0x4b, 0x65, 0x79, 0x53, 0x68, 0x61, 0x72, 0x65, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x32, 0x2e, 0x71, 0x61, 0x64, 0x65, 0x6e, 0x61, 0x2e, 0x71, 0x61,
	0x64, 0x65, 0x6e, 0x61, 0x2e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x45, 0x6e, 0x63, 0x6c, 0x61, 0x76,
	0x65, 0x52, 0x65, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x4b, 0x65, 0x79, 0x53, 0x68, 0x61, 0x72, 0x65,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x72, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x6c,
	0x12, 0x6a, 0x2f, 0x71, 0x61, 0x64, 0x65, 0x6e, 0x61, 0x2f, 0x71, 0x61, 0x64, 0x65, 0x6e, 0x61,
	0x2f, 0x65, 0x6e, 0x63, 0x6c, 0x61, 0x76, 0x65, 0x5f, 0x72, 0x65, 0x63, 0x6f, 0x76, 0x65, 0x72,
	0x5f, 0x6b, 0x65, 0x79, 0x5f, 0x73, 0x68, 0x61, 0x72, 0x65, 0x2f, 0x7b, 0x72, 0x65, 0x6d, 0x6f,
	0x74, 0x65, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x7d, 0x2f, 0x7b, 0x6e, 0x65, 0x77, 0x57, 0x61,
	0x6c, 0x6c, 0x65, 0x74, 0x49, 0x44, 0x7d, 0x2f, 0x7b, 0x73, 0x68, 0x61, 0x72, 0x65, 0x57, 0x61,
	0x6c, 0x6c, 0x65, 0x74, 0x49, 0x44, 0x7d, 0x2f, 0x7b, 0x65, 0x6e, 0x63, 0x53, 0x68, 0x61, 0x72,
	0x65, 0x57, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x50, 0x75, 0x62, 0x4b, 0x7d, 0x12, 0x82, 0x02, 0x0a,
	0x1e, 0x45, 0x6e, 0x63, 0x6c, 0x61, 0x76, 0x65, 0x56, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65,
	0x45, 0x6e, 0x63, 0x6c, 0x61, 0x76, 0x65, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x12,
	0x39, 0x2e, 0x71, 0x61, 0x64, 0x65, 0x6e, 0x61, 0x2e, 0x71, 0x61, 0x64, 0x65, 0x6e, 0x61, 0x2e,
	0x51, 0x75, 0x65, 0x72, 0x79, 0x45, 0x6e, 0x63, 0x6c, 0x61, 0x76, 0x65, 0x56, 0x61, 0x6c, 0x69,
	0x64, 0x61, 0x74, 0x65, 0x45, 0x6e, 0x63, 0x6c, 0x61, 0x76, 0x65, 0x49, 0x64, 0x65, 0x6e, 0x74,
	0x69, 0x74, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x3a, 0x2e, 0x71, 0x61, 0x64,
	0x65, 0x6e, 0x61, 0x2e, 0x71, 0x61, 0x64, 0x65, 0x6e, 0x61, 0x2e, 0x51, 0x75, 0x65, 0x72, 0x79,
	0x45, 0x6e, 0x63, 0x6c, 0x61, 0x76, 0x65, 0x56, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x45,
	0x6e, 0x63, 0x6c, 0x61, 0x76, 0x65, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x69, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x63, 0x12, 0x61,
	0x2f, 0x71, 0x61, 0x64, 0x65, 0x6e, 0x61, 0x2f, 0x71, 0x61, 0x64, 0x65, 0x6e, 0x61, 0x2f, 0x65,
	0x6e, 0x63, 0x6c, 0x61, 0x76, 0x65, 0x5f, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x5f,
	0x65, 0x6e, 0x63, 0x6c, 0x61, 0x76, 0x65, 0x5f, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79,
	0x2f, 0x7b, 0x72, 0x65, 0x6d, 0x6f, 0x74, 0x65, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x7d, 0x2f,
	0x7b, 0x75, 0x6e, 0x69, 0x71, 0x75, 0x65, 0x49, 0x44, 0x7d, 0x2f, 0x7b, 0x73, 0x69, 0x67, 0x6e,
	0x65, 0x72, 0x49, 0x44, 0x7d, 0x2f, 0x7b, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x49, 0x44,
	0x7d, 0x12, 0xa1, 0x02, 0x0a, 0x0e, 0x46, 0x69, 0x6e, 0x64, 0x43, 0x72, 0x65, 0x64, 0x65, 0x6e,
	0x74, 0x69, 0x61, 0x6c, 0x12, 0x29, 0x2e, 0x71, 0x61, 0x64, 0x65, 0x6e, 0x61, 0x2e, 0x71, 0x61,
	0x64, 0x65, 0x6e, 0x61, 0x2e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x46, 0x69, 0x6e, 0x64, 0x43, 0x72,
	0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x2a, 0x2e, 0x71, 0x61, 0x64, 0x65, 0x6e, 0x61, 0x2e, 0x71, 0x61, 0x64, 0x65, 0x6e, 0x61, 0x2e,
	0x51, 0x75, 0x65, 0x72, 0x79, 0x46, 0x69, 0x6e, 0x64, 0x43, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74,
	0x69, 0x61, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0xb7, 0x01, 0x82, 0xd3,
	0xe4, 0x93, 0x02, 0xb0, 0x01, 0x12, 0xad, 0x01, 0x2f, 0x71, 0x61, 0x64, 0x65, 0x6e, 0x61, 0x2f,
	0x71, 0x61, 0x64, 0x65, 0x6e, 0x61, 0x2f, 0x66, 0x69, 0x6e, 0x64, 0x5f, 0x63, 0x72, 0x65, 0x64,
	0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x2f, 0x7b, 0x63, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69,
	0x61, 0x6c, 0x50, 0x43, 0x7d, 0x2f, 0x7b, 0x63, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61,
	0x6c, 0x54, 0x79, 0x70, 0x65, 0x7d, 0x2f, 0x7b, 0x73, 0x53, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x76,
	0x61, 0x6c, 0x50, 0x75, 0x62, 0x4b, 0x49, 0x44, 0x7d, 0x2f, 0x7b, 0x65, 0x6e, 0x63, 0x55, 0x73,
	0x65, 0x72, 0x43, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x50, 0x75, 0x62, 0x4b,
	0x53, 0x53, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x76, 0x61, 0x6c, 0x50, 0x75, 0x62, 0x4b, 0x7d, 0x2f,
	0x7b, 0x65, 0x6e, 0x63, 0x50, 0x72, 0x6f, 0x6f, 0x66, 0x50, 0x43, 0x53, 0x53, 0x49, 0x6e, 0x74,
	0x65, 0x72, 0x76, 0x61, 0x6c, 0x50, 0x75, 0x62, 0x4b, 0x7d, 0x2f, 0x7b, 0x65, 0x6e, 0x63, 0x43,
	0x68, 0x65, 0x63, 0x6b, 0x50, 0x43, 0x53, 0x53, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x76, 0x61, 0x6c,
	0x50, 0x75, 0x62, 0x4b, 0x7d, 0x12, 0xa4, 0x01, 0x0a, 0x0f, 0x45, 0x6e, 0x63, 0x6c, 0x61, 0x76,
	0x65, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x12, 0x2d, 0x2e, 0x71, 0x61, 0x64, 0x65,
	0x6e, 0x61, 0x2e, 0x71, 0x61, 0x64, 0x65, 0x6e, 0x61, 0x2e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x47,
	0x65, 0x74, 0x45, 0x6e, 0x63, 0x6c, 0x61, 0x76, 0x65, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74,
	0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2e, 0x2e, 0x71, 0x61, 0x64, 0x65, 0x6e,
	0x61, 0x2e, 0x71, 0x61, 0x64, 0x65, 0x6e, 0x61, 0x2e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x47, 0x65,
	0x74, 0x45, 0x6e, 0x63, 0x6c, 0x61, 0x76, 0x65, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x32, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x2c,
	0x12, 0x2a, 0x2f, 0x71, 0x61, 0x64, 0x65, 0x6e, 0x61, 0x2f, 0x71, 0x61, 0x64, 0x65, 0x6e, 0x61,
	0x2f, 0x65, 0x6e, 0x63, 0x6c, 0x61, 0x76, 0x65, 0x5f, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74,
	0x79, 0x2f, 0x7b, 0x75, 0x6e, 0x69, 0x71, 0x75, 0x65, 0x49, 0x44, 0x7d, 0x12, 0x9c, 0x01, 0x0a,
	0x12, 0x45, 0x6e, 0x63, 0x6c, 0x61, 0x76, 0x65, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79,
	0x41, 0x6c, 0x6c, 0x12, 0x2d, 0x2e, 0x71, 0x61, 0x64, 0x65, 0x6e, 0x61, 0x2e, 0x71, 0x61, 0x64,
	0x65, 0x6e, 0x61, 0x2e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x41, 0x6c, 0x6c, 0x45, 0x6e, 0x63, 0x6c,
	0x61, 0x76, 0x65, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x2e, 0x2e, 0x71, 0x61, 0x64, 0x65, 0x6e, 0x61, 0x2e, 0x71, 0x61, 0x64, 0x65,
	0x6e, 0x61, 0x2e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x41, 0x6c, 0x6c, 0x45, 0x6e, 0x63, 0x6c, 0x61,
	0x76, 0x65, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x27, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x21, 0x12, 0x1f, 0x2f, 0x71, 0x61, 0x64,
	0x65, 0x6e, 0x61, 0x2f, 0x71, 0x61, 0x64, 0x65, 0x6e, 0x61, 0x2f, 0x65, 0x6e, 0x63, 0x6c, 0x61,
	0x76, 0x65, 0x5f, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x42, 0x94, 0x01, 0x0a, 0x11,
	0x63, 0x6f, 0x6d, 0x2e, 0x71, 0x61, 0x64, 0x65, 0x6e, 0x61, 0x2e, 0x71, 0x61, 0x64, 0x65, 0x6e,
	0x61, 0x42, 0x0a, 0x51, 0x75, 0x65, 0x72, 0x79, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x50, 0x01, 0x5a,
	0x1e, 0x63, 0x6f, 0x73, 0x6d, 0x6f, 0x73, 0x73, 0x64, 0x6b, 0x2e, 0x69, 0x6f, 0x2f, 0x61, 0x70,
	0x69, 0x2f, 0x71, 0x61, 0x64, 0x65, 0x6e, 0x61, 0x2f, 0x71, 0x61, 0x64, 0x65, 0x6e, 0x61, 0xa2,
	0x02, 0x03, 0x51, 0x51, 0x58, 0xaa, 0x02, 0x0d, 0x51, 0x61, 0x64, 0x65, 0x6e, 0x61, 0x2e, 0x51,
	0x61, 0x64, 0x65, 0x6e, 0x61, 0xca, 0x02, 0x0d, 0x51, 0x61, 0x64, 0x65, 0x6e, 0x61, 0x5c, 0x51,
	0x61, 0x64, 0x65, 0x6e, 0x61, 0xe2, 0x02, 0x19, 0x51, 0x61, 0x64, 0x65, 0x6e, 0x61, 0x5c, 0x51,
	0x61, 0x64, 0x65, 0x6e, 0x61, 0x5c, 0x47, 0x50, 0x42, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74,
	0x61, 0xea, 0x02, 0x0e, 0x51, 0x61, 0x64, 0x65, 0x6e, 0x61, 0x3a, 0x3a, 0x51, 0x61, 0x64, 0x65,
	0x6e, 0x61, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_qadena_qadena_query_proto_rawDescOnce sync.Once
	file_qadena_qadena_query_proto_rawDescData = file_qadena_qadena_query_proto_rawDesc
)

func file_qadena_qadena_query_proto_rawDescGZIP() []byte {
	file_qadena_qadena_query_proto_rawDescOnce.Do(func() {
		file_qadena_qadena_query_proto_rawDescData = protoimpl.X.CompressGZIP(file_qadena_qadena_query_proto_rawDescData)
	})
	return file_qadena_qadena_query_proto_rawDescData
}

var file_qadena_qadena_query_proto_msgTypes = make([]protoimpl.MessageInfo, 58)
var file_qadena_qadena_query_proto_goTypes = []interface{}{
	(*QueryParamsRequest)(nil),                          // 0: qadena.qadena.QueryParamsRequest
	(*QueryParamsResponse)(nil),                         // 1: qadena.qadena.QueryParamsResponse
	(*QueryGetCredentialRequest)(nil),                   // 2: qadena.qadena.QueryGetCredentialRequest
	(*QueryGetCredentialResponse)(nil),                  // 3: qadena.qadena.QueryGetCredentialResponse
	(*QueryAllCredentialRequest)(nil),                   // 4: qadena.qadena.QueryAllCredentialRequest
	(*QueryAllCredentialResponse)(nil),                  // 5: qadena.qadena.QueryAllCredentialResponse
	(*QueryGetPublicKeyRequest)(nil),                    // 6: qadena.qadena.QueryGetPublicKeyRequest
	(*QueryGetPublicKeyResponse)(nil),                   // 7: qadena.qadena.QueryGetPublicKeyResponse
	(*QueryAllPublicKeyRequest)(nil),                    // 8: qadena.qadena.QueryAllPublicKeyRequest
	(*QueryAllPublicKeyResponse)(nil),                   // 9: qadena.qadena.QueryAllPublicKeyResponse
	(*QueryGetWalletRequest)(nil),                       // 10: qadena.qadena.QueryGetWalletRequest
	(*QueryGetWalletResponse)(nil),                      // 11: qadena.qadena.QueryGetWalletResponse
	(*QueryAllWalletRequest)(nil),                       // 12: qadena.qadena.QueryAllWalletRequest
	(*QueryAllWalletResponse)(nil),                      // 13: qadena.qadena.QueryAllWalletResponse
	(*QueryGetIntervalPublicKeyIDRequest)(nil),          // 14: qadena.qadena.QueryGetIntervalPublicKeyIDRequest
	(*QueryGetIntervalPublicKeyIDResponse)(nil),         // 15: qadena.qadena.QueryGetIntervalPublicKeyIDResponse
	(*QueryAllIntervalPublicKeyIDRequest)(nil),          // 16: qadena.qadena.QueryAllIntervalPublicKeyIDRequest
	(*QueryAllIntervalPublicKeyIDResponse)(nil),         // 17: qadena.qadena.QueryAllIntervalPublicKeyIDResponse
	(*QueryGetPioneerJarRequest)(nil),                   // 18: qadena.qadena.QueryGetPioneerJarRequest
	(*QueryGetPioneerJarResponse)(nil),                  // 19: qadena.qadena.QueryGetPioneerJarResponse
	(*QueryAllPioneerJarRequest)(nil),                   // 20: qadena.qadena.QueryAllPioneerJarRequest
	(*QueryAllPioneerJarResponse)(nil),                  // 21: qadena.qadena.QueryAllPioneerJarResponse
	(*QueryGetJarRegulatorRequest)(nil),                 // 22: qadena.qadena.QueryGetJarRegulatorRequest
	(*QueryGetJarRegulatorResponse)(nil),                // 23: qadena.qadena.QueryGetJarRegulatorResponse
	(*QueryAllJarRegulatorRequest)(nil),                 // 24: qadena.qadena.QueryAllJarRegulatorRequest
	(*QueryAllJarRegulatorResponse)(nil),                // 25: qadena.qadena.QueryAllJarRegulatorResponse
	(*QueryGetSuspiciousTransactionRequest)(nil),        // 26: qadena.qadena.QueryGetSuspiciousTransactionRequest
	(*QueryGetSuspiciousTransactionResponse)(nil),       // 27: qadena.qadena.QueryGetSuspiciousTransactionResponse
	(*QueryAllSuspiciousTransactionRequest)(nil),        // 28: qadena.qadena.QueryAllSuspiciousTransactionRequest
	(*QueryAllSuspiciousTransactionResponse)(nil),       // 29: qadena.qadena.QueryAllSuspiciousTransactionResponse
	(*QueryGetProtectKeyRequest)(nil),                   // 30: qadena.qadena.QueryGetProtectKeyRequest
	(*QueryGetProtectKeyResponse)(nil),                  // 31: qadena.qadena.QueryGetProtectKeyResponse
	(*QueryAllProtectKeyRequest)(nil),                   // 32: qadena.qadena.QueryAllProtectKeyRequest
	(*QueryAllProtectKeyResponse)(nil),                  // 33: qadena.qadena.QueryAllProtectKeyResponse
	(*QueryGetRecoverKeyRequest)(nil),                   // 34: qadena.qadena.QueryGetRecoverKeyRequest
	(*QueryGetRecoverKeyResponse)(nil),                  // 35: qadena.qadena.QueryGetRecoverKeyResponse
	(*QueryAllRecoverKeyRequest)(nil),                   // 36: qadena.qadena.QueryAllRecoverKeyRequest
	(*QueryAllRecoverKeyResponse)(nil),                  // 37: qadena.qadena.QueryAllRecoverKeyResponse
	(*QueryTreasuryRequest)(nil),                        // 38: qadena.qadena.QueryTreasuryRequest
	(*QueryTreasuryResponse)(nil),                       // 39: qadena.qadena.QueryTreasuryResponse
	(*QueryAccountRequest)(nil),                         // 40: qadena.qadena.QueryAccountRequest
	(*QueryAccountResponse)(nil),                        // 41: qadena.qadena.QueryAccountResponse
	(*QueryIncentivesRequest)(nil),                      // 42: qadena.qadena.QueryIncentivesRequest
	(*QueryIncentivesResponse)(nil),                     // 43: qadena.qadena.QueryIncentivesResponse
	(*QueryEnclaveValidateEnclaveIdentityRequest)(nil),  // 44: qadena.qadena.QueryEnclaveValidateEnclaveIdentityRequest
	(*QueryEnclaveValidateEnclaveIdentityResponse)(nil), // 45: qadena.qadena.QueryEnclaveValidateEnclaveIdentityResponse
	(*QueryEnclaveSyncEnclaveRequest)(nil),              // 46: qadena.qadena.QueryEnclaveSyncEnclaveRequest
	(*QueryEnclaveSyncEnclaveResponse)(nil),             // 47: qadena.qadena.QueryEnclaveSyncEnclaveResponse
	(*QueryEnclaveSecretShareRequest)(nil),              // 48: qadena.qadena.QueryEnclaveSecretShareRequest
	(*QueryEnclaveSecretShareResponse)(nil),             // 49: qadena.qadena.QueryEnclaveSecretShareResponse
	(*QueryEnclaveRecoverKeyShareRequest)(nil),          // 50: qadena.qadena.QueryEnclaveRecoverKeyShareRequest
	(*QueryEnclaveRecoverKeyShareResponse)(nil),         // 51: qadena.qadena.QueryEnclaveRecoverKeyShareResponse
	(*QueryFindCredentialRequest)(nil),                  // 52: qadena.qadena.QueryFindCredentialRequest
	(*QueryFindCredentialResponse)(nil),                 // 53: qadena.qadena.QueryFindCredentialResponse
	(*QueryGetEnclaveIdentityRequest)(nil),              // 54: qadena.qadena.QueryGetEnclaveIdentityRequest
	(*QueryGetEnclaveIdentityResponse)(nil),             // 55: qadena.qadena.QueryGetEnclaveIdentityResponse
	(*QueryAllEnclaveIdentityRequest)(nil),              // 56: qadena.qadena.QueryAllEnclaveIdentityRequest
	(*QueryAllEnclaveIdentityResponse)(nil),             // 57: qadena.qadena.QueryAllEnclaveIdentityResponse
	(*Params)(nil),                                      // 58: qadena.qadena.Params
	(*Credential)(nil),                                  // 59: qadena.qadena.Credential
	(*v1beta1.PageRequest)(nil),                         // 60: cosmos.base.query.v1beta1.PageRequest
	(*v1beta1.PageResponse)(nil),                        // 61: cosmos.base.query.v1beta1.PageResponse
	(*PublicKey)(nil),                                   // 62: qadena.qadena.PublicKey
	(*Wallet)(nil),                                      // 63: qadena.qadena.Wallet
	(*IntervalPublicKeyID)(nil),                         // 64: qadena.qadena.IntervalPublicKeyID
	(*PioneerJar)(nil),                                  // 65: qadena.qadena.PioneerJar
	(*JarRegulator)(nil),                                // 66: qadena.qadena.JarRegulator
	(*SuspiciousTransaction)(nil),                       // 67: qadena.qadena.SuspiciousTransaction
	(*ProtectKey)(nil),                                  // 68: qadena.qadena.ProtectKey
	(*RecoverKey)(nil),                                  // 69: qadena.qadena.RecoverKey
	(*v1beta11.Coin)(nil),                               // 70: cosmos.base.v1beta1.Coin
	(*EnclaveIdentity)(nil),                             // 71: qadena.qadena.EnclaveIdentity
}
var file_qadena_qadena_query_proto_depIdxs = []int32{
	58, // 0: qadena.qadena.QueryParamsResponse.params:type_name -> qadena.qadena.Params
	59, // 1: qadena.qadena.QueryGetCredentialResponse.credential:type_name -> qadena.qadena.Credential
	60, // 2: qadena.qadena.QueryAllCredentialRequest.pagination:type_name -> cosmos.base.query.v1beta1.PageRequest
	59, // 3: qadena.qadena.QueryAllCredentialResponse.credential:type_name -> qadena.qadena.Credential
	61, // 4: qadena.qadena.QueryAllCredentialResponse.pagination:type_name -> cosmos.base.query.v1beta1.PageResponse
	62, // 5: qadena.qadena.QueryGetPublicKeyResponse.publicKey:type_name -> qadena.qadena.PublicKey
	60, // 6: qadena.qadena.QueryAllPublicKeyRequest.pagination:type_name -> cosmos.base.query.v1beta1.PageRequest
	62, // 7: qadena.qadena.QueryAllPublicKeyResponse.publicKey:type_name -> qadena.qadena.PublicKey
	61, // 8: qadena.qadena.QueryAllPublicKeyResponse.pagination:type_name -> cosmos.base.query.v1beta1.PageResponse
	63, // 9: qadena.qadena.QueryGetWalletResponse.wallet:type_name -> qadena.qadena.Wallet
	60, // 10: qadena.qadena.QueryAllWalletRequest.pagination:type_name -> cosmos.base.query.v1beta1.PageRequest
	63, // 11: qadena.qadena.QueryAllWalletResponse.wallet:type_name -> qadena.qadena.Wallet
	61, // 12: qadena.qadena.QueryAllWalletResponse.pagination:type_name -> cosmos.base.query.v1beta1.PageResponse
	64, // 13: qadena.qadena.QueryGetIntervalPublicKeyIDResponse.intervalPublicKeyID:type_name -> qadena.qadena.IntervalPublicKeyID
	60, // 14: qadena.qadena.QueryAllIntervalPublicKeyIDRequest.pagination:type_name -> cosmos.base.query.v1beta1.PageRequest
	64, // 15: qadena.qadena.QueryAllIntervalPublicKeyIDResponse.intervalPublicKeyID:type_name -> qadena.qadena.IntervalPublicKeyID
	61, // 16: qadena.qadena.QueryAllIntervalPublicKeyIDResponse.pagination:type_name -> cosmos.base.query.v1beta1.PageResponse
	65, // 17: qadena.qadena.QueryGetPioneerJarResponse.pioneerJar:type_name -> qadena.qadena.PioneerJar
	60, // 18: qadena.qadena.QueryAllPioneerJarRequest.pagination:type_name -> cosmos.base.query.v1beta1.PageRequest
	65, // 19: qadena.qadena.QueryAllPioneerJarResponse.pioneerJar:type_name -> qadena.qadena.PioneerJar
	61, // 20: qadena.qadena.QueryAllPioneerJarResponse.pagination:type_name -> cosmos.base.query.v1beta1.PageResponse
	66, // 21: qadena.qadena.QueryGetJarRegulatorResponse.jarRegulator:type_name -> qadena.qadena.JarRegulator
	60, // 22: qadena.qadena.QueryAllJarRegulatorRequest.pagination:type_name -> cosmos.base.query.v1beta1.PageRequest
	66, // 23: qadena.qadena.QueryAllJarRegulatorResponse.jarRegulator:type_name -> qadena.qadena.JarRegulator
	61, // 24: qadena.qadena.QueryAllJarRegulatorResponse.pagination:type_name -> cosmos.base.query.v1beta1.PageResponse
	67, // 25: qadena.qadena.QueryGetSuspiciousTransactionResponse.SuspiciousTransaction:type_name -> qadena.qadena.SuspiciousTransaction
	60, // 26: qadena.qadena.QueryAllSuspiciousTransactionRequest.pagination:type_name -> cosmos.base.query.v1beta1.PageRequest
	67, // 27: qadena.qadena.QueryAllSuspiciousTransactionResponse.SuspiciousTransaction:type_name -> qadena.qadena.SuspiciousTransaction
	61, // 28: qadena.qadena.QueryAllSuspiciousTransactionResponse.pagination:type_name -> cosmos.base.query.v1beta1.PageResponse
	68, // 29: qadena.qadena.QueryGetProtectKeyResponse.protectKey:type_name -> qadena.qadena.ProtectKey
	60, // 30: qadena.qadena.QueryAllProtectKeyRequest.pagination:type_name -> cosmos.base.query.v1beta1.PageRequest
	68, // 31: qadena.qadena.QueryAllProtectKeyResponse.protectKey:type_name -> qadena.qadena.ProtectKey
	61, // 32: qadena.qadena.QueryAllProtectKeyResponse.pagination:type_name -> cosmos.base.query.v1beta1.PageResponse
	69, // 33: qadena.qadena.QueryGetRecoverKeyResponse.recoverKey:type_name -> qadena.qadena.RecoverKey
	60, // 34: qadena.qadena.QueryAllRecoverKeyRequest.pagination:type_name -> cosmos.base.query.v1beta1.PageRequest
	69, // 35: qadena.qadena.QueryAllRecoverKeyResponse.recoverKey:type_name -> qadena.qadena.RecoverKey
	61, // 36: qadena.qadena.QueryAllRecoverKeyResponse.pagination:type_name -> cosmos.base.query.v1beta1.PageResponse
	70, // 37: qadena.qadena.QueryTreasuryResponse.totalBalance:type_name -> cosmos.base.v1beta1.Coin
	70, // 38: qadena.qadena.QueryTreasuryResponse.encryptedBalance:type_name -> cosmos.base.v1beta1.Coin
	70, // 39: qadena.qadena.QueryIncentivesResponse.createWalletIncentive:type_name -> cosmos.base.v1beta1.Coin
	70, // 40: qadena.qadena.QueryIncentivesResponse.createEphemeralWalletIncentive:type_name -> cosmos.base.v1beta1.Coin
	70, // 41: qadena.qadena.QueryIncentivesResponse.createWalletTransparentIncentive:type_name -> cosmos.base.v1beta1.Coin
	70, // 42: qadena.qadena.QueryIncentivesResponse.createEphemeralWalletTransparentIncentive:type_name -> cosmos.base.v1beta1.Coin
	71, // 43: qadena.qadena.QueryGetEnclaveIdentityResponse.enclaveIdentity:type_name -> qadena.qadena.EnclaveIdentity
	60, // 44: qadena.qadena.QueryAllEnclaveIdentityRequest.pagination:type_name -> cosmos.base.query.v1beta1.PageRequest
	71, // 45: qadena.qadena.QueryAllEnclaveIdentityResponse.enclaveIdentity:type_name -> qadena.qadena.EnclaveIdentity
	61, // 46: qadena.qadena.QueryAllEnclaveIdentityResponse.pagination:type_name -> cosmos.base.query.v1beta1.PageResponse
	0,  // 47: qadena.qadena.Query.Params:input_type -> qadena.qadena.QueryParamsRequest
	2,  // 48: qadena.qadena.Query.Credential:input_type -> qadena.qadena.QueryGetCredentialRequest
	4,  // 49: qadena.qadena.Query.CredentialAll:input_type -> qadena.qadena.QueryAllCredentialRequest
	6,  // 50: qadena.qadena.Query.PublicKey:input_type -> qadena.qadena.QueryGetPublicKeyRequest
	8,  // 51: qadena.qadena.Query.PublicKeyAll:input_type -> qadena.qadena.QueryAllPublicKeyRequest
	10, // 52: qadena.qadena.Query.Wallet:input_type -> qadena.qadena.QueryGetWalletRequest
	12, // 53: qadena.qadena.Query.WalletAll:input_type -> qadena.qadena.QueryAllWalletRequest
	14, // 54: qadena.qadena.Query.IntervalPublicKeyID:input_type -> qadena.qadena.QueryGetIntervalPublicKeyIDRequest
	16, // 55: qadena.qadena.Query.IntervalPublicKeyIDAll:input_type -> qadena.qadena.QueryAllIntervalPublicKeyIDRequest
	18, // 56: qadena.qadena.Query.PioneerJar:input_type -> qadena.qadena.QueryGetPioneerJarRequest
	20, // 57: qadena.qadena.Query.PioneerJarAll:input_type -> qadena.qadena.QueryAllPioneerJarRequest
	22, // 58: qadena.qadena.Query.JarRegulator:input_type -> qadena.qadena.QueryGetJarRegulatorRequest
	24, // 59: qadena.qadena.Query.JarRegulatorAll:input_type -> qadena.qadena.QueryAllJarRegulatorRequest
	26, // 60: qadena.qadena.Query.SuspiciousTransaction:input_type -> qadena.qadena.QueryGetSuspiciousTransactionRequest
	28, // 61: qadena.qadena.Query.SuspiciousTransactionAll:input_type -> qadena.qadena.QueryAllSuspiciousTransactionRequest
	30, // 62: qadena.qadena.Query.ProtectKey:input_type -> qadena.qadena.QueryGetProtectKeyRequest
	32, // 63: qadena.qadena.Query.ProtectKeyAll:input_type -> qadena.qadena.QueryAllProtectKeyRequest
	34, // 64: qadena.qadena.Query.RecoverKey:input_type -> qadena.qadena.QueryGetRecoverKeyRequest
	36, // 65: qadena.qadena.Query.RecoverKeyAll:input_type -> qadena.qadena.QueryAllRecoverKeyRequest
	38, // 66: qadena.qadena.Query.Treasury:input_type -> qadena.qadena.QueryTreasuryRequest
	40, // 67: qadena.qadena.Query.Account:input_type -> qadena.qadena.QueryAccountRequest
	42, // 68: qadena.qadena.Query.Incentives:input_type -> qadena.qadena.QueryIncentivesRequest
	46, // 69: qadena.qadena.Query.EnclaveSyncEnclave:input_type -> qadena.qadena.QueryEnclaveSyncEnclaveRequest
	48, // 70: qadena.qadena.Query.EnclaveSecretShare:input_type -> qadena.qadena.QueryEnclaveSecretShareRequest
	50, // 71: qadena.qadena.Query.EnclaveRecoverKeyShare:input_type -> qadena.qadena.QueryEnclaveRecoverKeyShareRequest
	44, // 72: qadena.qadena.Query.EnclaveValidateEnclaveIdentity:input_type -> qadena.qadena.QueryEnclaveValidateEnclaveIdentityRequest
	52, // 73: qadena.qadena.Query.FindCredential:input_type -> qadena.qadena.QueryFindCredentialRequest
	54, // 74: qadena.qadena.Query.EnclaveIdentity:input_type -> qadena.qadena.QueryGetEnclaveIdentityRequest
	56, // 75: qadena.qadena.Query.EnclaveIdentityAll:input_type -> qadena.qadena.QueryAllEnclaveIdentityRequest
	1,  // 76: qadena.qadena.Query.Params:output_type -> qadena.qadena.QueryParamsResponse
	3,  // 77: qadena.qadena.Query.Credential:output_type -> qadena.qadena.QueryGetCredentialResponse
	5,  // 78: qadena.qadena.Query.CredentialAll:output_type -> qadena.qadena.QueryAllCredentialResponse
	7,  // 79: qadena.qadena.Query.PublicKey:output_type -> qadena.qadena.QueryGetPublicKeyResponse
	9,  // 80: qadena.qadena.Query.PublicKeyAll:output_type -> qadena.qadena.QueryAllPublicKeyResponse
	11, // 81: qadena.qadena.Query.Wallet:output_type -> qadena.qadena.QueryGetWalletResponse
	13, // 82: qadena.qadena.Query.WalletAll:output_type -> qadena.qadena.QueryAllWalletResponse
	15, // 83: qadena.qadena.Query.IntervalPublicKeyID:output_type -> qadena.qadena.QueryGetIntervalPublicKeyIDResponse
	17, // 84: qadena.qadena.Query.IntervalPublicKeyIDAll:output_type -> qadena.qadena.QueryAllIntervalPublicKeyIDResponse
	19, // 85: qadena.qadena.Query.PioneerJar:output_type -> qadena.qadena.QueryGetPioneerJarResponse
	21, // 86: qadena.qadena.Query.PioneerJarAll:output_type -> qadena.qadena.QueryAllPioneerJarResponse
	23, // 87: qadena.qadena.Query.JarRegulator:output_type -> qadena.qadena.QueryGetJarRegulatorResponse
	25, // 88: qadena.qadena.Query.JarRegulatorAll:output_type -> qadena.qadena.QueryAllJarRegulatorResponse
	27, // 89: qadena.qadena.Query.SuspiciousTransaction:output_type -> qadena.qadena.QueryGetSuspiciousTransactionResponse
	29, // 90: qadena.qadena.Query.SuspiciousTransactionAll:output_type -> qadena.qadena.QueryAllSuspiciousTransactionResponse
	31, // 91: qadena.qadena.Query.ProtectKey:output_type -> qadena.qadena.QueryGetProtectKeyResponse
	33, // 92: qadena.qadena.Query.ProtectKeyAll:output_type -> qadena.qadena.QueryAllProtectKeyResponse
	35, // 93: qadena.qadena.Query.RecoverKey:output_type -> qadena.qadena.QueryGetRecoverKeyResponse
	37, // 94: qadena.qadena.Query.RecoverKeyAll:output_type -> qadena.qadena.QueryAllRecoverKeyResponse
	39, // 95: qadena.qadena.Query.Treasury:output_type -> qadena.qadena.QueryTreasuryResponse
	41, // 96: qadena.qadena.Query.Account:output_type -> qadena.qadena.QueryAccountResponse
	43, // 97: qadena.qadena.Query.Incentives:output_type -> qadena.qadena.QueryIncentivesResponse
	47, // 98: qadena.qadena.Query.EnclaveSyncEnclave:output_type -> qadena.qadena.QueryEnclaveSyncEnclaveResponse
	49, // 99: qadena.qadena.Query.EnclaveSecretShare:output_type -> qadena.qadena.QueryEnclaveSecretShareResponse
	51, // 100: qadena.qadena.Query.EnclaveRecoverKeyShare:output_type -> qadena.qadena.QueryEnclaveRecoverKeyShareResponse
	45, // 101: qadena.qadena.Query.EnclaveValidateEnclaveIdentity:output_type -> qadena.qadena.QueryEnclaveValidateEnclaveIdentityResponse
	53, // 102: qadena.qadena.Query.FindCredential:output_type -> qadena.qadena.QueryFindCredentialResponse
	55, // 103: qadena.qadena.Query.EnclaveIdentity:output_type -> qadena.qadena.QueryGetEnclaveIdentityResponse
	57, // 104: qadena.qadena.Query.EnclaveIdentityAll:output_type -> qadena.qadena.QueryAllEnclaveIdentityResponse
	76, // [76:105] is the sub-list for method output_type
	47, // [47:76] is the sub-list for method input_type
	47, // [47:47] is the sub-list for extension type_name
	47, // [47:47] is the sub-list for extension extendee
	0,  // [0:47] is the sub-list for field type_name
}

func init() { file_qadena_qadena_query_proto_init() }
func file_qadena_qadena_query_proto_init() {
	if File_qadena_qadena_query_proto != nil {
		return
	}
	file_qadena_qadena_params_proto_init()
	file_qadena_qadena_credential_proto_init()
	file_qadena_qadena_public_key_proto_init()
	file_qadena_qadena_wallet_proto_init()
	file_qadena_qadena_interval_public_key_i_d_proto_init()
	file_qadena_qadena_pioneer_jar_proto_init()
	file_qadena_qadena_jar_regulator_proto_init()
	file_qadena_qadena_suspicious_transaction_proto_init()
	file_qadena_qadena_protect_key_proto_init()
	file_qadena_qadena_recover_share_proto_init()
	file_qadena_qadena_recover_key_proto_init()
	file_qadena_qadena_b_pedersen_commit_proto_init()
	file_qadena_qadena_enclave_identity_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_qadena_qadena_query_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryParamsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_qadena_qadena_query_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryParamsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_qadena_qadena_query_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryGetCredentialRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_qadena_qadena_query_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryGetCredentialResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_qadena_qadena_query_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryAllCredentialRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_qadena_qadena_query_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryAllCredentialResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_qadena_qadena_query_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryGetPublicKeyRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_qadena_qadena_query_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryGetPublicKeyResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_qadena_qadena_query_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryAllPublicKeyRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_qadena_qadena_query_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryAllPublicKeyResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_qadena_qadena_query_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryGetWalletRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_qadena_qadena_query_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryGetWalletResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_qadena_qadena_query_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryAllWalletRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_qadena_qadena_query_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryAllWalletResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_qadena_qadena_query_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryGetIntervalPublicKeyIDRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_qadena_qadena_query_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryGetIntervalPublicKeyIDResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_qadena_qadena_query_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryAllIntervalPublicKeyIDRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_qadena_qadena_query_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryAllIntervalPublicKeyIDResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_qadena_qadena_query_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryGetPioneerJarRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_qadena_qadena_query_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryGetPioneerJarResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_qadena_qadena_query_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryAllPioneerJarRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_qadena_qadena_query_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryAllPioneerJarResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_qadena_qadena_query_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryGetJarRegulatorRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_qadena_qadena_query_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryGetJarRegulatorResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_qadena_qadena_query_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryAllJarRegulatorRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_qadena_qadena_query_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryAllJarRegulatorResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_qadena_qadena_query_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryGetSuspiciousTransactionRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_qadena_qadena_query_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryGetSuspiciousTransactionResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_qadena_qadena_query_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryAllSuspiciousTransactionRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_qadena_qadena_query_proto_msgTypes[29].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryAllSuspiciousTransactionResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_qadena_qadena_query_proto_msgTypes[30].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryGetProtectKeyRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_qadena_qadena_query_proto_msgTypes[31].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryGetProtectKeyResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_qadena_qadena_query_proto_msgTypes[32].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryAllProtectKeyRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_qadena_qadena_query_proto_msgTypes[33].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryAllProtectKeyResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_qadena_qadena_query_proto_msgTypes[34].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryGetRecoverKeyRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_qadena_qadena_query_proto_msgTypes[35].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryGetRecoverKeyResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_qadena_qadena_query_proto_msgTypes[36].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryAllRecoverKeyRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_qadena_qadena_query_proto_msgTypes[37].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryAllRecoverKeyResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_qadena_qadena_query_proto_msgTypes[38].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryTreasuryRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_qadena_qadena_query_proto_msgTypes[39].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryTreasuryResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_qadena_qadena_query_proto_msgTypes[40].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryAccountRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_qadena_qadena_query_proto_msgTypes[41].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryAccountResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_qadena_qadena_query_proto_msgTypes[42].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryIncentivesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_qadena_qadena_query_proto_msgTypes[43].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryIncentivesResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_qadena_qadena_query_proto_msgTypes[44].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryEnclaveValidateEnclaveIdentityRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_qadena_qadena_query_proto_msgTypes[45].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryEnclaveValidateEnclaveIdentityResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_qadena_qadena_query_proto_msgTypes[46].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryEnclaveSyncEnclaveRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_qadena_qadena_query_proto_msgTypes[47].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryEnclaveSyncEnclaveResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_qadena_qadena_query_proto_msgTypes[48].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryEnclaveSecretShareRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_qadena_qadena_query_proto_msgTypes[49].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryEnclaveSecretShareResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_qadena_qadena_query_proto_msgTypes[50].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryEnclaveRecoverKeyShareRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_qadena_qadena_query_proto_msgTypes[51].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryEnclaveRecoverKeyShareResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_qadena_qadena_query_proto_msgTypes[52].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryFindCredentialRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_qadena_qadena_query_proto_msgTypes[53].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryFindCredentialResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_qadena_qadena_query_proto_msgTypes[54].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryGetEnclaveIdentityRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_qadena_qadena_query_proto_msgTypes[55].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryGetEnclaveIdentityResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_qadena_qadena_query_proto_msgTypes[56].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryAllEnclaveIdentityRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_qadena_qadena_query_proto_msgTypes[57].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryAllEnclaveIdentityResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_qadena_qadena_query_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   58,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_qadena_qadena_query_proto_goTypes,
		DependencyIndexes: file_qadena_qadena_query_proto_depIdxs,
		MessageInfos:      file_qadena_qadena_query_proto_msgTypes,
	}.Build()
	File_qadena_qadena_query_proto = out.File
	file_qadena_qadena_query_proto_rawDesc = nil
	file_qadena_qadena_query_proto_goTypes = nil
	file_qadena_qadena_query_proto_depIdxs = nil
}
