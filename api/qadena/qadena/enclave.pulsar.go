// Code generated by protoc-gen-go-pulsar. DO NOT EDIT.
package qadena

import (
	fmt "fmt"
	runtime "github.com/cosmos/cosmos-proto/runtime"
	_ "github.com/cosmos/gogoproto/gogoproto"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoiface "google.golang.org/protobuf/runtime/protoiface"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	io "io"
	reflect "reflect"
	sync "sync"
)

var (
	md_HelloRequest      protoreflect.MessageDescriptor
	fd_HelloRequest_name protoreflect.FieldDescriptor
)

func init() {
	file_qadena_qadena_enclave_proto_init()
	md_HelloRequest = File_qadena_qadena_enclave_proto.Messages().ByName("HelloRequest")
	fd_HelloRequest_name = md_HelloRequest.Fields().ByName("name")
}

var _ protoreflect.Message = (*fastReflection_HelloRequest)(nil)

type fastReflection_HelloRequest HelloRequest

func (x *HelloRequest) ProtoReflect() protoreflect.Message {
	return (*fastReflection_HelloRequest)(x)
}

func (x *HelloRequest) slowProtoReflect() protoreflect.Message {
	mi := &file_qadena_qadena_enclave_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_HelloRequest_messageType fastReflection_HelloRequest_messageType
var _ protoreflect.MessageType = fastReflection_HelloRequest_messageType{}

type fastReflection_HelloRequest_messageType struct{}

func (x fastReflection_HelloRequest_messageType) Zero() protoreflect.Message {
	return (*fastReflection_HelloRequest)(nil)
}
func (x fastReflection_HelloRequest_messageType) New() protoreflect.Message {
	return new(fastReflection_HelloRequest)
}
func (x fastReflection_HelloRequest_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_HelloRequest
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_HelloRequest) Descriptor() protoreflect.MessageDescriptor {
	return md_HelloRequest
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_HelloRequest) Type() protoreflect.MessageType {
	return _fastReflection_HelloRequest_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_HelloRequest) New() protoreflect.Message {
	return new(fastReflection_HelloRequest)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_HelloRequest) Interface() protoreflect.ProtoMessage {
	return (*HelloRequest)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_HelloRequest) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.Name != "" {
		value := protoreflect.ValueOfString(x.Name)
		if !f(fd_HelloRequest_name, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_HelloRequest) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "qadena.qadena.HelloRequest.name":
		return x.Name != ""
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: qadena.qadena.HelloRequest"))
		}
		panic(fmt.Errorf("message qadena.qadena.HelloRequest does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_HelloRequest) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "qadena.qadena.HelloRequest.name":
		x.Name = ""
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: qadena.qadena.HelloRequest"))
		}
		panic(fmt.Errorf("message qadena.qadena.HelloRequest does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_HelloRequest) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "qadena.qadena.HelloRequest.name":
		value := x.Name
		return protoreflect.ValueOfString(value)
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: qadena.qadena.HelloRequest"))
		}
		panic(fmt.Errorf("message qadena.qadena.HelloRequest does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_HelloRequest) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "qadena.qadena.HelloRequest.name":
		x.Name = value.Interface().(string)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: qadena.qadena.HelloRequest"))
		}
		panic(fmt.Errorf("message qadena.qadena.HelloRequest does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_HelloRequest) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "qadena.qadena.HelloRequest.name":
		panic(fmt.Errorf("field name of message qadena.qadena.HelloRequest is not mutable"))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: qadena.qadena.HelloRequest"))
		}
		panic(fmt.Errorf("message qadena.qadena.HelloRequest does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_HelloRequest) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "qadena.qadena.HelloRequest.name":
		return protoreflect.ValueOfString("")
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: qadena.qadena.HelloRequest"))
		}
		panic(fmt.Errorf("message qadena.qadena.HelloRequest does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_HelloRequest) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in qadena.qadena.HelloRequest", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_HelloRequest) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_HelloRequest) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_HelloRequest) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_HelloRequest) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*HelloRequest)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		l = len(x.Name)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*HelloRequest)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if len(x.Name) > 0 {
			i -= len(x.Name)
			copy(dAtA[i:], x.Name)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.Name)))
			i--
			dAtA[i] = 0xa
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*HelloRequest)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: HelloRequest: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: HelloRequest: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Name", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Name = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var (
	md_HelloReply         protoreflect.MessageDescriptor
	fd_HelloReply_message protoreflect.FieldDescriptor
)

func init() {
	file_qadena_qadena_enclave_proto_init()
	md_HelloReply = File_qadena_qadena_enclave_proto.Messages().ByName("HelloReply")
	fd_HelloReply_message = md_HelloReply.Fields().ByName("message")
}

var _ protoreflect.Message = (*fastReflection_HelloReply)(nil)

type fastReflection_HelloReply HelloReply

func (x *HelloReply) ProtoReflect() protoreflect.Message {
	return (*fastReflection_HelloReply)(x)
}

func (x *HelloReply) slowProtoReflect() protoreflect.Message {
	mi := &file_qadena_qadena_enclave_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_HelloReply_messageType fastReflection_HelloReply_messageType
var _ protoreflect.MessageType = fastReflection_HelloReply_messageType{}

type fastReflection_HelloReply_messageType struct{}

func (x fastReflection_HelloReply_messageType) Zero() protoreflect.Message {
	return (*fastReflection_HelloReply)(nil)
}
func (x fastReflection_HelloReply_messageType) New() protoreflect.Message {
	return new(fastReflection_HelloReply)
}
func (x fastReflection_HelloReply_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_HelloReply
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_HelloReply) Descriptor() protoreflect.MessageDescriptor {
	return md_HelloReply
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_HelloReply) Type() protoreflect.MessageType {
	return _fastReflection_HelloReply_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_HelloReply) New() protoreflect.Message {
	return new(fastReflection_HelloReply)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_HelloReply) Interface() protoreflect.ProtoMessage {
	return (*HelloReply)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_HelloReply) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.Message != "" {
		value := protoreflect.ValueOfString(x.Message)
		if !f(fd_HelloReply_message, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_HelloReply) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "qadena.qadena.HelloReply.message":
		return x.Message != ""
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: qadena.qadena.HelloReply"))
		}
		panic(fmt.Errorf("message qadena.qadena.HelloReply does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_HelloReply) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "qadena.qadena.HelloReply.message":
		x.Message = ""
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: qadena.qadena.HelloReply"))
		}
		panic(fmt.Errorf("message qadena.qadena.HelloReply does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_HelloReply) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "qadena.qadena.HelloReply.message":
		value := x.Message
		return protoreflect.ValueOfString(value)
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: qadena.qadena.HelloReply"))
		}
		panic(fmt.Errorf("message qadena.qadena.HelloReply does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_HelloReply) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "qadena.qadena.HelloReply.message":
		x.Message = value.Interface().(string)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: qadena.qadena.HelloReply"))
		}
		panic(fmt.Errorf("message qadena.qadena.HelloReply does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_HelloReply) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "qadena.qadena.HelloReply.message":
		panic(fmt.Errorf("field message of message qadena.qadena.HelloReply is not mutable"))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: qadena.qadena.HelloReply"))
		}
		panic(fmt.Errorf("message qadena.qadena.HelloReply does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_HelloReply) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "qadena.qadena.HelloReply.message":
		return protoreflect.ValueOfString("")
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: qadena.qadena.HelloReply"))
		}
		panic(fmt.Errorf("message qadena.qadena.HelloReply does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_HelloReply) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in qadena.qadena.HelloReply", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_HelloReply) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_HelloReply) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_HelloReply) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_HelloReply) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*HelloReply)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		l = len(x.Message)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*HelloReply)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if len(x.Message) > 0 {
			i -= len(x.Message)
			copy(dAtA[i:], x.Message)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.Message)))
			i--
			dAtA[i] = 0xa
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*HelloReply)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: HelloReply: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: HelloReply: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Message", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Message = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var (
	md_MsgEndBlock protoreflect.MessageDescriptor
)

func init() {
	file_qadena_qadena_enclave_proto_init()
	md_MsgEndBlock = File_qadena_qadena_enclave_proto.Messages().ByName("MsgEndBlock")
}

var _ protoreflect.Message = (*fastReflection_MsgEndBlock)(nil)

type fastReflection_MsgEndBlock MsgEndBlock

func (x *MsgEndBlock) ProtoReflect() protoreflect.Message {
	return (*fastReflection_MsgEndBlock)(x)
}

func (x *MsgEndBlock) slowProtoReflect() protoreflect.Message {
	mi := &file_qadena_qadena_enclave_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_MsgEndBlock_messageType fastReflection_MsgEndBlock_messageType
var _ protoreflect.MessageType = fastReflection_MsgEndBlock_messageType{}

type fastReflection_MsgEndBlock_messageType struct{}

func (x fastReflection_MsgEndBlock_messageType) Zero() protoreflect.Message {
	return (*fastReflection_MsgEndBlock)(nil)
}
func (x fastReflection_MsgEndBlock_messageType) New() protoreflect.Message {
	return new(fastReflection_MsgEndBlock)
}
func (x fastReflection_MsgEndBlock_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_MsgEndBlock
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_MsgEndBlock) Descriptor() protoreflect.MessageDescriptor {
	return md_MsgEndBlock
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_MsgEndBlock) Type() protoreflect.MessageType {
	return _fastReflection_MsgEndBlock_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_MsgEndBlock) New() protoreflect.Message {
	return new(fastReflection_MsgEndBlock)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_MsgEndBlock) Interface() protoreflect.ProtoMessage {
	return (*MsgEndBlock)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_MsgEndBlock) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_MsgEndBlock) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: qadena.qadena.MsgEndBlock"))
		}
		panic(fmt.Errorf("message qadena.qadena.MsgEndBlock does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgEndBlock) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: qadena.qadena.MsgEndBlock"))
		}
		panic(fmt.Errorf("message qadena.qadena.MsgEndBlock does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_MsgEndBlock) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: qadena.qadena.MsgEndBlock"))
		}
		panic(fmt.Errorf("message qadena.qadena.MsgEndBlock does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgEndBlock) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: qadena.qadena.MsgEndBlock"))
		}
		panic(fmt.Errorf("message qadena.qadena.MsgEndBlock does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgEndBlock) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: qadena.qadena.MsgEndBlock"))
		}
		panic(fmt.Errorf("message qadena.qadena.MsgEndBlock does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_MsgEndBlock) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: qadena.qadena.MsgEndBlock"))
		}
		panic(fmt.Errorf("message qadena.qadena.MsgEndBlock does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_MsgEndBlock) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in qadena.qadena.MsgEndBlock", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_MsgEndBlock) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgEndBlock) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_MsgEndBlock) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_MsgEndBlock) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*MsgEndBlock)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*MsgEndBlock)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*MsgEndBlock)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: MsgEndBlock: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: MsgEndBlock: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var (
	md_EndBlockReply protoreflect.MessageDescriptor
)

func init() {
	file_qadena_qadena_enclave_proto_init()
	md_EndBlockReply = File_qadena_qadena_enclave_proto.Messages().ByName("EndBlockReply")
}

var _ protoreflect.Message = (*fastReflection_EndBlockReply)(nil)

type fastReflection_EndBlockReply EndBlockReply

func (x *EndBlockReply) ProtoReflect() protoreflect.Message {
	return (*fastReflection_EndBlockReply)(x)
}

func (x *EndBlockReply) slowProtoReflect() protoreflect.Message {
	mi := &file_qadena_qadena_enclave_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_EndBlockReply_messageType fastReflection_EndBlockReply_messageType
var _ protoreflect.MessageType = fastReflection_EndBlockReply_messageType{}

type fastReflection_EndBlockReply_messageType struct{}

func (x fastReflection_EndBlockReply_messageType) Zero() protoreflect.Message {
	return (*fastReflection_EndBlockReply)(nil)
}
func (x fastReflection_EndBlockReply_messageType) New() protoreflect.Message {
	return new(fastReflection_EndBlockReply)
}
func (x fastReflection_EndBlockReply_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_EndBlockReply
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_EndBlockReply) Descriptor() protoreflect.MessageDescriptor {
	return md_EndBlockReply
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_EndBlockReply) Type() protoreflect.MessageType {
	return _fastReflection_EndBlockReply_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_EndBlockReply) New() protoreflect.Message {
	return new(fastReflection_EndBlockReply)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_EndBlockReply) Interface() protoreflect.ProtoMessage {
	return (*EndBlockReply)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_EndBlockReply) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_EndBlockReply) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: qadena.qadena.EndBlockReply"))
		}
		panic(fmt.Errorf("message qadena.qadena.EndBlockReply does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_EndBlockReply) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: qadena.qadena.EndBlockReply"))
		}
		panic(fmt.Errorf("message qadena.qadena.EndBlockReply does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_EndBlockReply) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: qadena.qadena.EndBlockReply"))
		}
		panic(fmt.Errorf("message qadena.qadena.EndBlockReply does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_EndBlockReply) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: qadena.qadena.EndBlockReply"))
		}
		panic(fmt.Errorf("message qadena.qadena.EndBlockReply does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_EndBlockReply) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: qadena.qadena.EndBlockReply"))
		}
		panic(fmt.Errorf("message qadena.qadena.EndBlockReply does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_EndBlockReply) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: qadena.qadena.EndBlockReply"))
		}
		panic(fmt.Errorf("message qadena.qadena.EndBlockReply does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_EndBlockReply) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in qadena.qadena.EndBlockReply", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_EndBlockReply) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_EndBlockReply) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_EndBlockReply) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_EndBlockReply) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*EndBlockReply)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*EndBlockReply)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*EndBlockReply)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: EndBlockReply: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: EndBlockReply: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var (
	md_QueryGetSubWalletIDByOriginalWalletIDResponse             protoreflect.MessageDescriptor
	fd_QueryGetSubWalletIDByOriginalWalletIDResponse_subWalletID protoreflect.FieldDescriptor
)

func init() {
	file_qadena_qadena_enclave_proto_init()
	md_QueryGetSubWalletIDByOriginalWalletIDResponse = File_qadena_qadena_enclave_proto.Messages().ByName("QueryGetSubWalletIDByOriginalWalletIDResponse")
	fd_QueryGetSubWalletIDByOriginalWalletIDResponse_subWalletID = md_QueryGetSubWalletIDByOriginalWalletIDResponse.Fields().ByName("subWalletID")
}

var _ protoreflect.Message = (*fastReflection_QueryGetSubWalletIDByOriginalWalletIDResponse)(nil)

type fastReflection_QueryGetSubWalletIDByOriginalWalletIDResponse QueryGetSubWalletIDByOriginalWalletIDResponse

func (x *QueryGetSubWalletIDByOriginalWalletIDResponse) ProtoReflect() protoreflect.Message {
	return (*fastReflection_QueryGetSubWalletIDByOriginalWalletIDResponse)(x)
}

func (x *QueryGetSubWalletIDByOriginalWalletIDResponse) slowProtoReflect() protoreflect.Message {
	mi := &file_qadena_qadena_enclave_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_QueryGetSubWalletIDByOriginalWalletIDResponse_messageType fastReflection_QueryGetSubWalletIDByOriginalWalletIDResponse_messageType
var _ protoreflect.MessageType = fastReflection_QueryGetSubWalletIDByOriginalWalletIDResponse_messageType{}

type fastReflection_QueryGetSubWalletIDByOriginalWalletIDResponse_messageType struct{}

func (x fastReflection_QueryGetSubWalletIDByOriginalWalletIDResponse_messageType) Zero() protoreflect.Message {
	return (*fastReflection_QueryGetSubWalletIDByOriginalWalletIDResponse)(nil)
}
func (x fastReflection_QueryGetSubWalletIDByOriginalWalletIDResponse_messageType) New() protoreflect.Message {
	return new(fastReflection_QueryGetSubWalletIDByOriginalWalletIDResponse)
}
func (x fastReflection_QueryGetSubWalletIDByOriginalWalletIDResponse_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_QueryGetSubWalletIDByOriginalWalletIDResponse
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_QueryGetSubWalletIDByOriginalWalletIDResponse) Descriptor() protoreflect.MessageDescriptor {
	return md_QueryGetSubWalletIDByOriginalWalletIDResponse
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_QueryGetSubWalletIDByOriginalWalletIDResponse) Type() protoreflect.MessageType {
	return _fastReflection_QueryGetSubWalletIDByOriginalWalletIDResponse_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_QueryGetSubWalletIDByOriginalWalletIDResponse) New() protoreflect.Message {
	return new(fastReflection_QueryGetSubWalletIDByOriginalWalletIDResponse)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_QueryGetSubWalletIDByOriginalWalletIDResponse) Interface() protoreflect.ProtoMessage {
	return (*QueryGetSubWalletIDByOriginalWalletIDResponse)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_QueryGetSubWalletIDByOriginalWalletIDResponse) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.SubWalletID != "" {
		value := protoreflect.ValueOfString(x.SubWalletID)
		if !f(fd_QueryGetSubWalletIDByOriginalWalletIDResponse_subWalletID, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_QueryGetSubWalletIDByOriginalWalletIDResponse) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "qadena.qadena.QueryGetSubWalletIDByOriginalWalletIDResponse.subWalletID":
		return x.SubWalletID != ""
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: qadena.qadena.QueryGetSubWalletIDByOriginalWalletIDResponse"))
		}
		panic(fmt.Errorf("message qadena.qadena.QueryGetSubWalletIDByOriginalWalletIDResponse does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_QueryGetSubWalletIDByOriginalWalletIDResponse) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "qadena.qadena.QueryGetSubWalletIDByOriginalWalletIDResponse.subWalletID":
		x.SubWalletID = ""
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: qadena.qadena.QueryGetSubWalletIDByOriginalWalletIDResponse"))
		}
		panic(fmt.Errorf("message qadena.qadena.QueryGetSubWalletIDByOriginalWalletIDResponse does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_QueryGetSubWalletIDByOriginalWalletIDResponse) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "qadena.qadena.QueryGetSubWalletIDByOriginalWalletIDResponse.subWalletID":
		value := x.SubWalletID
		return protoreflect.ValueOfString(value)
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: qadena.qadena.QueryGetSubWalletIDByOriginalWalletIDResponse"))
		}
		panic(fmt.Errorf("message qadena.qadena.QueryGetSubWalletIDByOriginalWalletIDResponse does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_QueryGetSubWalletIDByOriginalWalletIDResponse) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "qadena.qadena.QueryGetSubWalletIDByOriginalWalletIDResponse.subWalletID":
		x.SubWalletID = value.Interface().(string)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: qadena.qadena.QueryGetSubWalletIDByOriginalWalletIDResponse"))
		}
		panic(fmt.Errorf("message qadena.qadena.QueryGetSubWalletIDByOriginalWalletIDResponse does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_QueryGetSubWalletIDByOriginalWalletIDResponse) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "qadena.qadena.QueryGetSubWalletIDByOriginalWalletIDResponse.subWalletID":
		panic(fmt.Errorf("field subWalletID of message qadena.qadena.QueryGetSubWalletIDByOriginalWalletIDResponse is not mutable"))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: qadena.qadena.QueryGetSubWalletIDByOriginalWalletIDResponse"))
		}
		panic(fmt.Errorf("message qadena.qadena.QueryGetSubWalletIDByOriginalWalletIDResponse does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_QueryGetSubWalletIDByOriginalWalletIDResponse) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "qadena.qadena.QueryGetSubWalletIDByOriginalWalletIDResponse.subWalletID":
		return protoreflect.ValueOfString("")
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: qadena.qadena.QueryGetSubWalletIDByOriginalWalletIDResponse"))
		}
		panic(fmt.Errorf("message qadena.qadena.QueryGetSubWalletIDByOriginalWalletIDResponse does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_QueryGetSubWalletIDByOriginalWalletIDResponse) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in qadena.qadena.QueryGetSubWalletIDByOriginalWalletIDResponse", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_QueryGetSubWalletIDByOriginalWalletIDResponse) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_QueryGetSubWalletIDByOriginalWalletIDResponse) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_QueryGetSubWalletIDByOriginalWalletIDResponse) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_QueryGetSubWalletIDByOriginalWalletIDResponse) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*QueryGetSubWalletIDByOriginalWalletIDResponse)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		l = len(x.SubWalletID)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*QueryGetSubWalletIDByOriginalWalletIDResponse)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if len(x.SubWalletID) > 0 {
			i -= len(x.SubWalletID)
			copy(dAtA[i:], x.SubWalletID)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.SubWalletID)))
			i--
			dAtA[i] = 0xa
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*QueryGetSubWalletIDByOriginalWalletIDResponse)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: QueryGetSubWalletIDByOriginalWalletIDResponse: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: QueryGetSubWalletIDByOriginalWalletIDResponse: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field SubWalletID", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.SubWalletID = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var (
	md_StoreHash      protoreflect.MessageDescriptor
	fd_StoreHash_key  protoreflect.FieldDescriptor
	fd_StoreHash_hash protoreflect.FieldDescriptor
)

func init() {
	file_qadena_qadena_enclave_proto_init()
	md_StoreHash = File_qadena_qadena_enclave_proto.Messages().ByName("StoreHash")
	fd_StoreHash_key = md_StoreHash.Fields().ByName("key")
	fd_StoreHash_hash = md_StoreHash.Fields().ByName("hash")
}

var _ protoreflect.Message = (*fastReflection_StoreHash)(nil)

type fastReflection_StoreHash StoreHash

func (x *StoreHash) ProtoReflect() protoreflect.Message {
	return (*fastReflection_StoreHash)(x)
}

func (x *StoreHash) slowProtoReflect() protoreflect.Message {
	mi := &file_qadena_qadena_enclave_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_StoreHash_messageType fastReflection_StoreHash_messageType
var _ protoreflect.MessageType = fastReflection_StoreHash_messageType{}

type fastReflection_StoreHash_messageType struct{}

func (x fastReflection_StoreHash_messageType) Zero() protoreflect.Message {
	return (*fastReflection_StoreHash)(nil)
}
func (x fastReflection_StoreHash_messageType) New() protoreflect.Message {
	return new(fastReflection_StoreHash)
}
func (x fastReflection_StoreHash_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_StoreHash
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_StoreHash) Descriptor() protoreflect.MessageDescriptor {
	return md_StoreHash
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_StoreHash) Type() protoreflect.MessageType {
	return _fastReflection_StoreHash_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_StoreHash) New() protoreflect.Message {
	return new(fastReflection_StoreHash)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_StoreHash) Interface() protoreflect.ProtoMessage {
	return (*StoreHash)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_StoreHash) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.Key != "" {
		value := protoreflect.ValueOfString(x.Key)
		if !f(fd_StoreHash_key, value) {
			return
		}
	}
	if x.Hash != "" {
		value := protoreflect.ValueOfString(x.Hash)
		if !f(fd_StoreHash_hash, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_StoreHash) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "qadena.qadena.StoreHash.key":
		return x.Key != ""
	case "qadena.qadena.StoreHash.hash":
		return x.Hash != ""
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: qadena.qadena.StoreHash"))
		}
		panic(fmt.Errorf("message qadena.qadena.StoreHash does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_StoreHash) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "qadena.qadena.StoreHash.key":
		x.Key = ""
	case "qadena.qadena.StoreHash.hash":
		x.Hash = ""
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: qadena.qadena.StoreHash"))
		}
		panic(fmt.Errorf("message qadena.qadena.StoreHash does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_StoreHash) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "qadena.qadena.StoreHash.key":
		value := x.Key
		return protoreflect.ValueOfString(value)
	case "qadena.qadena.StoreHash.hash":
		value := x.Hash
		return protoreflect.ValueOfString(value)
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: qadena.qadena.StoreHash"))
		}
		panic(fmt.Errorf("message qadena.qadena.StoreHash does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_StoreHash) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "qadena.qadena.StoreHash.key":
		x.Key = value.Interface().(string)
	case "qadena.qadena.StoreHash.hash":
		x.Hash = value.Interface().(string)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: qadena.qadena.StoreHash"))
		}
		panic(fmt.Errorf("message qadena.qadena.StoreHash does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_StoreHash) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "qadena.qadena.StoreHash.key":
		panic(fmt.Errorf("field key of message qadena.qadena.StoreHash is not mutable"))
	case "qadena.qadena.StoreHash.hash":
		panic(fmt.Errorf("field hash of message qadena.qadena.StoreHash is not mutable"))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: qadena.qadena.StoreHash"))
		}
		panic(fmt.Errorf("message qadena.qadena.StoreHash does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_StoreHash) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "qadena.qadena.StoreHash.key":
		return protoreflect.ValueOfString("")
	case "qadena.qadena.StoreHash.hash":
		return protoreflect.ValueOfString("")
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: qadena.qadena.StoreHash"))
		}
		panic(fmt.Errorf("message qadena.qadena.StoreHash does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_StoreHash) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in qadena.qadena.StoreHash", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_StoreHash) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_StoreHash) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_StoreHash) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_StoreHash) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*StoreHash)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		l = len(x.Key)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.Hash)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*StoreHash)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if len(x.Hash) > 0 {
			i -= len(x.Hash)
			copy(dAtA[i:], x.Hash)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.Hash)))
			i--
			dAtA[i] = 0x12
		}
		if len(x.Key) > 0 {
			i -= len(x.Key)
			copy(dAtA[i:], x.Key)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.Key)))
			i--
			dAtA[i] = 0xa
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*StoreHash)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: StoreHash: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: StoreHash: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Key", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Key = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 2:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Hash", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Hash = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var (
	md_MsgGetStoreHash protoreflect.MessageDescriptor
)

func init() {
	file_qadena_qadena_enclave_proto_init()
	md_MsgGetStoreHash = File_qadena_qadena_enclave_proto.Messages().ByName("MsgGetStoreHash")
}

var _ protoreflect.Message = (*fastReflection_MsgGetStoreHash)(nil)

type fastReflection_MsgGetStoreHash MsgGetStoreHash

func (x *MsgGetStoreHash) ProtoReflect() protoreflect.Message {
	return (*fastReflection_MsgGetStoreHash)(x)
}

func (x *MsgGetStoreHash) slowProtoReflect() protoreflect.Message {
	mi := &file_qadena_qadena_enclave_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_MsgGetStoreHash_messageType fastReflection_MsgGetStoreHash_messageType
var _ protoreflect.MessageType = fastReflection_MsgGetStoreHash_messageType{}

type fastReflection_MsgGetStoreHash_messageType struct{}

func (x fastReflection_MsgGetStoreHash_messageType) Zero() protoreflect.Message {
	return (*fastReflection_MsgGetStoreHash)(nil)
}
func (x fastReflection_MsgGetStoreHash_messageType) New() protoreflect.Message {
	return new(fastReflection_MsgGetStoreHash)
}
func (x fastReflection_MsgGetStoreHash_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_MsgGetStoreHash
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_MsgGetStoreHash) Descriptor() protoreflect.MessageDescriptor {
	return md_MsgGetStoreHash
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_MsgGetStoreHash) Type() protoreflect.MessageType {
	return _fastReflection_MsgGetStoreHash_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_MsgGetStoreHash) New() protoreflect.Message {
	return new(fastReflection_MsgGetStoreHash)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_MsgGetStoreHash) Interface() protoreflect.ProtoMessage {
	return (*MsgGetStoreHash)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_MsgGetStoreHash) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_MsgGetStoreHash) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: qadena.qadena.MsgGetStoreHash"))
		}
		panic(fmt.Errorf("message qadena.qadena.MsgGetStoreHash does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgGetStoreHash) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: qadena.qadena.MsgGetStoreHash"))
		}
		panic(fmt.Errorf("message qadena.qadena.MsgGetStoreHash does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_MsgGetStoreHash) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: qadena.qadena.MsgGetStoreHash"))
		}
		panic(fmt.Errorf("message qadena.qadena.MsgGetStoreHash does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgGetStoreHash) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: qadena.qadena.MsgGetStoreHash"))
		}
		panic(fmt.Errorf("message qadena.qadena.MsgGetStoreHash does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgGetStoreHash) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: qadena.qadena.MsgGetStoreHash"))
		}
		panic(fmt.Errorf("message qadena.qadena.MsgGetStoreHash does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_MsgGetStoreHash) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: qadena.qadena.MsgGetStoreHash"))
		}
		panic(fmt.Errorf("message qadena.qadena.MsgGetStoreHash does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_MsgGetStoreHash) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in qadena.qadena.MsgGetStoreHash", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_MsgGetStoreHash) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgGetStoreHash) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_MsgGetStoreHash) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_MsgGetStoreHash) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*MsgGetStoreHash)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*MsgGetStoreHash)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*MsgGetStoreHash)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: MsgGetStoreHash: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: MsgGetStoreHash: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var _ protoreflect.List = (*_GetStoreHashReply_1_list)(nil)

type _GetStoreHashReply_1_list struct {
	list *[]*StoreHash
}

func (x *_GetStoreHashReply_1_list) Len() int {
	if x.list == nil {
		return 0
	}
	return len(*x.list)
}

func (x *_GetStoreHashReply_1_list) Get(i int) protoreflect.Value {
	return protoreflect.ValueOfMessage((*x.list)[i].ProtoReflect())
}

func (x *_GetStoreHashReply_1_list) Set(i int, value protoreflect.Value) {
	valueUnwrapped := value.Message()
	concreteValue := valueUnwrapped.Interface().(*StoreHash)
	(*x.list)[i] = concreteValue
}

func (x *_GetStoreHashReply_1_list) Append(value protoreflect.Value) {
	valueUnwrapped := value.Message()
	concreteValue := valueUnwrapped.Interface().(*StoreHash)
	*x.list = append(*x.list, concreteValue)
}

func (x *_GetStoreHashReply_1_list) AppendMutable() protoreflect.Value {
	v := new(StoreHash)
	*x.list = append(*x.list, v)
	return protoreflect.ValueOfMessage(v.ProtoReflect())
}

func (x *_GetStoreHashReply_1_list) Truncate(n int) {
	for i := n; i < len(*x.list); i++ {
		(*x.list)[i] = nil
	}
	*x.list = (*x.list)[:n]
}

func (x *_GetStoreHashReply_1_list) NewElement() protoreflect.Value {
	v := new(StoreHash)
	return protoreflect.ValueOfMessage(v.ProtoReflect())
}

func (x *_GetStoreHashReply_1_list) IsValid() bool {
	return x.list != nil
}

var (
	md_GetStoreHashReply        protoreflect.MessageDescriptor
	fd_GetStoreHashReply_hashes protoreflect.FieldDescriptor
)

func init() {
	file_qadena_qadena_enclave_proto_init()
	md_GetStoreHashReply = File_qadena_qadena_enclave_proto.Messages().ByName("GetStoreHashReply")
	fd_GetStoreHashReply_hashes = md_GetStoreHashReply.Fields().ByName("hashes")
}

var _ protoreflect.Message = (*fastReflection_GetStoreHashReply)(nil)

type fastReflection_GetStoreHashReply GetStoreHashReply

func (x *GetStoreHashReply) ProtoReflect() protoreflect.Message {
	return (*fastReflection_GetStoreHashReply)(x)
}

func (x *GetStoreHashReply) slowProtoReflect() protoreflect.Message {
	mi := &file_qadena_qadena_enclave_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_GetStoreHashReply_messageType fastReflection_GetStoreHashReply_messageType
var _ protoreflect.MessageType = fastReflection_GetStoreHashReply_messageType{}

type fastReflection_GetStoreHashReply_messageType struct{}

func (x fastReflection_GetStoreHashReply_messageType) Zero() protoreflect.Message {
	return (*fastReflection_GetStoreHashReply)(nil)
}
func (x fastReflection_GetStoreHashReply_messageType) New() protoreflect.Message {
	return new(fastReflection_GetStoreHashReply)
}
func (x fastReflection_GetStoreHashReply_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_GetStoreHashReply
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_GetStoreHashReply) Descriptor() protoreflect.MessageDescriptor {
	return md_GetStoreHashReply
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_GetStoreHashReply) Type() protoreflect.MessageType {
	return _fastReflection_GetStoreHashReply_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_GetStoreHashReply) New() protoreflect.Message {
	return new(fastReflection_GetStoreHashReply)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_GetStoreHashReply) Interface() protoreflect.ProtoMessage {
	return (*GetStoreHashReply)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_GetStoreHashReply) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if len(x.Hashes) != 0 {
		value := protoreflect.ValueOfList(&_GetStoreHashReply_1_list{list: &x.Hashes})
		if !f(fd_GetStoreHashReply_hashes, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_GetStoreHashReply) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "qadena.qadena.GetStoreHashReply.hashes":
		return len(x.Hashes) != 0
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: qadena.qadena.GetStoreHashReply"))
		}
		panic(fmt.Errorf("message qadena.qadena.GetStoreHashReply does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_GetStoreHashReply) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "qadena.qadena.GetStoreHashReply.hashes":
		x.Hashes = nil
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: qadena.qadena.GetStoreHashReply"))
		}
		panic(fmt.Errorf("message qadena.qadena.GetStoreHashReply does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_GetStoreHashReply) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "qadena.qadena.GetStoreHashReply.hashes":
		if len(x.Hashes) == 0 {
			return protoreflect.ValueOfList(&_GetStoreHashReply_1_list{})
		}
		listValue := &_GetStoreHashReply_1_list{list: &x.Hashes}
		return protoreflect.ValueOfList(listValue)
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: qadena.qadena.GetStoreHashReply"))
		}
		panic(fmt.Errorf("message qadena.qadena.GetStoreHashReply does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_GetStoreHashReply) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "qadena.qadena.GetStoreHashReply.hashes":
		lv := value.List()
		clv := lv.(*_GetStoreHashReply_1_list)
		x.Hashes = *clv.list
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: qadena.qadena.GetStoreHashReply"))
		}
		panic(fmt.Errorf("message qadena.qadena.GetStoreHashReply does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_GetStoreHashReply) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "qadena.qadena.GetStoreHashReply.hashes":
		if x.Hashes == nil {
			x.Hashes = []*StoreHash{}
		}
		value := &_GetStoreHashReply_1_list{list: &x.Hashes}
		return protoreflect.ValueOfList(value)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: qadena.qadena.GetStoreHashReply"))
		}
		panic(fmt.Errorf("message qadena.qadena.GetStoreHashReply does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_GetStoreHashReply) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "qadena.qadena.GetStoreHashReply.hashes":
		list := []*StoreHash{}
		return protoreflect.ValueOfList(&_GetStoreHashReply_1_list{list: &list})
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: qadena.qadena.GetStoreHashReply"))
		}
		panic(fmt.Errorf("message qadena.qadena.GetStoreHashReply does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_GetStoreHashReply) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in qadena.qadena.GetStoreHashReply", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_GetStoreHashReply) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_GetStoreHashReply) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_GetStoreHashReply) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_GetStoreHashReply) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*GetStoreHashReply)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		if len(x.Hashes) > 0 {
			for _, e := range x.Hashes {
				l = options.Size(e)
				n += 1 + l + runtime.Sov(uint64(l))
			}
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*GetStoreHashReply)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if len(x.Hashes) > 0 {
			for iNdEx := len(x.Hashes) - 1; iNdEx >= 0; iNdEx-- {
				encoded, err := options.Marshal(x.Hashes[iNdEx])
				if err != nil {
					return protoiface.MarshalOutput{
						NoUnkeyedLiterals: input.NoUnkeyedLiterals,
						Buf:               input.Buf,
					}, err
				}
				i -= len(encoded)
				copy(dAtA[i:], encoded)
				i = runtime.EncodeVarint(dAtA, i, uint64(len(encoded)))
				i--
				dAtA[i] = 0xa
			}
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*GetStoreHashReply)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: GetStoreHashReply: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: GetStoreHashReply: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Hashes", wireType)
				}
				var msglen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					msglen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if msglen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + msglen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Hashes = append(x.Hashes, &StoreHash{})
				if err := options.Unmarshal(dAtA[iNdEx:postIndex], x.Hashes[len(x.Hashes)-1]); err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				iNdEx = postIndex
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var (
	md_MsgAddAsValidator protoreflect.MessageDescriptor
)

func init() {
	file_qadena_qadena_enclave_proto_init()
	md_MsgAddAsValidator = File_qadena_qadena_enclave_proto.Messages().ByName("MsgAddAsValidator")
}

var _ protoreflect.Message = (*fastReflection_MsgAddAsValidator)(nil)

type fastReflection_MsgAddAsValidator MsgAddAsValidator

func (x *MsgAddAsValidator) ProtoReflect() protoreflect.Message {
	return (*fastReflection_MsgAddAsValidator)(x)
}

func (x *MsgAddAsValidator) slowProtoReflect() protoreflect.Message {
	mi := &file_qadena_qadena_enclave_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_MsgAddAsValidator_messageType fastReflection_MsgAddAsValidator_messageType
var _ protoreflect.MessageType = fastReflection_MsgAddAsValidator_messageType{}

type fastReflection_MsgAddAsValidator_messageType struct{}

func (x fastReflection_MsgAddAsValidator_messageType) Zero() protoreflect.Message {
	return (*fastReflection_MsgAddAsValidator)(nil)
}
func (x fastReflection_MsgAddAsValidator_messageType) New() protoreflect.Message {
	return new(fastReflection_MsgAddAsValidator)
}
func (x fastReflection_MsgAddAsValidator_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_MsgAddAsValidator
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_MsgAddAsValidator) Descriptor() protoreflect.MessageDescriptor {
	return md_MsgAddAsValidator
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_MsgAddAsValidator) Type() protoreflect.MessageType {
	return _fastReflection_MsgAddAsValidator_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_MsgAddAsValidator) New() protoreflect.Message {
	return new(fastReflection_MsgAddAsValidator)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_MsgAddAsValidator) Interface() protoreflect.ProtoMessage {
	return (*MsgAddAsValidator)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_MsgAddAsValidator) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_MsgAddAsValidator) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: qadena.qadena.MsgAddAsValidator"))
		}
		panic(fmt.Errorf("message qadena.qadena.MsgAddAsValidator does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgAddAsValidator) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: qadena.qadena.MsgAddAsValidator"))
		}
		panic(fmt.Errorf("message qadena.qadena.MsgAddAsValidator does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_MsgAddAsValidator) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: qadena.qadena.MsgAddAsValidator"))
		}
		panic(fmt.Errorf("message qadena.qadena.MsgAddAsValidator does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgAddAsValidator) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: qadena.qadena.MsgAddAsValidator"))
		}
		panic(fmt.Errorf("message qadena.qadena.MsgAddAsValidator does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgAddAsValidator) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: qadena.qadena.MsgAddAsValidator"))
		}
		panic(fmt.Errorf("message qadena.qadena.MsgAddAsValidator does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_MsgAddAsValidator) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: qadena.qadena.MsgAddAsValidator"))
		}
		panic(fmt.Errorf("message qadena.qadena.MsgAddAsValidator does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_MsgAddAsValidator) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in qadena.qadena.MsgAddAsValidator", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_MsgAddAsValidator) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgAddAsValidator) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_MsgAddAsValidator) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_MsgAddAsValidator) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*MsgAddAsValidator)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*MsgAddAsValidator)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*MsgAddAsValidator)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: MsgAddAsValidator: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: MsgAddAsValidator: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var (
	md_MsgSyncEnclave                        protoreflect.MessageDescriptor
	fd_MsgSyncEnclave_pioneerID              protoreflect.FieldDescriptor
	fd_MsgSyncEnclave_externalAddress        protoreflect.FieldDescriptor
	fd_MsgSyncEnclave_pioneerArmorPrivK      protoreflect.FieldDescriptor
	fd_MsgSyncEnclave_pioneerArmorPassPhrase protoreflect.FieldDescriptor
	fd_MsgSyncEnclave_seedNode               protoreflect.FieldDescriptor
)

func init() {
	file_qadena_qadena_enclave_proto_init()
	md_MsgSyncEnclave = File_qadena_qadena_enclave_proto.Messages().ByName("MsgSyncEnclave")
	fd_MsgSyncEnclave_pioneerID = md_MsgSyncEnclave.Fields().ByName("pioneerID")
	fd_MsgSyncEnclave_externalAddress = md_MsgSyncEnclave.Fields().ByName("externalAddress")
	fd_MsgSyncEnclave_pioneerArmorPrivK = md_MsgSyncEnclave.Fields().ByName("pioneerArmorPrivK")
	fd_MsgSyncEnclave_pioneerArmorPassPhrase = md_MsgSyncEnclave.Fields().ByName("pioneerArmorPassPhrase")
	fd_MsgSyncEnclave_seedNode = md_MsgSyncEnclave.Fields().ByName("seedNode")
}

var _ protoreflect.Message = (*fastReflection_MsgSyncEnclave)(nil)

type fastReflection_MsgSyncEnclave MsgSyncEnclave

func (x *MsgSyncEnclave) ProtoReflect() protoreflect.Message {
	return (*fastReflection_MsgSyncEnclave)(x)
}

func (x *MsgSyncEnclave) slowProtoReflect() protoreflect.Message {
	mi := &file_qadena_qadena_enclave_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_MsgSyncEnclave_messageType fastReflection_MsgSyncEnclave_messageType
var _ protoreflect.MessageType = fastReflection_MsgSyncEnclave_messageType{}

type fastReflection_MsgSyncEnclave_messageType struct{}

func (x fastReflection_MsgSyncEnclave_messageType) Zero() protoreflect.Message {
	return (*fastReflection_MsgSyncEnclave)(nil)
}
func (x fastReflection_MsgSyncEnclave_messageType) New() protoreflect.Message {
	return new(fastReflection_MsgSyncEnclave)
}
func (x fastReflection_MsgSyncEnclave_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_MsgSyncEnclave
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_MsgSyncEnclave) Descriptor() protoreflect.MessageDescriptor {
	return md_MsgSyncEnclave
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_MsgSyncEnclave) Type() protoreflect.MessageType {
	return _fastReflection_MsgSyncEnclave_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_MsgSyncEnclave) New() protoreflect.Message {
	return new(fastReflection_MsgSyncEnclave)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_MsgSyncEnclave) Interface() protoreflect.ProtoMessage {
	return (*MsgSyncEnclave)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_MsgSyncEnclave) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.PioneerID != "" {
		value := protoreflect.ValueOfString(x.PioneerID)
		if !f(fd_MsgSyncEnclave_pioneerID, value) {
			return
		}
	}
	if x.ExternalAddress != "" {
		value := protoreflect.ValueOfString(x.ExternalAddress)
		if !f(fd_MsgSyncEnclave_externalAddress, value) {
			return
		}
	}
	if x.PioneerArmorPrivK != "" {
		value := protoreflect.ValueOfString(x.PioneerArmorPrivK)
		if !f(fd_MsgSyncEnclave_pioneerArmorPrivK, value) {
			return
		}
	}
	if x.PioneerArmorPassPhrase != "" {
		value := protoreflect.ValueOfString(x.PioneerArmorPassPhrase)
		if !f(fd_MsgSyncEnclave_pioneerArmorPassPhrase, value) {
			return
		}
	}
	if x.SeedNode != "" {
		value := protoreflect.ValueOfString(x.SeedNode)
		if !f(fd_MsgSyncEnclave_seedNode, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_MsgSyncEnclave) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "qadena.qadena.MsgSyncEnclave.pioneerID":
		return x.PioneerID != ""
	case "qadena.qadena.MsgSyncEnclave.externalAddress":
		return x.ExternalAddress != ""
	case "qadena.qadena.MsgSyncEnclave.pioneerArmorPrivK":
		return x.PioneerArmorPrivK != ""
	case "qadena.qadena.MsgSyncEnclave.pioneerArmorPassPhrase":
		return x.PioneerArmorPassPhrase != ""
	case "qadena.qadena.MsgSyncEnclave.seedNode":
		return x.SeedNode != ""
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: qadena.qadena.MsgSyncEnclave"))
		}
		panic(fmt.Errorf("message qadena.qadena.MsgSyncEnclave does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgSyncEnclave) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "qadena.qadena.MsgSyncEnclave.pioneerID":
		x.PioneerID = ""
	case "qadena.qadena.MsgSyncEnclave.externalAddress":
		x.ExternalAddress = ""
	case "qadena.qadena.MsgSyncEnclave.pioneerArmorPrivK":
		x.PioneerArmorPrivK = ""
	case "qadena.qadena.MsgSyncEnclave.pioneerArmorPassPhrase":
		x.PioneerArmorPassPhrase = ""
	case "qadena.qadena.MsgSyncEnclave.seedNode":
		x.SeedNode = ""
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: qadena.qadena.MsgSyncEnclave"))
		}
		panic(fmt.Errorf("message qadena.qadena.MsgSyncEnclave does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_MsgSyncEnclave) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "qadena.qadena.MsgSyncEnclave.pioneerID":
		value := x.PioneerID
		return protoreflect.ValueOfString(value)
	case "qadena.qadena.MsgSyncEnclave.externalAddress":
		value := x.ExternalAddress
		return protoreflect.ValueOfString(value)
	case "qadena.qadena.MsgSyncEnclave.pioneerArmorPrivK":
		value := x.PioneerArmorPrivK
		return protoreflect.ValueOfString(value)
	case "qadena.qadena.MsgSyncEnclave.pioneerArmorPassPhrase":
		value := x.PioneerArmorPassPhrase
		return protoreflect.ValueOfString(value)
	case "qadena.qadena.MsgSyncEnclave.seedNode":
		value := x.SeedNode
		return protoreflect.ValueOfString(value)
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: qadena.qadena.MsgSyncEnclave"))
		}
		panic(fmt.Errorf("message qadena.qadena.MsgSyncEnclave does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgSyncEnclave) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "qadena.qadena.MsgSyncEnclave.pioneerID":
		x.PioneerID = value.Interface().(string)
	case "qadena.qadena.MsgSyncEnclave.externalAddress":
		x.ExternalAddress = value.Interface().(string)
	case "qadena.qadena.MsgSyncEnclave.pioneerArmorPrivK":
		x.PioneerArmorPrivK = value.Interface().(string)
	case "qadena.qadena.MsgSyncEnclave.pioneerArmorPassPhrase":
		x.PioneerArmorPassPhrase = value.Interface().(string)
	case "qadena.qadena.MsgSyncEnclave.seedNode":
		x.SeedNode = value.Interface().(string)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: qadena.qadena.MsgSyncEnclave"))
		}
		panic(fmt.Errorf("message qadena.qadena.MsgSyncEnclave does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgSyncEnclave) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "qadena.qadena.MsgSyncEnclave.pioneerID":
		panic(fmt.Errorf("field pioneerID of message qadena.qadena.MsgSyncEnclave is not mutable"))
	case "qadena.qadena.MsgSyncEnclave.externalAddress":
		panic(fmt.Errorf("field externalAddress of message qadena.qadena.MsgSyncEnclave is not mutable"))
	case "qadena.qadena.MsgSyncEnclave.pioneerArmorPrivK":
		panic(fmt.Errorf("field pioneerArmorPrivK of message qadena.qadena.MsgSyncEnclave is not mutable"))
	case "qadena.qadena.MsgSyncEnclave.pioneerArmorPassPhrase":
		panic(fmt.Errorf("field pioneerArmorPassPhrase of message qadena.qadena.MsgSyncEnclave is not mutable"))
	case "qadena.qadena.MsgSyncEnclave.seedNode":
		panic(fmt.Errorf("field seedNode of message qadena.qadena.MsgSyncEnclave is not mutable"))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: qadena.qadena.MsgSyncEnclave"))
		}
		panic(fmt.Errorf("message qadena.qadena.MsgSyncEnclave does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_MsgSyncEnclave) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "qadena.qadena.MsgSyncEnclave.pioneerID":
		return protoreflect.ValueOfString("")
	case "qadena.qadena.MsgSyncEnclave.externalAddress":
		return protoreflect.ValueOfString("")
	case "qadena.qadena.MsgSyncEnclave.pioneerArmorPrivK":
		return protoreflect.ValueOfString("")
	case "qadena.qadena.MsgSyncEnclave.pioneerArmorPassPhrase":
		return protoreflect.ValueOfString("")
	case "qadena.qadena.MsgSyncEnclave.seedNode":
		return protoreflect.ValueOfString("")
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: qadena.qadena.MsgSyncEnclave"))
		}
		panic(fmt.Errorf("message qadena.qadena.MsgSyncEnclave does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_MsgSyncEnclave) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in qadena.qadena.MsgSyncEnclave", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_MsgSyncEnclave) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgSyncEnclave) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_MsgSyncEnclave) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_MsgSyncEnclave) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*MsgSyncEnclave)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		l = len(x.PioneerID)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.ExternalAddress)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.PioneerArmorPrivK)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.PioneerArmorPassPhrase)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.SeedNode)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*MsgSyncEnclave)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if len(x.SeedNode) > 0 {
			i -= len(x.SeedNode)
			copy(dAtA[i:], x.SeedNode)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.SeedNode)))
			i--
			dAtA[i] = 0x2a
		}
		if len(x.PioneerArmorPassPhrase) > 0 {
			i -= len(x.PioneerArmorPassPhrase)
			copy(dAtA[i:], x.PioneerArmorPassPhrase)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.PioneerArmorPassPhrase)))
			i--
			dAtA[i] = 0x22
		}
		if len(x.PioneerArmorPrivK) > 0 {
			i -= len(x.PioneerArmorPrivK)
			copy(dAtA[i:], x.PioneerArmorPrivK)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.PioneerArmorPrivK)))
			i--
			dAtA[i] = 0x1a
		}
		if len(x.ExternalAddress) > 0 {
			i -= len(x.ExternalAddress)
			copy(dAtA[i:], x.ExternalAddress)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.ExternalAddress)))
			i--
			dAtA[i] = 0x12
		}
		if len(x.PioneerID) > 0 {
			i -= len(x.PioneerID)
			copy(dAtA[i:], x.PioneerID)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.PioneerID)))
			i--
			dAtA[i] = 0xa
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*MsgSyncEnclave)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: MsgSyncEnclave: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: MsgSyncEnclave: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field PioneerID", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.PioneerID = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 2:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field ExternalAddress", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.ExternalAddress = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 3:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field PioneerArmorPrivK", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.PioneerArmorPrivK = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 4:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field PioneerArmorPassPhrase", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.PioneerArmorPassPhrase = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 5:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field SeedNode", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.SeedNode = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var (
	md_MsgUpgradeEnclave              protoreflect.MessageDescriptor
	fd_MsgUpgradeEnclave_remoteReport protoreflect.FieldDescriptor
	fd_MsgUpgradeEnclave_enclavePubK  protoreflect.FieldDescriptor
)

func init() {
	file_qadena_qadena_enclave_proto_init()
	md_MsgUpgradeEnclave = File_qadena_qadena_enclave_proto.Messages().ByName("MsgUpgradeEnclave")
	fd_MsgUpgradeEnclave_remoteReport = md_MsgUpgradeEnclave.Fields().ByName("remoteReport")
	fd_MsgUpgradeEnclave_enclavePubK = md_MsgUpgradeEnclave.Fields().ByName("enclavePubK")
}

var _ protoreflect.Message = (*fastReflection_MsgUpgradeEnclave)(nil)

type fastReflection_MsgUpgradeEnclave MsgUpgradeEnclave

func (x *MsgUpgradeEnclave) ProtoReflect() protoreflect.Message {
	return (*fastReflection_MsgUpgradeEnclave)(x)
}

func (x *MsgUpgradeEnclave) slowProtoReflect() protoreflect.Message {
	mi := &file_qadena_qadena_enclave_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_MsgUpgradeEnclave_messageType fastReflection_MsgUpgradeEnclave_messageType
var _ protoreflect.MessageType = fastReflection_MsgUpgradeEnclave_messageType{}

type fastReflection_MsgUpgradeEnclave_messageType struct{}

func (x fastReflection_MsgUpgradeEnclave_messageType) Zero() protoreflect.Message {
	return (*fastReflection_MsgUpgradeEnclave)(nil)
}
func (x fastReflection_MsgUpgradeEnclave_messageType) New() protoreflect.Message {
	return new(fastReflection_MsgUpgradeEnclave)
}
func (x fastReflection_MsgUpgradeEnclave_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_MsgUpgradeEnclave
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_MsgUpgradeEnclave) Descriptor() protoreflect.MessageDescriptor {
	return md_MsgUpgradeEnclave
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_MsgUpgradeEnclave) Type() protoreflect.MessageType {
	return _fastReflection_MsgUpgradeEnclave_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_MsgUpgradeEnclave) New() protoreflect.Message {
	return new(fastReflection_MsgUpgradeEnclave)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_MsgUpgradeEnclave) Interface() protoreflect.ProtoMessage {
	return (*MsgUpgradeEnclave)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_MsgUpgradeEnclave) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if len(x.RemoteReport) != 0 {
		value := protoreflect.ValueOfBytes(x.RemoteReport)
		if !f(fd_MsgUpgradeEnclave_remoteReport, value) {
			return
		}
	}
	if x.EnclavePubK != "" {
		value := protoreflect.ValueOfString(x.EnclavePubK)
		if !f(fd_MsgUpgradeEnclave_enclavePubK, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_MsgUpgradeEnclave) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "qadena.qadena.MsgUpgradeEnclave.remoteReport":
		return len(x.RemoteReport) != 0
	case "qadena.qadena.MsgUpgradeEnclave.enclavePubK":
		return x.EnclavePubK != ""
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: qadena.qadena.MsgUpgradeEnclave"))
		}
		panic(fmt.Errorf("message qadena.qadena.MsgUpgradeEnclave does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgUpgradeEnclave) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "qadena.qadena.MsgUpgradeEnclave.remoteReport":
		x.RemoteReport = nil
	case "qadena.qadena.MsgUpgradeEnclave.enclavePubK":
		x.EnclavePubK = ""
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: qadena.qadena.MsgUpgradeEnclave"))
		}
		panic(fmt.Errorf("message qadena.qadena.MsgUpgradeEnclave does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_MsgUpgradeEnclave) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "qadena.qadena.MsgUpgradeEnclave.remoteReport":
		value := x.RemoteReport
		return protoreflect.ValueOfBytes(value)
	case "qadena.qadena.MsgUpgradeEnclave.enclavePubK":
		value := x.EnclavePubK
		return protoreflect.ValueOfString(value)
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: qadena.qadena.MsgUpgradeEnclave"))
		}
		panic(fmt.Errorf("message qadena.qadena.MsgUpgradeEnclave does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgUpgradeEnclave) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "qadena.qadena.MsgUpgradeEnclave.remoteReport":
		x.RemoteReport = value.Bytes()
	case "qadena.qadena.MsgUpgradeEnclave.enclavePubK":
		x.EnclavePubK = value.Interface().(string)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: qadena.qadena.MsgUpgradeEnclave"))
		}
		panic(fmt.Errorf("message qadena.qadena.MsgUpgradeEnclave does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgUpgradeEnclave) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "qadena.qadena.MsgUpgradeEnclave.remoteReport":
		panic(fmt.Errorf("field remoteReport of message qadena.qadena.MsgUpgradeEnclave is not mutable"))
	case "qadena.qadena.MsgUpgradeEnclave.enclavePubK":
		panic(fmt.Errorf("field enclavePubK of message qadena.qadena.MsgUpgradeEnclave is not mutable"))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: qadena.qadena.MsgUpgradeEnclave"))
		}
		panic(fmt.Errorf("message qadena.qadena.MsgUpgradeEnclave does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_MsgUpgradeEnclave) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "qadena.qadena.MsgUpgradeEnclave.remoteReport":
		return protoreflect.ValueOfBytes(nil)
	case "qadena.qadena.MsgUpgradeEnclave.enclavePubK":
		return protoreflect.ValueOfString("")
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: qadena.qadena.MsgUpgradeEnclave"))
		}
		panic(fmt.Errorf("message qadena.qadena.MsgUpgradeEnclave does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_MsgUpgradeEnclave) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in qadena.qadena.MsgUpgradeEnclave", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_MsgUpgradeEnclave) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgUpgradeEnclave) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_MsgUpgradeEnclave) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_MsgUpgradeEnclave) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*MsgUpgradeEnclave)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		l = len(x.RemoteReport)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.EnclavePubK)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*MsgUpgradeEnclave)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if len(x.EnclavePubK) > 0 {
			i -= len(x.EnclavePubK)
			copy(dAtA[i:], x.EnclavePubK)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.EnclavePubK)))
			i--
			dAtA[i] = 0x12
		}
		if len(x.RemoteReport) > 0 {
			i -= len(x.RemoteReport)
			copy(dAtA[i:], x.RemoteReport)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.RemoteReport)))
			i--
			dAtA[i] = 0xa
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*MsgUpgradeEnclave)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: MsgUpgradeEnclave: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: MsgUpgradeEnclave: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field RemoteReport", wireType)
				}
				var byteLen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					byteLen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if byteLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + byteLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.RemoteReport = append(x.RemoteReport[:0], dAtA[iNdEx:postIndex]...)
				if x.RemoteReport == nil {
					x.RemoteReport = []byte{}
				}
				iNdEx = postIndex
			case 2:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field EnclavePubK", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.EnclavePubK = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var (
	md_UpgradeEnclaveReply                                   protoreflect.MessageDescriptor
	fd_UpgradeEnclaveReply_remoteReport                      protoreflect.FieldDescriptor
	fd_UpgradeEnclaveReply_encEnclavePrivateStateEnclavePubK protoreflect.FieldDescriptor
)

func init() {
	file_qadena_qadena_enclave_proto_init()
	md_UpgradeEnclaveReply = File_qadena_qadena_enclave_proto.Messages().ByName("UpgradeEnclaveReply")
	fd_UpgradeEnclaveReply_remoteReport = md_UpgradeEnclaveReply.Fields().ByName("remoteReport")
	fd_UpgradeEnclaveReply_encEnclavePrivateStateEnclavePubK = md_UpgradeEnclaveReply.Fields().ByName("encEnclavePrivateStateEnclavePubK")
}

var _ protoreflect.Message = (*fastReflection_UpgradeEnclaveReply)(nil)

type fastReflection_UpgradeEnclaveReply UpgradeEnclaveReply

func (x *UpgradeEnclaveReply) ProtoReflect() protoreflect.Message {
	return (*fastReflection_UpgradeEnclaveReply)(x)
}

func (x *UpgradeEnclaveReply) slowProtoReflect() protoreflect.Message {
	mi := &file_qadena_qadena_enclave_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_UpgradeEnclaveReply_messageType fastReflection_UpgradeEnclaveReply_messageType
var _ protoreflect.MessageType = fastReflection_UpgradeEnclaveReply_messageType{}

type fastReflection_UpgradeEnclaveReply_messageType struct{}

func (x fastReflection_UpgradeEnclaveReply_messageType) Zero() protoreflect.Message {
	return (*fastReflection_UpgradeEnclaveReply)(nil)
}
func (x fastReflection_UpgradeEnclaveReply_messageType) New() protoreflect.Message {
	return new(fastReflection_UpgradeEnclaveReply)
}
func (x fastReflection_UpgradeEnclaveReply_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_UpgradeEnclaveReply
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_UpgradeEnclaveReply) Descriptor() protoreflect.MessageDescriptor {
	return md_UpgradeEnclaveReply
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_UpgradeEnclaveReply) Type() protoreflect.MessageType {
	return _fastReflection_UpgradeEnclaveReply_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_UpgradeEnclaveReply) New() protoreflect.Message {
	return new(fastReflection_UpgradeEnclaveReply)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_UpgradeEnclaveReply) Interface() protoreflect.ProtoMessage {
	return (*UpgradeEnclaveReply)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_UpgradeEnclaveReply) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if len(x.RemoteReport) != 0 {
		value := protoreflect.ValueOfBytes(x.RemoteReport)
		if !f(fd_UpgradeEnclaveReply_remoteReport, value) {
			return
		}
	}
	if len(x.EncEnclavePrivateStateEnclavePubK) != 0 {
		value := protoreflect.ValueOfBytes(x.EncEnclavePrivateStateEnclavePubK)
		if !f(fd_UpgradeEnclaveReply_encEnclavePrivateStateEnclavePubK, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_UpgradeEnclaveReply) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "qadena.qadena.UpgradeEnclaveReply.remoteReport":
		return len(x.RemoteReport) != 0
	case "qadena.qadena.UpgradeEnclaveReply.encEnclavePrivateStateEnclavePubK":
		return len(x.EncEnclavePrivateStateEnclavePubK) != 0
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: qadena.qadena.UpgradeEnclaveReply"))
		}
		panic(fmt.Errorf("message qadena.qadena.UpgradeEnclaveReply does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_UpgradeEnclaveReply) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "qadena.qadena.UpgradeEnclaveReply.remoteReport":
		x.RemoteReport = nil
	case "qadena.qadena.UpgradeEnclaveReply.encEnclavePrivateStateEnclavePubK":
		x.EncEnclavePrivateStateEnclavePubK = nil
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: qadena.qadena.UpgradeEnclaveReply"))
		}
		panic(fmt.Errorf("message qadena.qadena.UpgradeEnclaveReply does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_UpgradeEnclaveReply) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "qadena.qadena.UpgradeEnclaveReply.remoteReport":
		value := x.RemoteReport
		return protoreflect.ValueOfBytes(value)
	case "qadena.qadena.UpgradeEnclaveReply.encEnclavePrivateStateEnclavePubK":
		value := x.EncEnclavePrivateStateEnclavePubK
		return protoreflect.ValueOfBytes(value)
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: qadena.qadena.UpgradeEnclaveReply"))
		}
		panic(fmt.Errorf("message qadena.qadena.UpgradeEnclaveReply does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_UpgradeEnclaveReply) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "qadena.qadena.UpgradeEnclaveReply.remoteReport":
		x.RemoteReport = value.Bytes()
	case "qadena.qadena.UpgradeEnclaveReply.encEnclavePrivateStateEnclavePubK":
		x.EncEnclavePrivateStateEnclavePubK = value.Bytes()
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: qadena.qadena.UpgradeEnclaveReply"))
		}
		panic(fmt.Errorf("message qadena.qadena.UpgradeEnclaveReply does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_UpgradeEnclaveReply) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "qadena.qadena.UpgradeEnclaveReply.remoteReport":
		panic(fmt.Errorf("field remoteReport of message qadena.qadena.UpgradeEnclaveReply is not mutable"))
	case "qadena.qadena.UpgradeEnclaveReply.encEnclavePrivateStateEnclavePubK":
		panic(fmt.Errorf("field encEnclavePrivateStateEnclavePubK of message qadena.qadena.UpgradeEnclaveReply is not mutable"))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: qadena.qadena.UpgradeEnclaveReply"))
		}
		panic(fmt.Errorf("message qadena.qadena.UpgradeEnclaveReply does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_UpgradeEnclaveReply) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "qadena.qadena.UpgradeEnclaveReply.remoteReport":
		return protoreflect.ValueOfBytes(nil)
	case "qadena.qadena.UpgradeEnclaveReply.encEnclavePrivateStateEnclavePubK":
		return protoreflect.ValueOfBytes(nil)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: qadena.qadena.UpgradeEnclaveReply"))
		}
		panic(fmt.Errorf("message qadena.qadena.UpgradeEnclaveReply does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_UpgradeEnclaveReply) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in qadena.qadena.UpgradeEnclaveReply", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_UpgradeEnclaveReply) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_UpgradeEnclaveReply) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_UpgradeEnclaveReply) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_UpgradeEnclaveReply) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*UpgradeEnclaveReply)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		l = len(x.RemoteReport)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.EncEnclavePrivateStateEnclavePubK)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*UpgradeEnclaveReply)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if len(x.EncEnclavePrivateStateEnclavePubK) > 0 {
			i -= len(x.EncEnclavePrivateStateEnclavePubK)
			copy(dAtA[i:], x.EncEnclavePrivateStateEnclavePubK)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.EncEnclavePrivateStateEnclavePubK)))
			i--
			dAtA[i] = 0x12
		}
		if len(x.RemoteReport) > 0 {
			i -= len(x.RemoteReport)
			copy(dAtA[i:], x.RemoteReport)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.RemoteReport)))
			i--
			dAtA[i] = 0xa
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*UpgradeEnclaveReply)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: UpgradeEnclaveReply: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: UpgradeEnclaveReply: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field RemoteReport", wireType)
				}
				var byteLen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					byteLen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if byteLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + byteLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.RemoteReport = append(x.RemoteReport[:0], dAtA[iNdEx:postIndex]...)
				if x.RemoteReport == nil {
					x.RemoteReport = []byte{}
				}
				iNdEx = postIndex
			case 2:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field EncEnclavePrivateStateEnclavePubK", wireType)
				}
				var byteLen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					byteLen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if byteLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + byteLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.EncEnclavePrivateStateEnclavePubK = append(x.EncEnclavePrivateStateEnclavePubK[:0], dAtA[iNdEx:postIndex]...)
				if x.EncEnclavePrivateStateEnclavePubK == nil {
					x.EncEnclavePrivateStateEnclavePubK = []byte{}
				}
				iNdEx = postIndex
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var (
	md_MsgExportPrivateKey        protoreflect.MessageDescriptor
	fd_MsgExportPrivateKey_pubKID protoreflect.FieldDescriptor
)

func init() {
	file_qadena_qadena_enclave_proto_init()
	md_MsgExportPrivateKey = File_qadena_qadena_enclave_proto.Messages().ByName("MsgExportPrivateKey")
	fd_MsgExportPrivateKey_pubKID = md_MsgExportPrivateKey.Fields().ByName("pubKID")
}

var _ protoreflect.Message = (*fastReflection_MsgExportPrivateKey)(nil)

type fastReflection_MsgExportPrivateKey MsgExportPrivateKey

func (x *MsgExportPrivateKey) ProtoReflect() protoreflect.Message {
	return (*fastReflection_MsgExportPrivateKey)(x)
}

func (x *MsgExportPrivateKey) slowProtoReflect() protoreflect.Message {
	mi := &file_qadena_qadena_enclave_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_MsgExportPrivateKey_messageType fastReflection_MsgExportPrivateKey_messageType
var _ protoreflect.MessageType = fastReflection_MsgExportPrivateKey_messageType{}

type fastReflection_MsgExportPrivateKey_messageType struct{}

func (x fastReflection_MsgExportPrivateKey_messageType) Zero() protoreflect.Message {
	return (*fastReflection_MsgExportPrivateKey)(nil)
}
func (x fastReflection_MsgExportPrivateKey_messageType) New() protoreflect.Message {
	return new(fastReflection_MsgExportPrivateKey)
}
func (x fastReflection_MsgExportPrivateKey_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_MsgExportPrivateKey
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_MsgExportPrivateKey) Descriptor() protoreflect.MessageDescriptor {
	return md_MsgExportPrivateKey
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_MsgExportPrivateKey) Type() protoreflect.MessageType {
	return _fastReflection_MsgExportPrivateKey_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_MsgExportPrivateKey) New() protoreflect.Message {
	return new(fastReflection_MsgExportPrivateKey)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_MsgExportPrivateKey) Interface() protoreflect.ProtoMessage {
	return (*MsgExportPrivateKey)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_MsgExportPrivateKey) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.PubKID != "" {
		value := protoreflect.ValueOfString(x.PubKID)
		if !f(fd_MsgExportPrivateKey_pubKID, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_MsgExportPrivateKey) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "qadena.qadena.MsgExportPrivateKey.pubKID":
		return x.PubKID != ""
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: qadena.qadena.MsgExportPrivateKey"))
		}
		panic(fmt.Errorf("message qadena.qadena.MsgExportPrivateKey does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgExportPrivateKey) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "qadena.qadena.MsgExportPrivateKey.pubKID":
		x.PubKID = ""
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: qadena.qadena.MsgExportPrivateKey"))
		}
		panic(fmt.Errorf("message qadena.qadena.MsgExportPrivateKey does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_MsgExportPrivateKey) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "qadena.qadena.MsgExportPrivateKey.pubKID":
		value := x.PubKID
		return protoreflect.ValueOfString(value)
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: qadena.qadena.MsgExportPrivateKey"))
		}
		panic(fmt.Errorf("message qadena.qadena.MsgExportPrivateKey does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgExportPrivateKey) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "qadena.qadena.MsgExportPrivateKey.pubKID":
		x.PubKID = value.Interface().(string)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: qadena.qadena.MsgExportPrivateKey"))
		}
		panic(fmt.Errorf("message qadena.qadena.MsgExportPrivateKey does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgExportPrivateKey) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "qadena.qadena.MsgExportPrivateKey.pubKID":
		panic(fmt.Errorf("field pubKID of message qadena.qadena.MsgExportPrivateKey is not mutable"))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: qadena.qadena.MsgExportPrivateKey"))
		}
		panic(fmt.Errorf("message qadena.qadena.MsgExportPrivateKey does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_MsgExportPrivateKey) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "qadena.qadena.MsgExportPrivateKey.pubKID":
		return protoreflect.ValueOfString("")
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: qadena.qadena.MsgExportPrivateKey"))
		}
		panic(fmt.Errorf("message qadena.qadena.MsgExportPrivateKey does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_MsgExportPrivateKey) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in qadena.qadena.MsgExportPrivateKey", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_MsgExportPrivateKey) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgExportPrivateKey) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_MsgExportPrivateKey) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_MsgExportPrivateKey) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*MsgExportPrivateKey)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		l = len(x.PubKID)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*MsgExportPrivateKey)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if len(x.PubKID) > 0 {
			i -= len(x.PubKID)
			copy(dAtA[i:], x.PubKID)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.PubKID)))
			i--
			dAtA[i] = 0xa
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*MsgExportPrivateKey)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: MsgExportPrivateKey: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: MsgExportPrivateKey: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field PubKID", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.PubKID = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var (
	md_MsgRemovePrivateKey        protoreflect.MessageDescriptor
	fd_MsgRemovePrivateKey_pubKID protoreflect.FieldDescriptor
)

func init() {
	file_qadena_qadena_enclave_proto_init()
	md_MsgRemovePrivateKey = File_qadena_qadena_enclave_proto.Messages().ByName("MsgRemovePrivateKey")
	fd_MsgRemovePrivateKey_pubKID = md_MsgRemovePrivateKey.Fields().ByName("pubKID")
}

var _ protoreflect.Message = (*fastReflection_MsgRemovePrivateKey)(nil)

type fastReflection_MsgRemovePrivateKey MsgRemovePrivateKey

func (x *MsgRemovePrivateKey) ProtoReflect() protoreflect.Message {
	return (*fastReflection_MsgRemovePrivateKey)(x)
}

func (x *MsgRemovePrivateKey) slowProtoReflect() protoreflect.Message {
	mi := &file_qadena_qadena_enclave_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_MsgRemovePrivateKey_messageType fastReflection_MsgRemovePrivateKey_messageType
var _ protoreflect.MessageType = fastReflection_MsgRemovePrivateKey_messageType{}

type fastReflection_MsgRemovePrivateKey_messageType struct{}

func (x fastReflection_MsgRemovePrivateKey_messageType) Zero() protoreflect.Message {
	return (*fastReflection_MsgRemovePrivateKey)(nil)
}
func (x fastReflection_MsgRemovePrivateKey_messageType) New() protoreflect.Message {
	return new(fastReflection_MsgRemovePrivateKey)
}
func (x fastReflection_MsgRemovePrivateKey_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_MsgRemovePrivateKey
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_MsgRemovePrivateKey) Descriptor() protoreflect.MessageDescriptor {
	return md_MsgRemovePrivateKey
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_MsgRemovePrivateKey) Type() protoreflect.MessageType {
	return _fastReflection_MsgRemovePrivateKey_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_MsgRemovePrivateKey) New() protoreflect.Message {
	return new(fastReflection_MsgRemovePrivateKey)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_MsgRemovePrivateKey) Interface() protoreflect.ProtoMessage {
	return (*MsgRemovePrivateKey)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_MsgRemovePrivateKey) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.PubKID != "" {
		value := protoreflect.ValueOfString(x.PubKID)
		if !f(fd_MsgRemovePrivateKey_pubKID, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_MsgRemovePrivateKey) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "qadena.qadena.MsgRemovePrivateKey.pubKID":
		return x.PubKID != ""
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: qadena.qadena.MsgRemovePrivateKey"))
		}
		panic(fmt.Errorf("message qadena.qadena.MsgRemovePrivateKey does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgRemovePrivateKey) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "qadena.qadena.MsgRemovePrivateKey.pubKID":
		x.PubKID = ""
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: qadena.qadena.MsgRemovePrivateKey"))
		}
		panic(fmt.Errorf("message qadena.qadena.MsgRemovePrivateKey does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_MsgRemovePrivateKey) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "qadena.qadena.MsgRemovePrivateKey.pubKID":
		value := x.PubKID
		return protoreflect.ValueOfString(value)
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: qadena.qadena.MsgRemovePrivateKey"))
		}
		panic(fmt.Errorf("message qadena.qadena.MsgRemovePrivateKey does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgRemovePrivateKey) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "qadena.qadena.MsgRemovePrivateKey.pubKID":
		x.PubKID = value.Interface().(string)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: qadena.qadena.MsgRemovePrivateKey"))
		}
		panic(fmt.Errorf("message qadena.qadena.MsgRemovePrivateKey does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgRemovePrivateKey) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "qadena.qadena.MsgRemovePrivateKey.pubKID":
		panic(fmt.Errorf("field pubKID of message qadena.qadena.MsgRemovePrivateKey is not mutable"))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: qadena.qadena.MsgRemovePrivateKey"))
		}
		panic(fmt.Errorf("message qadena.qadena.MsgRemovePrivateKey does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_MsgRemovePrivateKey) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "qadena.qadena.MsgRemovePrivateKey.pubKID":
		return protoreflect.ValueOfString("")
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: qadena.qadena.MsgRemovePrivateKey"))
		}
		panic(fmt.Errorf("message qadena.qadena.MsgRemovePrivateKey does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_MsgRemovePrivateKey) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in qadena.qadena.MsgRemovePrivateKey", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_MsgRemovePrivateKey) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgRemovePrivateKey) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_MsgRemovePrivateKey) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_MsgRemovePrivateKey) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*MsgRemovePrivateKey)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		l = len(x.PubKID)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*MsgRemovePrivateKey)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if len(x.PubKID) > 0 {
			i -= len(x.PubKID)
			copy(dAtA[i:], x.PubKID)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.PubKID)))
			i--
			dAtA[i] = 0xa
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*MsgRemovePrivateKey)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: MsgRemovePrivateKey: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: MsgRemovePrivateKey: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field PubKID", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.PubKID = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var (
	md_MsgExportPrivateState protoreflect.MessageDescriptor
)

func init() {
	file_qadena_qadena_enclave_proto_init()
	md_MsgExportPrivateState = File_qadena_qadena_enclave_proto.Messages().ByName("MsgExportPrivateState")
}

var _ protoreflect.Message = (*fastReflection_MsgExportPrivateState)(nil)

type fastReflection_MsgExportPrivateState MsgExportPrivateState

func (x *MsgExportPrivateState) ProtoReflect() protoreflect.Message {
	return (*fastReflection_MsgExportPrivateState)(x)
}

func (x *MsgExportPrivateState) slowProtoReflect() protoreflect.Message {
	mi := &file_qadena_qadena_enclave_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_MsgExportPrivateState_messageType fastReflection_MsgExportPrivateState_messageType
var _ protoreflect.MessageType = fastReflection_MsgExportPrivateState_messageType{}

type fastReflection_MsgExportPrivateState_messageType struct{}

func (x fastReflection_MsgExportPrivateState_messageType) Zero() protoreflect.Message {
	return (*fastReflection_MsgExportPrivateState)(nil)
}
func (x fastReflection_MsgExportPrivateState_messageType) New() protoreflect.Message {
	return new(fastReflection_MsgExportPrivateState)
}
func (x fastReflection_MsgExportPrivateState_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_MsgExportPrivateState
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_MsgExportPrivateState) Descriptor() protoreflect.MessageDescriptor {
	return md_MsgExportPrivateState
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_MsgExportPrivateState) Type() protoreflect.MessageType {
	return _fastReflection_MsgExportPrivateState_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_MsgExportPrivateState) New() protoreflect.Message {
	return new(fastReflection_MsgExportPrivateState)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_MsgExportPrivateState) Interface() protoreflect.ProtoMessage {
	return (*MsgExportPrivateState)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_MsgExportPrivateState) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_MsgExportPrivateState) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: qadena.qadena.MsgExportPrivateState"))
		}
		panic(fmt.Errorf("message qadena.qadena.MsgExportPrivateState does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgExportPrivateState) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: qadena.qadena.MsgExportPrivateState"))
		}
		panic(fmt.Errorf("message qadena.qadena.MsgExportPrivateState does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_MsgExportPrivateState) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: qadena.qadena.MsgExportPrivateState"))
		}
		panic(fmt.Errorf("message qadena.qadena.MsgExportPrivateState does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgExportPrivateState) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: qadena.qadena.MsgExportPrivateState"))
		}
		panic(fmt.Errorf("message qadena.qadena.MsgExportPrivateState does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgExportPrivateState) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: qadena.qadena.MsgExportPrivateState"))
		}
		panic(fmt.Errorf("message qadena.qadena.MsgExportPrivateState does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_MsgExportPrivateState) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: qadena.qadena.MsgExportPrivateState"))
		}
		panic(fmt.Errorf("message qadena.qadena.MsgExportPrivateState does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_MsgExportPrivateState) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in qadena.qadena.MsgExportPrivateState", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_MsgExportPrivateState) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgExportPrivateState) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_MsgExportPrivateState) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_MsgExportPrivateState) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*MsgExportPrivateState)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*MsgExportPrivateState)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*MsgExportPrivateState)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: MsgExportPrivateState: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: MsgExportPrivateState: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var (
	md_MsgUpdateSSIntervalKey protoreflect.MessageDescriptor
)

func init() {
	file_qadena_qadena_enclave_proto_init()
	md_MsgUpdateSSIntervalKey = File_qadena_qadena_enclave_proto.Messages().ByName("MsgUpdateSSIntervalKey")
}

var _ protoreflect.Message = (*fastReflection_MsgUpdateSSIntervalKey)(nil)

type fastReflection_MsgUpdateSSIntervalKey MsgUpdateSSIntervalKey

func (x *MsgUpdateSSIntervalKey) ProtoReflect() protoreflect.Message {
	return (*fastReflection_MsgUpdateSSIntervalKey)(x)
}

func (x *MsgUpdateSSIntervalKey) slowProtoReflect() protoreflect.Message {
	mi := &file_qadena_qadena_enclave_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_MsgUpdateSSIntervalKey_messageType fastReflection_MsgUpdateSSIntervalKey_messageType
var _ protoreflect.MessageType = fastReflection_MsgUpdateSSIntervalKey_messageType{}

type fastReflection_MsgUpdateSSIntervalKey_messageType struct{}

func (x fastReflection_MsgUpdateSSIntervalKey_messageType) Zero() protoreflect.Message {
	return (*fastReflection_MsgUpdateSSIntervalKey)(nil)
}
func (x fastReflection_MsgUpdateSSIntervalKey_messageType) New() protoreflect.Message {
	return new(fastReflection_MsgUpdateSSIntervalKey)
}
func (x fastReflection_MsgUpdateSSIntervalKey_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_MsgUpdateSSIntervalKey
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_MsgUpdateSSIntervalKey) Descriptor() protoreflect.MessageDescriptor {
	return md_MsgUpdateSSIntervalKey
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_MsgUpdateSSIntervalKey) Type() protoreflect.MessageType {
	return _fastReflection_MsgUpdateSSIntervalKey_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_MsgUpdateSSIntervalKey) New() protoreflect.Message {
	return new(fastReflection_MsgUpdateSSIntervalKey)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_MsgUpdateSSIntervalKey) Interface() protoreflect.ProtoMessage {
	return (*MsgUpdateSSIntervalKey)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_MsgUpdateSSIntervalKey) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_MsgUpdateSSIntervalKey) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: qadena.qadena.MsgUpdateSSIntervalKey"))
		}
		panic(fmt.Errorf("message qadena.qadena.MsgUpdateSSIntervalKey does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgUpdateSSIntervalKey) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: qadena.qadena.MsgUpdateSSIntervalKey"))
		}
		panic(fmt.Errorf("message qadena.qadena.MsgUpdateSSIntervalKey does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_MsgUpdateSSIntervalKey) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: qadena.qadena.MsgUpdateSSIntervalKey"))
		}
		panic(fmt.Errorf("message qadena.qadena.MsgUpdateSSIntervalKey does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgUpdateSSIntervalKey) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: qadena.qadena.MsgUpdateSSIntervalKey"))
		}
		panic(fmt.Errorf("message qadena.qadena.MsgUpdateSSIntervalKey does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgUpdateSSIntervalKey) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: qadena.qadena.MsgUpdateSSIntervalKey"))
		}
		panic(fmt.Errorf("message qadena.qadena.MsgUpdateSSIntervalKey does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_MsgUpdateSSIntervalKey) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: qadena.qadena.MsgUpdateSSIntervalKey"))
		}
		panic(fmt.Errorf("message qadena.qadena.MsgUpdateSSIntervalKey does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_MsgUpdateSSIntervalKey) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in qadena.qadena.MsgUpdateSSIntervalKey", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_MsgUpdateSSIntervalKey) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgUpdateSSIntervalKey) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_MsgUpdateSSIntervalKey) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_MsgUpdateSSIntervalKey) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*MsgUpdateSSIntervalKey)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*MsgUpdateSSIntervalKey)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*MsgUpdateSSIntervalKey)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: MsgUpdateSSIntervalKey: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: MsgUpdateSSIntervalKey: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var (
	md_UpdateSSIntervalKeyReply protoreflect.MessageDescriptor
)

func init() {
	file_qadena_qadena_enclave_proto_init()
	md_UpdateSSIntervalKeyReply = File_qadena_qadena_enclave_proto.Messages().ByName("UpdateSSIntervalKeyReply")
}

var _ protoreflect.Message = (*fastReflection_UpdateSSIntervalKeyReply)(nil)

type fastReflection_UpdateSSIntervalKeyReply UpdateSSIntervalKeyReply

func (x *UpdateSSIntervalKeyReply) ProtoReflect() protoreflect.Message {
	return (*fastReflection_UpdateSSIntervalKeyReply)(x)
}

func (x *UpdateSSIntervalKeyReply) slowProtoReflect() protoreflect.Message {
	mi := &file_qadena_qadena_enclave_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_UpdateSSIntervalKeyReply_messageType fastReflection_UpdateSSIntervalKeyReply_messageType
var _ protoreflect.MessageType = fastReflection_UpdateSSIntervalKeyReply_messageType{}

type fastReflection_UpdateSSIntervalKeyReply_messageType struct{}

func (x fastReflection_UpdateSSIntervalKeyReply_messageType) Zero() protoreflect.Message {
	return (*fastReflection_UpdateSSIntervalKeyReply)(nil)
}
func (x fastReflection_UpdateSSIntervalKeyReply_messageType) New() protoreflect.Message {
	return new(fastReflection_UpdateSSIntervalKeyReply)
}
func (x fastReflection_UpdateSSIntervalKeyReply_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_UpdateSSIntervalKeyReply
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_UpdateSSIntervalKeyReply) Descriptor() protoreflect.MessageDescriptor {
	return md_UpdateSSIntervalKeyReply
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_UpdateSSIntervalKeyReply) Type() protoreflect.MessageType {
	return _fastReflection_UpdateSSIntervalKeyReply_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_UpdateSSIntervalKeyReply) New() protoreflect.Message {
	return new(fastReflection_UpdateSSIntervalKeyReply)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_UpdateSSIntervalKeyReply) Interface() protoreflect.ProtoMessage {
	return (*UpdateSSIntervalKeyReply)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_UpdateSSIntervalKeyReply) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_UpdateSSIntervalKeyReply) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: qadena.qadena.UpdateSSIntervalKeyReply"))
		}
		panic(fmt.Errorf("message qadena.qadena.UpdateSSIntervalKeyReply does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_UpdateSSIntervalKeyReply) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: qadena.qadena.UpdateSSIntervalKeyReply"))
		}
		panic(fmt.Errorf("message qadena.qadena.UpdateSSIntervalKeyReply does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_UpdateSSIntervalKeyReply) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: qadena.qadena.UpdateSSIntervalKeyReply"))
		}
		panic(fmt.Errorf("message qadena.qadena.UpdateSSIntervalKeyReply does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_UpdateSSIntervalKeyReply) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: qadena.qadena.UpdateSSIntervalKeyReply"))
		}
		panic(fmt.Errorf("message qadena.qadena.UpdateSSIntervalKeyReply does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_UpdateSSIntervalKeyReply) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: qadena.qadena.UpdateSSIntervalKeyReply"))
		}
		panic(fmt.Errorf("message qadena.qadena.UpdateSSIntervalKeyReply does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_UpdateSSIntervalKeyReply) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: qadena.qadena.UpdateSSIntervalKeyReply"))
		}
		panic(fmt.Errorf("message qadena.qadena.UpdateSSIntervalKeyReply does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_UpdateSSIntervalKeyReply) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in qadena.qadena.UpdateSSIntervalKeyReply", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_UpdateSSIntervalKeyReply) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_UpdateSSIntervalKeyReply) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_UpdateSSIntervalKeyReply) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_UpdateSSIntervalKeyReply) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*UpdateSSIntervalKeyReply)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*UpdateSSIntervalKeyReply)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*UpdateSSIntervalKeyReply)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: UpdateSSIntervalKeyReply: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: UpdateSSIntervalKeyReply: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var (
	md_RemovePrivateKeyReply protoreflect.MessageDescriptor
)

func init() {
	file_qadena_qadena_enclave_proto_init()
	md_RemovePrivateKeyReply = File_qadena_qadena_enclave_proto.Messages().ByName("RemovePrivateKeyReply")
}

var _ protoreflect.Message = (*fastReflection_RemovePrivateKeyReply)(nil)

type fastReflection_RemovePrivateKeyReply RemovePrivateKeyReply

func (x *RemovePrivateKeyReply) ProtoReflect() protoreflect.Message {
	return (*fastReflection_RemovePrivateKeyReply)(x)
}

func (x *RemovePrivateKeyReply) slowProtoReflect() protoreflect.Message {
	mi := &file_qadena_qadena_enclave_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_RemovePrivateKeyReply_messageType fastReflection_RemovePrivateKeyReply_messageType
var _ protoreflect.MessageType = fastReflection_RemovePrivateKeyReply_messageType{}

type fastReflection_RemovePrivateKeyReply_messageType struct{}

func (x fastReflection_RemovePrivateKeyReply_messageType) Zero() protoreflect.Message {
	return (*fastReflection_RemovePrivateKeyReply)(nil)
}
func (x fastReflection_RemovePrivateKeyReply_messageType) New() protoreflect.Message {
	return new(fastReflection_RemovePrivateKeyReply)
}
func (x fastReflection_RemovePrivateKeyReply_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_RemovePrivateKeyReply
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_RemovePrivateKeyReply) Descriptor() protoreflect.MessageDescriptor {
	return md_RemovePrivateKeyReply
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_RemovePrivateKeyReply) Type() protoreflect.MessageType {
	return _fastReflection_RemovePrivateKeyReply_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_RemovePrivateKeyReply) New() protoreflect.Message {
	return new(fastReflection_RemovePrivateKeyReply)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_RemovePrivateKeyReply) Interface() protoreflect.ProtoMessage {
	return (*RemovePrivateKeyReply)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_RemovePrivateKeyReply) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_RemovePrivateKeyReply) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: qadena.qadena.RemovePrivateKeyReply"))
		}
		panic(fmt.Errorf("message qadena.qadena.RemovePrivateKeyReply does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_RemovePrivateKeyReply) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: qadena.qadena.RemovePrivateKeyReply"))
		}
		panic(fmt.Errorf("message qadena.qadena.RemovePrivateKeyReply does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_RemovePrivateKeyReply) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: qadena.qadena.RemovePrivateKeyReply"))
		}
		panic(fmt.Errorf("message qadena.qadena.RemovePrivateKeyReply does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_RemovePrivateKeyReply) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: qadena.qadena.RemovePrivateKeyReply"))
		}
		panic(fmt.Errorf("message qadena.qadena.RemovePrivateKeyReply does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_RemovePrivateKeyReply) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: qadena.qadena.RemovePrivateKeyReply"))
		}
		panic(fmt.Errorf("message qadena.qadena.RemovePrivateKeyReply does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_RemovePrivateKeyReply) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: qadena.qadena.RemovePrivateKeyReply"))
		}
		panic(fmt.Errorf("message qadena.qadena.RemovePrivateKeyReply does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_RemovePrivateKeyReply) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in qadena.qadena.RemovePrivateKeyReply", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_RemovePrivateKeyReply) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_RemovePrivateKeyReply) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_RemovePrivateKeyReply) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_RemovePrivateKeyReply) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*RemovePrivateKeyReply)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*RemovePrivateKeyReply)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*RemovePrivateKeyReply)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: RemovePrivateKeyReply: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: RemovePrivateKeyReply: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var (
	md_ExportPrivateKeyReply       protoreflect.MessageDescriptor
	fd_ExportPrivateKeyReply_privK protoreflect.FieldDescriptor
)

func init() {
	file_qadena_qadena_enclave_proto_init()
	md_ExportPrivateKeyReply = File_qadena_qadena_enclave_proto.Messages().ByName("ExportPrivateKeyReply")
	fd_ExportPrivateKeyReply_privK = md_ExportPrivateKeyReply.Fields().ByName("privK")
}

var _ protoreflect.Message = (*fastReflection_ExportPrivateKeyReply)(nil)

type fastReflection_ExportPrivateKeyReply ExportPrivateKeyReply

func (x *ExportPrivateKeyReply) ProtoReflect() protoreflect.Message {
	return (*fastReflection_ExportPrivateKeyReply)(x)
}

func (x *ExportPrivateKeyReply) slowProtoReflect() protoreflect.Message {
	mi := &file_qadena_qadena_enclave_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_ExportPrivateKeyReply_messageType fastReflection_ExportPrivateKeyReply_messageType
var _ protoreflect.MessageType = fastReflection_ExportPrivateKeyReply_messageType{}

type fastReflection_ExportPrivateKeyReply_messageType struct{}

func (x fastReflection_ExportPrivateKeyReply_messageType) Zero() protoreflect.Message {
	return (*fastReflection_ExportPrivateKeyReply)(nil)
}
func (x fastReflection_ExportPrivateKeyReply_messageType) New() protoreflect.Message {
	return new(fastReflection_ExportPrivateKeyReply)
}
func (x fastReflection_ExportPrivateKeyReply_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_ExportPrivateKeyReply
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_ExportPrivateKeyReply) Descriptor() protoreflect.MessageDescriptor {
	return md_ExportPrivateKeyReply
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_ExportPrivateKeyReply) Type() protoreflect.MessageType {
	return _fastReflection_ExportPrivateKeyReply_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_ExportPrivateKeyReply) New() protoreflect.Message {
	return new(fastReflection_ExportPrivateKeyReply)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_ExportPrivateKeyReply) Interface() protoreflect.ProtoMessage {
	return (*ExportPrivateKeyReply)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_ExportPrivateKeyReply) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.PrivK != "" {
		value := protoreflect.ValueOfString(x.PrivK)
		if !f(fd_ExportPrivateKeyReply_privK, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_ExportPrivateKeyReply) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "qadena.qadena.ExportPrivateKeyReply.privK":
		return x.PrivK != ""
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: qadena.qadena.ExportPrivateKeyReply"))
		}
		panic(fmt.Errorf("message qadena.qadena.ExportPrivateKeyReply does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_ExportPrivateKeyReply) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "qadena.qadena.ExportPrivateKeyReply.privK":
		x.PrivK = ""
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: qadena.qadena.ExportPrivateKeyReply"))
		}
		panic(fmt.Errorf("message qadena.qadena.ExportPrivateKeyReply does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_ExportPrivateKeyReply) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "qadena.qadena.ExportPrivateKeyReply.privK":
		value := x.PrivK
		return protoreflect.ValueOfString(value)
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: qadena.qadena.ExportPrivateKeyReply"))
		}
		panic(fmt.Errorf("message qadena.qadena.ExportPrivateKeyReply does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_ExportPrivateKeyReply) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "qadena.qadena.ExportPrivateKeyReply.privK":
		x.PrivK = value.Interface().(string)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: qadena.qadena.ExportPrivateKeyReply"))
		}
		panic(fmt.Errorf("message qadena.qadena.ExportPrivateKeyReply does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_ExportPrivateKeyReply) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "qadena.qadena.ExportPrivateKeyReply.privK":
		panic(fmt.Errorf("field privK of message qadena.qadena.ExportPrivateKeyReply is not mutable"))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: qadena.qadena.ExportPrivateKeyReply"))
		}
		panic(fmt.Errorf("message qadena.qadena.ExportPrivateKeyReply does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_ExportPrivateKeyReply) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "qadena.qadena.ExportPrivateKeyReply.privK":
		return protoreflect.ValueOfString("")
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: qadena.qadena.ExportPrivateKeyReply"))
		}
		panic(fmt.Errorf("message qadena.qadena.ExportPrivateKeyReply does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_ExportPrivateKeyReply) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in qadena.qadena.ExportPrivateKeyReply", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_ExportPrivateKeyReply) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_ExportPrivateKeyReply) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_ExportPrivateKeyReply) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_ExportPrivateKeyReply) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*ExportPrivateKeyReply)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		l = len(x.PrivK)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*ExportPrivateKeyReply)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if len(x.PrivK) > 0 {
			i -= len(x.PrivK)
			copy(dAtA[i:], x.PrivK)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.PrivK)))
			i--
			dAtA[i] = 0xa
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*ExportPrivateKeyReply)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: ExportPrivateKeyReply: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: ExportPrivateKeyReply: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field PrivK", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.PrivK = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var (
	md_ExportPrivateStateReply       protoreflect.MessageDescriptor
	fd_ExportPrivateStateReply_state protoreflect.FieldDescriptor
)

func init() {
	file_qadena_qadena_enclave_proto_init()
	md_ExportPrivateStateReply = File_qadena_qadena_enclave_proto.Messages().ByName("ExportPrivateStateReply")
	fd_ExportPrivateStateReply_state = md_ExportPrivateStateReply.Fields().ByName("state")
}

var _ protoreflect.Message = (*fastReflection_ExportPrivateStateReply)(nil)

type fastReflection_ExportPrivateStateReply ExportPrivateStateReply

func (x *ExportPrivateStateReply) ProtoReflect() protoreflect.Message {
	return (*fastReflection_ExportPrivateStateReply)(x)
}

func (x *ExportPrivateStateReply) slowProtoReflect() protoreflect.Message {
	mi := &file_qadena_qadena_enclave_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_ExportPrivateStateReply_messageType fastReflection_ExportPrivateStateReply_messageType
var _ protoreflect.MessageType = fastReflection_ExportPrivateStateReply_messageType{}

type fastReflection_ExportPrivateStateReply_messageType struct{}

func (x fastReflection_ExportPrivateStateReply_messageType) Zero() protoreflect.Message {
	return (*fastReflection_ExportPrivateStateReply)(nil)
}
func (x fastReflection_ExportPrivateStateReply_messageType) New() protoreflect.Message {
	return new(fastReflection_ExportPrivateStateReply)
}
func (x fastReflection_ExportPrivateStateReply_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_ExportPrivateStateReply
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_ExportPrivateStateReply) Descriptor() protoreflect.MessageDescriptor {
	return md_ExportPrivateStateReply
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_ExportPrivateStateReply) Type() protoreflect.MessageType {
	return _fastReflection_ExportPrivateStateReply_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_ExportPrivateStateReply) New() protoreflect.Message {
	return new(fastReflection_ExportPrivateStateReply)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_ExportPrivateStateReply) Interface() protoreflect.ProtoMessage {
	return (*ExportPrivateStateReply)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_ExportPrivateStateReply) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.State != "" {
		value := protoreflect.ValueOfString(x.State)
		if !f(fd_ExportPrivateStateReply_state, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_ExportPrivateStateReply) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "qadena.qadena.ExportPrivateStateReply.state":
		return x.State != ""
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: qadena.qadena.ExportPrivateStateReply"))
		}
		panic(fmt.Errorf("message qadena.qadena.ExportPrivateStateReply does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_ExportPrivateStateReply) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "qadena.qadena.ExportPrivateStateReply.state":
		x.State = ""
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: qadena.qadena.ExportPrivateStateReply"))
		}
		panic(fmt.Errorf("message qadena.qadena.ExportPrivateStateReply does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_ExportPrivateStateReply) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "qadena.qadena.ExportPrivateStateReply.state":
		value := x.State
		return protoreflect.ValueOfString(value)
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: qadena.qadena.ExportPrivateStateReply"))
		}
		panic(fmt.Errorf("message qadena.qadena.ExportPrivateStateReply does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_ExportPrivateStateReply) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "qadena.qadena.ExportPrivateStateReply.state":
		x.State = value.Interface().(string)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: qadena.qadena.ExportPrivateStateReply"))
		}
		panic(fmt.Errorf("message qadena.qadena.ExportPrivateStateReply does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_ExportPrivateStateReply) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "qadena.qadena.ExportPrivateStateReply.state":
		panic(fmt.Errorf("field state of message qadena.qadena.ExportPrivateStateReply is not mutable"))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: qadena.qadena.ExportPrivateStateReply"))
		}
		panic(fmt.Errorf("message qadena.qadena.ExportPrivateStateReply does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_ExportPrivateStateReply) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "qadena.qadena.ExportPrivateStateReply.state":
		return protoreflect.ValueOfString("")
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: qadena.qadena.ExportPrivateStateReply"))
		}
		panic(fmt.Errorf("message qadena.qadena.ExportPrivateStateReply does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_ExportPrivateStateReply) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in qadena.qadena.ExportPrivateStateReply", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_ExportPrivateStateReply) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_ExportPrivateStateReply) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_ExportPrivateStateReply) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_ExportPrivateStateReply) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*ExportPrivateStateReply)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		l = len(x.State)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*ExportPrivateStateReply)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if len(x.State) > 0 {
			i -= len(x.State)
			copy(dAtA[i:], x.State)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.State)))
			i--
			dAtA[i] = 0xa
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*ExportPrivateStateReply)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: ExportPrivateStateReply: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: ExportPrivateStateReply: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field State", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.State = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var (
	md_ValidateAuthenticateServiceProviderRequest                     protoreflect.MessageDescriptor
	fd_ValidateAuthenticateServiceProviderRequest_pubKID              protoreflect.FieldDescriptor
	fd_ValidateAuthenticateServiceProviderRequest_serviceProviderType protoreflect.FieldDescriptor
)

func init() {
	file_qadena_qadena_enclave_proto_init()
	md_ValidateAuthenticateServiceProviderRequest = File_qadena_qadena_enclave_proto.Messages().ByName("ValidateAuthenticateServiceProviderRequest")
	fd_ValidateAuthenticateServiceProviderRequest_pubKID = md_ValidateAuthenticateServiceProviderRequest.Fields().ByName("pubKID")
	fd_ValidateAuthenticateServiceProviderRequest_serviceProviderType = md_ValidateAuthenticateServiceProviderRequest.Fields().ByName("serviceProviderType")
}

var _ protoreflect.Message = (*fastReflection_ValidateAuthenticateServiceProviderRequest)(nil)

type fastReflection_ValidateAuthenticateServiceProviderRequest ValidateAuthenticateServiceProviderRequest

func (x *ValidateAuthenticateServiceProviderRequest) ProtoReflect() protoreflect.Message {
	return (*fastReflection_ValidateAuthenticateServiceProviderRequest)(x)
}

func (x *ValidateAuthenticateServiceProviderRequest) slowProtoReflect() protoreflect.Message {
	mi := &file_qadena_qadena_enclave_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_ValidateAuthenticateServiceProviderRequest_messageType fastReflection_ValidateAuthenticateServiceProviderRequest_messageType
var _ protoreflect.MessageType = fastReflection_ValidateAuthenticateServiceProviderRequest_messageType{}

type fastReflection_ValidateAuthenticateServiceProviderRequest_messageType struct{}

func (x fastReflection_ValidateAuthenticateServiceProviderRequest_messageType) Zero() protoreflect.Message {
	return (*fastReflection_ValidateAuthenticateServiceProviderRequest)(nil)
}
func (x fastReflection_ValidateAuthenticateServiceProviderRequest_messageType) New() protoreflect.Message {
	return new(fastReflection_ValidateAuthenticateServiceProviderRequest)
}
func (x fastReflection_ValidateAuthenticateServiceProviderRequest_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_ValidateAuthenticateServiceProviderRequest
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_ValidateAuthenticateServiceProviderRequest) Descriptor() protoreflect.MessageDescriptor {
	return md_ValidateAuthenticateServiceProviderRequest
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_ValidateAuthenticateServiceProviderRequest) Type() protoreflect.MessageType {
	return _fastReflection_ValidateAuthenticateServiceProviderRequest_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_ValidateAuthenticateServiceProviderRequest) New() protoreflect.Message {
	return new(fastReflection_ValidateAuthenticateServiceProviderRequest)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_ValidateAuthenticateServiceProviderRequest) Interface() protoreflect.ProtoMessage {
	return (*ValidateAuthenticateServiceProviderRequest)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_ValidateAuthenticateServiceProviderRequest) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.PubKID != "" {
		value := protoreflect.ValueOfString(x.PubKID)
		if !f(fd_ValidateAuthenticateServiceProviderRequest_pubKID, value) {
			return
		}
	}
	if x.ServiceProviderType != "" {
		value := protoreflect.ValueOfString(x.ServiceProviderType)
		if !f(fd_ValidateAuthenticateServiceProviderRequest_serviceProviderType, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_ValidateAuthenticateServiceProviderRequest) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "qadena.qadena.ValidateAuthenticateServiceProviderRequest.pubKID":
		return x.PubKID != ""
	case "qadena.qadena.ValidateAuthenticateServiceProviderRequest.serviceProviderType":
		return x.ServiceProviderType != ""
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: qadena.qadena.ValidateAuthenticateServiceProviderRequest"))
		}
		panic(fmt.Errorf("message qadena.qadena.ValidateAuthenticateServiceProviderRequest does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_ValidateAuthenticateServiceProviderRequest) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "qadena.qadena.ValidateAuthenticateServiceProviderRequest.pubKID":
		x.PubKID = ""
	case "qadena.qadena.ValidateAuthenticateServiceProviderRequest.serviceProviderType":
		x.ServiceProviderType = ""
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: qadena.qadena.ValidateAuthenticateServiceProviderRequest"))
		}
		panic(fmt.Errorf("message qadena.qadena.ValidateAuthenticateServiceProviderRequest does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_ValidateAuthenticateServiceProviderRequest) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "qadena.qadena.ValidateAuthenticateServiceProviderRequest.pubKID":
		value := x.PubKID
		return protoreflect.ValueOfString(value)
	case "qadena.qadena.ValidateAuthenticateServiceProviderRequest.serviceProviderType":
		value := x.ServiceProviderType
		return protoreflect.ValueOfString(value)
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: qadena.qadena.ValidateAuthenticateServiceProviderRequest"))
		}
		panic(fmt.Errorf("message qadena.qadena.ValidateAuthenticateServiceProviderRequest does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_ValidateAuthenticateServiceProviderRequest) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "qadena.qadena.ValidateAuthenticateServiceProviderRequest.pubKID":
		x.PubKID = value.Interface().(string)
	case "qadena.qadena.ValidateAuthenticateServiceProviderRequest.serviceProviderType":
		x.ServiceProviderType = value.Interface().(string)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: qadena.qadena.ValidateAuthenticateServiceProviderRequest"))
		}
		panic(fmt.Errorf("message qadena.qadena.ValidateAuthenticateServiceProviderRequest does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_ValidateAuthenticateServiceProviderRequest) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "qadena.qadena.ValidateAuthenticateServiceProviderRequest.pubKID":
		panic(fmt.Errorf("field pubKID of message qadena.qadena.ValidateAuthenticateServiceProviderRequest is not mutable"))
	case "qadena.qadena.ValidateAuthenticateServiceProviderRequest.serviceProviderType":
		panic(fmt.Errorf("field serviceProviderType of message qadena.qadena.ValidateAuthenticateServiceProviderRequest is not mutable"))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: qadena.qadena.ValidateAuthenticateServiceProviderRequest"))
		}
		panic(fmt.Errorf("message qadena.qadena.ValidateAuthenticateServiceProviderRequest does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_ValidateAuthenticateServiceProviderRequest) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "qadena.qadena.ValidateAuthenticateServiceProviderRequest.pubKID":
		return protoreflect.ValueOfString("")
	case "qadena.qadena.ValidateAuthenticateServiceProviderRequest.serviceProviderType":
		return protoreflect.ValueOfString("")
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: qadena.qadena.ValidateAuthenticateServiceProviderRequest"))
		}
		panic(fmt.Errorf("message qadena.qadena.ValidateAuthenticateServiceProviderRequest does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_ValidateAuthenticateServiceProviderRequest) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in qadena.qadena.ValidateAuthenticateServiceProviderRequest", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_ValidateAuthenticateServiceProviderRequest) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_ValidateAuthenticateServiceProviderRequest) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_ValidateAuthenticateServiceProviderRequest) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_ValidateAuthenticateServiceProviderRequest) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*ValidateAuthenticateServiceProviderRequest)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		l = len(x.PubKID)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.ServiceProviderType)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*ValidateAuthenticateServiceProviderRequest)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if len(x.ServiceProviderType) > 0 {
			i -= len(x.ServiceProviderType)
			copy(dAtA[i:], x.ServiceProviderType)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.ServiceProviderType)))
			i--
			dAtA[i] = 0x12
		}
		if len(x.PubKID) > 0 {
			i -= len(x.PubKID)
			copy(dAtA[i:], x.PubKID)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.PubKID)))
			i--
			dAtA[i] = 0xa
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*ValidateAuthenticateServiceProviderRequest)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: ValidateAuthenticateServiceProviderRequest: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: ValidateAuthenticateServiceProviderRequest: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field PubKID", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.PubKID = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 2:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field ServiceProviderType", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.ServiceProviderType = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var (
	md_ValidateAuthenticateServiceProviderReply        protoreflect.MessageDescriptor
	fd_ValidateAuthenticateServiceProviderReply_status protoreflect.FieldDescriptor
)

func init() {
	file_qadena_qadena_enclave_proto_init()
	md_ValidateAuthenticateServiceProviderReply = File_qadena_qadena_enclave_proto.Messages().ByName("ValidateAuthenticateServiceProviderReply")
	fd_ValidateAuthenticateServiceProviderReply_status = md_ValidateAuthenticateServiceProviderReply.Fields().ByName("status")
}

var _ protoreflect.Message = (*fastReflection_ValidateAuthenticateServiceProviderReply)(nil)

type fastReflection_ValidateAuthenticateServiceProviderReply ValidateAuthenticateServiceProviderReply

func (x *ValidateAuthenticateServiceProviderReply) ProtoReflect() protoreflect.Message {
	return (*fastReflection_ValidateAuthenticateServiceProviderReply)(x)
}

func (x *ValidateAuthenticateServiceProviderReply) slowProtoReflect() protoreflect.Message {
	mi := &file_qadena_qadena_enclave_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_ValidateAuthenticateServiceProviderReply_messageType fastReflection_ValidateAuthenticateServiceProviderReply_messageType
var _ protoreflect.MessageType = fastReflection_ValidateAuthenticateServiceProviderReply_messageType{}

type fastReflection_ValidateAuthenticateServiceProviderReply_messageType struct{}

func (x fastReflection_ValidateAuthenticateServiceProviderReply_messageType) Zero() protoreflect.Message {
	return (*fastReflection_ValidateAuthenticateServiceProviderReply)(nil)
}
func (x fastReflection_ValidateAuthenticateServiceProviderReply_messageType) New() protoreflect.Message {
	return new(fastReflection_ValidateAuthenticateServiceProviderReply)
}
func (x fastReflection_ValidateAuthenticateServiceProviderReply_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_ValidateAuthenticateServiceProviderReply
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_ValidateAuthenticateServiceProviderReply) Descriptor() protoreflect.MessageDescriptor {
	return md_ValidateAuthenticateServiceProviderReply
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_ValidateAuthenticateServiceProviderReply) Type() protoreflect.MessageType {
	return _fastReflection_ValidateAuthenticateServiceProviderReply_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_ValidateAuthenticateServiceProviderReply) New() protoreflect.Message {
	return new(fastReflection_ValidateAuthenticateServiceProviderReply)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_ValidateAuthenticateServiceProviderReply) Interface() protoreflect.ProtoMessage {
	return (*ValidateAuthenticateServiceProviderReply)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_ValidateAuthenticateServiceProviderReply) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.Status != false {
		value := protoreflect.ValueOfBool(x.Status)
		if !f(fd_ValidateAuthenticateServiceProviderReply_status, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_ValidateAuthenticateServiceProviderReply) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "qadena.qadena.ValidateAuthenticateServiceProviderReply.status":
		return x.Status != false
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: qadena.qadena.ValidateAuthenticateServiceProviderReply"))
		}
		panic(fmt.Errorf("message qadena.qadena.ValidateAuthenticateServiceProviderReply does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_ValidateAuthenticateServiceProviderReply) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "qadena.qadena.ValidateAuthenticateServiceProviderReply.status":
		x.Status = false
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: qadena.qadena.ValidateAuthenticateServiceProviderReply"))
		}
		panic(fmt.Errorf("message qadena.qadena.ValidateAuthenticateServiceProviderReply does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_ValidateAuthenticateServiceProviderReply) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "qadena.qadena.ValidateAuthenticateServiceProviderReply.status":
		value := x.Status
		return protoreflect.ValueOfBool(value)
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: qadena.qadena.ValidateAuthenticateServiceProviderReply"))
		}
		panic(fmt.Errorf("message qadena.qadena.ValidateAuthenticateServiceProviderReply does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_ValidateAuthenticateServiceProviderReply) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "qadena.qadena.ValidateAuthenticateServiceProviderReply.status":
		x.Status = value.Bool()
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: qadena.qadena.ValidateAuthenticateServiceProviderReply"))
		}
		panic(fmt.Errorf("message qadena.qadena.ValidateAuthenticateServiceProviderReply does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_ValidateAuthenticateServiceProviderReply) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "qadena.qadena.ValidateAuthenticateServiceProviderReply.status":
		panic(fmt.Errorf("field status of message qadena.qadena.ValidateAuthenticateServiceProviderReply is not mutable"))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: qadena.qadena.ValidateAuthenticateServiceProviderReply"))
		}
		panic(fmt.Errorf("message qadena.qadena.ValidateAuthenticateServiceProviderReply does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_ValidateAuthenticateServiceProviderReply) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "qadena.qadena.ValidateAuthenticateServiceProviderReply.status":
		return protoreflect.ValueOfBool(false)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: qadena.qadena.ValidateAuthenticateServiceProviderReply"))
		}
		panic(fmt.Errorf("message qadena.qadena.ValidateAuthenticateServiceProviderReply does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_ValidateAuthenticateServiceProviderReply) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in qadena.qadena.ValidateAuthenticateServiceProviderReply", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_ValidateAuthenticateServiceProviderReply) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_ValidateAuthenticateServiceProviderReply) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_ValidateAuthenticateServiceProviderReply) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_ValidateAuthenticateServiceProviderReply) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*ValidateAuthenticateServiceProviderReply)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		if x.Status {
			n += 2
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*ValidateAuthenticateServiceProviderReply)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if x.Status {
			i--
			if x.Status {
				dAtA[i] = 1
			} else {
				dAtA[i] = 0
			}
			i--
			dAtA[i] = 0x8
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*ValidateAuthenticateServiceProviderReply)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: ValidateAuthenticateServiceProviderReply: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: ValidateAuthenticateServiceProviderReply: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Status", wireType)
				}
				var v int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					v |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				x.Status = bool(v != 0)
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var (
	md_MsgInitEnclave                        protoreflect.MessageDescriptor
	fd_MsgInitEnclave_pioneerID              protoreflect.FieldDescriptor
	fd_MsgInitEnclave_externalAddress        protoreflect.FieldDescriptor
	fd_MsgInitEnclave_pioneerArmorPrivK      protoreflect.FieldDescriptor
	fd_MsgInitEnclave_pioneerArmorPassPhrase protoreflect.FieldDescriptor
	fd_MsgInitEnclave_jarID                  protoreflect.FieldDescriptor
	fd_MsgInitEnclave_regulatorID            protoreflect.FieldDescriptor
	fd_MsgInitEnclave_signerID               protoreflect.FieldDescriptor
	fd_MsgInitEnclave_uniqueID               protoreflect.FieldDescriptor
)

func init() {
	file_qadena_qadena_enclave_proto_init()
	md_MsgInitEnclave = File_qadena_qadena_enclave_proto.Messages().ByName("MsgInitEnclave")
	fd_MsgInitEnclave_pioneerID = md_MsgInitEnclave.Fields().ByName("pioneerID")
	fd_MsgInitEnclave_externalAddress = md_MsgInitEnclave.Fields().ByName("externalAddress")
	fd_MsgInitEnclave_pioneerArmorPrivK = md_MsgInitEnclave.Fields().ByName("pioneerArmorPrivK")
	fd_MsgInitEnclave_pioneerArmorPassPhrase = md_MsgInitEnclave.Fields().ByName("pioneerArmorPassPhrase")
	fd_MsgInitEnclave_jarID = md_MsgInitEnclave.Fields().ByName("jarID")
	fd_MsgInitEnclave_regulatorID = md_MsgInitEnclave.Fields().ByName("regulatorID")
	fd_MsgInitEnclave_signerID = md_MsgInitEnclave.Fields().ByName("signerID")
	fd_MsgInitEnclave_uniqueID = md_MsgInitEnclave.Fields().ByName("uniqueID")
}

var _ protoreflect.Message = (*fastReflection_MsgInitEnclave)(nil)

type fastReflection_MsgInitEnclave MsgInitEnclave

func (x *MsgInitEnclave) ProtoReflect() protoreflect.Message {
	return (*fastReflection_MsgInitEnclave)(x)
}

func (x *MsgInitEnclave) slowProtoReflect() protoreflect.Message {
	mi := &file_qadena_qadena_enclave_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_MsgInitEnclave_messageType fastReflection_MsgInitEnclave_messageType
var _ protoreflect.MessageType = fastReflection_MsgInitEnclave_messageType{}

type fastReflection_MsgInitEnclave_messageType struct{}

func (x fastReflection_MsgInitEnclave_messageType) Zero() protoreflect.Message {
	return (*fastReflection_MsgInitEnclave)(nil)
}
func (x fastReflection_MsgInitEnclave_messageType) New() protoreflect.Message {
	return new(fastReflection_MsgInitEnclave)
}
func (x fastReflection_MsgInitEnclave_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_MsgInitEnclave
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_MsgInitEnclave) Descriptor() protoreflect.MessageDescriptor {
	return md_MsgInitEnclave
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_MsgInitEnclave) Type() protoreflect.MessageType {
	return _fastReflection_MsgInitEnclave_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_MsgInitEnclave) New() protoreflect.Message {
	return new(fastReflection_MsgInitEnclave)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_MsgInitEnclave) Interface() protoreflect.ProtoMessage {
	return (*MsgInitEnclave)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_MsgInitEnclave) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.PioneerID != "" {
		value := protoreflect.ValueOfString(x.PioneerID)
		if !f(fd_MsgInitEnclave_pioneerID, value) {
			return
		}
	}
	if x.ExternalAddress != "" {
		value := protoreflect.ValueOfString(x.ExternalAddress)
		if !f(fd_MsgInitEnclave_externalAddress, value) {
			return
		}
	}
	if x.PioneerArmorPrivK != "" {
		value := protoreflect.ValueOfString(x.PioneerArmorPrivK)
		if !f(fd_MsgInitEnclave_pioneerArmorPrivK, value) {
			return
		}
	}
	if x.PioneerArmorPassPhrase != "" {
		value := protoreflect.ValueOfString(x.PioneerArmorPassPhrase)
		if !f(fd_MsgInitEnclave_pioneerArmorPassPhrase, value) {
			return
		}
	}
	if x.JarID != "" {
		value := protoreflect.ValueOfString(x.JarID)
		if !f(fd_MsgInitEnclave_jarID, value) {
			return
		}
	}
	if x.RegulatorID != "" {
		value := protoreflect.ValueOfString(x.RegulatorID)
		if !f(fd_MsgInitEnclave_regulatorID, value) {
			return
		}
	}
	if x.SignerID != "" {
		value := protoreflect.ValueOfString(x.SignerID)
		if !f(fd_MsgInitEnclave_signerID, value) {
			return
		}
	}
	if x.UniqueID != "" {
		value := protoreflect.ValueOfString(x.UniqueID)
		if !f(fd_MsgInitEnclave_uniqueID, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_MsgInitEnclave) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "qadena.qadena.MsgInitEnclave.pioneerID":
		return x.PioneerID != ""
	case "qadena.qadena.MsgInitEnclave.externalAddress":
		return x.ExternalAddress != ""
	case "qadena.qadena.MsgInitEnclave.pioneerArmorPrivK":
		return x.PioneerArmorPrivK != ""
	case "qadena.qadena.MsgInitEnclave.pioneerArmorPassPhrase":
		return x.PioneerArmorPassPhrase != ""
	case "qadena.qadena.MsgInitEnclave.jarID":
		return x.JarID != ""
	case "qadena.qadena.MsgInitEnclave.regulatorID":
		return x.RegulatorID != ""
	case "qadena.qadena.MsgInitEnclave.signerID":
		return x.SignerID != ""
	case "qadena.qadena.MsgInitEnclave.uniqueID":
		return x.UniqueID != ""
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: qadena.qadena.MsgInitEnclave"))
		}
		panic(fmt.Errorf("message qadena.qadena.MsgInitEnclave does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgInitEnclave) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "qadena.qadena.MsgInitEnclave.pioneerID":
		x.PioneerID = ""
	case "qadena.qadena.MsgInitEnclave.externalAddress":
		x.ExternalAddress = ""
	case "qadena.qadena.MsgInitEnclave.pioneerArmorPrivK":
		x.PioneerArmorPrivK = ""
	case "qadena.qadena.MsgInitEnclave.pioneerArmorPassPhrase":
		x.PioneerArmorPassPhrase = ""
	case "qadena.qadena.MsgInitEnclave.jarID":
		x.JarID = ""
	case "qadena.qadena.MsgInitEnclave.regulatorID":
		x.RegulatorID = ""
	case "qadena.qadena.MsgInitEnclave.signerID":
		x.SignerID = ""
	case "qadena.qadena.MsgInitEnclave.uniqueID":
		x.UniqueID = ""
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: qadena.qadena.MsgInitEnclave"))
		}
		panic(fmt.Errorf("message qadena.qadena.MsgInitEnclave does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_MsgInitEnclave) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "qadena.qadena.MsgInitEnclave.pioneerID":
		value := x.PioneerID
		return protoreflect.ValueOfString(value)
	case "qadena.qadena.MsgInitEnclave.externalAddress":
		value := x.ExternalAddress
		return protoreflect.ValueOfString(value)
	case "qadena.qadena.MsgInitEnclave.pioneerArmorPrivK":
		value := x.PioneerArmorPrivK
		return protoreflect.ValueOfString(value)
	case "qadena.qadena.MsgInitEnclave.pioneerArmorPassPhrase":
		value := x.PioneerArmorPassPhrase
		return protoreflect.ValueOfString(value)
	case "qadena.qadena.MsgInitEnclave.jarID":
		value := x.JarID
		return protoreflect.ValueOfString(value)
	case "qadena.qadena.MsgInitEnclave.regulatorID":
		value := x.RegulatorID
		return protoreflect.ValueOfString(value)
	case "qadena.qadena.MsgInitEnclave.signerID":
		value := x.SignerID
		return protoreflect.ValueOfString(value)
	case "qadena.qadena.MsgInitEnclave.uniqueID":
		value := x.UniqueID
		return protoreflect.ValueOfString(value)
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: qadena.qadena.MsgInitEnclave"))
		}
		panic(fmt.Errorf("message qadena.qadena.MsgInitEnclave does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgInitEnclave) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "qadena.qadena.MsgInitEnclave.pioneerID":
		x.PioneerID = value.Interface().(string)
	case "qadena.qadena.MsgInitEnclave.externalAddress":
		x.ExternalAddress = value.Interface().(string)
	case "qadena.qadena.MsgInitEnclave.pioneerArmorPrivK":
		x.PioneerArmorPrivK = value.Interface().(string)
	case "qadena.qadena.MsgInitEnclave.pioneerArmorPassPhrase":
		x.PioneerArmorPassPhrase = value.Interface().(string)
	case "qadena.qadena.MsgInitEnclave.jarID":
		x.JarID = value.Interface().(string)
	case "qadena.qadena.MsgInitEnclave.regulatorID":
		x.RegulatorID = value.Interface().(string)
	case "qadena.qadena.MsgInitEnclave.signerID":
		x.SignerID = value.Interface().(string)
	case "qadena.qadena.MsgInitEnclave.uniqueID":
		x.UniqueID = value.Interface().(string)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: qadena.qadena.MsgInitEnclave"))
		}
		panic(fmt.Errorf("message qadena.qadena.MsgInitEnclave does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgInitEnclave) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "qadena.qadena.MsgInitEnclave.pioneerID":
		panic(fmt.Errorf("field pioneerID of message qadena.qadena.MsgInitEnclave is not mutable"))
	case "qadena.qadena.MsgInitEnclave.externalAddress":
		panic(fmt.Errorf("field externalAddress of message qadena.qadena.MsgInitEnclave is not mutable"))
	case "qadena.qadena.MsgInitEnclave.pioneerArmorPrivK":
		panic(fmt.Errorf("field pioneerArmorPrivK of message qadena.qadena.MsgInitEnclave is not mutable"))
	case "qadena.qadena.MsgInitEnclave.pioneerArmorPassPhrase":
		panic(fmt.Errorf("field pioneerArmorPassPhrase of message qadena.qadena.MsgInitEnclave is not mutable"))
	case "qadena.qadena.MsgInitEnclave.jarID":
		panic(fmt.Errorf("field jarID of message qadena.qadena.MsgInitEnclave is not mutable"))
	case "qadena.qadena.MsgInitEnclave.regulatorID":
		panic(fmt.Errorf("field regulatorID of message qadena.qadena.MsgInitEnclave is not mutable"))
	case "qadena.qadena.MsgInitEnclave.signerID":
		panic(fmt.Errorf("field signerID of message qadena.qadena.MsgInitEnclave is not mutable"))
	case "qadena.qadena.MsgInitEnclave.uniqueID":
		panic(fmt.Errorf("field uniqueID of message qadena.qadena.MsgInitEnclave is not mutable"))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: qadena.qadena.MsgInitEnclave"))
		}
		panic(fmt.Errorf("message qadena.qadena.MsgInitEnclave does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_MsgInitEnclave) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "qadena.qadena.MsgInitEnclave.pioneerID":
		return protoreflect.ValueOfString("")
	case "qadena.qadena.MsgInitEnclave.externalAddress":
		return protoreflect.ValueOfString("")
	case "qadena.qadena.MsgInitEnclave.pioneerArmorPrivK":
		return protoreflect.ValueOfString("")
	case "qadena.qadena.MsgInitEnclave.pioneerArmorPassPhrase":
		return protoreflect.ValueOfString("")
	case "qadena.qadena.MsgInitEnclave.jarID":
		return protoreflect.ValueOfString("")
	case "qadena.qadena.MsgInitEnclave.regulatorID":
		return protoreflect.ValueOfString("")
	case "qadena.qadena.MsgInitEnclave.signerID":
		return protoreflect.ValueOfString("")
	case "qadena.qadena.MsgInitEnclave.uniqueID":
		return protoreflect.ValueOfString("")
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: qadena.qadena.MsgInitEnclave"))
		}
		panic(fmt.Errorf("message qadena.qadena.MsgInitEnclave does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_MsgInitEnclave) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in qadena.qadena.MsgInitEnclave", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_MsgInitEnclave) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgInitEnclave) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_MsgInitEnclave) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_MsgInitEnclave) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*MsgInitEnclave)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		l = len(x.PioneerID)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.ExternalAddress)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.PioneerArmorPrivK)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.PioneerArmorPassPhrase)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.JarID)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.RegulatorID)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.SignerID)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.UniqueID)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*MsgInitEnclave)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if len(x.UniqueID) > 0 {
			i -= len(x.UniqueID)
			copy(dAtA[i:], x.UniqueID)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.UniqueID)))
			i--
			dAtA[i] = 0x42
		}
		if len(x.SignerID) > 0 {
			i -= len(x.SignerID)
			copy(dAtA[i:], x.SignerID)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.SignerID)))
			i--
			dAtA[i] = 0x3a
		}
		if len(x.RegulatorID) > 0 {
			i -= len(x.RegulatorID)
			copy(dAtA[i:], x.RegulatorID)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.RegulatorID)))
			i--
			dAtA[i] = 0x32
		}
		if len(x.JarID) > 0 {
			i -= len(x.JarID)
			copy(dAtA[i:], x.JarID)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.JarID)))
			i--
			dAtA[i] = 0x2a
		}
		if len(x.PioneerArmorPassPhrase) > 0 {
			i -= len(x.PioneerArmorPassPhrase)
			copy(dAtA[i:], x.PioneerArmorPassPhrase)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.PioneerArmorPassPhrase)))
			i--
			dAtA[i] = 0x22
		}
		if len(x.PioneerArmorPrivK) > 0 {
			i -= len(x.PioneerArmorPrivK)
			copy(dAtA[i:], x.PioneerArmorPrivK)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.PioneerArmorPrivK)))
			i--
			dAtA[i] = 0x1a
		}
		if len(x.ExternalAddress) > 0 {
			i -= len(x.ExternalAddress)
			copy(dAtA[i:], x.ExternalAddress)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.ExternalAddress)))
			i--
			dAtA[i] = 0x12
		}
		if len(x.PioneerID) > 0 {
			i -= len(x.PioneerID)
			copy(dAtA[i:], x.PioneerID)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.PioneerID)))
			i--
			dAtA[i] = 0xa
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*MsgInitEnclave)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: MsgInitEnclave: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: MsgInitEnclave: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field PioneerID", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.PioneerID = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 2:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field ExternalAddress", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.ExternalAddress = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 3:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field PioneerArmorPrivK", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.PioneerArmorPrivK = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 4:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field PioneerArmorPassPhrase", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.PioneerArmorPassPhrase = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 5:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field JarID", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.JarID = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 6:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field RegulatorID", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.RegulatorID = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 7:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field SignerID", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.SignerID = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 8:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field UniqueID", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.UniqueID = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var (
	md_VShareSignatory                    protoreflect.MessageDescriptor
	fd_VShareSignatory_encSignatoryVShare protoreflect.FieldDescriptor
	fd_VShareSignatory_vShareBind         protoreflect.FieldDescriptor
)

func init() {
	file_qadena_qadena_enclave_proto_init()
	md_VShareSignatory = File_qadena_qadena_enclave_proto.Messages().ByName("VShareSignatory")
	fd_VShareSignatory_encSignatoryVShare = md_VShareSignatory.Fields().ByName("encSignatoryVShare")
	fd_VShareSignatory_vShareBind = md_VShareSignatory.Fields().ByName("vShareBind")
}

var _ protoreflect.Message = (*fastReflection_VShareSignatory)(nil)

type fastReflection_VShareSignatory VShareSignatory

func (x *VShareSignatory) ProtoReflect() protoreflect.Message {
	return (*fastReflection_VShareSignatory)(x)
}

func (x *VShareSignatory) slowProtoReflect() protoreflect.Message {
	mi := &file_qadena_qadena_enclave_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_VShareSignatory_messageType fastReflection_VShareSignatory_messageType
var _ protoreflect.MessageType = fastReflection_VShareSignatory_messageType{}

type fastReflection_VShareSignatory_messageType struct{}

func (x fastReflection_VShareSignatory_messageType) Zero() protoreflect.Message {
	return (*fastReflection_VShareSignatory)(nil)
}
func (x fastReflection_VShareSignatory_messageType) New() protoreflect.Message {
	return new(fastReflection_VShareSignatory)
}
func (x fastReflection_VShareSignatory_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_VShareSignatory
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_VShareSignatory) Descriptor() protoreflect.MessageDescriptor {
	return md_VShareSignatory
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_VShareSignatory) Type() protoreflect.MessageType {
	return _fastReflection_VShareSignatory_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_VShareSignatory) New() protoreflect.Message {
	return new(fastReflection_VShareSignatory)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_VShareSignatory) Interface() protoreflect.ProtoMessage {
	return (*VShareSignatory)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_VShareSignatory) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if len(x.EncSignatoryVShare) != 0 {
		value := protoreflect.ValueOfBytes(x.EncSignatoryVShare)
		if !f(fd_VShareSignatory_encSignatoryVShare, value) {
			return
		}
	}
	if x.VShareBind != nil {
		value := protoreflect.ValueOfMessage(x.VShareBind.ProtoReflect())
		if !f(fd_VShareSignatory_vShareBind, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_VShareSignatory) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "qadena.qadena.VShareSignatory.encSignatoryVShare":
		return len(x.EncSignatoryVShare) != 0
	case "qadena.qadena.VShareSignatory.vShareBind":
		return x.VShareBind != nil
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: qadena.qadena.VShareSignatory"))
		}
		panic(fmt.Errorf("message qadena.qadena.VShareSignatory does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_VShareSignatory) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "qadena.qadena.VShareSignatory.encSignatoryVShare":
		x.EncSignatoryVShare = nil
	case "qadena.qadena.VShareSignatory.vShareBind":
		x.VShareBind = nil
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: qadena.qadena.VShareSignatory"))
		}
		panic(fmt.Errorf("message qadena.qadena.VShareSignatory does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_VShareSignatory) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "qadena.qadena.VShareSignatory.encSignatoryVShare":
		value := x.EncSignatoryVShare
		return protoreflect.ValueOfBytes(value)
	case "qadena.qadena.VShareSignatory.vShareBind":
		value := x.VShareBind
		return protoreflect.ValueOfMessage(value.ProtoReflect())
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: qadena.qadena.VShareSignatory"))
		}
		panic(fmt.Errorf("message qadena.qadena.VShareSignatory does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_VShareSignatory) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "qadena.qadena.VShareSignatory.encSignatoryVShare":
		x.EncSignatoryVShare = value.Bytes()
	case "qadena.qadena.VShareSignatory.vShareBind":
		x.VShareBind = value.Message().Interface().(*VShareBindData)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: qadena.qadena.VShareSignatory"))
		}
		panic(fmt.Errorf("message qadena.qadena.VShareSignatory does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_VShareSignatory) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "qadena.qadena.VShareSignatory.vShareBind":
		if x.VShareBind == nil {
			x.VShareBind = new(VShareBindData)
		}
		return protoreflect.ValueOfMessage(x.VShareBind.ProtoReflect())
	case "qadena.qadena.VShareSignatory.encSignatoryVShare":
		panic(fmt.Errorf("field encSignatoryVShare of message qadena.qadena.VShareSignatory is not mutable"))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: qadena.qadena.VShareSignatory"))
		}
		panic(fmt.Errorf("message qadena.qadena.VShareSignatory does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_VShareSignatory) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "qadena.qadena.VShareSignatory.encSignatoryVShare":
		return protoreflect.ValueOfBytes(nil)
	case "qadena.qadena.VShareSignatory.vShareBind":
		m := new(VShareBindData)
		return protoreflect.ValueOfMessage(m.ProtoReflect())
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: qadena.qadena.VShareSignatory"))
		}
		panic(fmt.Errorf("message qadena.qadena.VShareSignatory does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_VShareSignatory) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in qadena.qadena.VShareSignatory", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_VShareSignatory) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_VShareSignatory) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_VShareSignatory) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_VShareSignatory) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*VShareSignatory)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		l = len(x.EncSignatoryVShare)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.VShareBind != nil {
			l = options.Size(x.VShareBind)
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*VShareSignatory)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if x.VShareBind != nil {
			encoded, err := options.Marshal(x.VShareBind)
			if err != nil {
				return protoiface.MarshalOutput{
					NoUnkeyedLiterals: input.NoUnkeyedLiterals,
					Buf:               input.Buf,
				}, err
			}
			i -= len(encoded)
			copy(dAtA[i:], encoded)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(encoded)))
			i--
			dAtA[i] = 0x12
		}
		if len(x.EncSignatoryVShare) > 0 {
			i -= len(x.EncSignatoryVShare)
			copy(dAtA[i:], x.EncSignatoryVShare)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.EncSignatoryVShare)))
			i--
			dAtA[i] = 0xa
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*VShareSignatory)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: VShareSignatory: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: VShareSignatory: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field EncSignatoryVShare", wireType)
				}
				var byteLen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					byteLen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if byteLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + byteLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.EncSignatoryVShare = append(x.EncSignatoryVShare[:0], dAtA[iNdEx:postIndex]...)
				if x.EncSignatoryVShare == nil {
					x.EncSignatoryVShare = []byte{}
				}
				iNdEx = postIndex
			case 2:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field VShareBind", wireType)
				}
				var msglen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					msglen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if msglen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + msglen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if x.VShareBind == nil {
					x.VShareBind = &VShareBindData{}
				}
				if err := options.Unmarshal(dAtA[iNdEx:postIndex], x.VShareBind); err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				iNdEx = postIndex
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var _ protoreflect.List = (*_ValidateAuthorizedSignerRequest_3_list)(nil)

type _ValidateAuthorizedSignerRequest_3_list struct {
	list *[]*VShareSignatory
}

func (x *_ValidateAuthorizedSignerRequest_3_list) Len() int {
	if x.list == nil {
		return 0
	}
	return len(*x.list)
}

func (x *_ValidateAuthorizedSignerRequest_3_list) Get(i int) protoreflect.Value {
	return protoreflect.ValueOfMessage((*x.list)[i].ProtoReflect())
}

func (x *_ValidateAuthorizedSignerRequest_3_list) Set(i int, value protoreflect.Value) {
	valueUnwrapped := value.Message()
	concreteValue := valueUnwrapped.Interface().(*VShareSignatory)
	(*x.list)[i] = concreteValue
}

func (x *_ValidateAuthorizedSignerRequest_3_list) Append(value protoreflect.Value) {
	valueUnwrapped := value.Message()
	concreteValue := valueUnwrapped.Interface().(*VShareSignatory)
	*x.list = append(*x.list, concreteValue)
}

func (x *_ValidateAuthorizedSignerRequest_3_list) AppendMutable() protoreflect.Value {
	v := new(VShareSignatory)
	*x.list = append(*x.list, v)
	return protoreflect.ValueOfMessage(v.ProtoReflect())
}

func (x *_ValidateAuthorizedSignerRequest_3_list) Truncate(n int) {
	for i := n; i < len(*x.list); i++ {
		(*x.list)[i] = nil
	}
	*x.list = (*x.list)[:n]
}

func (x *_ValidateAuthorizedSignerRequest_3_list) NewElement() protoreflect.Value {
	v := new(VShareSignatory)
	return protoreflect.ValueOfMessage(v.ProtoReflect())
}

func (x *_ValidateAuthorizedSignerRequest_3_list) IsValid() bool {
	return x.list != nil
}

var _ protoreflect.List = (*_ValidateAuthorizedSignerRequest_4_list)(nil)

type _ValidateAuthorizedSignerRequest_4_list struct {
	list *[]*VShareSignatory
}

func (x *_ValidateAuthorizedSignerRequest_4_list) Len() int {
	if x.list == nil {
		return 0
	}
	return len(*x.list)
}

func (x *_ValidateAuthorizedSignerRequest_4_list) Get(i int) protoreflect.Value {
	return protoreflect.ValueOfMessage((*x.list)[i].ProtoReflect())
}

func (x *_ValidateAuthorizedSignerRequest_4_list) Set(i int, value protoreflect.Value) {
	valueUnwrapped := value.Message()
	concreteValue := valueUnwrapped.Interface().(*VShareSignatory)
	(*x.list)[i] = concreteValue
}

func (x *_ValidateAuthorizedSignerRequest_4_list) Append(value protoreflect.Value) {
	valueUnwrapped := value.Message()
	concreteValue := valueUnwrapped.Interface().(*VShareSignatory)
	*x.list = append(*x.list, concreteValue)
}

func (x *_ValidateAuthorizedSignerRequest_4_list) AppendMutable() protoreflect.Value {
	v := new(VShareSignatory)
	*x.list = append(*x.list, v)
	return protoreflect.ValueOfMessage(v.ProtoReflect())
}

func (x *_ValidateAuthorizedSignerRequest_4_list) Truncate(n int) {
	for i := n; i < len(*x.list); i++ {
		(*x.list)[i] = nil
	}
	*x.list = (*x.list)[:n]
}

func (x *_ValidateAuthorizedSignerRequest_4_list) NewElement() protoreflect.Value {
	v := new(VShareSignatory)
	return protoreflect.ValueOfMessage(v.ProtoReflect())
}

func (x *_ValidateAuthorizedSignerRequest_4_list) IsValid() bool {
	return x.list != nil
}

var (
	md_ValidateAuthorizedSignerRequest                     protoreflect.MessageDescriptor
	fd_ValidateAuthorizedSignerRequest_creator             protoreflect.FieldDescriptor
	fd_ValidateAuthorizedSignerRequest_requestingSignatory protoreflect.FieldDescriptor
	fd_ValidateAuthorizedSignerRequest_requiredSignatory   protoreflect.FieldDescriptor
	fd_ValidateAuthorizedSignerRequest_completedSignatory  protoreflect.FieldDescriptor
)

func init() {
	file_qadena_qadena_enclave_proto_init()
	md_ValidateAuthorizedSignerRequest = File_qadena_qadena_enclave_proto.Messages().ByName("ValidateAuthorizedSignerRequest")
	fd_ValidateAuthorizedSignerRequest_creator = md_ValidateAuthorizedSignerRequest.Fields().ByName("creator")
	fd_ValidateAuthorizedSignerRequest_requestingSignatory = md_ValidateAuthorizedSignerRequest.Fields().ByName("requestingSignatory")
	fd_ValidateAuthorizedSignerRequest_requiredSignatory = md_ValidateAuthorizedSignerRequest.Fields().ByName("requiredSignatory")
	fd_ValidateAuthorizedSignerRequest_completedSignatory = md_ValidateAuthorizedSignerRequest.Fields().ByName("completedSignatory")
}

var _ protoreflect.Message = (*fastReflection_ValidateAuthorizedSignerRequest)(nil)

type fastReflection_ValidateAuthorizedSignerRequest ValidateAuthorizedSignerRequest

func (x *ValidateAuthorizedSignerRequest) ProtoReflect() protoreflect.Message {
	return (*fastReflection_ValidateAuthorizedSignerRequest)(x)
}

func (x *ValidateAuthorizedSignerRequest) slowProtoReflect() protoreflect.Message {
	mi := &file_qadena_qadena_enclave_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_ValidateAuthorizedSignerRequest_messageType fastReflection_ValidateAuthorizedSignerRequest_messageType
var _ protoreflect.MessageType = fastReflection_ValidateAuthorizedSignerRequest_messageType{}

type fastReflection_ValidateAuthorizedSignerRequest_messageType struct{}

func (x fastReflection_ValidateAuthorizedSignerRequest_messageType) Zero() protoreflect.Message {
	return (*fastReflection_ValidateAuthorizedSignerRequest)(nil)
}
func (x fastReflection_ValidateAuthorizedSignerRequest_messageType) New() protoreflect.Message {
	return new(fastReflection_ValidateAuthorizedSignerRequest)
}
func (x fastReflection_ValidateAuthorizedSignerRequest_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_ValidateAuthorizedSignerRequest
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_ValidateAuthorizedSignerRequest) Descriptor() protoreflect.MessageDescriptor {
	return md_ValidateAuthorizedSignerRequest
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_ValidateAuthorizedSignerRequest) Type() protoreflect.MessageType {
	return _fastReflection_ValidateAuthorizedSignerRequest_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_ValidateAuthorizedSignerRequest) New() protoreflect.Message {
	return new(fastReflection_ValidateAuthorizedSignerRequest)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_ValidateAuthorizedSignerRequest) Interface() protoreflect.ProtoMessage {
	return (*ValidateAuthorizedSignerRequest)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_ValidateAuthorizedSignerRequest) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.Creator != "" {
		value := protoreflect.ValueOfString(x.Creator)
		if !f(fd_ValidateAuthorizedSignerRequest_creator, value) {
			return
		}
	}
	if x.RequestingSignatory != nil {
		value := protoreflect.ValueOfMessage(x.RequestingSignatory.ProtoReflect())
		if !f(fd_ValidateAuthorizedSignerRequest_requestingSignatory, value) {
			return
		}
	}
	if len(x.RequiredSignatory) != 0 {
		value := protoreflect.ValueOfList(&_ValidateAuthorizedSignerRequest_3_list{list: &x.RequiredSignatory})
		if !f(fd_ValidateAuthorizedSignerRequest_requiredSignatory, value) {
			return
		}
	}
	if len(x.CompletedSignatory) != 0 {
		value := protoreflect.ValueOfList(&_ValidateAuthorizedSignerRequest_4_list{list: &x.CompletedSignatory})
		if !f(fd_ValidateAuthorizedSignerRequest_completedSignatory, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_ValidateAuthorizedSignerRequest) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "qadena.qadena.ValidateAuthorizedSignerRequest.creator":
		return x.Creator != ""
	case "qadena.qadena.ValidateAuthorizedSignerRequest.requestingSignatory":
		return x.RequestingSignatory != nil
	case "qadena.qadena.ValidateAuthorizedSignerRequest.requiredSignatory":
		return len(x.RequiredSignatory) != 0
	case "qadena.qadena.ValidateAuthorizedSignerRequest.completedSignatory":
		return len(x.CompletedSignatory) != 0
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: qadena.qadena.ValidateAuthorizedSignerRequest"))
		}
		panic(fmt.Errorf("message qadena.qadena.ValidateAuthorizedSignerRequest does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_ValidateAuthorizedSignerRequest) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "qadena.qadena.ValidateAuthorizedSignerRequest.creator":
		x.Creator = ""
	case "qadena.qadena.ValidateAuthorizedSignerRequest.requestingSignatory":
		x.RequestingSignatory = nil
	case "qadena.qadena.ValidateAuthorizedSignerRequest.requiredSignatory":
		x.RequiredSignatory = nil
	case "qadena.qadena.ValidateAuthorizedSignerRequest.completedSignatory":
		x.CompletedSignatory = nil
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: qadena.qadena.ValidateAuthorizedSignerRequest"))
		}
		panic(fmt.Errorf("message qadena.qadena.ValidateAuthorizedSignerRequest does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_ValidateAuthorizedSignerRequest) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "qadena.qadena.ValidateAuthorizedSignerRequest.creator":
		value := x.Creator
		return protoreflect.ValueOfString(value)
	case "qadena.qadena.ValidateAuthorizedSignerRequest.requestingSignatory":
		value := x.RequestingSignatory
		return protoreflect.ValueOfMessage(value.ProtoReflect())
	case "qadena.qadena.ValidateAuthorizedSignerRequest.requiredSignatory":
		if len(x.RequiredSignatory) == 0 {
			return protoreflect.ValueOfList(&_ValidateAuthorizedSignerRequest_3_list{})
		}
		listValue := &_ValidateAuthorizedSignerRequest_3_list{list: &x.RequiredSignatory}
		return protoreflect.ValueOfList(listValue)
	case "qadena.qadena.ValidateAuthorizedSignerRequest.completedSignatory":
		if len(x.CompletedSignatory) == 0 {
			return protoreflect.ValueOfList(&_ValidateAuthorizedSignerRequest_4_list{})
		}
		listValue := &_ValidateAuthorizedSignerRequest_4_list{list: &x.CompletedSignatory}
		return protoreflect.ValueOfList(listValue)
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: qadena.qadena.ValidateAuthorizedSignerRequest"))
		}
		panic(fmt.Errorf("message qadena.qadena.ValidateAuthorizedSignerRequest does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_ValidateAuthorizedSignerRequest) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "qadena.qadena.ValidateAuthorizedSignerRequest.creator":
		x.Creator = value.Interface().(string)
	case "qadena.qadena.ValidateAuthorizedSignerRequest.requestingSignatory":
		x.RequestingSignatory = value.Message().Interface().(*VShareSignatory)
	case "qadena.qadena.ValidateAuthorizedSignerRequest.requiredSignatory":
		lv := value.List()
		clv := lv.(*_ValidateAuthorizedSignerRequest_3_list)
		x.RequiredSignatory = *clv.list
	case "qadena.qadena.ValidateAuthorizedSignerRequest.completedSignatory":
		lv := value.List()
		clv := lv.(*_ValidateAuthorizedSignerRequest_4_list)
		x.CompletedSignatory = *clv.list
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: qadena.qadena.ValidateAuthorizedSignerRequest"))
		}
		panic(fmt.Errorf("message qadena.qadena.ValidateAuthorizedSignerRequest does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_ValidateAuthorizedSignerRequest) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "qadena.qadena.ValidateAuthorizedSignerRequest.requestingSignatory":
		if x.RequestingSignatory == nil {
			x.RequestingSignatory = new(VShareSignatory)
		}
		return protoreflect.ValueOfMessage(x.RequestingSignatory.ProtoReflect())
	case "qadena.qadena.ValidateAuthorizedSignerRequest.requiredSignatory":
		if x.RequiredSignatory == nil {
			x.RequiredSignatory = []*VShareSignatory{}
		}
		value := &_ValidateAuthorizedSignerRequest_3_list{list: &x.RequiredSignatory}
		return protoreflect.ValueOfList(value)
	case "qadena.qadena.ValidateAuthorizedSignerRequest.completedSignatory":
		if x.CompletedSignatory == nil {
			x.CompletedSignatory = []*VShareSignatory{}
		}
		value := &_ValidateAuthorizedSignerRequest_4_list{list: &x.CompletedSignatory}
		return protoreflect.ValueOfList(value)
	case "qadena.qadena.ValidateAuthorizedSignerRequest.creator":
		panic(fmt.Errorf("field creator of message qadena.qadena.ValidateAuthorizedSignerRequest is not mutable"))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: qadena.qadena.ValidateAuthorizedSignerRequest"))
		}
		panic(fmt.Errorf("message qadena.qadena.ValidateAuthorizedSignerRequest does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_ValidateAuthorizedSignerRequest) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "qadena.qadena.ValidateAuthorizedSignerRequest.creator":
		return protoreflect.ValueOfString("")
	case "qadena.qadena.ValidateAuthorizedSignerRequest.requestingSignatory":
		m := new(VShareSignatory)
		return protoreflect.ValueOfMessage(m.ProtoReflect())
	case "qadena.qadena.ValidateAuthorizedSignerRequest.requiredSignatory":
		list := []*VShareSignatory{}
		return protoreflect.ValueOfList(&_ValidateAuthorizedSignerRequest_3_list{list: &list})
	case "qadena.qadena.ValidateAuthorizedSignerRequest.completedSignatory":
		list := []*VShareSignatory{}
		return protoreflect.ValueOfList(&_ValidateAuthorizedSignerRequest_4_list{list: &list})
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: qadena.qadena.ValidateAuthorizedSignerRequest"))
		}
		panic(fmt.Errorf("message qadena.qadena.ValidateAuthorizedSignerRequest does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_ValidateAuthorizedSignerRequest) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in qadena.qadena.ValidateAuthorizedSignerRequest", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_ValidateAuthorizedSignerRequest) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_ValidateAuthorizedSignerRequest) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_ValidateAuthorizedSignerRequest) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_ValidateAuthorizedSignerRequest) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*ValidateAuthorizedSignerRequest)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		l = len(x.Creator)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.RequestingSignatory != nil {
			l = options.Size(x.RequestingSignatory)
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if len(x.RequiredSignatory) > 0 {
			for _, e := range x.RequiredSignatory {
				l = options.Size(e)
				n += 1 + l + runtime.Sov(uint64(l))
			}
		}
		if len(x.CompletedSignatory) > 0 {
			for _, e := range x.CompletedSignatory {
				l = options.Size(e)
				n += 1 + l + runtime.Sov(uint64(l))
			}
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*ValidateAuthorizedSignerRequest)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if len(x.CompletedSignatory) > 0 {
			for iNdEx := len(x.CompletedSignatory) - 1; iNdEx >= 0; iNdEx-- {
				encoded, err := options.Marshal(x.CompletedSignatory[iNdEx])
				if err != nil {
					return protoiface.MarshalOutput{
						NoUnkeyedLiterals: input.NoUnkeyedLiterals,
						Buf:               input.Buf,
					}, err
				}
				i -= len(encoded)
				copy(dAtA[i:], encoded)
				i = runtime.EncodeVarint(dAtA, i, uint64(len(encoded)))
				i--
				dAtA[i] = 0x22
			}
		}
		if len(x.RequiredSignatory) > 0 {
			for iNdEx := len(x.RequiredSignatory) - 1; iNdEx >= 0; iNdEx-- {
				encoded, err := options.Marshal(x.RequiredSignatory[iNdEx])
				if err != nil {
					return protoiface.MarshalOutput{
						NoUnkeyedLiterals: input.NoUnkeyedLiterals,
						Buf:               input.Buf,
					}, err
				}
				i -= len(encoded)
				copy(dAtA[i:], encoded)
				i = runtime.EncodeVarint(dAtA, i, uint64(len(encoded)))
				i--
				dAtA[i] = 0x1a
			}
		}
		if x.RequestingSignatory != nil {
			encoded, err := options.Marshal(x.RequestingSignatory)
			if err != nil {
				return protoiface.MarshalOutput{
					NoUnkeyedLiterals: input.NoUnkeyedLiterals,
					Buf:               input.Buf,
				}, err
			}
			i -= len(encoded)
			copy(dAtA[i:], encoded)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(encoded)))
			i--
			dAtA[i] = 0x12
		}
		if len(x.Creator) > 0 {
			i -= len(x.Creator)
			copy(dAtA[i:], x.Creator)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.Creator)))
			i--
			dAtA[i] = 0xa
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*ValidateAuthorizedSignerRequest)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: ValidateAuthorizedSignerRequest: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: ValidateAuthorizedSignerRequest: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Creator = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 2:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field RequestingSignatory", wireType)
				}
				var msglen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					msglen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if msglen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + msglen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if x.RequestingSignatory == nil {
					x.RequestingSignatory = &VShareSignatory{}
				}
				if err := options.Unmarshal(dAtA[iNdEx:postIndex], x.RequestingSignatory); err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				iNdEx = postIndex
			case 3:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field RequiredSignatory", wireType)
				}
				var msglen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					msglen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if msglen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + msglen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.RequiredSignatory = append(x.RequiredSignatory, &VShareSignatory{})
				if err := options.Unmarshal(dAtA[iNdEx:postIndex], x.RequiredSignatory[len(x.RequiredSignatory)-1]); err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				iNdEx = postIndex
			case 4:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field CompletedSignatory", wireType)
				}
				var msglen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					msglen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if msglen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + msglen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.CompletedSignatory = append(x.CompletedSignatory, &VShareSignatory{})
				if err := options.Unmarshal(dAtA[iNdEx:postIndex], x.CompletedSignatory[len(x.CompletedSignatory)-1]); err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				iNdEx = postIndex
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var (
	md_ValidateAuthorizedSignerReply        protoreflect.MessageDescriptor
	fd_ValidateAuthorizedSignerReply_status protoreflect.FieldDescriptor
)

func init() {
	file_qadena_qadena_enclave_proto_init()
	md_ValidateAuthorizedSignerReply = File_qadena_qadena_enclave_proto.Messages().ByName("ValidateAuthorizedSignerReply")
	fd_ValidateAuthorizedSignerReply_status = md_ValidateAuthorizedSignerReply.Fields().ByName("status")
}

var _ protoreflect.Message = (*fastReflection_ValidateAuthorizedSignerReply)(nil)

type fastReflection_ValidateAuthorizedSignerReply ValidateAuthorizedSignerReply

func (x *ValidateAuthorizedSignerReply) ProtoReflect() protoreflect.Message {
	return (*fastReflection_ValidateAuthorizedSignerReply)(x)
}

func (x *ValidateAuthorizedSignerReply) slowProtoReflect() protoreflect.Message {
	mi := &file_qadena_qadena_enclave_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_ValidateAuthorizedSignerReply_messageType fastReflection_ValidateAuthorizedSignerReply_messageType
var _ protoreflect.MessageType = fastReflection_ValidateAuthorizedSignerReply_messageType{}

type fastReflection_ValidateAuthorizedSignerReply_messageType struct{}

func (x fastReflection_ValidateAuthorizedSignerReply_messageType) Zero() protoreflect.Message {
	return (*fastReflection_ValidateAuthorizedSignerReply)(nil)
}
func (x fastReflection_ValidateAuthorizedSignerReply_messageType) New() protoreflect.Message {
	return new(fastReflection_ValidateAuthorizedSignerReply)
}
func (x fastReflection_ValidateAuthorizedSignerReply_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_ValidateAuthorizedSignerReply
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_ValidateAuthorizedSignerReply) Descriptor() protoreflect.MessageDescriptor {
	return md_ValidateAuthorizedSignerReply
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_ValidateAuthorizedSignerReply) Type() protoreflect.MessageType {
	return _fastReflection_ValidateAuthorizedSignerReply_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_ValidateAuthorizedSignerReply) New() protoreflect.Message {
	return new(fastReflection_ValidateAuthorizedSignerReply)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_ValidateAuthorizedSignerReply) Interface() protoreflect.ProtoMessage {
	return (*ValidateAuthorizedSignerReply)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_ValidateAuthorizedSignerReply) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.Status != false {
		value := protoreflect.ValueOfBool(x.Status)
		if !f(fd_ValidateAuthorizedSignerReply_status, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_ValidateAuthorizedSignerReply) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "qadena.qadena.ValidateAuthorizedSignerReply.status":
		return x.Status != false
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: qadena.qadena.ValidateAuthorizedSignerReply"))
		}
		panic(fmt.Errorf("message qadena.qadena.ValidateAuthorizedSignerReply does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_ValidateAuthorizedSignerReply) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "qadena.qadena.ValidateAuthorizedSignerReply.status":
		x.Status = false
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: qadena.qadena.ValidateAuthorizedSignerReply"))
		}
		panic(fmt.Errorf("message qadena.qadena.ValidateAuthorizedSignerReply does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_ValidateAuthorizedSignerReply) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "qadena.qadena.ValidateAuthorizedSignerReply.status":
		value := x.Status
		return protoreflect.ValueOfBool(value)
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: qadena.qadena.ValidateAuthorizedSignerReply"))
		}
		panic(fmt.Errorf("message qadena.qadena.ValidateAuthorizedSignerReply does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_ValidateAuthorizedSignerReply) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "qadena.qadena.ValidateAuthorizedSignerReply.status":
		x.Status = value.Bool()
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: qadena.qadena.ValidateAuthorizedSignerReply"))
		}
		panic(fmt.Errorf("message qadena.qadena.ValidateAuthorizedSignerReply does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_ValidateAuthorizedSignerReply) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "qadena.qadena.ValidateAuthorizedSignerReply.status":
		panic(fmt.Errorf("field status of message qadena.qadena.ValidateAuthorizedSignerReply is not mutable"))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: qadena.qadena.ValidateAuthorizedSignerReply"))
		}
		panic(fmt.Errorf("message qadena.qadena.ValidateAuthorizedSignerReply does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_ValidateAuthorizedSignerReply) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "qadena.qadena.ValidateAuthorizedSignerReply.status":
		return protoreflect.ValueOfBool(false)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: qadena.qadena.ValidateAuthorizedSignerReply"))
		}
		panic(fmt.Errorf("message qadena.qadena.ValidateAuthorizedSignerReply does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_ValidateAuthorizedSignerReply) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in qadena.qadena.ValidateAuthorizedSignerReply", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_ValidateAuthorizedSignerReply) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_ValidateAuthorizedSignerReply) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_ValidateAuthorizedSignerReply) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_ValidateAuthorizedSignerReply) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*ValidateAuthorizedSignerReply)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		if x.Status {
			n += 2
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*ValidateAuthorizedSignerReply)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if x.Status {
			i--
			if x.Status {
				dAtA[i] = 1
			} else {
				dAtA[i] = 0
			}
			i--
			dAtA[i] = 0x8
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*ValidateAuthorizedSignerReply)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: ValidateAuthorizedSignerReply: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: ValidateAuthorizedSignerReply: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Status", wireType)
				}
				var v int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					v |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				x.Status = bool(v != 0)
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var _ protoreflect.List = (*_ValidateAuthorizedSignatoryRequest_3_list)(nil)

type _ValidateAuthorizedSignatoryRequest_3_list struct {
	list *[]*VShareSignatory
}

func (x *_ValidateAuthorizedSignatoryRequest_3_list) Len() int {
	if x.list == nil {
		return 0
	}
	return len(*x.list)
}

func (x *_ValidateAuthorizedSignatoryRequest_3_list) Get(i int) protoreflect.Value {
	return protoreflect.ValueOfMessage((*x.list)[i].ProtoReflect())
}

func (x *_ValidateAuthorizedSignatoryRequest_3_list) Set(i int, value protoreflect.Value) {
	valueUnwrapped := value.Message()
	concreteValue := valueUnwrapped.Interface().(*VShareSignatory)
	(*x.list)[i] = concreteValue
}

func (x *_ValidateAuthorizedSignatoryRequest_3_list) Append(value protoreflect.Value) {
	valueUnwrapped := value.Message()
	concreteValue := valueUnwrapped.Interface().(*VShareSignatory)
	*x.list = append(*x.list, concreteValue)
}

func (x *_ValidateAuthorizedSignatoryRequest_3_list) AppendMutable() protoreflect.Value {
	v := new(VShareSignatory)
	*x.list = append(*x.list, v)
	return protoreflect.ValueOfMessage(v.ProtoReflect())
}

func (x *_ValidateAuthorizedSignatoryRequest_3_list) Truncate(n int) {
	for i := n; i < len(*x.list); i++ {
		(*x.list)[i] = nil
	}
	*x.list = (*x.list)[:n]
}

func (x *_ValidateAuthorizedSignatoryRequest_3_list) NewElement() protoreflect.Value {
	v := new(VShareSignatory)
	return protoreflect.ValueOfMessage(v.ProtoReflect())
}

func (x *_ValidateAuthorizedSignatoryRequest_3_list) IsValid() bool {
	return x.list != nil
}

var (
	md_ValidateAuthorizedSignatoryRequest                  protoreflect.MessageDescriptor
	fd_ValidateAuthorizedSignatoryRequest_creator          protoreflect.FieldDescriptor
	fd_ValidateAuthorizedSignatoryRequest_signatory        protoreflect.FieldDescriptor
	fd_ValidateAuthorizedSignatoryRequest_currentSignatory protoreflect.FieldDescriptor
)

func init() {
	file_qadena_qadena_enclave_proto_init()
	md_ValidateAuthorizedSignatoryRequest = File_qadena_qadena_enclave_proto.Messages().ByName("ValidateAuthorizedSignatoryRequest")
	fd_ValidateAuthorizedSignatoryRequest_creator = md_ValidateAuthorizedSignatoryRequest.Fields().ByName("creator")
	fd_ValidateAuthorizedSignatoryRequest_signatory = md_ValidateAuthorizedSignatoryRequest.Fields().ByName("signatory")
	fd_ValidateAuthorizedSignatoryRequest_currentSignatory = md_ValidateAuthorizedSignatoryRequest.Fields().ByName("currentSignatory")
}

var _ protoreflect.Message = (*fastReflection_ValidateAuthorizedSignatoryRequest)(nil)

type fastReflection_ValidateAuthorizedSignatoryRequest ValidateAuthorizedSignatoryRequest

func (x *ValidateAuthorizedSignatoryRequest) ProtoReflect() protoreflect.Message {
	return (*fastReflection_ValidateAuthorizedSignatoryRequest)(x)
}

func (x *ValidateAuthorizedSignatoryRequest) slowProtoReflect() protoreflect.Message {
	mi := &file_qadena_qadena_enclave_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_ValidateAuthorizedSignatoryRequest_messageType fastReflection_ValidateAuthorizedSignatoryRequest_messageType
var _ protoreflect.MessageType = fastReflection_ValidateAuthorizedSignatoryRequest_messageType{}

type fastReflection_ValidateAuthorizedSignatoryRequest_messageType struct{}

func (x fastReflection_ValidateAuthorizedSignatoryRequest_messageType) Zero() protoreflect.Message {
	return (*fastReflection_ValidateAuthorizedSignatoryRequest)(nil)
}
func (x fastReflection_ValidateAuthorizedSignatoryRequest_messageType) New() protoreflect.Message {
	return new(fastReflection_ValidateAuthorizedSignatoryRequest)
}
func (x fastReflection_ValidateAuthorizedSignatoryRequest_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_ValidateAuthorizedSignatoryRequest
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_ValidateAuthorizedSignatoryRequest) Descriptor() protoreflect.MessageDescriptor {
	return md_ValidateAuthorizedSignatoryRequest
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_ValidateAuthorizedSignatoryRequest) Type() protoreflect.MessageType {
	return _fastReflection_ValidateAuthorizedSignatoryRequest_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_ValidateAuthorizedSignatoryRequest) New() protoreflect.Message {
	return new(fastReflection_ValidateAuthorizedSignatoryRequest)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_ValidateAuthorizedSignatoryRequest) Interface() protoreflect.ProtoMessage {
	return (*ValidateAuthorizedSignatoryRequest)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_ValidateAuthorizedSignatoryRequest) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.Creator != "" {
		value := protoreflect.ValueOfString(x.Creator)
		if !f(fd_ValidateAuthorizedSignatoryRequest_creator, value) {
			return
		}
	}
	if x.Signatory != nil {
		value := protoreflect.ValueOfMessage(x.Signatory.ProtoReflect())
		if !f(fd_ValidateAuthorizedSignatoryRequest_signatory, value) {
			return
		}
	}
	if len(x.CurrentSignatory) != 0 {
		value := protoreflect.ValueOfList(&_ValidateAuthorizedSignatoryRequest_3_list{list: &x.CurrentSignatory})
		if !f(fd_ValidateAuthorizedSignatoryRequest_currentSignatory, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_ValidateAuthorizedSignatoryRequest) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "qadena.qadena.ValidateAuthorizedSignatoryRequest.creator":
		return x.Creator != ""
	case "qadena.qadena.ValidateAuthorizedSignatoryRequest.signatory":
		return x.Signatory != nil
	case "qadena.qadena.ValidateAuthorizedSignatoryRequest.currentSignatory":
		return len(x.CurrentSignatory) != 0
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: qadena.qadena.ValidateAuthorizedSignatoryRequest"))
		}
		panic(fmt.Errorf("message qadena.qadena.ValidateAuthorizedSignatoryRequest does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_ValidateAuthorizedSignatoryRequest) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "qadena.qadena.ValidateAuthorizedSignatoryRequest.creator":
		x.Creator = ""
	case "qadena.qadena.ValidateAuthorizedSignatoryRequest.signatory":
		x.Signatory = nil
	case "qadena.qadena.ValidateAuthorizedSignatoryRequest.currentSignatory":
		x.CurrentSignatory = nil
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: qadena.qadena.ValidateAuthorizedSignatoryRequest"))
		}
		panic(fmt.Errorf("message qadena.qadena.ValidateAuthorizedSignatoryRequest does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_ValidateAuthorizedSignatoryRequest) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "qadena.qadena.ValidateAuthorizedSignatoryRequest.creator":
		value := x.Creator
		return protoreflect.ValueOfString(value)
	case "qadena.qadena.ValidateAuthorizedSignatoryRequest.signatory":
		value := x.Signatory
		return protoreflect.ValueOfMessage(value.ProtoReflect())
	case "qadena.qadena.ValidateAuthorizedSignatoryRequest.currentSignatory":
		if len(x.CurrentSignatory) == 0 {
			return protoreflect.ValueOfList(&_ValidateAuthorizedSignatoryRequest_3_list{})
		}
		listValue := &_ValidateAuthorizedSignatoryRequest_3_list{list: &x.CurrentSignatory}
		return protoreflect.ValueOfList(listValue)
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: qadena.qadena.ValidateAuthorizedSignatoryRequest"))
		}
		panic(fmt.Errorf("message qadena.qadena.ValidateAuthorizedSignatoryRequest does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_ValidateAuthorizedSignatoryRequest) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "qadena.qadena.ValidateAuthorizedSignatoryRequest.creator":
		x.Creator = value.Interface().(string)
	case "qadena.qadena.ValidateAuthorizedSignatoryRequest.signatory":
		x.Signatory = value.Message().Interface().(*VShareSignatory)
	case "qadena.qadena.ValidateAuthorizedSignatoryRequest.currentSignatory":
		lv := value.List()
		clv := lv.(*_ValidateAuthorizedSignatoryRequest_3_list)
		x.CurrentSignatory = *clv.list
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: qadena.qadena.ValidateAuthorizedSignatoryRequest"))
		}
		panic(fmt.Errorf("message qadena.qadena.ValidateAuthorizedSignatoryRequest does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_ValidateAuthorizedSignatoryRequest) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "qadena.qadena.ValidateAuthorizedSignatoryRequest.signatory":
		if x.Signatory == nil {
			x.Signatory = new(VShareSignatory)
		}
		return protoreflect.ValueOfMessage(x.Signatory.ProtoReflect())
	case "qadena.qadena.ValidateAuthorizedSignatoryRequest.currentSignatory":
		if x.CurrentSignatory == nil {
			x.CurrentSignatory = []*VShareSignatory{}
		}
		value := &_ValidateAuthorizedSignatoryRequest_3_list{list: &x.CurrentSignatory}
		return protoreflect.ValueOfList(value)
	case "qadena.qadena.ValidateAuthorizedSignatoryRequest.creator":
		panic(fmt.Errorf("field creator of message qadena.qadena.ValidateAuthorizedSignatoryRequest is not mutable"))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: qadena.qadena.ValidateAuthorizedSignatoryRequest"))
		}
		panic(fmt.Errorf("message qadena.qadena.ValidateAuthorizedSignatoryRequest does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_ValidateAuthorizedSignatoryRequest) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "qadena.qadena.ValidateAuthorizedSignatoryRequest.creator":
		return protoreflect.ValueOfString("")
	case "qadena.qadena.ValidateAuthorizedSignatoryRequest.signatory":
		m := new(VShareSignatory)
		return protoreflect.ValueOfMessage(m.ProtoReflect())
	case "qadena.qadena.ValidateAuthorizedSignatoryRequest.currentSignatory":
		list := []*VShareSignatory{}
		return protoreflect.ValueOfList(&_ValidateAuthorizedSignatoryRequest_3_list{list: &list})
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: qadena.qadena.ValidateAuthorizedSignatoryRequest"))
		}
		panic(fmt.Errorf("message qadena.qadena.ValidateAuthorizedSignatoryRequest does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_ValidateAuthorizedSignatoryRequest) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in qadena.qadena.ValidateAuthorizedSignatoryRequest", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_ValidateAuthorizedSignatoryRequest) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_ValidateAuthorizedSignatoryRequest) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_ValidateAuthorizedSignatoryRequest) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_ValidateAuthorizedSignatoryRequest) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*ValidateAuthorizedSignatoryRequest)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		l = len(x.Creator)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.Signatory != nil {
			l = options.Size(x.Signatory)
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if len(x.CurrentSignatory) > 0 {
			for _, e := range x.CurrentSignatory {
				l = options.Size(e)
				n += 1 + l + runtime.Sov(uint64(l))
			}
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*ValidateAuthorizedSignatoryRequest)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if len(x.CurrentSignatory) > 0 {
			for iNdEx := len(x.CurrentSignatory) - 1; iNdEx >= 0; iNdEx-- {
				encoded, err := options.Marshal(x.CurrentSignatory[iNdEx])
				if err != nil {
					return protoiface.MarshalOutput{
						NoUnkeyedLiterals: input.NoUnkeyedLiterals,
						Buf:               input.Buf,
					}, err
				}
				i -= len(encoded)
				copy(dAtA[i:], encoded)
				i = runtime.EncodeVarint(dAtA, i, uint64(len(encoded)))
				i--
				dAtA[i] = 0x1a
			}
		}
		if x.Signatory != nil {
			encoded, err := options.Marshal(x.Signatory)
			if err != nil {
				return protoiface.MarshalOutput{
					NoUnkeyedLiterals: input.NoUnkeyedLiterals,
					Buf:               input.Buf,
				}, err
			}
			i -= len(encoded)
			copy(dAtA[i:], encoded)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(encoded)))
			i--
			dAtA[i] = 0x12
		}
		if len(x.Creator) > 0 {
			i -= len(x.Creator)
			copy(dAtA[i:], x.Creator)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.Creator)))
			i--
			dAtA[i] = 0xa
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*ValidateAuthorizedSignatoryRequest)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: ValidateAuthorizedSignatoryRequest: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: ValidateAuthorizedSignatoryRequest: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Creator = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 2:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Signatory", wireType)
				}
				var msglen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					msglen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if msglen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + msglen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if x.Signatory == nil {
					x.Signatory = &VShareSignatory{}
				}
				if err := options.Unmarshal(dAtA[iNdEx:postIndex], x.Signatory); err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				iNdEx = postIndex
			case 3:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field CurrentSignatory", wireType)
				}
				var msglen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					msglen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if msglen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + msglen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.CurrentSignatory = append(x.CurrentSignatory, &VShareSignatory{})
				if err := options.Unmarshal(dAtA[iNdEx:postIndex], x.CurrentSignatory[len(x.CurrentSignatory)-1]); err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				iNdEx = postIndex
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var (
	md_ValidateAuthorizedSignatoryReply        protoreflect.MessageDescriptor
	fd_ValidateAuthorizedSignatoryReply_status protoreflect.FieldDescriptor
)

func init() {
	file_qadena_qadena_enclave_proto_init()
	md_ValidateAuthorizedSignatoryReply = File_qadena_qadena_enclave_proto.Messages().ByName("ValidateAuthorizedSignatoryReply")
	fd_ValidateAuthorizedSignatoryReply_status = md_ValidateAuthorizedSignatoryReply.Fields().ByName("status")
}

var _ protoreflect.Message = (*fastReflection_ValidateAuthorizedSignatoryReply)(nil)

type fastReflection_ValidateAuthorizedSignatoryReply ValidateAuthorizedSignatoryReply

func (x *ValidateAuthorizedSignatoryReply) ProtoReflect() protoreflect.Message {
	return (*fastReflection_ValidateAuthorizedSignatoryReply)(x)
}

func (x *ValidateAuthorizedSignatoryReply) slowProtoReflect() protoreflect.Message {
	mi := &file_qadena_qadena_enclave_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_ValidateAuthorizedSignatoryReply_messageType fastReflection_ValidateAuthorizedSignatoryReply_messageType
var _ protoreflect.MessageType = fastReflection_ValidateAuthorizedSignatoryReply_messageType{}

type fastReflection_ValidateAuthorizedSignatoryReply_messageType struct{}

func (x fastReflection_ValidateAuthorizedSignatoryReply_messageType) Zero() protoreflect.Message {
	return (*fastReflection_ValidateAuthorizedSignatoryReply)(nil)
}
func (x fastReflection_ValidateAuthorizedSignatoryReply_messageType) New() protoreflect.Message {
	return new(fastReflection_ValidateAuthorizedSignatoryReply)
}
func (x fastReflection_ValidateAuthorizedSignatoryReply_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_ValidateAuthorizedSignatoryReply
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_ValidateAuthorizedSignatoryReply) Descriptor() protoreflect.MessageDescriptor {
	return md_ValidateAuthorizedSignatoryReply
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_ValidateAuthorizedSignatoryReply) Type() protoreflect.MessageType {
	return _fastReflection_ValidateAuthorizedSignatoryReply_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_ValidateAuthorizedSignatoryReply) New() protoreflect.Message {
	return new(fastReflection_ValidateAuthorizedSignatoryReply)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_ValidateAuthorizedSignatoryReply) Interface() protoreflect.ProtoMessage {
	return (*ValidateAuthorizedSignatoryReply)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_ValidateAuthorizedSignatoryReply) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.Status != false {
		value := protoreflect.ValueOfBool(x.Status)
		if !f(fd_ValidateAuthorizedSignatoryReply_status, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_ValidateAuthorizedSignatoryReply) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "qadena.qadena.ValidateAuthorizedSignatoryReply.status":
		return x.Status != false
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: qadena.qadena.ValidateAuthorizedSignatoryReply"))
		}
		panic(fmt.Errorf("message qadena.qadena.ValidateAuthorizedSignatoryReply does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_ValidateAuthorizedSignatoryReply) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "qadena.qadena.ValidateAuthorizedSignatoryReply.status":
		x.Status = false
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: qadena.qadena.ValidateAuthorizedSignatoryReply"))
		}
		panic(fmt.Errorf("message qadena.qadena.ValidateAuthorizedSignatoryReply does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_ValidateAuthorizedSignatoryReply) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "qadena.qadena.ValidateAuthorizedSignatoryReply.status":
		value := x.Status
		return protoreflect.ValueOfBool(value)
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: qadena.qadena.ValidateAuthorizedSignatoryReply"))
		}
		panic(fmt.Errorf("message qadena.qadena.ValidateAuthorizedSignatoryReply does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_ValidateAuthorizedSignatoryReply) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "qadena.qadena.ValidateAuthorizedSignatoryReply.status":
		x.Status = value.Bool()
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: qadena.qadena.ValidateAuthorizedSignatoryReply"))
		}
		panic(fmt.Errorf("message qadena.qadena.ValidateAuthorizedSignatoryReply does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_ValidateAuthorizedSignatoryReply) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "qadena.qadena.ValidateAuthorizedSignatoryReply.status":
		panic(fmt.Errorf("field status of message qadena.qadena.ValidateAuthorizedSignatoryReply is not mutable"))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: qadena.qadena.ValidateAuthorizedSignatoryReply"))
		}
		panic(fmt.Errorf("message qadena.qadena.ValidateAuthorizedSignatoryReply does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_ValidateAuthorizedSignatoryReply) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "qadena.qadena.ValidateAuthorizedSignatoryReply.status":
		return protoreflect.ValueOfBool(false)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: qadena.qadena.ValidateAuthorizedSignatoryReply"))
		}
		panic(fmt.Errorf("message qadena.qadena.ValidateAuthorizedSignatoryReply does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_ValidateAuthorizedSignatoryReply) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in qadena.qadena.ValidateAuthorizedSignatoryReply", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_ValidateAuthorizedSignatoryReply) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_ValidateAuthorizedSignatoryReply) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_ValidateAuthorizedSignatoryReply) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_ValidateAuthorizedSignatoryReply) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*ValidateAuthorizedSignatoryReply)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		if x.Status {
			n += 2
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*ValidateAuthorizedSignatoryReply)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if x.Status {
			i--
			if x.Status {
				dAtA[i] = 1
			} else {
				dAtA[i] = 0
			}
			i--
			dAtA[i] = 0x8
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*ValidateAuthorizedSignatoryReply)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: ValidateAuthorizedSignatoryReply: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: ValidateAuthorizedSignatoryReply: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Status", wireType)
				}
				var v int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					v |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				x.Status = bool(v != 0)
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var (
	md_MsgUpdateHeight            protoreflect.MessageDescriptor
	fd_MsgUpdateHeight_height     protoreflect.FieldDescriptor
	fd_MsgUpdateHeight_isProposer protoreflect.FieldDescriptor
)

func init() {
	file_qadena_qadena_enclave_proto_init()
	md_MsgUpdateHeight = File_qadena_qadena_enclave_proto.Messages().ByName("MsgUpdateHeight")
	fd_MsgUpdateHeight_height = md_MsgUpdateHeight.Fields().ByName("height")
	fd_MsgUpdateHeight_isProposer = md_MsgUpdateHeight.Fields().ByName("isProposer")
}

var _ protoreflect.Message = (*fastReflection_MsgUpdateHeight)(nil)

type fastReflection_MsgUpdateHeight MsgUpdateHeight

func (x *MsgUpdateHeight) ProtoReflect() protoreflect.Message {
	return (*fastReflection_MsgUpdateHeight)(x)
}

func (x *MsgUpdateHeight) slowProtoReflect() protoreflect.Message {
	mi := &file_qadena_qadena_enclave_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_MsgUpdateHeight_messageType fastReflection_MsgUpdateHeight_messageType
var _ protoreflect.MessageType = fastReflection_MsgUpdateHeight_messageType{}

type fastReflection_MsgUpdateHeight_messageType struct{}

func (x fastReflection_MsgUpdateHeight_messageType) Zero() protoreflect.Message {
	return (*fastReflection_MsgUpdateHeight)(nil)
}
func (x fastReflection_MsgUpdateHeight_messageType) New() protoreflect.Message {
	return new(fastReflection_MsgUpdateHeight)
}
func (x fastReflection_MsgUpdateHeight_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_MsgUpdateHeight
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_MsgUpdateHeight) Descriptor() protoreflect.MessageDescriptor {
	return md_MsgUpdateHeight
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_MsgUpdateHeight) Type() protoreflect.MessageType {
	return _fastReflection_MsgUpdateHeight_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_MsgUpdateHeight) New() protoreflect.Message {
	return new(fastReflection_MsgUpdateHeight)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_MsgUpdateHeight) Interface() protoreflect.ProtoMessage {
	return (*MsgUpdateHeight)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_MsgUpdateHeight) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.Height != int64(0) {
		value := protoreflect.ValueOfInt64(x.Height)
		if !f(fd_MsgUpdateHeight_height, value) {
			return
		}
	}
	if x.IsProposer != false {
		value := protoreflect.ValueOfBool(x.IsProposer)
		if !f(fd_MsgUpdateHeight_isProposer, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_MsgUpdateHeight) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "qadena.qadena.MsgUpdateHeight.height":
		return x.Height != int64(0)
	case "qadena.qadena.MsgUpdateHeight.isProposer":
		return x.IsProposer != false
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: qadena.qadena.MsgUpdateHeight"))
		}
		panic(fmt.Errorf("message qadena.qadena.MsgUpdateHeight does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgUpdateHeight) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "qadena.qadena.MsgUpdateHeight.height":
		x.Height = int64(0)
	case "qadena.qadena.MsgUpdateHeight.isProposer":
		x.IsProposer = false
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: qadena.qadena.MsgUpdateHeight"))
		}
		panic(fmt.Errorf("message qadena.qadena.MsgUpdateHeight does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_MsgUpdateHeight) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "qadena.qadena.MsgUpdateHeight.height":
		value := x.Height
		return protoreflect.ValueOfInt64(value)
	case "qadena.qadena.MsgUpdateHeight.isProposer":
		value := x.IsProposer
		return protoreflect.ValueOfBool(value)
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: qadena.qadena.MsgUpdateHeight"))
		}
		panic(fmt.Errorf("message qadena.qadena.MsgUpdateHeight does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgUpdateHeight) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "qadena.qadena.MsgUpdateHeight.height":
		x.Height = value.Int()
	case "qadena.qadena.MsgUpdateHeight.isProposer":
		x.IsProposer = value.Bool()
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: qadena.qadena.MsgUpdateHeight"))
		}
		panic(fmt.Errorf("message qadena.qadena.MsgUpdateHeight does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgUpdateHeight) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "qadena.qadena.MsgUpdateHeight.height":
		panic(fmt.Errorf("field height of message qadena.qadena.MsgUpdateHeight is not mutable"))
	case "qadena.qadena.MsgUpdateHeight.isProposer":
		panic(fmt.Errorf("field isProposer of message qadena.qadena.MsgUpdateHeight is not mutable"))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: qadena.qadena.MsgUpdateHeight"))
		}
		panic(fmt.Errorf("message qadena.qadena.MsgUpdateHeight does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_MsgUpdateHeight) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "qadena.qadena.MsgUpdateHeight.height":
		return protoreflect.ValueOfInt64(int64(0))
	case "qadena.qadena.MsgUpdateHeight.isProposer":
		return protoreflect.ValueOfBool(false)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: qadena.qadena.MsgUpdateHeight"))
		}
		panic(fmt.Errorf("message qadena.qadena.MsgUpdateHeight does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_MsgUpdateHeight) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in qadena.qadena.MsgUpdateHeight", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_MsgUpdateHeight) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgUpdateHeight) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_MsgUpdateHeight) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_MsgUpdateHeight) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*MsgUpdateHeight)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		if x.Height != 0 {
			n += 1 + runtime.Sov(uint64(x.Height))
		}
		if x.IsProposer {
			n += 2
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*MsgUpdateHeight)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if x.IsProposer {
			i--
			if x.IsProposer {
				dAtA[i] = 1
			} else {
				dAtA[i] = 0
			}
			i--
			dAtA[i] = 0x10
		}
		if x.Height != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.Height))
			i--
			dAtA[i] = 0x8
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*MsgUpdateHeight)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: MsgUpdateHeight: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: MsgUpdateHeight: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Height", wireType)
				}
				x.Height = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.Height |= int64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			case 2:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field IsProposer", wireType)
				}
				var v int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					v |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				x.IsProposer = bool(v != 0)
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var (
	md_MsgScanTransactions              protoreflect.MessageDescriptor
	fd_MsgScanTransactions_timestamp    protoreflect.FieldDescriptor
	fd_MsgScanTransactions_height       protoreflect.FieldDescriptor
	fd_MsgScanTransactions_msg          protoreflect.FieldDescriptor
	fd_MsgScanTransactions_exchangerate protoreflect.FieldDescriptor
)

func init() {
	file_qadena_qadena_enclave_proto_init()
	md_MsgScanTransactions = File_qadena_qadena_enclave_proto.Messages().ByName("MsgScanTransactions")
	fd_MsgScanTransactions_timestamp = md_MsgScanTransactions.Fields().ByName("timestamp")
	fd_MsgScanTransactions_height = md_MsgScanTransactions.Fields().ByName("height")
	fd_MsgScanTransactions_msg = md_MsgScanTransactions.Fields().ByName("msg")
	fd_MsgScanTransactions_exchangerate = md_MsgScanTransactions.Fields().ByName("exchangerate")
}

var _ protoreflect.Message = (*fastReflection_MsgScanTransactions)(nil)

type fastReflection_MsgScanTransactions MsgScanTransactions

func (x *MsgScanTransactions) ProtoReflect() protoreflect.Message {
	return (*fastReflection_MsgScanTransactions)(x)
}

func (x *MsgScanTransactions) slowProtoReflect() protoreflect.Message {
	mi := &file_qadena_qadena_enclave_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_MsgScanTransactions_messageType fastReflection_MsgScanTransactions_messageType
var _ protoreflect.MessageType = fastReflection_MsgScanTransactions_messageType{}

type fastReflection_MsgScanTransactions_messageType struct{}

func (x fastReflection_MsgScanTransactions_messageType) Zero() protoreflect.Message {
	return (*fastReflection_MsgScanTransactions)(nil)
}
func (x fastReflection_MsgScanTransactions_messageType) New() protoreflect.Message {
	return new(fastReflection_MsgScanTransactions)
}
func (x fastReflection_MsgScanTransactions_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_MsgScanTransactions
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_MsgScanTransactions) Descriptor() protoreflect.MessageDescriptor {
	return md_MsgScanTransactions
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_MsgScanTransactions) Type() protoreflect.MessageType {
	return _fastReflection_MsgScanTransactions_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_MsgScanTransactions) New() protoreflect.Message {
	return new(fastReflection_MsgScanTransactions)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_MsgScanTransactions) Interface() protoreflect.ProtoMessage {
	return (*MsgScanTransactions)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_MsgScanTransactions) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.Timestamp != nil {
		value := protoreflect.ValueOfMessage(x.Timestamp.ProtoReflect())
		if !f(fd_MsgScanTransactions_timestamp, value) {
			return
		}
	}
	if x.Height != int64(0) {
		value := protoreflect.ValueOfInt64(x.Height)
		if !f(fd_MsgScanTransactions_height, value) {
			return
		}
	}
	if x.Msg != nil {
		value := protoreflect.ValueOfMessage(x.Msg.ProtoReflect())
		if !f(fd_MsgScanTransactions_msg, value) {
			return
		}
	}
	if x.Exchangerate != "" {
		value := protoreflect.ValueOfString(x.Exchangerate)
		if !f(fd_MsgScanTransactions_exchangerate, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_MsgScanTransactions) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "qadena.qadena.MsgScanTransactions.timestamp":
		return x.Timestamp != nil
	case "qadena.qadena.MsgScanTransactions.height":
		return x.Height != int64(0)
	case "qadena.qadena.MsgScanTransactions.msg":
		return x.Msg != nil
	case "qadena.qadena.MsgScanTransactions.exchangerate":
		return x.Exchangerate != ""
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: qadena.qadena.MsgScanTransactions"))
		}
		panic(fmt.Errorf("message qadena.qadena.MsgScanTransactions does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgScanTransactions) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "qadena.qadena.MsgScanTransactions.timestamp":
		x.Timestamp = nil
	case "qadena.qadena.MsgScanTransactions.height":
		x.Height = int64(0)
	case "qadena.qadena.MsgScanTransactions.msg":
		x.Msg = nil
	case "qadena.qadena.MsgScanTransactions.exchangerate":
		x.Exchangerate = ""
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: qadena.qadena.MsgScanTransactions"))
		}
		panic(fmt.Errorf("message qadena.qadena.MsgScanTransactions does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_MsgScanTransactions) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "qadena.qadena.MsgScanTransactions.timestamp":
		value := x.Timestamp
		return protoreflect.ValueOfMessage(value.ProtoReflect())
	case "qadena.qadena.MsgScanTransactions.height":
		value := x.Height
		return protoreflect.ValueOfInt64(value)
	case "qadena.qadena.MsgScanTransactions.msg":
		value := x.Msg
		return protoreflect.ValueOfMessage(value.ProtoReflect())
	case "qadena.qadena.MsgScanTransactions.exchangerate":
		value := x.Exchangerate
		return protoreflect.ValueOfString(value)
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: qadena.qadena.MsgScanTransactions"))
		}
		panic(fmt.Errorf("message qadena.qadena.MsgScanTransactions does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgScanTransactions) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "qadena.qadena.MsgScanTransactions.timestamp":
		x.Timestamp = value.Message().Interface().(*timestamppb.Timestamp)
	case "qadena.qadena.MsgScanTransactions.height":
		x.Height = value.Int()
	case "qadena.qadena.MsgScanTransactions.msg":
		x.Msg = value.Message().Interface().(*MsgTransferFunds)
	case "qadena.qadena.MsgScanTransactions.exchangerate":
		x.Exchangerate = value.Interface().(string)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: qadena.qadena.MsgScanTransactions"))
		}
		panic(fmt.Errorf("message qadena.qadena.MsgScanTransactions does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgScanTransactions) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "qadena.qadena.MsgScanTransactions.timestamp":
		if x.Timestamp == nil {
			x.Timestamp = new(timestamppb.Timestamp)
		}
		return protoreflect.ValueOfMessage(x.Timestamp.ProtoReflect())
	case "qadena.qadena.MsgScanTransactions.msg":
		if x.Msg == nil {
			x.Msg = new(MsgTransferFunds)
		}
		return protoreflect.ValueOfMessage(x.Msg.ProtoReflect())
	case "qadena.qadena.MsgScanTransactions.height":
		panic(fmt.Errorf("field height of message qadena.qadena.MsgScanTransactions is not mutable"))
	case "qadena.qadena.MsgScanTransactions.exchangerate":
		panic(fmt.Errorf("field exchangerate of message qadena.qadena.MsgScanTransactions is not mutable"))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: qadena.qadena.MsgScanTransactions"))
		}
		panic(fmt.Errorf("message qadena.qadena.MsgScanTransactions does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_MsgScanTransactions) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "qadena.qadena.MsgScanTransactions.timestamp":
		m := new(timestamppb.Timestamp)
		return protoreflect.ValueOfMessage(m.ProtoReflect())
	case "qadena.qadena.MsgScanTransactions.height":
		return protoreflect.ValueOfInt64(int64(0))
	case "qadena.qadena.MsgScanTransactions.msg":
		m := new(MsgTransferFunds)
		return protoreflect.ValueOfMessage(m.ProtoReflect())
	case "qadena.qadena.MsgScanTransactions.exchangerate":
		return protoreflect.ValueOfString("")
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: qadena.qadena.MsgScanTransactions"))
		}
		panic(fmt.Errorf("message qadena.qadena.MsgScanTransactions does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_MsgScanTransactions) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in qadena.qadena.MsgScanTransactions", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_MsgScanTransactions) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgScanTransactions) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_MsgScanTransactions) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_MsgScanTransactions) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*MsgScanTransactions)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		if x.Timestamp != nil {
			l = options.Size(x.Timestamp)
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.Height != 0 {
			n += 1 + runtime.Sov(uint64(x.Height))
		}
		if x.Msg != nil {
			l = options.Size(x.Msg)
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.Exchangerate)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*MsgScanTransactions)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if len(x.Exchangerate) > 0 {
			i -= len(x.Exchangerate)
			copy(dAtA[i:], x.Exchangerate)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.Exchangerate)))
			i--
			dAtA[i] = 0x22
		}
		if x.Msg != nil {
			encoded, err := options.Marshal(x.Msg)
			if err != nil {
				return protoiface.MarshalOutput{
					NoUnkeyedLiterals: input.NoUnkeyedLiterals,
					Buf:               input.Buf,
				}, err
			}
			i -= len(encoded)
			copy(dAtA[i:], encoded)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(encoded)))
			i--
			dAtA[i] = 0x1a
		}
		if x.Height != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.Height))
			i--
			dAtA[i] = 0x10
		}
		if x.Timestamp != nil {
			encoded, err := options.Marshal(x.Timestamp)
			if err != nil {
				return protoiface.MarshalOutput{
					NoUnkeyedLiterals: input.NoUnkeyedLiterals,
					Buf:               input.Buf,
				}, err
			}
			i -= len(encoded)
			copy(dAtA[i:], encoded)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(encoded)))
			i--
			dAtA[i] = 0xa
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*MsgScanTransactions)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: MsgScanTransactions: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: MsgScanTransactions: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Timestamp", wireType)
				}
				var msglen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					msglen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if msglen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + msglen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if x.Timestamp == nil {
					x.Timestamp = &timestamppb.Timestamp{}
				}
				if err := options.Unmarshal(dAtA[iNdEx:postIndex], x.Timestamp); err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				iNdEx = postIndex
			case 2:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Height", wireType)
				}
				x.Height = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.Height |= int64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			case 3:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Msg", wireType)
				}
				var msglen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					msglen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if msglen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + msglen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if x.Msg == nil {
					x.Msg = &MsgTransferFunds{}
				}
				if err := options.Unmarshal(dAtA[iNdEx:postIndex], x.Msg); err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				iNdEx = postIndex
			case 4:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Exchangerate", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Exchangerate = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var (
	md_MsgSyncWallets       protoreflect.MessageDescriptor
	fd_MsgSyncWallets_clear protoreflect.FieldDescriptor
)

func init() {
	file_qadena_qadena_enclave_proto_init()
	md_MsgSyncWallets = File_qadena_qadena_enclave_proto.Messages().ByName("MsgSyncWallets")
	fd_MsgSyncWallets_clear = md_MsgSyncWallets.Fields().ByName("clear")
}

var _ protoreflect.Message = (*fastReflection_MsgSyncWallets)(nil)

type fastReflection_MsgSyncWallets MsgSyncWallets

func (x *MsgSyncWallets) ProtoReflect() protoreflect.Message {
	return (*fastReflection_MsgSyncWallets)(x)
}

func (x *MsgSyncWallets) slowProtoReflect() protoreflect.Message {
	mi := &file_qadena_qadena_enclave_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_MsgSyncWallets_messageType fastReflection_MsgSyncWallets_messageType
var _ protoreflect.MessageType = fastReflection_MsgSyncWallets_messageType{}

type fastReflection_MsgSyncWallets_messageType struct{}

func (x fastReflection_MsgSyncWallets_messageType) Zero() protoreflect.Message {
	return (*fastReflection_MsgSyncWallets)(nil)
}
func (x fastReflection_MsgSyncWallets_messageType) New() protoreflect.Message {
	return new(fastReflection_MsgSyncWallets)
}
func (x fastReflection_MsgSyncWallets_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_MsgSyncWallets
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_MsgSyncWallets) Descriptor() protoreflect.MessageDescriptor {
	return md_MsgSyncWallets
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_MsgSyncWallets) Type() protoreflect.MessageType {
	return _fastReflection_MsgSyncWallets_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_MsgSyncWallets) New() protoreflect.Message {
	return new(fastReflection_MsgSyncWallets)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_MsgSyncWallets) Interface() protoreflect.ProtoMessage {
	return (*MsgSyncWallets)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_MsgSyncWallets) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.Clear_ != false {
		value := protoreflect.ValueOfBool(x.Clear_)
		if !f(fd_MsgSyncWallets_clear, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_MsgSyncWallets) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "qadena.qadena.MsgSyncWallets.clear":
		return x.Clear_ != false
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: qadena.qadena.MsgSyncWallets"))
		}
		panic(fmt.Errorf("message qadena.qadena.MsgSyncWallets does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgSyncWallets) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "qadena.qadena.MsgSyncWallets.clear":
		x.Clear_ = false
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: qadena.qadena.MsgSyncWallets"))
		}
		panic(fmt.Errorf("message qadena.qadena.MsgSyncWallets does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_MsgSyncWallets) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "qadena.qadena.MsgSyncWallets.clear":
		value := x.Clear_
		return protoreflect.ValueOfBool(value)
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: qadena.qadena.MsgSyncWallets"))
		}
		panic(fmt.Errorf("message qadena.qadena.MsgSyncWallets does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgSyncWallets) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "qadena.qadena.MsgSyncWallets.clear":
		x.Clear_ = value.Bool()
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: qadena.qadena.MsgSyncWallets"))
		}
		panic(fmt.Errorf("message qadena.qadena.MsgSyncWallets does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgSyncWallets) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "qadena.qadena.MsgSyncWallets.clear":
		panic(fmt.Errorf("field clear of message qadena.qadena.MsgSyncWallets is not mutable"))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: qadena.qadena.MsgSyncWallets"))
		}
		panic(fmt.Errorf("message qadena.qadena.MsgSyncWallets does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_MsgSyncWallets) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "qadena.qadena.MsgSyncWallets.clear":
		return protoreflect.ValueOfBool(false)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: qadena.qadena.MsgSyncWallets"))
		}
		panic(fmt.Errorf("message qadena.qadena.MsgSyncWallets does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_MsgSyncWallets) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in qadena.qadena.MsgSyncWallets", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_MsgSyncWallets) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgSyncWallets) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_MsgSyncWallets) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_MsgSyncWallets) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*MsgSyncWallets)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		if x.Clear_ {
			n += 2
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*MsgSyncWallets)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if x.Clear_ {
			i--
			if x.Clear_ {
				dAtA[i] = 1
			} else {
				dAtA[i] = 0
			}
			i--
			dAtA[i] = 0x8
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*MsgSyncWallets)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: MsgSyncWallets: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: MsgSyncWallets: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Clear_", wireType)
				}
				var v int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					v |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				x.Clear_ = bool(v != 0)
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var _ protoreflect.List = (*_SyncWalletsReply_1_list)(nil)

type _SyncWalletsReply_1_list struct {
	list *[]*Wallet
}

func (x *_SyncWalletsReply_1_list) Len() int {
	if x.list == nil {
		return 0
	}
	return len(*x.list)
}

func (x *_SyncWalletsReply_1_list) Get(i int) protoreflect.Value {
	return protoreflect.ValueOfMessage((*x.list)[i].ProtoReflect())
}

func (x *_SyncWalletsReply_1_list) Set(i int, value protoreflect.Value) {
	valueUnwrapped := value.Message()
	concreteValue := valueUnwrapped.Interface().(*Wallet)
	(*x.list)[i] = concreteValue
}

func (x *_SyncWalletsReply_1_list) Append(value protoreflect.Value) {
	valueUnwrapped := value.Message()
	concreteValue := valueUnwrapped.Interface().(*Wallet)
	*x.list = append(*x.list, concreteValue)
}

func (x *_SyncWalletsReply_1_list) AppendMutable() protoreflect.Value {
	v := new(Wallet)
	*x.list = append(*x.list, v)
	return protoreflect.ValueOfMessage(v.ProtoReflect())
}

func (x *_SyncWalletsReply_1_list) Truncate(n int) {
	for i := n; i < len(*x.list); i++ {
		(*x.list)[i] = nil
	}
	*x.list = (*x.list)[:n]
}

func (x *_SyncWalletsReply_1_list) NewElement() protoreflect.Value {
	v := new(Wallet)
	return protoreflect.ValueOfMessage(v.ProtoReflect())
}

func (x *_SyncWalletsReply_1_list) IsValid() bool {
	return x.list != nil
}

var (
	md_SyncWalletsReply         protoreflect.MessageDescriptor
	fd_SyncWalletsReply_wallets protoreflect.FieldDescriptor
)

func init() {
	file_qadena_qadena_enclave_proto_init()
	md_SyncWalletsReply = File_qadena_qadena_enclave_proto.Messages().ByName("SyncWalletsReply")
	fd_SyncWalletsReply_wallets = md_SyncWalletsReply.Fields().ByName("wallets")
}

var _ protoreflect.Message = (*fastReflection_SyncWalletsReply)(nil)

type fastReflection_SyncWalletsReply SyncWalletsReply

func (x *SyncWalletsReply) ProtoReflect() protoreflect.Message {
	return (*fastReflection_SyncWalletsReply)(x)
}

func (x *SyncWalletsReply) slowProtoReflect() protoreflect.Message {
	mi := &file_qadena_qadena_enclave_proto_msgTypes[31]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_SyncWalletsReply_messageType fastReflection_SyncWalletsReply_messageType
var _ protoreflect.MessageType = fastReflection_SyncWalletsReply_messageType{}

type fastReflection_SyncWalletsReply_messageType struct{}

func (x fastReflection_SyncWalletsReply_messageType) Zero() protoreflect.Message {
	return (*fastReflection_SyncWalletsReply)(nil)
}
func (x fastReflection_SyncWalletsReply_messageType) New() protoreflect.Message {
	return new(fastReflection_SyncWalletsReply)
}
func (x fastReflection_SyncWalletsReply_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_SyncWalletsReply
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_SyncWalletsReply) Descriptor() protoreflect.MessageDescriptor {
	return md_SyncWalletsReply
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_SyncWalletsReply) Type() protoreflect.MessageType {
	return _fastReflection_SyncWalletsReply_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_SyncWalletsReply) New() protoreflect.Message {
	return new(fastReflection_SyncWalletsReply)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_SyncWalletsReply) Interface() protoreflect.ProtoMessage {
	return (*SyncWalletsReply)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_SyncWalletsReply) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if len(x.Wallets) != 0 {
		value := protoreflect.ValueOfList(&_SyncWalletsReply_1_list{list: &x.Wallets})
		if !f(fd_SyncWalletsReply_wallets, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_SyncWalletsReply) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "qadena.qadena.SyncWalletsReply.wallets":
		return len(x.Wallets) != 0
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: qadena.qadena.SyncWalletsReply"))
		}
		panic(fmt.Errorf("message qadena.qadena.SyncWalletsReply does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_SyncWalletsReply) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "qadena.qadena.SyncWalletsReply.wallets":
		x.Wallets = nil
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: qadena.qadena.SyncWalletsReply"))
		}
		panic(fmt.Errorf("message qadena.qadena.SyncWalletsReply does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_SyncWalletsReply) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "qadena.qadena.SyncWalletsReply.wallets":
		if len(x.Wallets) == 0 {
			return protoreflect.ValueOfList(&_SyncWalletsReply_1_list{})
		}
		listValue := &_SyncWalletsReply_1_list{list: &x.Wallets}
		return protoreflect.ValueOfList(listValue)
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: qadena.qadena.SyncWalletsReply"))
		}
		panic(fmt.Errorf("message qadena.qadena.SyncWalletsReply does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_SyncWalletsReply) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "qadena.qadena.SyncWalletsReply.wallets":
		lv := value.List()
		clv := lv.(*_SyncWalletsReply_1_list)
		x.Wallets = *clv.list
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: qadena.qadena.SyncWalletsReply"))
		}
		panic(fmt.Errorf("message qadena.qadena.SyncWalletsReply does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_SyncWalletsReply) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "qadena.qadena.SyncWalletsReply.wallets":
		if x.Wallets == nil {
			x.Wallets = []*Wallet{}
		}
		value := &_SyncWalletsReply_1_list{list: &x.Wallets}
		return protoreflect.ValueOfList(value)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: qadena.qadena.SyncWalletsReply"))
		}
		panic(fmt.Errorf("message qadena.qadena.SyncWalletsReply does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_SyncWalletsReply) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "qadena.qadena.SyncWalletsReply.wallets":
		list := []*Wallet{}
		return protoreflect.ValueOfList(&_SyncWalletsReply_1_list{list: &list})
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: qadena.qadena.SyncWalletsReply"))
		}
		panic(fmt.Errorf("message qadena.qadena.SyncWalletsReply does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_SyncWalletsReply) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in qadena.qadena.SyncWalletsReply", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_SyncWalletsReply) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_SyncWalletsReply) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_SyncWalletsReply) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_SyncWalletsReply) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*SyncWalletsReply)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		if len(x.Wallets) > 0 {
			for _, e := range x.Wallets {
				l = options.Size(e)
				n += 1 + l + runtime.Sov(uint64(l))
			}
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*SyncWalletsReply)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if len(x.Wallets) > 0 {
			for iNdEx := len(x.Wallets) - 1; iNdEx >= 0; iNdEx-- {
				encoded, err := options.Marshal(x.Wallets[iNdEx])
				if err != nil {
					return protoiface.MarshalOutput{
						NoUnkeyedLiterals: input.NoUnkeyedLiterals,
						Buf:               input.Buf,
					}, err
				}
				i -= len(encoded)
				copy(dAtA[i:], encoded)
				i = runtime.EncodeVarint(dAtA, i, uint64(len(encoded)))
				i--
				dAtA[i] = 0xa
			}
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*SyncWalletsReply)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: SyncWalletsReply: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: SyncWalletsReply: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Wallets", wireType)
				}
				var msglen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					msglen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if msglen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + msglen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Wallets = append(x.Wallets, &Wallet{})
				if err := options.Unmarshal(dAtA[iNdEx:postIndex], x.Wallets[len(x.Wallets)-1]); err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				iNdEx = postIndex
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var (
	md_MsgSyncCredentials       protoreflect.MessageDescriptor
	fd_MsgSyncCredentials_clear protoreflect.FieldDescriptor
)

func init() {
	file_qadena_qadena_enclave_proto_init()
	md_MsgSyncCredentials = File_qadena_qadena_enclave_proto.Messages().ByName("MsgSyncCredentials")
	fd_MsgSyncCredentials_clear = md_MsgSyncCredentials.Fields().ByName("clear")
}

var _ protoreflect.Message = (*fastReflection_MsgSyncCredentials)(nil)

type fastReflection_MsgSyncCredentials MsgSyncCredentials

func (x *MsgSyncCredentials) ProtoReflect() protoreflect.Message {
	return (*fastReflection_MsgSyncCredentials)(x)
}

func (x *MsgSyncCredentials) slowProtoReflect() protoreflect.Message {
	mi := &file_qadena_qadena_enclave_proto_msgTypes[32]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_MsgSyncCredentials_messageType fastReflection_MsgSyncCredentials_messageType
var _ protoreflect.MessageType = fastReflection_MsgSyncCredentials_messageType{}

type fastReflection_MsgSyncCredentials_messageType struct{}

func (x fastReflection_MsgSyncCredentials_messageType) Zero() protoreflect.Message {
	return (*fastReflection_MsgSyncCredentials)(nil)
}
func (x fastReflection_MsgSyncCredentials_messageType) New() protoreflect.Message {
	return new(fastReflection_MsgSyncCredentials)
}
func (x fastReflection_MsgSyncCredentials_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_MsgSyncCredentials
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_MsgSyncCredentials) Descriptor() protoreflect.MessageDescriptor {
	return md_MsgSyncCredentials
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_MsgSyncCredentials) Type() protoreflect.MessageType {
	return _fastReflection_MsgSyncCredentials_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_MsgSyncCredentials) New() protoreflect.Message {
	return new(fastReflection_MsgSyncCredentials)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_MsgSyncCredentials) Interface() protoreflect.ProtoMessage {
	return (*MsgSyncCredentials)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_MsgSyncCredentials) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.Clear_ != false {
		value := protoreflect.ValueOfBool(x.Clear_)
		if !f(fd_MsgSyncCredentials_clear, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_MsgSyncCredentials) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "qadena.qadena.MsgSyncCredentials.clear":
		return x.Clear_ != false
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: qadena.qadena.MsgSyncCredentials"))
		}
		panic(fmt.Errorf("message qadena.qadena.MsgSyncCredentials does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgSyncCredentials) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "qadena.qadena.MsgSyncCredentials.clear":
		x.Clear_ = false
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: qadena.qadena.MsgSyncCredentials"))
		}
		panic(fmt.Errorf("message qadena.qadena.MsgSyncCredentials does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_MsgSyncCredentials) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "qadena.qadena.MsgSyncCredentials.clear":
		value := x.Clear_
		return protoreflect.ValueOfBool(value)
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: qadena.qadena.MsgSyncCredentials"))
		}
		panic(fmt.Errorf("message qadena.qadena.MsgSyncCredentials does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgSyncCredentials) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "qadena.qadena.MsgSyncCredentials.clear":
		x.Clear_ = value.Bool()
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: qadena.qadena.MsgSyncCredentials"))
		}
		panic(fmt.Errorf("message qadena.qadena.MsgSyncCredentials does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgSyncCredentials) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "qadena.qadena.MsgSyncCredentials.clear":
		panic(fmt.Errorf("field clear of message qadena.qadena.MsgSyncCredentials is not mutable"))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: qadena.qadena.MsgSyncCredentials"))
		}
		panic(fmt.Errorf("message qadena.qadena.MsgSyncCredentials does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_MsgSyncCredentials) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "qadena.qadena.MsgSyncCredentials.clear":
		return protoreflect.ValueOfBool(false)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: qadena.qadena.MsgSyncCredentials"))
		}
		panic(fmt.Errorf("message qadena.qadena.MsgSyncCredentials does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_MsgSyncCredentials) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in qadena.qadena.MsgSyncCredentials", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_MsgSyncCredentials) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgSyncCredentials) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_MsgSyncCredentials) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_MsgSyncCredentials) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*MsgSyncCredentials)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		if x.Clear_ {
			n += 2
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*MsgSyncCredentials)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if x.Clear_ {
			i--
			if x.Clear_ {
				dAtA[i] = 1
			} else {
				dAtA[i] = 0
			}
			i--
			dAtA[i] = 0x8
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*MsgSyncCredentials)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: MsgSyncCredentials: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: MsgSyncCredentials: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Clear_", wireType)
				}
				var v int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					v |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				x.Clear_ = bool(v != 0)
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var _ protoreflect.List = (*_SyncCredentialsReply_1_list)(nil)

type _SyncCredentialsReply_1_list struct {
	list *[]*Credential
}

func (x *_SyncCredentialsReply_1_list) Len() int {
	if x.list == nil {
		return 0
	}
	return len(*x.list)
}

func (x *_SyncCredentialsReply_1_list) Get(i int) protoreflect.Value {
	return protoreflect.ValueOfMessage((*x.list)[i].ProtoReflect())
}

func (x *_SyncCredentialsReply_1_list) Set(i int, value protoreflect.Value) {
	valueUnwrapped := value.Message()
	concreteValue := valueUnwrapped.Interface().(*Credential)
	(*x.list)[i] = concreteValue
}

func (x *_SyncCredentialsReply_1_list) Append(value protoreflect.Value) {
	valueUnwrapped := value.Message()
	concreteValue := valueUnwrapped.Interface().(*Credential)
	*x.list = append(*x.list, concreteValue)
}

func (x *_SyncCredentialsReply_1_list) AppendMutable() protoreflect.Value {
	v := new(Credential)
	*x.list = append(*x.list, v)
	return protoreflect.ValueOfMessage(v.ProtoReflect())
}

func (x *_SyncCredentialsReply_1_list) Truncate(n int) {
	for i := n; i < len(*x.list); i++ {
		(*x.list)[i] = nil
	}
	*x.list = (*x.list)[:n]
}

func (x *_SyncCredentialsReply_1_list) NewElement() protoreflect.Value {
	v := new(Credential)
	return protoreflect.ValueOfMessage(v.ProtoReflect())
}

func (x *_SyncCredentialsReply_1_list) IsValid() bool {
	return x.list != nil
}

var (
	md_SyncCredentialsReply             protoreflect.MessageDescriptor
	fd_SyncCredentialsReply_credentials protoreflect.FieldDescriptor
)

func init() {
	file_qadena_qadena_enclave_proto_init()
	md_SyncCredentialsReply = File_qadena_qadena_enclave_proto.Messages().ByName("SyncCredentialsReply")
	fd_SyncCredentialsReply_credentials = md_SyncCredentialsReply.Fields().ByName("credentials")
}

var _ protoreflect.Message = (*fastReflection_SyncCredentialsReply)(nil)

type fastReflection_SyncCredentialsReply SyncCredentialsReply

func (x *SyncCredentialsReply) ProtoReflect() protoreflect.Message {
	return (*fastReflection_SyncCredentialsReply)(x)
}

func (x *SyncCredentialsReply) slowProtoReflect() protoreflect.Message {
	mi := &file_qadena_qadena_enclave_proto_msgTypes[33]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_SyncCredentialsReply_messageType fastReflection_SyncCredentialsReply_messageType
var _ protoreflect.MessageType = fastReflection_SyncCredentialsReply_messageType{}

type fastReflection_SyncCredentialsReply_messageType struct{}

func (x fastReflection_SyncCredentialsReply_messageType) Zero() protoreflect.Message {
	return (*fastReflection_SyncCredentialsReply)(nil)
}
func (x fastReflection_SyncCredentialsReply_messageType) New() protoreflect.Message {
	return new(fastReflection_SyncCredentialsReply)
}
func (x fastReflection_SyncCredentialsReply_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_SyncCredentialsReply
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_SyncCredentialsReply) Descriptor() protoreflect.MessageDescriptor {
	return md_SyncCredentialsReply
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_SyncCredentialsReply) Type() protoreflect.MessageType {
	return _fastReflection_SyncCredentialsReply_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_SyncCredentialsReply) New() protoreflect.Message {
	return new(fastReflection_SyncCredentialsReply)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_SyncCredentialsReply) Interface() protoreflect.ProtoMessage {
	return (*SyncCredentialsReply)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_SyncCredentialsReply) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if len(x.Credentials) != 0 {
		value := protoreflect.ValueOfList(&_SyncCredentialsReply_1_list{list: &x.Credentials})
		if !f(fd_SyncCredentialsReply_credentials, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_SyncCredentialsReply) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "qadena.qadena.SyncCredentialsReply.credentials":
		return len(x.Credentials) != 0
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: qadena.qadena.SyncCredentialsReply"))
		}
		panic(fmt.Errorf("message qadena.qadena.SyncCredentialsReply does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_SyncCredentialsReply) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "qadena.qadena.SyncCredentialsReply.credentials":
		x.Credentials = nil
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: qadena.qadena.SyncCredentialsReply"))
		}
		panic(fmt.Errorf("message qadena.qadena.SyncCredentialsReply does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_SyncCredentialsReply) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "qadena.qadena.SyncCredentialsReply.credentials":
		if len(x.Credentials) == 0 {
			return protoreflect.ValueOfList(&_SyncCredentialsReply_1_list{})
		}
		listValue := &_SyncCredentialsReply_1_list{list: &x.Credentials}
		return protoreflect.ValueOfList(listValue)
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: qadena.qadena.SyncCredentialsReply"))
		}
		panic(fmt.Errorf("message qadena.qadena.SyncCredentialsReply does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_SyncCredentialsReply) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "qadena.qadena.SyncCredentialsReply.credentials":
		lv := value.List()
		clv := lv.(*_SyncCredentialsReply_1_list)
		x.Credentials = *clv.list
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: qadena.qadena.SyncCredentialsReply"))
		}
		panic(fmt.Errorf("message qadena.qadena.SyncCredentialsReply does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_SyncCredentialsReply) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "qadena.qadena.SyncCredentialsReply.credentials":
		if x.Credentials == nil {
			x.Credentials = []*Credential{}
		}
		value := &_SyncCredentialsReply_1_list{list: &x.Credentials}
		return protoreflect.ValueOfList(value)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: qadena.qadena.SyncCredentialsReply"))
		}
		panic(fmt.Errorf("message qadena.qadena.SyncCredentialsReply does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_SyncCredentialsReply) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "qadena.qadena.SyncCredentialsReply.credentials":
		list := []*Credential{}
		return protoreflect.ValueOfList(&_SyncCredentialsReply_1_list{list: &list})
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: qadena.qadena.SyncCredentialsReply"))
		}
		panic(fmt.Errorf("message qadena.qadena.SyncCredentialsReply does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_SyncCredentialsReply) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in qadena.qadena.SyncCredentialsReply", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_SyncCredentialsReply) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_SyncCredentialsReply) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_SyncCredentialsReply) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_SyncCredentialsReply) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*SyncCredentialsReply)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		if len(x.Credentials) > 0 {
			for _, e := range x.Credentials {
				l = options.Size(e)
				n += 1 + l + runtime.Sov(uint64(l))
			}
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*SyncCredentialsReply)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if len(x.Credentials) > 0 {
			for iNdEx := len(x.Credentials) - 1; iNdEx >= 0; iNdEx-- {
				encoded, err := options.Marshal(x.Credentials[iNdEx])
				if err != nil {
					return protoiface.MarshalOutput{
						NoUnkeyedLiterals: input.NoUnkeyedLiterals,
						Buf:               input.Buf,
					}, err
				}
				i -= len(encoded)
				copy(dAtA[i:], encoded)
				i = runtime.EncodeVarint(dAtA, i, uint64(len(encoded)))
				i--
				dAtA[i] = 0xa
			}
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*SyncCredentialsReply)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: SyncCredentialsReply: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: SyncCredentialsReply: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Credentials", wireType)
				}
				var msglen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					msglen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if msglen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + msglen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Credentials = append(x.Credentials, &Credential{})
				if err := options.Unmarshal(dAtA[iNdEx:postIndex], x.Credentials[len(x.Credentials)-1]); err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				iNdEx = postIndex
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var (
	md_MsgSyncRecoverKeys       protoreflect.MessageDescriptor
	fd_MsgSyncRecoverKeys_clear protoreflect.FieldDescriptor
)

func init() {
	file_qadena_qadena_enclave_proto_init()
	md_MsgSyncRecoverKeys = File_qadena_qadena_enclave_proto.Messages().ByName("MsgSyncRecoverKeys")
	fd_MsgSyncRecoverKeys_clear = md_MsgSyncRecoverKeys.Fields().ByName("clear")
}

var _ protoreflect.Message = (*fastReflection_MsgSyncRecoverKeys)(nil)

type fastReflection_MsgSyncRecoverKeys MsgSyncRecoverKeys

func (x *MsgSyncRecoverKeys) ProtoReflect() protoreflect.Message {
	return (*fastReflection_MsgSyncRecoverKeys)(x)
}

func (x *MsgSyncRecoverKeys) slowProtoReflect() protoreflect.Message {
	mi := &file_qadena_qadena_enclave_proto_msgTypes[34]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_MsgSyncRecoverKeys_messageType fastReflection_MsgSyncRecoverKeys_messageType
var _ protoreflect.MessageType = fastReflection_MsgSyncRecoverKeys_messageType{}

type fastReflection_MsgSyncRecoverKeys_messageType struct{}

func (x fastReflection_MsgSyncRecoverKeys_messageType) Zero() protoreflect.Message {
	return (*fastReflection_MsgSyncRecoverKeys)(nil)
}
func (x fastReflection_MsgSyncRecoverKeys_messageType) New() protoreflect.Message {
	return new(fastReflection_MsgSyncRecoverKeys)
}
func (x fastReflection_MsgSyncRecoverKeys_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_MsgSyncRecoverKeys
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_MsgSyncRecoverKeys) Descriptor() protoreflect.MessageDescriptor {
	return md_MsgSyncRecoverKeys
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_MsgSyncRecoverKeys) Type() protoreflect.MessageType {
	return _fastReflection_MsgSyncRecoverKeys_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_MsgSyncRecoverKeys) New() protoreflect.Message {
	return new(fastReflection_MsgSyncRecoverKeys)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_MsgSyncRecoverKeys) Interface() protoreflect.ProtoMessage {
	return (*MsgSyncRecoverKeys)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_MsgSyncRecoverKeys) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.Clear_ != false {
		value := protoreflect.ValueOfBool(x.Clear_)
		if !f(fd_MsgSyncRecoverKeys_clear, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_MsgSyncRecoverKeys) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "qadena.qadena.MsgSyncRecoverKeys.clear":
		return x.Clear_ != false
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: qadena.qadena.MsgSyncRecoverKeys"))
		}
		panic(fmt.Errorf("message qadena.qadena.MsgSyncRecoverKeys does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgSyncRecoverKeys) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "qadena.qadena.MsgSyncRecoverKeys.clear":
		x.Clear_ = false
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: qadena.qadena.MsgSyncRecoverKeys"))
		}
		panic(fmt.Errorf("message qadena.qadena.MsgSyncRecoverKeys does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_MsgSyncRecoverKeys) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "qadena.qadena.MsgSyncRecoverKeys.clear":
		value := x.Clear_
		return protoreflect.ValueOfBool(value)
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: qadena.qadena.MsgSyncRecoverKeys"))
		}
		panic(fmt.Errorf("message qadena.qadena.MsgSyncRecoverKeys does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgSyncRecoverKeys) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "qadena.qadena.MsgSyncRecoverKeys.clear":
		x.Clear_ = value.Bool()
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: qadena.qadena.MsgSyncRecoverKeys"))
		}
		panic(fmt.Errorf("message qadena.qadena.MsgSyncRecoverKeys does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgSyncRecoverKeys) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "qadena.qadena.MsgSyncRecoverKeys.clear":
		panic(fmt.Errorf("field clear of message qadena.qadena.MsgSyncRecoverKeys is not mutable"))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: qadena.qadena.MsgSyncRecoverKeys"))
		}
		panic(fmt.Errorf("message qadena.qadena.MsgSyncRecoverKeys does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_MsgSyncRecoverKeys) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "qadena.qadena.MsgSyncRecoverKeys.clear":
		return protoreflect.ValueOfBool(false)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: qadena.qadena.MsgSyncRecoverKeys"))
		}
		panic(fmt.Errorf("message qadena.qadena.MsgSyncRecoverKeys does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_MsgSyncRecoverKeys) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in qadena.qadena.MsgSyncRecoverKeys", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_MsgSyncRecoverKeys) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgSyncRecoverKeys) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_MsgSyncRecoverKeys) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_MsgSyncRecoverKeys) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*MsgSyncRecoverKeys)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		if x.Clear_ {
			n += 2
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*MsgSyncRecoverKeys)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if x.Clear_ {
			i--
			if x.Clear_ {
				dAtA[i] = 1
			} else {
				dAtA[i] = 0
			}
			i--
			dAtA[i] = 0x8
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*MsgSyncRecoverKeys)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: MsgSyncRecoverKeys: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: MsgSyncRecoverKeys: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Clear_", wireType)
				}
				var v int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					v |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				x.Clear_ = bool(v != 0)
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var _ protoreflect.List = (*_SyncRecoverKeysReply_1_list)(nil)

type _SyncRecoverKeysReply_1_list struct {
	list *[]*RecoverKey
}

func (x *_SyncRecoverKeysReply_1_list) Len() int {
	if x.list == nil {
		return 0
	}
	return len(*x.list)
}

func (x *_SyncRecoverKeysReply_1_list) Get(i int) protoreflect.Value {
	return protoreflect.ValueOfMessage((*x.list)[i].ProtoReflect())
}

func (x *_SyncRecoverKeysReply_1_list) Set(i int, value protoreflect.Value) {
	valueUnwrapped := value.Message()
	concreteValue := valueUnwrapped.Interface().(*RecoverKey)
	(*x.list)[i] = concreteValue
}

func (x *_SyncRecoverKeysReply_1_list) Append(value protoreflect.Value) {
	valueUnwrapped := value.Message()
	concreteValue := valueUnwrapped.Interface().(*RecoverKey)
	*x.list = append(*x.list, concreteValue)
}

func (x *_SyncRecoverKeysReply_1_list) AppendMutable() protoreflect.Value {
	v := new(RecoverKey)
	*x.list = append(*x.list, v)
	return protoreflect.ValueOfMessage(v.ProtoReflect())
}

func (x *_SyncRecoverKeysReply_1_list) Truncate(n int) {
	for i := n; i < len(*x.list); i++ {
		(*x.list)[i] = nil
	}
	*x.list = (*x.list)[:n]
}

func (x *_SyncRecoverKeysReply_1_list) NewElement() protoreflect.Value {
	v := new(RecoverKey)
	return protoreflect.ValueOfMessage(v.ProtoReflect())
}

func (x *_SyncRecoverKeysReply_1_list) IsValid() bool {
	return x.list != nil
}

var (
	md_SyncRecoverKeysReply             protoreflect.MessageDescriptor
	fd_SyncRecoverKeysReply_recoverKeys protoreflect.FieldDescriptor
)

func init() {
	file_qadena_qadena_enclave_proto_init()
	md_SyncRecoverKeysReply = File_qadena_qadena_enclave_proto.Messages().ByName("SyncRecoverKeysReply")
	fd_SyncRecoverKeysReply_recoverKeys = md_SyncRecoverKeysReply.Fields().ByName("recoverKeys")
}

var _ protoreflect.Message = (*fastReflection_SyncRecoverKeysReply)(nil)

type fastReflection_SyncRecoverKeysReply SyncRecoverKeysReply

func (x *SyncRecoverKeysReply) ProtoReflect() protoreflect.Message {
	return (*fastReflection_SyncRecoverKeysReply)(x)
}

func (x *SyncRecoverKeysReply) slowProtoReflect() protoreflect.Message {
	mi := &file_qadena_qadena_enclave_proto_msgTypes[35]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_SyncRecoverKeysReply_messageType fastReflection_SyncRecoverKeysReply_messageType
var _ protoreflect.MessageType = fastReflection_SyncRecoverKeysReply_messageType{}

type fastReflection_SyncRecoverKeysReply_messageType struct{}

func (x fastReflection_SyncRecoverKeysReply_messageType) Zero() protoreflect.Message {
	return (*fastReflection_SyncRecoverKeysReply)(nil)
}
func (x fastReflection_SyncRecoverKeysReply_messageType) New() protoreflect.Message {
	return new(fastReflection_SyncRecoverKeysReply)
}
func (x fastReflection_SyncRecoverKeysReply_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_SyncRecoverKeysReply
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_SyncRecoverKeysReply) Descriptor() protoreflect.MessageDescriptor {
	return md_SyncRecoverKeysReply
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_SyncRecoverKeysReply) Type() protoreflect.MessageType {
	return _fastReflection_SyncRecoverKeysReply_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_SyncRecoverKeysReply) New() protoreflect.Message {
	return new(fastReflection_SyncRecoverKeysReply)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_SyncRecoverKeysReply) Interface() protoreflect.ProtoMessage {
	return (*SyncRecoverKeysReply)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_SyncRecoverKeysReply) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if len(x.RecoverKeys) != 0 {
		value := protoreflect.ValueOfList(&_SyncRecoverKeysReply_1_list{list: &x.RecoverKeys})
		if !f(fd_SyncRecoverKeysReply_recoverKeys, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_SyncRecoverKeysReply) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "qadena.qadena.SyncRecoverKeysReply.recoverKeys":
		return len(x.RecoverKeys) != 0
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: qadena.qadena.SyncRecoverKeysReply"))
		}
		panic(fmt.Errorf("message qadena.qadena.SyncRecoverKeysReply does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_SyncRecoverKeysReply) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "qadena.qadena.SyncRecoverKeysReply.recoverKeys":
		x.RecoverKeys = nil
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: qadena.qadena.SyncRecoverKeysReply"))
		}
		panic(fmt.Errorf("message qadena.qadena.SyncRecoverKeysReply does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_SyncRecoverKeysReply) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "qadena.qadena.SyncRecoverKeysReply.recoverKeys":
		if len(x.RecoverKeys) == 0 {
			return protoreflect.ValueOfList(&_SyncRecoverKeysReply_1_list{})
		}
		listValue := &_SyncRecoverKeysReply_1_list{list: &x.RecoverKeys}
		return protoreflect.ValueOfList(listValue)
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: qadena.qadena.SyncRecoverKeysReply"))
		}
		panic(fmt.Errorf("message qadena.qadena.SyncRecoverKeysReply does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_SyncRecoverKeysReply) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "qadena.qadena.SyncRecoverKeysReply.recoverKeys":
		lv := value.List()
		clv := lv.(*_SyncRecoverKeysReply_1_list)
		x.RecoverKeys = *clv.list
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: qadena.qadena.SyncRecoverKeysReply"))
		}
		panic(fmt.Errorf("message qadena.qadena.SyncRecoverKeysReply does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_SyncRecoverKeysReply) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "qadena.qadena.SyncRecoverKeysReply.recoverKeys":
		if x.RecoverKeys == nil {
			x.RecoverKeys = []*RecoverKey{}
		}
		value := &_SyncRecoverKeysReply_1_list{list: &x.RecoverKeys}
		return protoreflect.ValueOfList(value)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: qadena.qadena.SyncRecoverKeysReply"))
		}
		panic(fmt.Errorf("message qadena.qadena.SyncRecoverKeysReply does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_SyncRecoverKeysReply) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "qadena.qadena.SyncRecoverKeysReply.recoverKeys":
		list := []*RecoverKey{}
		return protoreflect.ValueOfList(&_SyncRecoverKeysReply_1_list{list: &list})
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: qadena.qadena.SyncRecoverKeysReply"))
		}
		panic(fmt.Errorf("message qadena.qadena.SyncRecoverKeysReply does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_SyncRecoverKeysReply) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in qadena.qadena.SyncRecoverKeysReply", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_SyncRecoverKeysReply) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_SyncRecoverKeysReply) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_SyncRecoverKeysReply) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_SyncRecoverKeysReply) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*SyncRecoverKeysReply)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		if len(x.RecoverKeys) > 0 {
			for _, e := range x.RecoverKeys {
				l = options.Size(e)
				n += 1 + l + runtime.Sov(uint64(l))
			}
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*SyncRecoverKeysReply)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if len(x.RecoverKeys) > 0 {
			for iNdEx := len(x.RecoverKeys) - 1; iNdEx >= 0; iNdEx-- {
				encoded, err := options.Marshal(x.RecoverKeys[iNdEx])
				if err != nil {
					return protoiface.MarshalOutput{
						NoUnkeyedLiterals: input.NoUnkeyedLiterals,
						Buf:               input.Buf,
					}, err
				}
				i -= len(encoded)
				copy(dAtA[i:], encoded)
				i = runtime.EncodeVarint(dAtA, i, uint64(len(encoded)))
				i--
				dAtA[i] = 0xa
			}
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*SyncRecoverKeysReply)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: SyncRecoverKeysReply: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: SyncRecoverKeysReply: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field RecoverKeys", wireType)
				}
				var msglen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					msglen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if msglen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + msglen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.RecoverKeys = append(x.RecoverKeys, &RecoverKey{})
				if err := options.Unmarshal(dAtA[iNdEx:postIndex], x.RecoverKeys[len(x.RecoverKeys)-1]); err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				iNdEx = postIndex
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var (
	md_SetSecretSharePrivateKeyReply        protoreflect.MessageDescriptor
	fd_SetSecretSharePrivateKeyReply_status protoreflect.FieldDescriptor
)

func init() {
	file_qadena_qadena_enclave_proto_init()
	md_SetSecretSharePrivateKeyReply = File_qadena_qadena_enclave_proto.Messages().ByName("SetSecretSharePrivateKeyReply")
	fd_SetSecretSharePrivateKeyReply_status = md_SetSecretSharePrivateKeyReply.Fields().ByName("status")
}

var _ protoreflect.Message = (*fastReflection_SetSecretSharePrivateKeyReply)(nil)

type fastReflection_SetSecretSharePrivateKeyReply SetSecretSharePrivateKeyReply

func (x *SetSecretSharePrivateKeyReply) ProtoReflect() protoreflect.Message {
	return (*fastReflection_SetSecretSharePrivateKeyReply)(x)
}

func (x *SetSecretSharePrivateKeyReply) slowProtoReflect() protoreflect.Message {
	mi := &file_qadena_qadena_enclave_proto_msgTypes[36]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_SetSecretSharePrivateKeyReply_messageType fastReflection_SetSecretSharePrivateKeyReply_messageType
var _ protoreflect.MessageType = fastReflection_SetSecretSharePrivateKeyReply_messageType{}

type fastReflection_SetSecretSharePrivateKeyReply_messageType struct{}

func (x fastReflection_SetSecretSharePrivateKeyReply_messageType) Zero() protoreflect.Message {
	return (*fastReflection_SetSecretSharePrivateKeyReply)(nil)
}
func (x fastReflection_SetSecretSharePrivateKeyReply_messageType) New() protoreflect.Message {
	return new(fastReflection_SetSecretSharePrivateKeyReply)
}
func (x fastReflection_SetSecretSharePrivateKeyReply_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_SetSecretSharePrivateKeyReply
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_SetSecretSharePrivateKeyReply) Descriptor() protoreflect.MessageDescriptor {
	return md_SetSecretSharePrivateKeyReply
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_SetSecretSharePrivateKeyReply) Type() protoreflect.MessageType {
	return _fastReflection_SetSecretSharePrivateKeyReply_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_SetSecretSharePrivateKeyReply) New() protoreflect.Message {
	return new(fastReflection_SetSecretSharePrivateKeyReply)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_SetSecretSharePrivateKeyReply) Interface() protoreflect.ProtoMessage {
	return (*SetSecretSharePrivateKeyReply)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_SetSecretSharePrivateKeyReply) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.Status != false {
		value := protoreflect.ValueOfBool(x.Status)
		if !f(fd_SetSecretSharePrivateKeyReply_status, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_SetSecretSharePrivateKeyReply) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "qadena.qadena.SetSecretSharePrivateKeyReply.status":
		return x.Status != false
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: qadena.qadena.SetSecretSharePrivateKeyReply"))
		}
		panic(fmt.Errorf("message qadena.qadena.SetSecretSharePrivateKeyReply does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_SetSecretSharePrivateKeyReply) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "qadena.qadena.SetSecretSharePrivateKeyReply.status":
		x.Status = false
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: qadena.qadena.SetSecretSharePrivateKeyReply"))
		}
		panic(fmt.Errorf("message qadena.qadena.SetSecretSharePrivateKeyReply does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_SetSecretSharePrivateKeyReply) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "qadena.qadena.SetSecretSharePrivateKeyReply.status":
		value := x.Status
		return protoreflect.ValueOfBool(value)
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: qadena.qadena.SetSecretSharePrivateKeyReply"))
		}
		panic(fmt.Errorf("message qadena.qadena.SetSecretSharePrivateKeyReply does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_SetSecretSharePrivateKeyReply) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "qadena.qadena.SetSecretSharePrivateKeyReply.status":
		x.Status = value.Bool()
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: qadena.qadena.SetSecretSharePrivateKeyReply"))
		}
		panic(fmt.Errorf("message qadena.qadena.SetSecretSharePrivateKeyReply does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_SetSecretSharePrivateKeyReply) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "qadena.qadena.SetSecretSharePrivateKeyReply.status":
		panic(fmt.Errorf("field status of message qadena.qadena.SetSecretSharePrivateKeyReply is not mutable"))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: qadena.qadena.SetSecretSharePrivateKeyReply"))
		}
		panic(fmt.Errorf("message qadena.qadena.SetSecretSharePrivateKeyReply does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_SetSecretSharePrivateKeyReply) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "qadena.qadena.SetSecretSharePrivateKeyReply.status":
		return protoreflect.ValueOfBool(false)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: qadena.qadena.SetSecretSharePrivateKeyReply"))
		}
		panic(fmt.Errorf("message qadena.qadena.SetSecretSharePrivateKeyReply does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_SetSecretSharePrivateKeyReply) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in qadena.qadena.SetSecretSharePrivateKeyReply", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_SetSecretSharePrivateKeyReply) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_SetSecretSharePrivateKeyReply) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_SetSecretSharePrivateKeyReply) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_SetSecretSharePrivateKeyReply) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*SetSecretSharePrivateKeyReply)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		if x.Status {
			n += 2
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*SetSecretSharePrivateKeyReply)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if x.Status {
			i--
			if x.Status {
				dAtA[i] = 1
			} else {
				dAtA[i] = 0
			}
			i--
			dAtA[i] = 0x8
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*SetSecretSharePrivateKeyReply)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: SetSecretSharePrivateKeyReply: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: SetSecretSharePrivateKeyReply: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Status", wireType)
				}
				var v int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					v |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				x.Status = bool(v != 0)
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var (
	md_MsgSyncSuspiciousTransactions       protoreflect.MessageDescriptor
	fd_MsgSyncSuspiciousTransactions_clear protoreflect.FieldDescriptor
)

func init() {
	file_qadena_qadena_enclave_proto_init()
	md_MsgSyncSuspiciousTransactions = File_qadena_qadena_enclave_proto.Messages().ByName("MsgSyncSuspiciousTransactions")
	fd_MsgSyncSuspiciousTransactions_clear = md_MsgSyncSuspiciousTransactions.Fields().ByName("clear")
}

var _ protoreflect.Message = (*fastReflection_MsgSyncSuspiciousTransactions)(nil)

type fastReflection_MsgSyncSuspiciousTransactions MsgSyncSuspiciousTransactions

func (x *MsgSyncSuspiciousTransactions) ProtoReflect() protoreflect.Message {
	return (*fastReflection_MsgSyncSuspiciousTransactions)(x)
}

func (x *MsgSyncSuspiciousTransactions) slowProtoReflect() protoreflect.Message {
	mi := &file_qadena_qadena_enclave_proto_msgTypes[37]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_MsgSyncSuspiciousTransactions_messageType fastReflection_MsgSyncSuspiciousTransactions_messageType
var _ protoreflect.MessageType = fastReflection_MsgSyncSuspiciousTransactions_messageType{}

type fastReflection_MsgSyncSuspiciousTransactions_messageType struct{}

func (x fastReflection_MsgSyncSuspiciousTransactions_messageType) Zero() protoreflect.Message {
	return (*fastReflection_MsgSyncSuspiciousTransactions)(nil)
}
func (x fastReflection_MsgSyncSuspiciousTransactions_messageType) New() protoreflect.Message {
	return new(fastReflection_MsgSyncSuspiciousTransactions)
}
func (x fastReflection_MsgSyncSuspiciousTransactions_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_MsgSyncSuspiciousTransactions
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_MsgSyncSuspiciousTransactions) Descriptor() protoreflect.MessageDescriptor {
	return md_MsgSyncSuspiciousTransactions
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_MsgSyncSuspiciousTransactions) Type() protoreflect.MessageType {
	return _fastReflection_MsgSyncSuspiciousTransactions_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_MsgSyncSuspiciousTransactions) New() protoreflect.Message {
	return new(fastReflection_MsgSyncSuspiciousTransactions)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_MsgSyncSuspiciousTransactions) Interface() protoreflect.ProtoMessage {
	return (*MsgSyncSuspiciousTransactions)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_MsgSyncSuspiciousTransactions) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.Clear_ != false {
		value := protoreflect.ValueOfBool(x.Clear_)
		if !f(fd_MsgSyncSuspiciousTransactions_clear, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_MsgSyncSuspiciousTransactions) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "qadena.qadena.MsgSyncSuspiciousTransactions.clear":
		return x.Clear_ != false
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: qadena.qadena.MsgSyncSuspiciousTransactions"))
		}
		panic(fmt.Errorf("message qadena.qadena.MsgSyncSuspiciousTransactions does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgSyncSuspiciousTransactions) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "qadena.qadena.MsgSyncSuspiciousTransactions.clear":
		x.Clear_ = false
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: qadena.qadena.MsgSyncSuspiciousTransactions"))
		}
		panic(fmt.Errorf("message qadena.qadena.MsgSyncSuspiciousTransactions does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_MsgSyncSuspiciousTransactions) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "qadena.qadena.MsgSyncSuspiciousTransactions.clear":
		value := x.Clear_
		return protoreflect.ValueOfBool(value)
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: qadena.qadena.MsgSyncSuspiciousTransactions"))
		}
		panic(fmt.Errorf("message qadena.qadena.MsgSyncSuspiciousTransactions does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgSyncSuspiciousTransactions) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "qadena.qadena.MsgSyncSuspiciousTransactions.clear":
		x.Clear_ = value.Bool()
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: qadena.qadena.MsgSyncSuspiciousTransactions"))
		}
		panic(fmt.Errorf("message qadena.qadena.MsgSyncSuspiciousTransactions does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgSyncSuspiciousTransactions) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "qadena.qadena.MsgSyncSuspiciousTransactions.clear":
		panic(fmt.Errorf("field clear of message qadena.qadena.MsgSyncSuspiciousTransactions is not mutable"))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: qadena.qadena.MsgSyncSuspiciousTransactions"))
		}
		panic(fmt.Errorf("message qadena.qadena.MsgSyncSuspiciousTransactions does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_MsgSyncSuspiciousTransactions) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "qadena.qadena.MsgSyncSuspiciousTransactions.clear":
		return protoreflect.ValueOfBool(false)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: qadena.qadena.MsgSyncSuspiciousTransactions"))
		}
		panic(fmt.Errorf("message qadena.qadena.MsgSyncSuspiciousTransactions does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_MsgSyncSuspiciousTransactions) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in qadena.qadena.MsgSyncSuspiciousTransactions", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_MsgSyncSuspiciousTransactions) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgSyncSuspiciousTransactions) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_MsgSyncSuspiciousTransactions) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_MsgSyncSuspiciousTransactions) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*MsgSyncSuspiciousTransactions)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		if x.Clear_ {
			n += 2
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*MsgSyncSuspiciousTransactions)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if x.Clear_ {
			i--
			if x.Clear_ {
				dAtA[i] = 1
			} else {
				dAtA[i] = 0
			}
			i--
			dAtA[i] = 0x8
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*MsgSyncSuspiciousTransactions)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: MsgSyncSuspiciousTransactions: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: MsgSyncSuspiciousTransactions: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Clear_", wireType)
				}
				var v int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					v |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				x.Clear_ = bool(v != 0)
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var _ protoreflect.List = (*_SyncSuspiciousTransactionsReply_1_list)(nil)

type _SyncSuspiciousTransactionsReply_1_list struct {
	list *[]*SuspiciousTransaction
}

func (x *_SyncSuspiciousTransactionsReply_1_list) Len() int {
	if x.list == nil {
		return 0
	}
	return len(*x.list)
}

func (x *_SyncSuspiciousTransactionsReply_1_list) Get(i int) protoreflect.Value {
	return protoreflect.ValueOfMessage((*x.list)[i].ProtoReflect())
}

func (x *_SyncSuspiciousTransactionsReply_1_list) Set(i int, value protoreflect.Value) {
	valueUnwrapped := value.Message()
	concreteValue := valueUnwrapped.Interface().(*SuspiciousTransaction)
	(*x.list)[i] = concreteValue
}

func (x *_SyncSuspiciousTransactionsReply_1_list) Append(value protoreflect.Value) {
	valueUnwrapped := value.Message()
	concreteValue := valueUnwrapped.Interface().(*SuspiciousTransaction)
	*x.list = append(*x.list, concreteValue)
}

func (x *_SyncSuspiciousTransactionsReply_1_list) AppendMutable() protoreflect.Value {
	v := new(SuspiciousTransaction)
	*x.list = append(*x.list, v)
	return protoreflect.ValueOfMessage(v.ProtoReflect())
}

func (x *_SyncSuspiciousTransactionsReply_1_list) Truncate(n int) {
	for i := n; i < len(*x.list); i++ {
		(*x.list)[i] = nil
	}
	*x.list = (*x.list)[:n]
}

func (x *_SyncSuspiciousTransactionsReply_1_list) NewElement() protoreflect.Value {
	v := new(SuspiciousTransaction)
	return protoreflect.ValueOfMessage(v.ProtoReflect())
}

func (x *_SyncSuspiciousTransactionsReply_1_list) IsValid() bool {
	return x.list != nil
}

var (
	md_SyncSuspiciousTransactionsReply                        protoreflect.MessageDescriptor
	fd_SyncSuspiciousTransactionsReply_suspiciousTransactions protoreflect.FieldDescriptor
)

func init() {
	file_qadena_qadena_enclave_proto_init()
	md_SyncSuspiciousTransactionsReply = File_qadena_qadena_enclave_proto.Messages().ByName("SyncSuspiciousTransactionsReply")
	fd_SyncSuspiciousTransactionsReply_suspiciousTransactions = md_SyncSuspiciousTransactionsReply.Fields().ByName("suspiciousTransactions")
}

var _ protoreflect.Message = (*fastReflection_SyncSuspiciousTransactionsReply)(nil)

type fastReflection_SyncSuspiciousTransactionsReply SyncSuspiciousTransactionsReply

func (x *SyncSuspiciousTransactionsReply) ProtoReflect() protoreflect.Message {
	return (*fastReflection_SyncSuspiciousTransactionsReply)(x)
}

func (x *SyncSuspiciousTransactionsReply) slowProtoReflect() protoreflect.Message {
	mi := &file_qadena_qadena_enclave_proto_msgTypes[38]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_SyncSuspiciousTransactionsReply_messageType fastReflection_SyncSuspiciousTransactionsReply_messageType
var _ protoreflect.MessageType = fastReflection_SyncSuspiciousTransactionsReply_messageType{}

type fastReflection_SyncSuspiciousTransactionsReply_messageType struct{}

func (x fastReflection_SyncSuspiciousTransactionsReply_messageType) Zero() protoreflect.Message {
	return (*fastReflection_SyncSuspiciousTransactionsReply)(nil)
}
func (x fastReflection_SyncSuspiciousTransactionsReply_messageType) New() protoreflect.Message {
	return new(fastReflection_SyncSuspiciousTransactionsReply)
}
func (x fastReflection_SyncSuspiciousTransactionsReply_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_SyncSuspiciousTransactionsReply
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_SyncSuspiciousTransactionsReply) Descriptor() protoreflect.MessageDescriptor {
	return md_SyncSuspiciousTransactionsReply
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_SyncSuspiciousTransactionsReply) Type() protoreflect.MessageType {
	return _fastReflection_SyncSuspiciousTransactionsReply_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_SyncSuspiciousTransactionsReply) New() protoreflect.Message {
	return new(fastReflection_SyncSuspiciousTransactionsReply)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_SyncSuspiciousTransactionsReply) Interface() protoreflect.ProtoMessage {
	return (*SyncSuspiciousTransactionsReply)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_SyncSuspiciousTransactionsReply) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if len(x.SuspiciousTransactions) != 0 {
		value := protoreflect.ValueOfList(&_SyncSuspiciousTransactionsReply_1_list{list: &x.SuspiciousTransactions})
		if !f(fd_SyncSuspiciousTransactionsReply_suspiciousTransactions, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_SyncSuspiciousTransactionsReply) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "qadena.qadena.SyncSuspiciousTransactionsReply.suspiciousTransactions":
		return len(x.SuspiciousTransactions) != 0
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: qadena.qadena.SyncSuspiciousTransactionsReply"))
		}
		panic(fmt.Errorf("message qadena.qadena.SyncSuspiciousTransactionsReply does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_SyncSuspiciousTransactionsReply) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "qadena.qadena.SyncSuspiciousTransactionsReply.suspiciousTransactions":
		x.SuspiciousTransactions = nil
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: qadena.qadena.SyncSuspiciousTransactionsReply"))
		}
		panic(fmt.Errorf("message qadena.qadena.SyncSuspiciousTransactionsReply does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_SyncSuspiciousTransactionsReply) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "qadena.qadena.SyncSuspiciousTransactionsReply.suspiciousTransactions":
		if len(x.SuspiciousTransactions) == 0 {
			return protoreflect.ValueOfList(&_SyncSuspiciousTransactionsReply_1_list{})
		}
		listValue := &_SyncSuspiciousTransactionsReply_1_list{list: &x.SuspiciousTransactions}
		return protoreflect.ValueOfList(listValue)
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: qadena.qadena.SyncSuspiciousTransactionsReply"))
		}
		panic(fmt.Errorf("message qadena.qadena.SyncSuspiciousTransactionsReply does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_SyncSuspiciousTransactionsReply) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "qadena.qadena.SyncSuspiciousTransactionsReply.suspiciousTransactions":
		lv := value.List()
		clv := lv.(*_SyncSuspiciousTransactionsReply_1_list)
		x.SuspiciousTransactions = *clv.list
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: qadena.qadena.SyncSuspiciousTransactionsReply"))
		}
		panic(fmt.Errorf("message qadena.qadena.SyncSuspiciousTransactionsReply does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_SyncSuspiciousTransactionsReply) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "qadena.qadena.SyncSuspiciousTransactionsReply.suspiciousTransactions":
		if x.SuspiciousTransactions == nil {
			x.SuspiciousTransactions = []*SuspiciousTransaction{}
		}
		value := &_SyncSuspiciousTransactionsReply_1_list{list: &x.SuspiciousTransactions}
		return protoreflect.ValueOfList(value)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: qadena.qadena.SyncSuspiciousTransactionsReply"))
		}
		panic(fmt.Errorf("message qadena.qadena.SyncSuspiciousTransactionsReply does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_SyncSuspiciousTransactionsReply) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "qadena.qadena.SyncSuspiciousTransactionsReply.suspiciousTransactions":
		list := []*SuspiciousTransaction{}
		return protoreflect.ValueOfList(&_SyncSuspiciousTransactionsReply_1_list{list: &list})
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: qadena.qadena.SyncSuspiciousTransactionsReply"))
		}
		panic(fmt.Errorf("message qadena.qadena.SyncSuspiciousTransactionsReply does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_SyncSuspiciousTransactionsReply) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in qadena.qadena.SyncSuspiciousTransactionsReply", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_SyncSuspiciousTransactionsReply) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_SyncSuspiciousTransactionsReply) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_SyncSuspiciousTransactionsReply) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_SyncSuspiciousTransactionsReply) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*SyncSuspiciousTransactionsReply)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		if len(x.SuspiciousTransactions) > 0 {
			for _, e := range x.SuspiciousTransactions {
				l = options.Size(e)
				n += 1 + l + runtime.Sov(uint64(l))
			}
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*SyncSuspiciousTransactionsReply)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if len(x.SuspiciousTransactions) > 0 {
			for iNdEx := len(x.SuspiciousTransactions) - 1; iNdEx >= 0; iNdEx-- {
				encoded, err := options.Marshal(x.SuspiciousTransactions[iNdEx])
				if err != nil {
					return protoiface.MarshalOutput{
						NoUnkeyedLiterals: input.NoUnkeyedLiterals,
						Buf:               input.Buf,
					}, err
				}
				i -= len(encoded)
				copy(dAtA[i:], encoded)
				i = runtime.EncodeVarint(dAtA, i, uint64(len(encoded)))
				i--
				dAtA[i] = 0xa
			}
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*SyncSuspiciousTransactionsReply)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: SyncSuspiciousTransactionsReply: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: SyncSuspiciousTransactionsReply: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field SuspiciousTransactions", wireType)
				}
				var msglen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					msglen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if msglen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + msglen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.SuspiciousTransactions = append(x.SuspiciousTransactions, &SuspiciousTransaction{})
				if err := options.Unmarshal(dAtA[iNdEx:postIndex], x.SuspiciousTransactions[len(x.SuspiciousTransactions)-1]); err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				iNdEx = postIndex
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var (
	md_InitEnclaveReply        protoreflect.MessageDescriptor
	fd_InitEnclaveReply_status protoreflect.FieldDescriptor
)

func init() {
	file_qadena_qadena_enclave_proto_init()
	md_InitEnclaveReply = File_qadena_qadena_enclave_proto.Messages().ByName("InitEnclaveReply")
	fd_InitEnclaveReply_status = md_InitEnclaveReply.Fields().ByName("status")
}

var _ protoreflect.Message = (*fastReflection_InitEnclaveReply)(nil)

type fastReflection_InitEnclaveReply InitEnclaveReply

func (x *InitEnclaveReply) ProtoReflect() protoreflect.Message {
	return (*fastReflection_InitEnclaveReply)(x)
}

func (x *InitEnclaveReply) slowProtoReflect() protoreflect.Message {
	mi := &file_qadena_qadena_enclave_proto_msgTypes[39]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_InitEnclaveReply_messageType fastReflection_InitEnclaveReply_messageType
var _ protoreflect.MessageType = fastReflection_InitEnclaveReply_messageType{}

type fastReflection_InitEnclaveReply_messageType struct{}

func (x fastReflection_InitEnclaveReply_messageType) Zero() protoreflect.Message {
	return (*fastReflection_InitEnclaveReply)(nil)
}
func (x fastReflection_InitEnclaveReply_messageType) New() protoreflect.Message {
	return new(fastReflection_InitEnclaveReply)
}
func (x fastReflection_InitEnclaveReply_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_InitEnclaveReply
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_InitEnclaveReply) Descriptor() protoreflect.MessageDescriptor {
	return md_InitEnclaveReply
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_InitEnclaveReply) Type() protoreflect.MessageType {
	return _fastReflection_InitEnclaveReply_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_InitEnclaveReply) New() protoreflect.Message {
	return new(fastReflection_InitEnclaveReply)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_InitEnclaveReply) Interface() protoreflect.ProtoMessage {
	return (*InitEnclaveReply)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_InitEnclaveReply) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.Status != false {
		value := protoreflect.ValueOfBool(x.Status)
		if !f(fd_InitEnclaveReply_status, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_InitEnclaveReply) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "qadena.qadena.InitEnclaveReply.status":
		return x.Status != false
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: qadena.qadena.InitEnclaveReply"))
		}
		panic(fmt.Errorf("message qadena.qadena.InitEnclaveReply does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_InitEnclaveReply) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "qadena.qadena.InitEnclaveReply.status":
		x.Status = false
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: qadena.qadena.InitEnclaveReply"))
		}
		panic(fmt.Errorf("message qadena.qadena.InitEnclaveReply does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_InitEnclaveReply) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "qadena.qadena.InitEnclaveReply.status":
		value := x.Status
		return protoreflect.ValueOfBool(value)
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: qadena.qadena.InitEnclaveReply"))
		}
		panic(fmt.Errorf("message qadena.qadena.InitEnclaveReply does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_InitEnclaveReply) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "qadena.qadena.InitEnclaveReply.status":
		x.Status = value.Bool()
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: qadena.qadena.InitEnclaveReply"))
		}
		panic(fmt.Errorf("message qadena.qadena.InitEnclaveReply does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_InitEnclaveReply) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "qadena.qadena.InitEnclaveReply.status":
		panic(fmt.Errorf("field status of message qadena.qadena.InitEnclaveReply is not mutable"))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: qadena.qadena.InitEnclaveReply"))
		}
		panic(fmt.Errorf("message qadena.qadena.InitEnclaveReply does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_InitEnclaveReply) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "qadena.qadena.InitEnclaveReply.status":
		return protoreflect.ValueOfBool(false)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: qadena.qadena.InitEnclaveReply"))
		}
		panic(fmt.Errorf("message qadena.qadena.InitEnclaveReply does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_InitEnclaveReply) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in qadena.qadena.InitEnclaveReply", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_InitEnclaveReply) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_InitEnclaveReply) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_InitEnclaveReply) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_InitEnclaveReply) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*InitEnclaveReply)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		if x.Status {
			n += 2
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*InitEnclaveReply)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if x.Status {
			i--
			if x.Status {
				dAtA[i] = 1
			} else {
				dAtA[i] = 0
			}
			i--
			dAtA[i] = 0x8
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*InitEnclaveReply)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: InitEnclaveReply: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: InitEnclaveReply: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Status", wireType)
				}
				var v int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					v |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				x.Status = bool(v != 0)
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var (
	md_UpdateHeightReply        protoreflect.MessageDescriptor
	fd_UpdateHeightReply_status protoreflect.FieldDescriptor
)

func init() {
	file_qadena_qadena_enclave_proto_init()
	md_UpdateHeightReply = File_qadena_qadena_enclave_proto.Messages().ByName("UpdateHeightReply")
	fd_UpdateHeightReply_status = md_UpdateHeightReply.Fields().ByName("status")
}

var _ protoreflect.Message = (*fastReflection_UpdateHeightReply)(nil)

type fastReflection_UpdateHeightReply UpdateHeightReply

func (x *UpdateHeightReply) ProtoReflect() protoreflect.Message {
	return (*fastReflection_UpdateHeightReply)(x)
}

func (x *UpdateHeightReply) slowProtoReflect() protoreflect.Message {
	mi := &file_qadena_qadena_enclave_proto_msgTypes[40]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_UpdateHeightReply_messageType fastReflection_UpdateHeightReply_messageType
var _ protoreflect.MessageType = fastReflection_UpdateHeightReply_messageType{}

type fastReflection_UpdateHeightReply_messageType struct{}

func (x fastReflection_UpdateHeightReply_messageType) Zero() protoreflect.Message {
	return (*fastReflection_UpdateHeightReply)(nil)
}
func (x fastReflection_UpdateHeightReply_messageType) New() protoreflect.Message {
	return new(fastReflection_UpdateHeightReply)
}
func (x fastReflection_UpdateHeightReply_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_UpdateHeightReply
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_UpdateHeightReply) Descriptor() protoreflect.MessageDescriptor {
	return md_UpdateHeightReply
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_UpdateHeightReply) Type() protoreflect.MessageType {
	return _fastReflection_UpdateHeightReply_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_UpdateHeightReply) New() protoreflect.Message {
	return new(fastReflection_UpdateHeightReply)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_UpdateHeightReply) Interface() protoreflect.ProtoMessage {
	return (*UpdateHeightReply)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_UpdateHeightReply) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.Status != false {
		value := protoreflect.ValueOfBool(x.Status)
		if !f(fd_UpdateHeightReply_status, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_UpdateHeightReply) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "qadena.qadena.UpdateHeightReply.status":
		return x.Status != false
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: qadena.qadena.UpdateHeightReply"))
		}
		panic(fmt.Errorf("message qadena.qadena.UpdateHeightReply does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_UpdateHeightReply) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "qadena.qadena.UpdateHeightReply.status":
		x.Status = false
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: qadena.qadena.UpdateHeightReply"))
		}
		panic(fmt.Errorf("message qadena.qadena.UpdateHeightReply does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_UpdateHeightReply) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "qadena.qadena.UpdateHeightReply.status":
		value := x.Status
		return protoreflect.ValueOfBool(value)
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: qadena.qadena.UpdateHeightReply"))
		}
		panic(fmt.Errorf("message qadena.qadena.UpdateHeightReply does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_UpdateHeightReply) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "qadena.qadena.UpdateHeightReply.status":
		x.Status = value.Bool()
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: qadena.qadena.UpdateHeightReply"))
		}
		panic(fmt.Errorf("message qadena.qadena.UpdateHeightReply does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_UpdateHeightReply) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "qadena.qadena.UpdateHeightReply.status":
		panic(fmt.Errorf("field status of message qadena.qadena.UpdateHeightReply is not mutable"))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: qadena.qadena.UpdateHeightReply"))
		}
		panic(fmt.Errorf("message qadena.qadena.UpdateHeightReply does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_UpdateHeightReply) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "qadena.qadena.UpdateHeightReply.status":
		return protoreflect.ValueOfBool(false)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: qadena.qadena.UpdateHeightReply"))
		}
		panic(fmt.Errorf("message qadena.qadena.UpdateHeightReply does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_UpdateHeightReply) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in qadena.qadena.UpdateHeightReply", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_UpdateHeightReply) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_UpdateHeightReply) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_UpdateHeightReply) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_UpdateHeightReply) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*UpdateHeightReply)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		if x.Status {
			n += 2
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*UpdateHeightReply)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if x.Status {
			i--
			if x.Status {
				dAtA[i] = 1
			} else {
				dAtA[i] = 0
			}
			i--
			dAtA[i] = 0x8
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*UpdateHeightReply)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: UpdateHeightReply: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: UpdateHeightReply: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Status", wireType)
				}
				var v int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					v |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				x.Status = bool(v != 0)
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var (
	md_MsgTransactionComplete         protoreflect.MessageDescriptor
	fd_MsgTransactionComplete_success protoreflect.FieldDescriptor
)

func init() {
	file_qadena_qadena_enclave_proto_init()
	md_MsgTransactionComplete = File_qadena_qadena_enclave_proto.Messages().ByName("MsgTransactionComplete")
	fd_MsgTransactionComplete_success = md_MsgTransactionComplete.Fields().ByName("success")
}

var _ protoreflect.Message = (*fastReflection_MsgTransactionComplete)(nil)

type fastReflection_MsgTransactionComplete MsgTransactionComplete

func (x *MsgTransactionComplete) ProtoReflect() protoreflect.Message {
	return (*fastReflection_MsgTransactionComplete)(x)
}

func (x *MsgTransactionComplete) slowProtoReflect() protoreflect.Message {
	mi := &file_qadena_qadena_enclave_proto_msgTypes[41]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_MsgTransactionComplete_messageType fastReflection_MsgTransactionComplete_messageType
var _ protoreflect.MessageType = fastReflection_MsgTransactionComplete_messageType{}

type fastReflection_MsgTransactionComplete_messageType struct{}

func (x fastReflection_MsgTransactionComplete_messageType) Zero() protoreflect.Message {
	return (*fastReflection_MsgTransactionComplete)(nil)
}
func (x fastReflection_MsgTransactionComplete_messageType) New() protoreflect.Message {
	return new(fastReflection_MsgTransactionComplete)
}
func (x fastReflection_MsgTransactionComplete_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_MsgTransactionComplete
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_MsgTransactionComplete) Descriptor() protoreflect.MessageDescriptor {
	return md_MsgTransactionComplete
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_MsgTransactionComplete) Type() protoreflect.MessageType {
	return _fastReflection_MsgTransactionComplete_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_MsgTransactionComplete) New() protoreflect.Message {
	return new(fastReflection_MsgTransactionComplete)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_MsgTransactionComplete) Interface() protoreflect.ProtoMessage {
	return (*MsgTransactionComplete)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_MsgTransactionComplete) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.Success != false {
		value := protoreflect.ValueOfBool(x.Success)
		if !f(fd_MsgTransactionComplete_success, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_MsgTransactionComplete) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "qadena.qadena.MsgTransactionComplete.success":
		return x.Success != false
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: qadena.qadena.MsgTransactionComplete"))
		}
		panic(fmt.Errorf("message qadena.qadena.MsgTransactionComplete does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgTransactionComplete) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "qadena.qadena.MsgTransactionComplete.success":
		x.Success = false
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: qadena.qadena.MsgTransactionComplete"))
		}
		panic(fmt.Errorf("message qadena.qadena.MsgTransactionComplete does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_MsgTransactionComplete) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "qadena.qadena.MsgTransactionComplete.success":
		value := x.Success
		return protoreflect.ValueOfBool(value)
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: qadena.qadena.MsgTransactionComplete"))
		}
		panic(fmt.Errorf("message qadena.qadena.MsgTransactionComplete does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgTransactionComplete) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "qadena.qadena.MsgTransactionComplete.success":
		x.Success = value.Bool()
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: qadena.qadena.MsgTransactionComplete"))
		}
		panic(fmt.Errorf("message qadena.qadena.MsgTransactionComplete does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgTransactionComplete) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "qadena.qadena.MsgTransactionComplete.success":
		panic(fmt.Errorf("field success of message qadena.qadena.MsgTransactionComplete is not mutable"))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: qadena.qadena.MsgTransactionComplete"))
		}
		panic(fmt.Errorf("message qadena.qadena.MsgTransactionComplete does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_MsgTransactionComplete) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "qadena.qadena.MsgTransactionComplete.success":
		return protoreflect.ValueOfBool(false)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: qadena.qadena.MsgTransactionComplete"))
		}
		panic(fmt.Errorf("message qadena.qadena.MsgTransactionComplete does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_MsgTransactionComplete) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in qadena.qadena.MsgTransactionComplete", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_MsgTransactionComplete) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgTransactionComplete) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_MsgTransactionComplete) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_MsgTransactionComplete) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*MsgTransactionComplete)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		if x.Success {
			n += 2
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*MsgTransactionComplete)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if x.Success {
			i--
			if x.Success {
				dAtA[i] = 1
			} else {
				dAtA[i] = 0
			}
			i--
			dAtA[i] = 0x8
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*MsgTransactionComplete)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: MsgTransactionComplete: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: MsgTransactionComplete: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Success", wireType)
				}
				var v int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					v |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				x.Success = bool(v != 0)
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var (
	md_TransactionCompleteReply        protoreflect.MessageDescriptor
	fd_TransactionCompleteReply_status protoreflect.FieldDescriptor
)

func init() {
	file_qadena_qadena_enclave_proto_init()
	md_TransactionCompleteReply = File_qadena_qadena_enclave_proto.Messages().ByName("TransactionCompleteReply")
	fd_TransactionCompleteReply_status = md_TransactionCompleteReply.Fields().ByName("status")
}

var _ protoreflect.Message = (*fastReflection_TransactionCompleteReply)(nil)

type fastReflection_TransactionCompleteReply TransactionCompleteReply

func (x *TransactionCompleteReply) ProtoReflect() protoreflect.Message {
	return (*fastReflection_TransactionCompleteReply)(x)
}

func (x *TransactionCompleteReply) slowProtoReflect() protoreflect.Message {
	mi := &file_qadena_qadena_enclave_proto_msgTypes[42]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_TransactionCompleteReply_messageType fastReflection_TransactionCompleteReply_messageType
var _ protoreflect.MessageType = fastReflection_TransactionCompleteReply_messageType{}

type fastReflection_TransactionCompleteReply_messageType struct{}

func (x fastReflection_TransactionCompleteReply_messageType) Zero() protoreflect.Message {
	return (*fastReflection_TransactionCompleteReply)(nil)
}
func (x fastReflection_TransactionCompleteReply_messageType) New() protoreflect.Message {
	return new(fastReflection_TransactionCompleteReply)
}
func (x fastReflection_TransactionCompleteReply_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_TransactionCompleteReply
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_TransactionCompleteReply) Descriptor() protoreflect.MessageDescriptor {
	return md_TransactionCompleteReply
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_TransactionCompleteReply) Type() protoreflect.MessageType {
	return _fastReflection_TransactionCompleteReply_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_TransactionCompleteReply) New() protoreflect.Message {
	return new(fastReflection_TransactionCompleteReply)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_TransactionCompleteReply) Interface() protoreflect.ProtoMessage {
	return (*TransactionCompleteReply)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_TransactionCompleteReply) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.Status != false {
		value := protoreflect.ValueOfBool(x.Status)
		if !f(fd_TransactionCompleteReply_status, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_TransactionCompleteReply) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "qadena.qadena.TransactionCompleteReply.status":
		return x.Status != false
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: qadena.qadena.TransactionCompleteReply"))
		}
		panic(fmt.Errorf("message qadena.qadena.TransactionCompleteReply does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_TransactionCompleteReply) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "qadena.qadena.TransactionCompleteReply.status":
		x.Status = false
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: qadena.qadena.TransactionCompleteReply"))
		}
		panic(fmt.Errorf("message qadena.qadena.TransactionCompleteReply does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_TransactionCompleteReply) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "qadena.qadena.TransactionCompleteReply.status":
		value := x.Status
		return protoreflect.ValueOfBool(value)
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: qadena.qadena.TransactionCompleteReply"))
		}
		panic(fmt.Errorf("message qadena.qadena.TransactionCompleteReply does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_TransactionCompleteReply) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "qadena.qadena.TransactionCompleteReply.status":
		x.Status = value.Bool()
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: qadena.qadena.TransactionCompleteReply"))
		}
		panic(fmt.Errorf("message qadena.qadena.TransactionCompleteReply does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_TransactionCompleteReply) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "qadena.qadena.TransactionCompleteReply.status":
		panic(fmt.Errorf("field status of message qadena.qadena.TransactionCompleteReply is not mutable"))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: qadena.qadena.TransactionCompleteReply"))
		}
		panic(fmt.Errorf("message qadena.qadena.TransactionCompleteReply does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_TransactionCompleteReply) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "qadena.qadena.TransactionCompleteReply.status":
		return protoreflect.ValueOfBool(false)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: qadena.qadena.TransactionCompleteReply"))
		}
		panic(fmt.Errorf("message qadena.qadena.TransactionCompleteReply does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_TransactionCompleteReply) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in qadena.qadena.TransactionCompleteReply", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_TransactionCompleteReply) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_TransactionCompleteReply) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_TransactionCompleteReply) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_TransactionCompleteReply) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*TransactionCompleteReply)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		if x.Status {
			n += 2
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*TransactionCompleteReply)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if x.Status {
			i--
			if x.Status {
				dAtA[i] = 1
			} else {
				dAtA[i] = 0
			}
			i--
			dAtA[i] = 0x8
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*TransactionCompleteReply)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: TransactionCompleteReply: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: TransactionCompleteReply: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Status", wireType)
				}
				var v int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					v |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				x.Status = bool(v != 0)
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var (
	md_SyncEnclaveReply        protoreflect.MessageDescriptor
	fd_SyncEnclaveReply_status protoreflect.FieldDescriptor
)

func init() {
	file_qadena_qadena_enclave_proto_init()
	md_SyncEnclaveReply = File_qadena_qadena_enclave_proto.Messages().ByName("SyncEnclaveReply")
	fd_SyncEnclaveReply_status = md_SyncEnclaveReply.Fields().ByName("status")
}

var _ protoreflect.Message = (*fastReflection_SyncEnclaveReply)(nil)

type fastReflection_SyncEnclaveReply SyncEnclaveReply

func (x *SyncEnclaveReply) ProtoReflect() protoreflect.Message {
	return (*fastReflection_SyncEnclaveReply)(x)
}

func (x *SyncEnclaveReply) slowProtoReflect() protoreflect.Message {
	mi := &file_qadena_qadena_enclave_proto_msgTypes[43]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_SyncEnclaveReply_messageType fastReflection_SyncEnclaveReply_messageType
var _ protoreflect.MessageType = fastReflection_SyncEnclaveReply_messageType{}

type fastReflection_SyncEnclaveReply_messageType struct{}

func (x fastReflection_SyncEnclaveReply_messageType) Zero() protoreflect.Message {
	return (*fastReflection_SyncEnclaveReply)(nil)
}
func (x fastReflection_SyncEnclaveReply_messageType) New() protoreflect.Message {
	return new(fastReflection_SyncEnclaveReply)
}
func (x fastReflection_SyncEnclaveReply_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_SyncEnclaveReply
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_SyncEnclaveReply) Descriptor() protoreflect.MessageDescriptor {
	return md_SyncEnclaveReply
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_SyncEnclaveReply) Type() protoreflect.MessageType {
	return _fastReflection_SyncEnclaveReply_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_SyncEnclaveReply) New() protoreflect.Message {
	return new(fastReflection_SyncEnclaveReply)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_SyncEnclaveReply) Interface() protoreflect.ProtoMessage {
	return (*SyncEnclaveReply)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_SyncEnclaveReply) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.Status != false {
		value := protoreflect.ValueOfBool(x.Status)
		if !f(fd_SyncEnclaveReply_status, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_SyncEnclaveReply) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "qadena.qadena.SyncEnclaveReply.status":
		return x.Status != false
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: qadena.qadena.SyncEnclaveReply"))
		}
		panic(fmt.Errorf("message qadena.qadena.SyncEnclaveReply does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_SyncEnclaveReply) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "qadena.qadena.SyncEnclaveReply.status":
		x.Status = false
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: qadena.qadena.SyncEnclaveReply"))
		}
		panic(fmt.Errorf("message qadena.qadena.SyncEnclaveReply does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_SyncEnclaveReply) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "qadena.qadena.SyncEnclaveReply.status":
		value := x.Status
		return protoreflect.ValueOfBool(value)
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: qadena.qadena.SyncEnclaveReply"))
		}
		panic(fmt.Errorf("message qadena.qadena.SyncEnclaveReply does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_SyncEnclaveReply) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "qadena.qadena.SyncEnclaveReply.status":
		x.Status = value.Bool()
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: qadena.qadena.SyncEnclaveReply"))
		}
		panic(fmt.Errorf("message qadena.qadena.SyncEnclaveReply does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_SyncEnclaveReply) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "qadena.qadena.SyncEnclaveReply.status":
		panic(fmt.Errorf("field status of message qadena.qadena.SyncEnclaveReply is not mutable"))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: qadena.qadena.SyncEnclaveReply"))
		}
		panic(fmt.Errorf("message qadena.qadena.SyncEnclaveReply does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_SyncEnclaveReply) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "qadena.qadena.SyncEnclaveReply.status":
		return protoreflect.ValueOfBool(false)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: qadena.qadena.SyncEnclaveReply"))
		}
		panic(fmt.Errorf("message qadena.qadena.SyncEnclaveReply does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_SyncEnclaveReply) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in qadena.qadena.SyncEnclaveReply", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_SyncEnclaveReply) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_SyncEnclaveReply) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_SyncEnclaveReply) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_SyncEnclaveReply) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*SyncEnclaveReply)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		if x.Status {
			n += 2
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*SyncEnclaveReply)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if x.Status {
			i--
			if x.Status {
				dAtA[i] = 1
			} else {
				dAtA[i] = 0
			}
			i--
			dAtA[i] = 0x8
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*SyncEnclaveReply)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: SyncEnclaveReply: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: SyncEnclaveReply: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Status", wireType)
				}
				var v int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					v |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				x.Status = bool(v != 0)
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var (
	md_AddAsValidatorReply        protoreflect.MessageDescriptor
	fd_AddAsValidatorReply_status protoreflect.FieldDescriptor
)

func init() {
	file_qadena_qadena_enclave_proto_init()
	md_AddAsValidatorReply = File_qadena_qadena_enclave_proto.Messages().ByName("AddAsValidatorReply")
	fd_AddAsValidatorReply_status = md_AddAsValidatorReply.Fields().ByName("status")
}

var _ protoreflect.Message = (*fastReflection_AddAsValidatorReply)(nil)

type fastReflection_AddAsValidatorReply AddAsValidatorReply

func (x *AddAsValidatorReply) ProtoReflect() protoreflect.Message {
	return (*fastReflection_AddAsValidatorReply)(x)
}

func (x *AddAsValidatorReply) slowProtoReflect() protoreflect.Message {
	mi := &file_qadena_qadena_enclave_proto_msgTypes[44]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_AddAsValidatorReply_messageType fastReflection_AddAsValidatorReply_messageType
var _ protoreflect.MessageType = fastReflection_AddAsValidatorReply_messageType{}

type fastReflection_AddAsValidatorReply_messageType struct{}

func (x fastReflection_AddAsValidatorReply_messageType) Zero() protoreflect.Message {
	return (*fastReflection_AddAsValidatorReply)(nil)
}
func (x fastReflection_AddAsValidatorReply_messageType) New() protoreflect.Message {
	return new(fastReflection_AddAsValidatorReply)
}
func (x fastReflection_AddAsValidatorReply_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_AddAsValidatorReply
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_AddAsValidatorReply) Descriptor() protoreflect.MessageDescriptor {
	return md_AddAsValidatorReply
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_AddAsValidatorReply) Type() protoreflect.MessageType {
	return _fastReflection_AddAsValidatorReply_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_AddAsValidatorReply) New() protoreflect.Message {
	return new(fastReflection_AddAsValidatorReply)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_AddAsValidatorReply) Interface() protoreflect.ProtoMessage {
	return (*AddAsValidatorReply)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_AddAsValidatorReply) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.Status != false {
		value := protoreflect.ValueOfBool(x.Status)
		if !f(fd_AddAsValidatorReply_status, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_AddAsValidatorReply) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "qadena.qadena.AddAsValidatorReply.status":
		return x.Status != false
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: qadena.qadena.AddAsValidatorReply"))
		}
		panic(fmt.Errorf("message qadena.qadena.AddAsValidatorReply does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_AddAsValidatorReply) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "qadena.qadena.AddAsValidatorReply.status":
		x.Status = false
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: qadena.qadena.AddAsValidatorReply"))
		}
		panic(fmt.Errorf("message qadena.qadena.AddAsValidatorReply does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_AddAsValidatorReply) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "qadena.qadena.AddAsValidatorReply.status":
		value := x.Status
		return protoreflect.ValueOfBool(value)
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: qadena.qadena.AddAsValidatorReply"))
		}
		panic(fmt.Errorf("message qadena.qadena.AddAsValidatorReply does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_AddAsValidatorReply) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "qadena.qadena.AddAsValidatorReply.status":
		x.Status = value.Bool()
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: qadena.qadena.AddAsValidatorReply"))
		}
		panic(fmt.Errorf("message qadena.qadena.AddAsValidatorReply does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_AddAsValidatorReply) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "qadena.qadena.AddAsValidatorReply.status":
		panic(fmt.Errorf("field status of message qadena.qadena.AddAsValidatorReply is not mutable"))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: qadena.qadena.AddAsValidatorReply"))
		}
		panic(fmt.Errorf("message qadena.qadena.AddAsValidatorReply does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_AddAsValidatorReply) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "qadena.qadena.AddAsValidatorReply.status":
		return protoreflect.ValueOfBool(false)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: qadena.qadena.AddAsValidatorReply"))
		}
		panic(fmt.Errorf("message qadena.qadena.AddAsValidatorReply does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_AddAsValidatorReply) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in qadena.qadena.AddAsValidatorReply", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_AddAsValidatorReply) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_AddAsValidatorReply) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_AddAsValidatorReply) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_AddAsValidatorReply) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*AddAsValidatorReply)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		if x.Status {
			n += 2
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*AddAsValidatorReply)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if x.Status {
			i--
			if x.Status {
				dAtA[i] = 1
			} else {
				dAtA[i] = 0
			}
			i--
			dAtA[i] = 0x8
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*AddAsValidatorReply)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: AddAsValidatorReply: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: AddAsValidatorReply: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Status", wireType)
				}
				var v int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					v |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				x.Status = bool(v != 0)
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var (
	md_SetWalletReply        protoreflect.MessageDescriptor
	fd_SetWalletReply_status protoreflect.FieldDescriptor
)

func init() {
	file_qadena_qadena_enclave_proto_init()
	md_SetWalletReply = File_qadena_qadena_enclave_proto.Messages().ByName("SetWalletReply")
	fd_SetWalletReply_status = md_SetWalletReply.Fields().ByName("status")
}

var _ protoreflect.Message = (*fastReflection_SetWalletReply)(nil)

type fastReflection_SetWalletReply SetWalletReply

func (x *SetWalletReply) ProtoReflect() protoreflect.Message {
	return (*fastReflection_SetWalletReply)(x)
}

func (x *SetWalletReply) slowProtoReflect() protoreflect.Message {
	mi := &file_qadena_qadena_enclave_proto_msgTypes[45]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_SetWalletReply_messageType fastReflection_SetWalletReply_messageType
var _ protoreflect.MessageType = fastReflection_SetWalletReply_messageType{}

type fastReflection_SetWalletReply_messageType struct{}

func (x fastReflection_SetWalletReply_messageType) Zero() protoreflect.Message {
	return (*fastReflection_SetWalletReply)(nil)
}
func (x fastReflection_SetWalletReply_messageType) New() protoreflect.Message {
	return new(fastReflection_SetWalletReply)
}
func (x fastReflection_SetWalletReply_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_SetWalletReply
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_SetWalletReply) Descriptor() protoreflect.MessageDescriptor {
	return md_SetWalletReply
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_SetWalletReply) Type() protoreflect.MessageType {
	return _fastReflection_SetWalletReply_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_SetWalletReply) New() protoreflect.Message {
	return new(fastReflection_SetWalletReply)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_SetWalletReply) Interface() protoreflect.ProtoMessage {
	return (*SetWalletReply)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_SetWalletReply) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.Status != false {
		value := protoreflect.ValueOfBool(x.Status)
		if !f(fd_SetWalletReply_status, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_SetWalletReply) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "qadena.qadena.SetWalletReply.status":
		return x.Status != false
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: qadena.qadena.SetWalletReply"))
		}
		panic(fmt.Errorf("message qadena.qadena.SetWalletReply does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_SetWalletReply) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "qadena.qadena.SetWalletReply.status":
		x.Status = false
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: qadena.qadena.SetWalletReply"))
		}
		panic(fmt.Errorf("message qadena.qadena.SetWalletReply does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_SetWalletReply) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "qadena.qadena.SetWalletReply.status":
		value := x.Status
		return protoreflect.ValueOfBool(value)
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: qadena.qadena.SetWalletReply"))
		}
		panic(fmt.Errorf("message qadena.qadena.SetWalletReply does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_SetWalletReply) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "qadena.qadena.SetWalletReply.status":
		x.Status = value.Bool()
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: qadena.qadena.SetWalletReply"))
		}
		panic(fmt.Errorf("message qadena.qadena.SetWalletReply does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_SetWalletReply) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "qadena.qadena.SetWalletReply.status":
		panic(fmt.Errorf("field status of message qadena.qadena.SetWalletReply is not mutable"))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: qadena.qadena.SetWalletReply"))
		}
		panic(fmt.Errorf("message qadena.qadena.SetWalletReply does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_SetWalletReply) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "qadena.qadena.SetWalletReply.status":
		return protoreflect.ValueOfBool(false)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: qadena.qadena.SetWalletReply"))
		}
		panic(fmt.Errorf("message qadena.qadena.SetWalletReply does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_SetWalletReply) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in qadena.qadena.SetWalletReply", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_SetWalletReply) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_SetWalletReply) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_SetWalletReply) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_SetWalletReply) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*SetWalletReply)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		if x.Status {
			n += 2
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*SetWalletReply)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if x.Status {
			i--
			if x.Status {
				dAtA[i] = 1
			} else {
				dAtA[i] = 0
			}
			i--
			dAtA[i] = 0x8
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*SetWalletReply)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: SetWalletReply: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: SetWalletReply: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Status", wireType)
				}
				var v int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					v |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				x.Status = bool(v != 0)
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var (
	md_SetEnclaveIdentityReply        protoreflect.MessageDescriptor
	fd_SetEnclaveIdentityReply_status protoreflect.FieldDescriptor
)

func init() {
	file_qadena_qadena_enclave_proto_init()
	md_SetEnclaveIdentityReply = File_qadena_qadena_enclave_proto.Messages().ByName("SetEnclaveIdentityReply")
	fd_SetEnclaveIdentityReply_status = md_SetEnclaveIdentityReply.Fields().ByName("status")
}

var _ protoreflect.Message = (*fastReflection_SetEnclaveIdentityReply)(nil)

type fastReflection_SetEnclaveIdentityReply SetEnclaveIdentityReply

func (x *SetEnclaveIdentityReply) ProtoReflect() protoreflect.Message {
	return (*fastReflection_SetEnclaveIdentityReply)(x)
}

func (x *SetEnclaveIdentityReply) slowProtoReflect() protoreflect.Message {
	mi := &file_qadena_qadena_enclave_proto_msgTypes[46]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_SetEnclaveIdentityReply_messageType fastReflection_SetEnclaveIdentityReply_messageType
var _ protoreflect.MessageType = fastReflection_SetEnclaveIdentityReply_messageType{}

type fastReflection_SetEnclaveIdentityReply_messageType struct{}

func (x fastReflection_SetEnclaveIdentityReply_messageType) Zero() protoreflect.Message {
	return (*fastReflection_SetEnclaveIdentityReply)(nil)
}
func (x fastReflection_SetEnclaveIdentityReply_messageType) New() protoreflect.Message {
	return new(fastReflection_SetEnclaveIdentityReply)
}
func (x fastReflection_SetEnclaveIdentityReply_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_SetEnclaveIdentityReply
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_SetEnclaveIdentityReply) Descriptor() protoreflect.MessageDescriptor {
	return md_SetEnclaveIdentityReply
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_SetEnclaveIdentityReply) Type() protoreflect.MessageType {
	return _fastReflection_SetEnclaveIdentityReply_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_SetEnclaveIdentityReply) New() protoreflect.Message {
	return new(fastReflection_SetEnclaveIdentityReply)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_SetEnclaveIdentityReply) Interface() protoreflect.ProtoMessage {
	return (*SetEnclaveIdentityReply)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_SetEnclaveIdentityReply) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.Status != false {
		value := protoreflect.ValueOfBool(x.Status)
		if !f(fd_SetEnclaveIdentityReply_status, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_SetEnclaveIdentityReply) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "qadena.qadena.SetEnclaveIdentityReply.status":
		return x.Status != false
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: qadena.qadena.SetEnclaveIdentityReply"))
		}
		panic(fmt.Errorf("message qadena.qadena.SetEnclaveIdentityReply does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_SetEnclaveIdentityReply) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "qadena.qadena.SetEnclaveIdentityReply.status":
		x.Status = false
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: qadena.qadena.SetEnclaveIdentityReply"))
		}
		panic(fmt.Errorf("message qadena.qadena.SetEnclaveIdentityReply does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_SetEnclaveIdentityReply) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "qadena.qadena.SetEnclaveIdentityReply.status":
		value := x.Status
		return protoreflect.ValueOfBool(value)
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: qadena.qadena.SetEnclaveIdentityReply"))
		}
		panic(fmt.Errorf("message qadena.qadena.SetEnclaveIdentityReply does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_SetEnclaveIdentityReply) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "qadena.qadena.SetEnclaveIdentityReply.status":
		x.Status = value.Bool()
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: qadena.qadena.SetEnclaveIdentityReply"))
		}
		panic(fmt.Errorf("message qadena.qadena.SetEnclaveIdentityReply does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_SetEnclaveIdentityReply) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "qadena.qadena.SetEnclaveIdentityReply.status":
		panic(fmt.Errorf("field status of message qadena.qadena.SetEnclaveIdentityReply is not mutable"))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: qadena.qadena.SetEnclaveIdentityReply"))
		}
		panic(fmt.Errorf("message qadena.qadena.SetEnclaveIdentityReply does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_SetEnclaveIdentityReply) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "qadena.qadena.SetEnclaveIdentityReply.status":
		return protoreflect.ValueOfBool(false)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: qadena.qadena.SetEnclaveIdentityReply"))
		}
		panic(fmt.Errorf("message qadena.qadena.SetEnclaveIdentityReply does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_SetEnclaveIdentityReply) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in qadena.qadena.SetEnclaveIdentityReply", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_SetEnclaveIdentityReply) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_SetEnclaveIdentityReply) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_SetEnclaveIdentityReply) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_SetEnclaveIdentityReply) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*SetEnclaveIdentityReply)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		if x.Status {
			n += 2
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*SetEnclaveIdentityReply)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if x.Status {
			i--
			if x.Status {
				dAtA[i] = 1
			} else {
				dAtA[i] = 0
			}
			i--
			dAtA[i] = 0x8
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*SetEnclaveIdentityReply)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: SetEnclaveIdentityReply: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: SetEnclaveIdentityReply: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Status", wireType)
				}
				var v int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					v |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				x.Status = bool(v != 0)
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var (
	md_PioneerUpdateEnclaveIdentity                 protoreflect.MessageDescriptor
	fd_PioneerUpdateEnclaveIdentity_enclaveIdentity protoreflect.FieldDescriptor
	fd_PioneerUpdateEnclaveIdentity_remoteReport    protoreflect.FieldDescriptor
)

func init() {
	file_qadena_qadena_enclave_proto_init()
	md_PioneerUpdateEnclaveIdentity = File_qadena_qadena_enclave_proto.Messages().ByName("PioneerUpdateEnclaveIdentity")
	fd_PioneerUpdateEnclaveIdentity_enclaveIdentity = md_PioneerUpdateEnclaveIdentity.Fields().ByName("enclaveIdentity")
	fd_PioneerUpdateEnclaveIdentity_remoteReport = md_PioneerUpdateEnclaveIdentity.Fields().ByName("remoteReport")
}

var _ protoreflect.Message = (*fastReflection_PioneerUpdateEnclaveIdentity)(nil)

type fastReflection_PioneerUpdateEnclaveIdentity PioneerUpdateEnclaveIdentity

func (x *PioneerUpdateEnclaveIdentity) ProtoReflect() protoreflect.Message {
	return (*fastReflection_PioneerUpdateEnclaveIdentity)(x)
}

func (x *PioneerUpdateEnclaveIdentity) slowProtoReflect() protoreflect.Message {
	mi := &file_qadena_qadena_enclave_proto_msgTypes[47]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_PioneerUpdateEnclaveIdentity_messageType fastReflection_PioneerUpdateEnclaveIdentity_messageType
var _ protoreflect.MessageType = fastReflection_PioneerUpdateEnclaveIdentity_messageType{}

type fastReflection_PioneerUpdateEnclaveIdentity_messageType struct{}

func (x fastReflection_PioneerUpdateEnclaveIdentity_messageType) Zero() protoreflect.Message {
	return (*fastReflection_PioneerUpdateEnclaveIdentity)(nil)
}
func (x fastReflection_PioneerUpdateEnclaveIdentity_messageType) New() protoreflect.Message {
	return new(fastReflection_PioneerUpdateEnclaveIdentity)
}
func (x fastReflection_PioneerUpdateEnclaveIdentity_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_PioneerUpdateEnclaveIdentity
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_PioneerUpdateEnclaveIdentity) Descriptor() protoreflect.MessageDescriptor {
	return md_PioneerUpdateEnclaveIdentity
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_PioneerUpdateEnclaveIdentity) Type() protoreflect.MessageType {
	return _fastReflection_PioneerUpdateEnclaveIdentity_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_PioneerUpdateEnclaveIdentity) New() protoreflect.Message {
	return new(fastReflection_PioneerUpdateEnclaveIdentity)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_PioneerUpdateEnclaveIdentity) Interface() protoreflect.ProtoMessage {
	return (*PioneerUpdateEnclaveIdentity)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_PioneerUpdateEnclaveIdentity) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.EnclaveIdentity != nil {
		value := protoreflect.ValueOfMessage(x.EnclaveIdentity.ProtoReflect())
		if !f(fd_PioneerUpdateEnclaveIdentity_enclaveIdentity, value) {
			return
		}
	}
	if len(x.RemoteReport) != 0 {
		value := protoreflect.ValueOfBytes(x.RemoteReport)
		if !f(fd_PioneerUpdateEnclaveIdentity_remoteReport, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_PioneerUpdateEnclaveIdentity) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "qadena.qadena.PioneerUpdateEnclaveIdentity.enclaveIdentity":
		return x.EnclaveIdentity != nil
	case "qadena.qadena.PioneerUpdateEnclaveIdentity.remoteReport":
		return len(x.RemoteReport) != 0
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: qadena.qadena.PioneerUpdateEnclaveIdentity"))
		}
		panic(fmt.Errorf("message qadena.qadena.PioneerUpdateEnclaveIdentity does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_PioneerUpdateEnclaveIdentity) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "qadena.qadena.PioneerUpdateEnclaveIdentity.enclaveIdentity":
		x.EnclaveIdentity = nil
	case "qadena.qadena.PioneerUpdateEnclaveIdentity.remoteReport":
		x.RemoteReport = nil
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: qadena.qadena.PioneerUpdateEnclaveIdentity"))
		}
		panic(fmt.Errorf("message qadena.qadena.PioneerUpdateEnclaveIdentity does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_PioneerUpdateEnclaveIdentity) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "qadena.qadena.PioneerUpdateEnclaveIdentity.enclaveIdentity":
		value := x.EnclaveIdentity
		return protoreflect.ValueOfMessage(value.ProtoReflect())
	case "qadena.qadena.PioneerUpdateEnclaveIdentity.remoteReport":
		value := x.RemoteReport
		return protoreflect.ValueOfBytes(value)
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: qadena.qadena.PioneerUpdateEnclaveIdentity"))
		}
		panic(fmt.Errorf("message qadena.qadena.PioneerUpdateEnclaveIdentity does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_PioneerUpdateEnclaveIdentity) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "qadena.qadena.PioneerUpdateEnclaveIdentity.enclaveIdentity":
		x.EnclaveIdentity = value.Message().Interface().(*EnclaveIdentity)
	case "qadena.qadena.PioneerUpdateEnclaveIdentity.remoteReport":
		x.RemoteReport = value.Bytes()
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: qadena.qadena.PioneerUpdateEnclaveIdentity"))
		}
		panic(fmt.Errorf("message qadena.qadena.PioneerUpdateEnclaveIdentity does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_PioneerUpdateEnclaveIdentity) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "qadena.qadena.PioneerUpdateEnclaveIdentity.enclaveIdentity":
		if x.EnclaveIdentity == nil {
			x.EnclaveIdentity = new(EnclaveIdentity)
		}
		return protoreflect.ValueOfMessage(x.EnclaveIdentity.ProtoReflect())
	case "qadena.qadena.PioneerUpdateEnclaveIdentity.remoteReport":
		panic(fmt.Errorf("field remoteReport of message qadena.qadena.PioneerUpdateEnclaveIdentity is not mutable"))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: qadena.qadena.PioneerUpdateEnclaveIdentity"))
		}
		panic(fmt.Errorf("message qadena.qadena.PioneerUpdateEnclaveIdentity does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_PioneerUpdateEnclaveIdentity) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "qadena.qadena.PioneerUpdateEnclaveIdentity.enclaveIdentity":
		m := new(EnclaveIdentity)
		return protoreflect.ValueOfMessage(m.ProtoReflect())
	case "qadena.qadena.PioneerUpdateEnclaveIdentity.remoteReport":
		return protoreflect.ValueOfBytes(nil)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: qadena.qadena.PioneerUpdateEnclaveIdentity"))
		}
		panic(fmt.Errorf("message qadena.qadena.PioneerUpdateEnclaveIdentity does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_PioneerUpdateEnclaveIdentity) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in qadena.qadena.PioneerUpdateEnclaveIdentity", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_PioneerUpdateEnclaveIdentity) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_PioneerUpdateEnclaveIdentity) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_PioneerUpdateEnclaveIdentity) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_PioneerUpdateEnclaveIdentity) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*PioneerUpdateEnclaveIdentity)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		if x.EnclaveIdentity != nil {
			l = options.Size(x.EnclaveIdentity)
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.RemoteReport)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*PioneerUpdateEnclaveIdentity)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if len(x.RemoteReport) > 0 {
			i -= len(x.RemoteReport)
			copy(dAtA[i:], x.RemoteReport)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.RemoteReport)))
			i--
			dAtA[i] = 0x12
		}
		if x.EnclaveIdentity != nil {
			encoded, err := options.Marshal(x.EnclaveIdentity)
			if err != nil {
				return protoiface.MarshalOutput{
					NoUnkeyedLiterals: input.NoUnkeyedLiterals,
					Buf:               input.Buf,
				}, err
			}
			i -= len(encoded)
			copy(dAtA[i:], encoded)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(encoded)))
			i--
			dAtA[i] = 0xa
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*PioneerUpdateEnclaveIdentity)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: PioneerUpdateEnclaveIdentity: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: PioneerUpdateEnclaveIdentity: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field EnclaveIdentity", wireType)
				}
				var msglen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					msglen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if msglen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + msglen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if x.EnclaveIdentity == nil {
					x.EnclaveIdentity = &EnclaveIdentity{}
				}
				if err := options.Unmarshal(dAtA[iNdEx:postIndex], x.EnclaveIdentity); err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				iNdEx = postIndex
			case 2:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field RemoteReport", wireType)
				}
				var byteLen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					byteLen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if byteLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + byteLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.RemoteReport = append(x.RemoteReport[:0], dAtA[iNdEx:postIndex]...)
				if x.RemoteReport == nil {
					x.RemoteReport = []byte{}
				}
				iNdEx = postIndex
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var (
	md_UpdateEnclaveIdentityReply        protoreflect.MessageDescriptor
	fd_UpdateEnclaveIdentityReply_status protoreflect.FieldDescriptor
)

func init() {
	file_qadena_qadena_enclave_proto_init()
	md_UpdateEnclaveIdentityReply = File_qadena_qadena_enclave_proto.Messages().ByName("UpdateEnclaveIdentityReply")
	fd_UpdateEnclaveIdentityReply_status = md_UpdateEnclaveIdentityReply.Fields().ByName("status")
}

var _ protoreflect.Message = (*fastReflection_UpdateEnclaveIdentityReply)(nil)

type fastReflection_UpdateEnclaveIdentityReply UpdateEnclaveIdentityReply

func (x *UpdateEnclaveIdentityReply) ProtoReflect() protoreflect.Message {
	return (*fastReflection_UpdateEnclaveIdentityReply)(x)
}

func (x *UpdateEnclaveIdentityReply) slowProtoReflect() protoreflect.Message {
	mi := &file_qadena_qadena_enclave_proto_msgTypes[48]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_UpdateEnclaveIdentityReply_messageType fastReflection_UpdateEnclaveIdentityReply_messageType
var _ protoreflect.MessageType = fastReflection_UpdateEnclaveIdentityReply_messageType{}

type fastReflection_UpdateEnclaveIdentityReply_messageType struct{}

func (x fastReflection_UpdateEnclaveIdentityReply_messageType) Zero() protoreflect.Message {
	return (*fastReflection_UpdateEnclaveIdentityReply)(nil)
}
func (x fastReflection_UpdateEnclaveIdentityReply_messageType) New() protoreflect.Message {
	return new(fastReflection_UpdateEnclaveIdentityReply)
}
func (x fastReflection_UpdateEnclaveIdentityReply_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_UpdateEnclaveIdentityReply
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_UpdateEnclaveIdentityReply) Descriptor() protoreflect.MessageDescriptor {
	return md_UpdateEnclaveIdentityReply
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_UpdateEnclaveIdentityReply) Type() protoreflect.MessageType {
	return _fastReflection_UpdateEnclaveIdentityReply_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_UpdateEnclaveIdentityReply) New() protoreflect.Message {
	return new(fastReflection_UpdateEnclaveIdentityReply)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_UpdateEnclaveIdentityReply) Interface() protoreflect.ProtoMessage {
	return (*UpdateEnclaveIdentityReply)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_UpdateEnclaveIdentityReply) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.Status != false {
		value := protoreflect.ValueOfBool(x.Status)
		if !f(fd_UpdateEnclaveIdentityReply_status, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_UpdateEnclaveIdentityReply) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "qadena.qadena.UpdateEnclaveIdentityReply.status":
		return x.Status != false
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: qadena.qadena.UpdateEnclaveIdentityReply"))
		}
		panic(fmt.Errorf("message qadena.qadena.UpdateEnclaveIdentityReply does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_UpdateEnclaveIdentityReply) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "qadena.qadena.UpdateEnclaveIdentityReply.status":
		x.Status = false
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: qadena.qadena.UpdateEnclaveIdentityReply"))
		}
		panic(fmt.Errorf("message qadena.qadena.UpdateEnclaveIdentityReply does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_UpdateEnclaveIdentityReply) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "qadena.qadena.UpdateEnclaveIdentityReply.status":
		value := x.Status
		return protoreflect.ValueOfBool(value)
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: qadena.qadena.UpdateEnclaveIdentityReply"))
		}
		panic(fmt.Errorf("message qadena.qadena.UpdateEnclaveIdentityReply does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_UpdateEnclaveIdentityReply) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "qadena.qadena.UpdateEnclaveIdentityReply.status":
		x.Status = value.Bool()
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: qadena.qadena.UpdateEnclaveIdentityReply"))
		}
		panic(fmt.Errorf("message qadena.qadena.UpdateEnclaveIdentityReply does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_UpdateEnclaveIdentityReply) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "qadena.qadena.UpdateEnclaveIdentityReply.status":
		panic(fmt.Errorf("field status of message qadena.qadena.UpdateEnclaveIdentityReply is not mutable"))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: qadena.qadena.UpdateEnclaveIdentityReply"))
		}
		panic(fmt.Errorf("message qadena.qadena.UpdateEnclaveIdentityReply does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_UpdateEnclaveIdentityReply) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "qadena.qadena.UpdateEnclaveIdentityReply.status":
		return protoreflect.ValueOfBool(false)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: qadena.qadena.UpdateEnclaveIdentityReply"))
		}
		panic(fmt.Errorf("message qadena.qadena.UpdateEnclaveIdentityReply does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_UpdateEnclaveIdentityReply) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in qadena.qadena.UpdateEnclaveIdentityReply", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_UpdateEnclaveIdentityReply) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_UpdateEnclaveIdentityReply) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_UpdateEnclaveIdentityReply) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_UpdateEnclaveIdentityReply) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*UpdateEnclaveIdentityReply)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		if x.Status {
			n += 2
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*UpdateEnclaveIdentityReply)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if x.Status {
			i--
			if x.Status {
				dAtA[i] = 1
			} else {
				dAtA[i] = 0
			}
			i--
			dAtA[i] = 0x8
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*UpdateEnclaveIdentityReply)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: UpdateEnclaveIdentityReply: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: UpdateEnclaveIdentityReply: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Status", wireType)
				}
				var v int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					v |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				x.Status = bool(v != 0)
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var (
	md_SetProtectKeyReply        protoreflect.MessageDescriptor
	fd_SetProtectKeyReply_status protoreflect.FieldDescriptor
)

func init() {
	file_qadena_qadena_enclave_proto_init()
	md_SetProtectKeyReply = File_qadena_qadena_enclave_proto.Messages().ByName("SetProtectKeyReply")
	fd_SetProtectKeyReply_status = md_SetProtectKeyReply.Fields().ByName("status")
}

var _ protoreflect.Message = (*fastReflection_SetProtectKeyReply)(nil)

type fastReflection_SetProtectKeyReply SetProtectKeyReply

func (x *SetProtectKeyReply) ProtoReflect() protoreflect.Message {
	return (*fastReflection_SetProtectKeyReply)(x)
}

func (x *SetProtectKeyReply) slowProtoReflect() protoreflect.Message {
	mi := &file_qadena_qadena_enclave_proto_msgTypes[49]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_SetProtectKeyReply_messageType fastReflection_SetProtectKeyReply_messageType
var _ protoreflect.MessageType = fastReflection_SetProtectKeyReply_messageType{}

type fastReflection_SetProtectKeyReply_messageType struct{}

func (x fastReflection_SetProtectKeyReply_messageType) Zero() protoreflect.Message {
	return (*fastReflection_SetProtectKeyReply)(nil)
}
func (x fastReflection_SetProtectKeyReply_messageType) New() protoreflect.Message {
	return new(fastReflection_SetProtectKeyReply)
}
func (x fastReflection_SetProtectKeyReply_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_SetProtectKeyReply
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_SetProtectKeyReply) Descriptor() protoreflect.MessageDescriptor {
	return md_SetProtectKeyReply
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_SetProtectKeyReply) Type() protoreflect.MessageType {
	return _fastReflection_SetProtectKeyReply_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_SetProtectKeyReply) New() protoreflect.Message {
	return new(fastReflection_SetProtectKeyReply)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_SetProtectKeyReply) Interface() protoreflect.ProtoMessage {
	return (*SetProtectKeyReply)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_SetProtectKeyReply) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.Status != false {
		value := protoreflect.ValueOfBool(x.Status)
		if !f(fd_SetProtectKeyReply_status, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_SetProtectKeyReply) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "qadena.qadena.SetProtectKeyReply.status":
		return x.Status != false
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: qadena.qadena.SetProtectKeyReply"))
		}
		panic(fmt.Errorf("message qadena.qadena.SetProtectKeyReply does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_SetProtectKeyReply) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "qadena.qadena.SetProtectKeyReply.status":
		x.Status = false
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: qadena.qadena.SetProtectKeyReply"))
		}
		panic(fmt.Errorf("message qadena.qadena.SetProtectKeyReply does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_SetProtectKeyReply) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "qadena.qadena.SetProtectKeyReply.status":
		value := x.Status
		return protoreflect.ValueOfBool(value)
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: qadena.qadena.SetProtectKeyReply"))
		}
		panic(fmt.Errorf("message qadena.qadena.SetProtectKeyReply does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_SetProtectKeyReply) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "qadena.qadena.SetProtectKeyReply.status":
		x.Status = value.Bool()
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: qadena.qadena.SetProtectKeyReply"))
		}
		panic(fmt.Errorf("message qadena.qadena.SetProtectKeyReply does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_SetProtectKeyReply) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "qadena.qadena.SetProtectKeyReply.status":
		panic(fmt.Errorf("field status of message qadena.qadena.SetProtectKeyReply is not mutable"))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: qadena.qadena.SetProtectKeyReply"))
		}
		panic(fmt.Errorf("message qadena.qadena.SetProtectKeyReply does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_SetProtectKeyReply) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "qadena.qadena.SetProtectKeyReply.status":
		return protoreflect.ValueOfBool(false)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: qadena.qadena.SetProtectKeyReply"))
		}
		panic(fmt.Errorf("message qadena.qadena.SetProtectKeyReply does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_SetProtectKeyReply) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in qadena.qadena.SetProtectKeyReply", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_SetProtectKeyReply) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_SetProtectKeyReply) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_SetProtectKeyReply) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_SetProtectKeyReply) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*SetProtectKeyReply)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		if x.Status {
			n += 2
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*SetProtectKeyReply)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if x.Status {
			i--
			if x.Status {
				dAtA[i] = 1
			} else {
				dAtA[i] = 0
			}
			i--
			dAtA[i] = 0x8
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*SetProtectKeyReply)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: SetProtectKeyReply: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: SetProtectKeyReply: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Status", wireType)
				}
				var v int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					v |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				x.Status = bool(v != 0)
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var (
	md_SetRecoverKeyReply        protoreflect.MessageDescriptor
	fd_SetRecoverKeyReply_status protoreflect.FieldDescriptor
)

func init() {
	file_qadena_qadena_enclave_proto_init()
	md_SetRecoverKeyReply = File_qadena_qadena_enclave_proto.Messages().ByName("SetRecoverKeyReply")
	fd_SetRecoverKeyReply_status = md_SetRecoverKeyReply.Fields().ByName("status")
}

var _ protoreflect.Message = (*fastReflection_SetRecoverKeyReply)(nil)

type fastReflection_SetRecoverKeyReply SetRecoverKeyReply

func (x *SetRecoverKeyReply) ProtoReflect() protoreflect.Message {
	return (*fastReflection_SetRecoverKeyReply)(x)
}

func (x *SetRecoverKeyReply) slowProtoReflect() protoreflect.Message {
	mi := &file_qadena_qadena_enclave_proto_msgTypes[50]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_SetRecoverKeyReply_messageType fastReflection_SetRecoverKeyReply_messageType
var _ protoreflect.MessageType = fastReflection_SetRecoverKeyReply_messageType{}

type fastReflection_SetRecoverKeyReply_messageType struct{}

func (x fastReflection_SetRecoverKeyReply_messageType) Zero() protoreflect.Message {
	return (*fastReflection_SetRecoverKeyReply)(nil)
}
func (x fastReflection_SetRecoverKeyReply_messageType) New() protoreflect.Message {
	return new(fastReflection_SetRecoverKeyReply)
}
func (x fastReflection_SetRecoverKeyReply_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_SetRecoverKeyReply
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_SetRecoverKeyReply) Descriptor() protoreflect.MessageDescriptor {
	return md_SetRecoverKeyReply
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_SetRecoverKeyReply) Type() protoreflect.MessageType {
	return _fastReflection_SetRecoverKeyReply_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_SetRecoverKeyReply) New() protoreflect.Message {
	return new(fastReflection_SetRecoverKeyReply)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_SetRecoverKeyReply) Interface() protoreflect.ProtoMessage {
	return (*SetRecoverKeyReply)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_SetRecoverKeyReply) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.Status != false {
		value := protoreflect.ValueOfBool(x.Status)
		if !f(fd_SetRecoverKeyReply_status, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_SetRecoverKeyReply) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "qadena.qadena.SetRecoverKeyReply.status":
		return x.Status != false
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: qadena.qadena.SetRecoverKeyReply"))
		}
		panic(fmt.Errorf("message qadena.qadena.SetRecoverKeyReply does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_SetRecoverKeyReply) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "qadena.qadena.SetRecoverKeyReply.status":
		x.Status = false
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: qadena.qadena.SetRecoverKeyReply"))
		}
		panic(fmt.Errorf("message qadena.qadena.SetRecoverKeyReply does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_SetRecoverKeyReply) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "qadena.qadena.SetRecoverKeyReply.status":
		value := x.Status
		return protoreflect.ValueOfBool(value)
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: qadena.qadena.SetRecoverKeyReply"))
		}
		panic(fmt.Errorf("message qadena.qadena.SetRecoverKeyReply does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_SetRecoverKeyReply) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "qadena.qadena.SetRecoverKeyReply.status":
		x.Status = value.Bool()
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: qadena.qadena.SetRecoverKeyReply"))
		}
		panic(fmt.Errorf("message qadena.qadena.SetRecoverKeyReply does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_SetRecoverKeyReply) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "qadena.qadena.SetRecoverKeyReply.status":
		panic(fmt.Errorf("field status of message qadena.qadena.SetRecoverKeyReply is not mutable"))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: qadena.qadena.SetRecoverKeyReply"))
		}
		panic(fmt.Errorf("message qadena.qadena.SetRecoverKeyReply does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_SetRecoverKeyReply) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "qadena.qadena.SetRecoverKeyReply.status":
		return protoreflect.ValueOfBool(false)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: qadena.qadena.SetRecoverKeyReply"))
		}
		panic(fmt.Errorf("message qadena.qadena.SetRecoverKeyReply does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_SetRecoverKeyReply) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in qadena.qadena.SetRecoverKeyReply", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_SetRecoverKeyReply) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_SetRecoverKeyReply) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_SetRecoverKeyReply) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_SetRecoverKeyReply) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*SetRecoverKeyReply)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		if x.Status {
			n += 2
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*SetRecoverKeyReply)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if x.Status {
			i--
			if x.Status {
				dAtA[i] = 1
			} else {
				dAtA[i] = 0
			}
			i--
			dAtA[i] = 0x8
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*SetRecoverKeyReply)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: SetRecoverKeyReply: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: SetRecoverKeyReply: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Status", wireType)
				}
				var v int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					v |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				x.Status = bool(v != 0)
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var (
	md_SetCredentialReply        protoreflect.MessageDescriptor
	fd_SetCredentialReply_status protoreflect.FieldDescriptor
)

func init() {
	file_qadena_qadena_enclave_proto_init()
	md_SetCredentialReply = File_qadena_qadena_enclave_proto.Messages().ByName("SetCredentialReply")
	fd_SetCredentialReply_status = md_SetCredentialReply.Fields().ByName("status")
}

var _ protoreflect.Message = (*fastReflection_SetCredentialReply)(nil)

type fastReflection_SetCredentialReply SetCredentialReply

func (x *SetCredentialReply) ProtoReflect() protoreflect.Message {
	return (*fastReflection_SetCredentialReply)(x)
}

func (x *SetCredentialReply) slowProtoReflect() protoreflect.Message {
	mi := &file_qadena_qadena_enclave_proto_msgTypes[51]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_SetCredentialReply_messageType fastReflection_SetCredentialReply_messageType
var _ protoreflect.MessageType = fastReflection_SetCredentialReply_messageType{}

type fastReflection_SetCredentialReply_messageType struct{}

func (x fastReflection_SetCredentialReply_messageType) Zero() protoreflect.Message {
	return (*fastReflection_SetCredentialReply)(nil)
}
func (x fastReflection_SetCredentialReply_messageType) New() protoreflect.Message {
	return new(fastReflection_SetCredentialReply)
}
func (x fastReflection_SetCredentialReply_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_SetCredentialReply
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_SetCredentialReply) Descriptor() protoreflect.MessageDescriptor {
	return md_SetCredentialReply
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_SetCredentialReply) Type() protoreflect.MessageType {
	return _fastReflection_SetCredentialReply_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_SetCredentialReply) New() protoreflect.Message {
	return new(fastReflection_SetCredentialReply)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_SetCredentialReply) Interface() protoreflect.ProtoMessage {
	return (*SetCredentialReply)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_SetCredentialReply) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.Status != false {
		value := protoreflect.ValueOfBool(x.Status)
		if !f(fd_SetCredentialReply_status, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_SetCredentialReply) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "qadena.qadena.SetCredentialReply.status":
		return x.Status != false
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: qadena.qadena.SetCredentialReply"))
		}
		panic(fmt.Errorf("message qadena.qadena.SetCredentialReply does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_SetCredentialReply) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "qadena.qadena.SetCredentialReply.status":
		x.Status = false
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: qadena.qadena.SetCredentialReply"))
		}
		panic(fmt.Errorf("message qadena.qadena.SetCredentialReply does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_SetCredentialReply) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "qadena.qadena.SetCredentialReply.status":
		value := x.Status
		return protoreflect.ValueOfBool(value)
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: qadena.qadena.SetCredentialReply"))
		}
		panic(fmt.Errorf("message qadena.qadena.SetCredentialReply does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_SetCredentialReply) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "qadena.qadena.SetCredentialReply.status":
		x.Status = value.Bool()
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: qadena.qadena.SetCredentialReply"))
		}
		panic(fmt.Errorf("message qadena.qadena.SetCredentialReply does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_SetCredentialReply) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "qadena.qadena.SetCredentialReply.status":
		panic(fmt.Errorf("field status of message qadena.qadena.SetCredentialReply is not mutable"))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: qadena.qadena.SetCredentialReply"))
		}
		panic(fmt.Errorf("message qadena.qadena.SetCredentialReply does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_SetCredentialReply) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "qadena.qadena.SetCredentialReply.status":
		return protoreflect.ValueOfBool(false)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: qadena.qadena.SetCredentialReply"))
		}
		panic(fmt.Errorf("message qadena.qadena.SetCredentialReply does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_SetCredentialReply) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in qadena.qadena.SetCredentialReply", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_SetCredentialReply) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_SetCredentialReply) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_SetCredentialReply) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_SetCredentialReply) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*SetCredentialReply)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		if x.Status {
			n += 2
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*SetCredentialReply)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if x.Status {
			i--
			if x.Status {
				dAtA[i] = 1
			} else {
				dAtA[i] = 0
			}
			i--
			dAtA[i] = 0x8
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*SetCredentialReply)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: SetCredentialReply: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: SetCredentialReply: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Status", wireType)
				}
				var v int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					v |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				x.Status = bool(v != 0)
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var (
	md_RemoveCredentialReply        protoreflect.MessageDescriptor
	fd_RemoveCredentialReply_status protoreflect.FieldDescriptor
)

func init() {
	file_qadena_qadena_enclave_proto_init()
	md_RemoveCredentialReply = File_qadena_qadena_enclave_proto.Messages().ByName("RemoveCredentialReply")
	fd_RemoveCredentialReply_status = md_RemoveCredentialReply.Fields().ByName("status")
}

var _ protoreflect.Message = (*fastReflection_RemoveCredentialReply)(nil)

type fastReflection_RemoveCredentialReply RemoveCredentialReply

func (x *RemoveCredentialReply) ProtoReflect() protoreflect.Message {
	return (*fastReflection_RemoveCredentialReply)(x)
}

func (x *RemoveCredentialReply) slowProtoReflect() protoreflect.Message {
	mi := &file_qadena_qadena_enclave_proto_msgTypes[52]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_RemoveCredentialReply_messageType fastReflection_RemoveCredentialReply_messageType
var _ protoreflect.MessageType = fastReflection_RemoveCredentialReply_messageType{}

type fastReflection_RemoveCredentialReply_messageType struct{}

func (x fastReflection_RemoveCredentialReply_messageType) Zero() protoreflect.Message {
	return (*fastReflection_RemoveCredentialReply)(nil)
}
func (x fastReflection_RemoveCredentialReply_messageType) New() protoreflect.Message {
	return new(fastReflection_RemoveCredentialReply)
}
func (x fastReflection_RemoveCredentialReply_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_RemoveCredentialReply
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_RemoveCredentialReply) Descriptor() protoreflect.MessageDescriptor {
	return md_RemoveCredentialReply
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_RemoveCredentialReply) Type() protoreflect.MessageType {
	return _fastReflection_RemoveCredentialReply_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_RemoveCredentialReply) New() protoreflect.Message {
	return new(fastReflection_RemoveCredentialReply)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_RemoveCredentialReply) Interface() protoreflect.ProtoMessage {
	return (*RemoveCredentialReply)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_RemoveCredentialReply) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.Status != false {
		value := protoreflect.ValueOfBool(x.Status)
		if !f(fd_RemoveCredentialReply_status, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_RemoveCredentialReply) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "qadena.qadena.RemoveCredentialReply.status":
		return x.Status != false
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: qadena.qadena.RemoveCredentialReply"))
		}
		panic(fmt.Errorf("message qadena.qadena.RemoveCredentialReply does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_RemoveCredentialReply) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "qadena.qadena.RemoveCredentialReply.status":
		x.Status = false
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: qadena.qadena.RemoveCredentialReply"))
		}
		panic(fmt.Errorf("message qadena.qadena.RemoveCredentialReply does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_RemoveCredentialReply) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "qadena.qadena.RemoveCredentialReply.status":
		value := x.Status
		return protoreflect.ValueOfBool(value)
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: qadena.qadena.RemoveCredentialReply"))
		}
		panic(fmt.Errorf("message qadena.qadena.RemoveCredentialReply does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_RemoveCredentialReply) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "qadena.qadena.RemoveCredentialReply.status":
		x.Status = value.Bool()
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: qadena.qadena.RemoveCredentialReply"))
		}
		panic(fmt.Errorf("message qadena.qadena.RemoveCredentialReply does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_RemoveCredentialReply) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "qadena.qadena.RemoveCredentialReply.status":
		panic(fmt.Errorf("field status of message qadena.qadena.RemoveCredentialReply is not mutable"))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: qadena.qadena.RemoveCredentialReply"))
		}
		panic(fmt.Errorf("message qadena.qadena.RemoveCredentialReply does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_RemoveCredentialReply) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "qadena.qadena.RemoveCredentialReply.status":
		return protoreflect.ValueOfBool(false)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: qadena.qadena.RemoveCredentialReply"))
		}
		panic(fmt.Errorf("message qadena.qadena.RemoveCredentialReply does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_RemoveCredentialReply) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in qadena.qadena.RemoveCredentialReply", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_RemoveCredentialReply) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_RemoveCredentialReply) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_RemoveCredentialReply) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_RemoveCredentialReply) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*RemoveCredentialReply)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		if x.Status {
			n += 2
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*RemoveCredentialReply)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if x.Status {
			i--
			if x.Status {
				dAtA[i] = 1
			} else {
				dAtA[i] = 0
			}
			i--
			dAtA[i] = 0x8
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*RemoveCredentialReply)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: RemoveCredentialReply: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: RemoveCredentialReply: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Status", wireType)
				}
				var v int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					v |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				x.Status = bool(v != 0)
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var (
	md_RecoverKeyReply        protoreflect.MessageDescriptor
	fd_RecoverKeyReply_status protoreflect.FieldDescriptor
)

func init() {
	file_qadena_qadena_enclave_proto_init()
	md_RecoverKeyReply = File_qadena_qadena_enclave_proto.Messages().ByName("RecoverKeyReply")
	fd_RecoverKeyReply_status = md_RecoverKeyReply.Fields().ByName("status")
}

var _ protoreflect.Message = (*fastReflection_RecoverKeyReply)(nil)

type fastReflection_RecoverKeyReply RecoverKeyReply

func (x *RecoverKeyReply) ProtoReflect() protoreflect.Message {
	return (*fastReflection_RecoverKeyReply)(x)
}

func (x *RecoverKeyReply) slowProtoReflect() protoreflect.Message {
	mi := &file_qadena_qadena_enclave_proto_msgTypes[53]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_RecoverKeyReply_messageType fastReflection_RecoverKeyReply_messageType
var _ protoreflect.MessageType = fastReflection_RecoverKeyReply_messageType{}

type fastReflection_RecoverKeyReply_messageType struct{}

func (x fastReflection_RecoverKeyReply_messageType) Zero() protoreflect.Message {
	return (*fastReflection_RecoverKeyReply)(nil)
}
func (x fastReflection_RecoverKeyReply_messageType) New() protoreflect.Message {
	return new(fastReflection_RecoverKeyReply)
}
func (x fastReflection_RecoverKeyReply_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_RecoverKeyReply
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_RecoverKeyReply) Descriptor() protoreflect.MessageDescriptor {
	return md_RecoverKeyReply
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_RecoverKeyReply) Type() protoreflect.MessageType {
	return _fastReflection_RecoverKeyReply_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_RecoverKeyReply) New() protoreflect.Message {
	return new(fastReflection_RecoverKeyReply)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_RecoverKeyReply) Interface() protoreflect.ProtoMessage {
	return (*RecoverKeyReply)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_RecoverKeyReply) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.Status != false {
		value := protoreflect.ValueOfBool(x.Status)
		if !f(fd_RecoverKeyReply_status, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_RecoverKeyReply) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "qadena.qadena.RecoverKeyReply.status":
		return x.Status != false
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: qadena.qadena.RecoverKeyReply"))
		}
		panic(fmt.Errorf("message qadena.qadena.RecoverKeyReply does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_RecoverKeyReply) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "qadena.qadena.RecoverKeyReply.status":
		x.Status = false
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: qadena.qadena.RecoverKeyReply"))
		}
		panic(fmt.Errorf("message qadena.qadena.RecoverKeyReply does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_RecoverKeyReply) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "qadena.qadena.RecoverKeyReply.status":
		value := x.Status
		return protoreflect.ValueOfBool(value)
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: qadena.qadena.RecoverKeyReply"))
		}
		panic(fmt.Errorf("message qadena.qadena.RecoverKeyReply does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_RecoverKeyReply) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "qadena.qadena.RecoverKeyReply.status":
		x.Status = value.Bool()
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: qadena.qadena.RecoverKeyReply"))
		}
		panic(fmt.Errorf("message qadena.qadena.RecoverKeyReply does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_RecoverKeyReply) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "qadena.qadena.RecoverKeyReply.status":
		panic(fmt.Errorf("field status of message qadena.qadena.RecoverKeyReply is not mutable"))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: qadena.qadena.RecoverKeyReply"))
		}
		panic(fmt.Errorf("message qadena.qadena.RecoverKeyReply does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_RecoverKeyReply) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "qadena.qadena.RecoverKeyReply.status":
		return protoreflect.ValueOfBool(false)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: qadena.qadena.RecoverKeyReply"))
		}
		panic(fmt.Errorf("message qadena.qadena.RecoverKeyReply does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_RecoverKeyReply) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in qadena.qadena.RecoverKeyReply", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_RecoverKeyReply) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_RecoverKeyReply) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_RecoverKeyReply) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_RecoverKeyReply) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*RecoverKeyReply)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		if x.Status {
			n += 2
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*RecoverKeyReply)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if x.Status {
			i--
			if x.Status {
				dAtA[i] = 1
			} else {
				dAtA[i] = 0
			}
			i--
			dAtA[i] = 0x8
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*RecoverKeyReply)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: RecoverKeyReply: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: RecoverKeyReply: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Status", wireType)
				}
				var v int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					v |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				x.Status = bool(v != 0)
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var (
	md_SignRecoverKeyReply        protoreflect.MessageDescriptor
	fd_SignRecoverKeyReply_status protoreflect.FieldDescriptor
)

func init() {
	file_qadena_qadena_enclave_proto_init()
	md_SignRecoverKeyReply = File_qadena_qadena_enclave_proto.Messages().ByName("SignRecoverKeyReply")
	fd_SignRecoverKeyReply_status = md_SignRecoverKeyReply.Fields().ByName("status")
}

var _ protoreflect.Message = (*fastReflection_SignRecoverKeyReply)(nil)

type fastReflection_SignRecoverKeyReply SignRecoverKeyReply

func (x *SignRecoverKeyReply) ProtoReflect() protoreflect.Message {
	return (*fastReflection_SignRecoverKeyReply)(x)
}

func (x *SignRecoverKeyReply) slowProtoReflect() protoreflect.Message {
	mi := &file_qadena_qadena_enclave_proto_msgTypes[54]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_SignRecoverKeyReply_messageType fastReflection_SignRecoverKeyReply_messageType
var _ protoreflect.MessageType = fastReflection_SignRecoverKeyReply_messageType{}

type fastReflection_SignRecoverKeyReply_messageType struct{}

func (x fastReflection_SignRecoverKeyReply_messageType) Zero() protoreflect.Message {
	return (*fastReflection_SignRecoverKeyReply)(nil)
}
func (x fastReflection_SignRecoverKeyReply_messageType) New() protoreflect.Message {
	return new(fastReflection_SignRecoverKeyReply)
}
func (x fastReflection_SignRecoverKeyReply_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_SignRecoverKeyReply
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_SignRecoverKeyReply) Descriptor() protoreflect.MessageDescriptor {
	return md_SignRecoverKeyReply
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_SignRecoverKeyReply) Type() protoreflect.MessageType {
	return _fastReflection_SignRecoverKeyReply_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_SignRecoverKeyReply) New() protoreflect.Message {
	return new(fastReflection_SignRecoverKeyReply)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_SignRecoverKeyReply) Interface() protoreflect.ProtoMessage {
	return (*SignRecoverKeyReply)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_SignRecoverKeyReply) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.Status != false {
		value := protoreflect.ValueOfBool(x.Status)
		if !f(fd_SignRecoverKeyReply_status, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_SignRecoverKeyReply) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "qadena.qadena.SignRecoverKeyReply.status":
		return x.Status != false
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: qadena.qadena.SignRecoverKeyReply"))
		}
		panic(fmt.Errorf("message qadena.qadena.SignRecoverKeyReply does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_SignRecoverKeyReply) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "qadena.qadena.SignRecoverKeyReply.status":
		x.Status = false
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: qadena.qadena.SignRecoverKeyReply"))
		}
		panic(fmt.Errorf("message qadena.qadena.SignRecoverKeyReply does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_SignRecoverKeyReply) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "qadena.qadena.SignRecoverKeyReply.status":
		value := x.Status
		return protoreflect.ValueOfBool(value)
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: qadena.qadena.SignRecoverKeyReply"))
		}
		panic(fmt.Errorf("message qadena.qadena.SignRecoverKeyReply does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_SignRecoverKeyReply) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "qadena.qadena.SignRecoverKeyReply.status":
		x.Status = value.Bool()
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: qadena.qadena.SignRecoverKeyReply"))
		}
		panic(fmt.Errorf("message qadena.qadena.SignRecoverKeyReply does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_SignRecoverKeyReply) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "qadena.qadena.SignRecoverKeyReply.status":
		panic(fmt.Errorf("field status of message qadena.qadena.SignRecoverKeyReply is not mutable"))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: qadena.qadena.SignRecoverKeyReply"))
		}
		panic(fmt.Errorf("message qadena.qadena.SignRecoverKeyReply does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_SignRecoverKeyReply) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "qadena.qadena.SignRecoverKeyReply.status":
		return protoreflect.ValueOfBool(false)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: qadena.qadena.SignRecoverKeyReply"))
		}
		panic(fmt.Errorf("message qadena.qadena.SignRecoverKeyReply does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_SignRecoverKeyReply) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in qadena.qadena.SignRecoverKeyReply", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_SignRecoverKeyReply) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_SignRecoverKeyReply) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_SignRecoverKeyReply) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_SignRecoverKeyReply) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*SignRecoverKeyReply)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		if x.Status {
			n += 2
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*SignRecoverKeyReply)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if x.Status {
			i--
			if x.Status {
				dAtA[i] = 1
			} else {
				dAtA[i] = 0
			}
			i--
			dAtA[i] = 0x8
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*SignRecoverKeyReply)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: SignRecoverKeyReply: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: SignRecoverKeyReply: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Status", wireType)
				}
				var v int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					v |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				x.Status = bool(v != 0)
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var (
	md_SetPublicKeyReply        protoreflect.MessageDescriptor
	fd_SetPublicKeyReply_status protoreflect.FieldDescriptor
)

func init() {
	file_qadena_qadena_enclave_proto_init()
	md_SetPublicKeyReply = File_qadena_qadena_enclave_proto.Messages().ByName("SetPublicKeyReply")
	fd_SetPublicKeyReply_status = md_SetPublicKeyReply.Fields().ByName("status")
}

var _ protoreflect.Message = (*fastReflection_SetPublicKeyReply)(nil)

type fastReflection_SetPublicKeyReply SetPublicKeyReply

func (x *SetPublicKeyReply) ProtoReflect() protoreflect.Message {
	return (*fastReflection_SetPublicKeyReply)(x)
}

func (x *SetPublicKeyReply) slowProtoReflect() protoreflect.Message {
	mi := &file_qadena_qadena_enclave_proto_msgTypes[55]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_SetPublicKeyReply_messageType fastReflection_SetPublicKeyReply_messageType
var _ protoreflect.MessageType = fastReflection_SetPublicKeyReply_messageType{}

type fastReflection_SetPublicKeyReply_messageType struct{}

func (x fastReflection_SetPublicKeyReply_messageType) Zero() protoreflect.Message {
	return (*fastReflection_SetPublicKeyReply)(nil)
}
func (x fastReflection_SetPublicKeyReply_messageType) New() protoreflect.Message {
	return new(fastReflection_SetPublicKeyReply)
}
func (x fastReflection_SetPublicKeyReply_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_SetPublicKeyReply
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_SetPublicKeyReply) Descriptor() protoreflect.MessageDescriptor {
	return md_SetPublicKeyReply
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_SetPublicKeyReply) Type() protoreflect.MessageType {
	return _fastReflection_SetPublicKeyReply_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_SetPublicKeyReply) New() protoreflect.Message {
	return new(fastReflection_SetPublicKeyReply)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_SetPublicKeyReply) Interface() protoreflect.ProtoMessage {
	return (*SetPublicKeyReply)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_SetPublicKeyReply) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.Status != false {
		value := protoreflect.ValueOfBool(x.Status)
		if !f(fd_SetPublicKeyReply_status, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_SetPublicKeyReply) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "qadena.qadena.SetPublicKeyReply.status":
		return x.Status != false
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: qadena.qadena.SetPublicKeyReply"))
		}
		panic(fmt.Errorf("message qadena.qadena.SetPublicKeyReply does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_SetPublicKeyReply) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "qadena.qadena.SetPublicKeyReply.status":
		x.Status = false
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: qadena.qadena.SetPublicKeyReply"))
		}
		panic(fmt.Errorf("message qadena.qadena.SetPublicKeyReply does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_SetPublicKeyReply) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "qadena.qadena.SetPublicKeyReply.status":
		value := x.Status
		return protoreflect.ValueOfBool(value)
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: qadena.qadena.SetPublicKeyReply"))
		}
		panic(fmt.Errorf("message qadena.qadena.SetPublicKeyReply does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_SetPublicKeyReply) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "qadena.qadena.SetPublicKeyReply.status":
		x.Status = value.Bool()
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: qadena.qadena.SetPublicKeyReply"))
		}
		panic(fmt.Errorf("message qadena.qadena.SetPublicKeyReply does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_SetPublicKeyReply) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "qadena.qadena.SetPublicKeyReply.status":
		panic(fmt.Errorf("field status of message qadena.qadena.SetPublicKeyReply is not mutable"))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: qadena.qadena.SetPublicKeyReply"))
		}
		panic(fmt.Errorf("message qadena.qadena.SetPublicKeyReply does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_SetPublicKeyReply) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "qadena.qadena.SetPublicKeyReply.status":
		return protoreflect.ValueOfBool(false)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: qadena.qadena.SetPublicKeyReply"))
		}
		panic(fmt.Errorf("message qadena.qadena.SetPublicKeyReply does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_SetPublicKeyReply) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in qadena.qadena.SetPublicKeyReply", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_SetPublicKeyReply) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_SetPublicKeyReply) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_SetPublicKeyReply) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_SetPublicKeyReply) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*SetPublicKeyReply)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		if x.Status {
			n += 2
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*SetPublicKeyReply)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if x.Status {
			i--
			if x.Status {
				dAtA[i] = 1
			} else {
				dAtA[i] = 0
			}
			i--
			dAtA[i] = 0x8
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*SetPublicKeyReply)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: SetPublicKeyReply: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: SetPublicKeyReply: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Status", wireType)
				}
				var v int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					v |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				x.Status = bool(v != 0)
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var (
	md_SetJarRegulatorReply        protoreflect.MessageDescriptor
	fd_SetJarRegulatorReply_status protoreflect.FieldDescriptor
)

func init() {
	file_qadena_qadena_enclave_proto_init()
	md_SetJarRegulatorReply = File_qadena_qadena_enclave_proto.Messages().ByName("SetJarRegulatorReply")
	fd_SetJarRegulatorReply_status = md_SetJarRegulatorReply.Fields().ByName("status")
}

var _ protoreflect.Message = (*fastReflection_SetJarRegulatorReply)(nil)

type fastReflection_SetJarRegulatorReply SetJarRegulatorReply

func (x *SetJarRegulatorReply) ProtoReflect() protoreflect.Message {
	return (*fastReflection_SetJarRegulatorReply)(x)
}

func (x *SetJarRegulatorReply) slowProtoReflect() protoreflect.Message {
	mi := &file_qadena_qadena_enclave_proto_msgTypes[56]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_SetJarRegulatorReply_messageType fastReflection_SetJarRegulatorReply_messageType
var _ protoreflect.MessageType = fastReflection_SetJarRegulatorReply_messageType{}

type fastReflection_SetJarRegulatorReply_messageType struct{}

func (x fastReflection_SetJarRegulatorReply_messageType) Zero() protoreflect.Message {
	return (*fastReflection_SetJarRegulatorReply)(nil)
}
func (x fastReflection_SetJarRegulatorReply_messageType) New() protoreflect.Message {
	return new(fastReflection_SetJarRegulatorReply)
}
func (x fastReflection_SetJarRegulatorReply_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_SetJarRegulatorReply
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_SetJarRegulatorReply) Descriptor() protoreflect.MessageDescriptor {
	return md_SetJarRegulatorReply
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_SetJarRegulatorReply) Type() protoreflect.MessageType {
	return _fastReflection_SetJarRegulatorReply_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_SetJarRegulatorReply) New() protoreflect.Message {
	return new(fastReflection_SetJarRegulatorReply)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_SetJarRegulatorReply) Interface() protoreflect.ProtoMessage {
	return (*SetJarRegulatorReply)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_SetJarRegulatorReply) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.Status != false {
		value := protoreflect.ValueOfBool(x.Status)
		if !f(fd_SetJarRegulatorReply_status, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_SetJarRegulatorReply) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "qadena.qadena.SetJarRegulatorReply.status":
		return x.Status != false
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: qadena.qadena.SetJarRegulatorReply"))
		}
		panic(fmt.Errorf("message qadena.qadena.SetJarRegulatorReply does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_SetJarRegulatorReply) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "qadena.qadena.SetJarRegulatorReply.status":
		x.Status = false
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: qadena.qadena.SetJarRegulatorReply"))
		}
		panic(fmt.Errorf("message qadena.qadena.SetJarRegulatorReply does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_SetJarRegulatorReply) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "qadena.qadena.SetJarRegulatorReply.status":
		value := x.Status
		return protoreflect.ValueOfBool(value)
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: qadena.qadena.SetJarRegulatorReply"))
		}
		panic(fmt.Errorf("message qadena.qadena.SetJarRegulatorReply does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_SetJarRegulatorReply) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "qadena.qadena.SetJarRegulatorReply.status":
		x.Status = value.Bool()
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: qadena.qadena.SetJarRegulatorReply"))
		}
		panic(fmt.Errorf("message qadena.qadena.SetJarRegulatorReply does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_SetJarRegulatorReply) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "qadena.qadena.SetJarRegulatorReply.status":
		panic(fmt.Errorf("field status of message qadena.qadena.SetJarRegulatorReply is not mutable"))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: qadena.qadena.SetJarRegulatorReply"))
		}
		panic(fmt.Errorf("message qadena.qadena.SetJarRegulatorReply does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_SetJarRegulatorReply) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "qadena.qadena.SetJarRegulatorReply.status":
		return protoreflect.ValueOfBool(false)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: qadena.qadena.SetJarRegulatorReply"))
		}
		panic(fmt.Errorf("message qadena.qadena.SetJarRegulatorReply does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_SetJarRegulatorReply) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in qadena.qadena.SetJarRegulatorReply", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_SetJarRegulatorReply) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_SetJarRegulatorReply) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_SetJarRegulatorReply) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_SetJarRegulatorReply) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*SetJarRegulatorReply)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		if x.Status {
			n += 2
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*SetJarRegulatorReply)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if x.Status {
			i--
			if x.Status {
				dAtA[i] = 1
			} else {
				dAtA[i] = 0
			}
			i--
			dAtA[i] = 0x8
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*SetJarRegulatorReply)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: SetJarRegulatorReply: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: SetJarRegulatorReply: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Status", wireType)
				}
				var v int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					v |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				x.Status = bool(v != 0)
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var (
	md_SetPioneerJarReply        protoreflect.MessageDescriptor
	fd_SetPioneerJarReply_status protoreflect.FieldDescriptor
)

func init() {
	file_qadena_qadena_enclave_proto_init()
	md_SetPioneerJarReply = File_qadena_qadena_enclave_proto.Messages().ByName("SetPioneerJarReply")
	fd_SetPioneerJarReply_status = md_SetPioneerJarReply.Fields().ByName("status")
}

var _ protoreflect.Message = (*fastReflection_SetPioneerJarReply)(nil)

type fastReflection_SetPioneerJarReply SetPioneerJarReply

func (x *SetPioneerJarReply) ProtoReflect() protoreflect.Message {
	return (*fastReflection_SetPioneerJarReply)(x)
}

func (x *SetPioneerJarReply) slowProtoReflect() protoreflect.Message {
	mi := &file_qadena_qadena_enclave_proto_msgTypes[57]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_SetPioneerJarReply_messageType fastReflection_SetPioneerJarReply_messageType
var _ protoreflect.MessageType = fastReflection_SetPioneerJarReply_messageType{}

type fastReflection_SetPioneerJarReply_messageType struct{}

func (x fastReflection_SetPioneerJarReply_messageType) Zero() protoreflect.Message {
	return (*fastReflection_SetPioneerJarReply)(nil)
}
func (x fastReflection_SetPioneerJarReply_messageType) New() protoreflect.Message {
	return new(fastReflection_SetPioneerJarReply)
}
func (x fastReflection_SetPioneerJarReply_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_SetPioneerJarReply
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_SetPioneerJarReply) Descriptor() protoreflect.MessageDescriptor {
	return md_SetPioneerJarReply
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_SetPioneerJarReply) Type() protoreflect.MessageType {
	return _fastReflection_SetPioneerJarReply_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_SetPioneerJarReply) New() protoreflect.Message {
	return new(fastReflection_SetPioneerJarReply)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_SetPioneerJarReply) Interface() protoreflect.ProtoMessage {
	return (*SetPioneerJarReply)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_SetPioneerJarReply) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.Status != false {
		value := protoreflect.ValueOfBool(x.Status)
		if !f(fd_SetPioneerJarReply_status, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_SetPioneerJarReply) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "qadena.qadena.SetPioneerJarReply.status":
		return x.Status != false
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: qadena.qadena.SetPioneerJarReply"))
		}
		panic(fmt.Errorf("message qadena.qadena.SetPioneerJarReply does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_SetPioneerJarReply) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "qadena.qadena.SetPioneerJarReply.status":
		x.Status = false
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: qadena.qadena.SetPioneerJarReply"))
		}
		panic(fmt.Errorf("message qadena.qadena.SetPioneerJarReply does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_SetPioneerJarReply) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "qadena.qadena.SetPioneerJarReply.status":
		value := x.Status
		return protoreflect.ValueOfBool(value)
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: qadena.qadena.SetPioneerJarReply"))
		}
		panic(fmt.Errorf("message qadena.qadena.SetPioneerJarReply does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_SetPioneerJarReply) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "qadena.qadena.SetPioneerJarReply.status":
		x.Status = value.Bool()
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: qadena.qadena.SetPioneerJarReply"))
		}
		panic(fmt.Errorf("message qadena.qadena.SetPioneerJarReply does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_SetPioneerJarReply) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "qadena.qadena.SetPioneerJarReply.status":
		panic(fmt.Errorf("field status of message qadena.qadena.SetPioneerJarReply is not mutable"))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: qadena.qadena.SetPioneerJarReply"))
		}
		panic(fmt.Errorf("message qadena.qadena.SetPioneerJarReply does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_SetPioneerJarReply) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "qadena.qadena.SetPioneerJarReply.status":
		return protoreflect.ValueOfBool(false)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: qadena.qadena.SetPioneerJarReply"))
		}
		panic(fmt.Errorf("message qadena.qadena.SetPioneerJarReply does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_SetPioneerJarReply) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in qadena.qadena.SetPioneerJarReply", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_SetPioneerJarReply) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_SetPioneerJarReply) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_SetPioneerJarReply) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_SetPioneerJarReply) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*SetPioneerJarReply)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		if x.Status {
			n += 2
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*SetPioneerJarReply)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if x.Status {
			i--
			if x.Status {
				dAtA[i] = 1
			} else {
				dAtA[i] = 0
			}
			i--
			dAtA[i] = 0x8
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*SetPioneerJarReply)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: SetPioneerJarReply: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: SetPioneerJarReply: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Status", wireType)
				}
				var v int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					v |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				x.Status = bool(v != 0)
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var (
	md_SetIntervalPublicKeyIdReply        protoreflect.MessageDescriptor
	fd_SetIntervalPublicKeyIdReply_status protoreflect.FieldDescriptor
)

func init() {
	file_qadena_qadena_enclave_proto_init()
	md_SetIntervalPublicKeyIdReply = File_qadena_qadena_enclave_proto.Messages().ByName("SetIntervalPublicKeyIdReply")
	fd_SetIntervalPublicKeyIdReply_status = md_SetIntervalPublicKeyIdReply.Fields().ByName("status")
}

var _ protoreflect.Message = (*fastReflection_SetIntervalPublicKeyIdReply)(nil)

type fastReflection_SetIntervalPublicKeyIdReply SetIntervalPublicKeyIdReply

func (x *SetIntervalPublicKeyIdReply) ProtoReflect() protoreflect.Message {
	return (*fastReflection_SetIntervalPublicKeyIdReply)(x)
}

func (x *SetIntervalPublicKeyIdReply) slowProtoReflect() protoreflect.Message {
	mi := &file_qadena_qadena_enclave_proto_msgTypes[58]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_SetIntervalPublicKeyIdReply_messageType fastReflection_SetIntervalPublicKeyIdReply_messageType
var _ protoreflect.MessageType = fastReflection_SetIntervalPublicKeyIdReply_messageType{}

type fastReflection_SetIntervalPublicKeyIdReply_messageType struct{}

func (x fastReflection_SetIntervalPublicKeyIdReply_messageType) Zero() protoreflect.Message {
	return (*fastReflection_SetIntervalPublicKeyIdReply)(nil)
}
func (x fastReflection_SetIntervalPublicKeyIdReply_messageType) New() protoreflect.Message {
	return new(fastReflection_SetIntervalPublicKeyIdReply)
}
func (x fastReflection_SetIntervalPublicKeyIdReply_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_SetIntervalPublicKeyIdReply
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_SetIntervalPublicKeyIdReply) Descriptor() protoreflect.MessageDescriptor {
	return md_SetIntervalPublicKeyIdReply
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_SetIntervalPublicKeyIdReply) Type() protoreflect.MessageType {
	return _fastReflection_SetIntervalPublicKeyIdReply_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_SetIntervalPublicKeyIdReply) New() protoreflect.Message {
	return new(fastReflection_SetIntervalPublicKeyIdReply)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_SetIntervalPublicKeyIdReply) Interface() protoreflect.ProtoMessage {
	return (*SetIntervalPublicKeyIdReply)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_SetIntervalPublicKeyIdReply) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.Status != false {
		value := protoreflect.ValueOfBool(x.Status)
		if !f(fd_SetIntervalPublicKeyIdReply_status, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_SetIntervalPublicKeyIdReply) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "qadena.qadena.SetIntervalPublicKeyIdReply.status":
		return x.Status != false
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: qadena.qadena.SetIntervalPublicKeyIdReply"))
		}
		panic(fmt.Errorf("message qadena.qadena.SetIntervalPublicKeyIdReply does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_SetIntervalPublicKeyIdReply) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "qadena.qadena.SetIntervalPublicKeyIdReply.status":
		x.Status = false
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: qadena.qadena.SetIntervalPublicKeyIdReply"))
		}
		panic(fmt.Errorf("message qadena.qadena.SetIntervalPublicKeyIdReply does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_SetIntervalPublicKeyIdReply) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "qadena.qadena.SetIntervalPublicKeyIdReply.status":
		value := x.Status
		return protoreflect.ValueOfBool(value)
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: qadena.qadena.SetIntervalPublicKeyIdReply"))
		}
		panic(fmt.Errorf("message qadena.qadena.SetIntervalPublicKeyIdReply does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_SetIntervalPublicKeyIdReply) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "qadena.qadena.SetIntervalPublicKeyIdReply.status":
		x.Status = value.Bool()
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: qadena.qadena.SetIntervalPublicKeyIdReply"))
		}
		panic(fmt.Errorf("message qadena.qadena.SetIntervalPublicKeyIdReply does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_SetIntervalPublicKeyIdReply) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "qadena.qadena.SetIntervalPublicKeyIdReply.status":
		panic(fmt.Errorf("field status of message qadena.qadena.SetIntervalPublicKeyIdReply is not mutable"))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: qadena.qadena.SetIntervalPublicKeyIdReply"))
		}
		panic(fmt.Errorf("message qadena.qadena.SetIntervalPublicKeyIdReply does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_SetIntervalPublicKeyIdReply) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "qadena.qadena.SetIntervalPublicKeyIdReply.status":
		return protoreflect.ValueOfBool(false)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: qadena.qadena.SetIntervalPublicKeyIdReply"))
		}
		panic(fmt.Errorf("message qadena.qadena.SetIntervalPublicKeyIdReply does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_SetIntervalPublicKeyIdReply) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in qadena.qadena.SetIntervalPublicKeyIdReply", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_SetIntervalPublicKeyIdReply) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_SetIntervalPublicKeyIdReply) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_SetIntervalPublicKeyIdReply) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_SetIntervalPublicKeyIdReply) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*SetIntervalPublicKeyIdReply)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		if x.Status {
			n += 2
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*SetIntervalPublicKeyIdReply)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if x.Status {
			i--
			if x.Status {
				dAtA[i] = 1
			} else {
				dAtA[i] = 0
			}
			i--
			dAtA[i] = 0x8
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*SetIntervalPublicKeyIdReply)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: SetIntervalPublicKeyIdReply: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: SetIntervalPublicKeyIdReply: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Status", wireType)
				}
				var v int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					v |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				x.Status = bool(v != 0)
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var (
	md_ValidateDestinationWalletReply        protoreflect.MessageDescriptor
	fd_ValidateDestinationWalletReply_status protoreflect.FieldDescriptor
)

func init() {
	file_qadena_qadena_enclave_proto_init()
	md_ValidateDestinationWalletReply = File_qadena_qadena_enclave_proto.Messages().ByName("ValidateDestinationWalletReply")
	fd_ValidateDestinationWalletReply_status = md_ValidateDestinationWalletReply.Fields().ByName("status")
}

var _ protoreflect.Message = (*fastReflection_ValidateDestinationWalletReply)(nil)

type fastReflection_ValidateDestinationWalletReply ValidateDestinationWalletReply

func (x *ValidateDestinationWalletReply) ProtoReflect() protoreflect.Message {
	return (*fastReflection_ValidateDestinationWalletReply)(x)
}

func (x *ValidateDestinationWalletReply) slowProtoReflect() protoreflect.Message {
	mi := &file_qadena_qadena_enclave_proto_msgTypes[59]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_ValidateDestinationWalletReply_messageType fastReflection_ValidateDestinationWalletReply_messageType
var _ protoreflect.MessageType = fastReflection_ValidateDestinationWalletReply_messageType{}

type fastReflection_ValidateDestinationWalletReply_messageType struct{}

func (x fastReflection_ValidateDestinationWalletReply_messageType) Zero() protoreflect.Message {
	return (*fastReflection_ValidateDestinationWalletReply)(nil)
}
func (x fastReflection_ValidateDestinationWalletReply_messageType) New() protoreflect.Message {
	return new(fastReflection_ValidateDestinationWalletReply)
}
func (x fastReflection_ValidateDestinationWalletReply_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_ValidateDestinationWalletReply
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_ValidateDestinationWalletReply) Descriptor() protoreflect.MessageDescriptor {
	return md_ValidateDestinationWalletReply
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_ValidateDestinationWalletReply) Type() protoreflect.MessageType {
	return _fastReflection_ValidateDestinationWalletReply_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_ValidateDestinationWalletReply) New() protoreflect.Message {
	return new(fastReflection_ValidateDestinationWalletReply)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_ValidateDestinationWalletReply) Interface() protoreflect.ProtoMessage {
	return (*ValidateDestinationWalletReply)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_ValidateDestinationWalletReply) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.Status != int32(0) {
		value := protoreflect.ValueOfInt32(x.Status)
		if !f(fd_ValidateDestinationWalletReply_status, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_ValidateDestinationWalletReply) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "qadena.qadena.ValidateDestinationWalletReply.status":
		return x.Status != int32(0)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: qadena.qadena.ValidateDestinationWalletReply"))
		}
		panic(fmt.Errorf("message qadena.qadena.ValidateDestinationWalletReply does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_ValidateDestinationWalletReply) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "qadena.qadena.ValidateDestinationWalletReply.status":
		x.Status = int32(0)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: qadena.qadena.ValidateDestinationWalletReply"))
		}
		panic(fmt.Errorf("message qadena.qadena.ValidateDestinationWalletReply does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_ValidateDestinationWalletReply) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "qadena.qadena.ValidateDestinationWalletReply.status":
		value := x.Status
		return protoreflect.ValueOfInt32(value)
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: qadena.qadena.ValidateDestinationWalletReply"))
		}
		panic(fmt.Errorf("message qadena.qadena.ValidateDestinationWalletReply does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_ValidateDestinationWalletReply) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "qadena.qadena.ValidateDestinationWalletReply.status":
		x.Status = int32(value.Int())
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: qadena.qadena.ValidateDestinationWalletReply"))
		}
		panic(fmt.Errorf("message qadena.qadena.ValidateDestinationWalletReply does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_ValidateDestinationWalletReply) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "qadena.qadena.ValidateDestinationWalletReply.status":
		panic(fmt.Errorf("field status of message qadena.qadena.ValidateDestinationWalletReply is not mutable"))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: qadena.qadena.ValidateDestinationWalletReply"))
		}
		panic(fmt.Errorf("message qadena.qadena.ValidateDestinationWalletReply does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_ValidateDestinationWalletReply) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "qadena.qadena.ValidateDestinationWalletReply.status":
		return protoreflect.ValueOfInt32(int32(0))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: qadena.qadena.ValidateDestinationWalletReply"))
		}
		panic(fmt.Errorf("message qadena.qadena.ValidateDestinationWalletReply does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_ValidateDestinationWalletReply) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in qadena.qadena.ValidateDestinationWalletReply", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_ValidateDestinationWalletReply) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_ValidateDestinationWalletReply) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_ValidateDestinationWalletReply) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_ValidateDestinationWalletReply) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*ValidateDestinationWalletReply)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		if x.Status != 0 {
			n += 1 + runtime.Sov(uint64(x.Status))
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*ValidateDestinationWalletReply)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if x.Status != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.Status))
			i--
			dAtA[i] = 0x8
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*ValidateDestinationWalletReply)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: ValidateDestinationWalletReply: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: ValidateDestinationWalletReply: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Status", wireType)
				}
				x.Status = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.Status |= int32(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var (
	md_ValidateCredentialReply        protoreflect.MessageDescriptor
	fd_ValidateCredentialReply_status protoreflect.FieldDescriptor
)

func init() {
	file_qadena_qadena_enclave_proto_init()
	md_ValidateCredentialReply = File_qadena_qadena_enclave_proto.Messages().ByName("ValidateCredentialReply")
	fd_ValidateCredentialReply_status = md_ValidateCredentialReply.Fields().ByName("status")
}

var _ protoreflect.Message = (*fastReflection_ValidateCredentialReply)(nil)

type fastReflection_ValidateCredentialReply ValidateCredentialReply

func (x *ValidateCredentialReply) ProtoReflect() protoreflect.Message {
	return (*fastReflection_ValidateCredentialReply)(x)
}

func (x *ValidateCredentialReply) slowProtoReflect() protoreflect.Message {
	mi := &file_qadena_qadena_enclave_proto_msgTypes[60]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_ValidateCredentialReply_messageType fastReflection_ValidateCredentialReply_messageType
var _ protoreflect.MessageType = fastReflection_ValidateCredentialReply_messageType{}

type fastReflection_ValidateCredentialReply_messageType struct{}

func (x fastReflection_ValidateCredentialReply_messageType) Zero() protoreflect.Message {
	return (*fastReflection_ValidateCredentialReply)(nil)
}
func (x fastReflection_ValidateCredentialReply_messageType) New() protoreflect.Message {
	return new(fastReflection_ValidateCredentialReply)
}
func (x fastReflection_ValidateCredentialReply_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_ValidateCredentialReply
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_ValidateCredentialReply) Descriptor() protoreflect.MessageDescriptor {
	return md_ValidateCredentialReply
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_ValidateCredentialReply) Type() protoreflect.MessageType {
	return _fastReflection_ValidateCredentialReply_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_ValidateCredentialReply) New() protoreflect.Message {
	return new(fastReflection_ValidateCredentialReply)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_ValidateCredentialReply) Interface() protoreflect.ProtoMessage {
	return (*ValidateCredentialReply)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_ValidateCredentialReply) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.Status != false {
		value := protoreflect.ValueOfBool(x.Status)
		if !f(fd_ValidateCredentialReply_status, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_ValidateCredentialReply) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "qadena.qadena.ValidateCredentialReply.status":
		return x.Status != false
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: qadena.qadena.ValidateCredentialReply"))
		}
		panic(fmt.Errorf("message qadena.qadena.ValidateCredentialReply does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_ValidateCredentialReply) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "qadena.qadena.ValidateCredentialReply.status":
		x.Status = false
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: qadena.qadena.ValidateCredentialReply"))
		}
		panic(fmt.Errorf("message qadena.qadena.ValidateCredentialReply does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_ValidateCredentialReply) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "qadena.qadena.ValidateCredentialReply.status":
		value := x.Status
		return protoreflect.ValueOfBool(value)
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: qadena.qadena.ValidateCredentialReply"))
		}
		panic(fmt.Errorf("message qadena.qadena.ValidateCredentialReply does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_ValidateCredentialReply) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "qadena.qadena.ValidateCredentialReply.status":
		x.Status = value.Bool()
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: qadena.qadena.ValidateCredentialReply"))
		}
		panic(fmt.Errorf("message qadena.qadena.ValidateCredentialReply does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_ValidateCredentialReply) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "qadena.qadena.ValidateCredentialReply.status":
		panic(fmt.Errorf("field status of message qadena.qadena.ValidateCredentialReply is not mutable"))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: qadena.qadena.ValidateCredentialReply"))
		}
		panic(fmt.Errorf("message qadena.qadena.ValidateCredentialReply does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_ValidateCredentialReply) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "qadena.qadena.ValidateCredentialReply.status":
		return protoreflect.ValueOfBool(false)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: qadena.qadena.ValidateCredentialReply"))
		}
		panic(fmt.Errorf("message qadena.qadena.ValidateCredentialReply does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_ValidateCredentialReply) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in qadena.qadena.ValidateCredentialReply", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_ValidateCredentialReply) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_ValidateCredentialReply) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_ValidateCredentialReply) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_ValidateCredentialReply) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*ValidateCredentialReply)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		if x.Status {
			n += 2
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*ValidateCredentialReply)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if x.Status {
			i--
			if x.Status {
				dAtA[i] = 1
			} else {
				dAtA[i] = 0
			}
			i--
			dAtA[i] = 0x8
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*ValidateCredentialReply)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: ValidateCredentialReply: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: ValidateCredentialReply: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Status", wireType)
				}
				var v int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					v |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				x.Status = bool(v != 0)
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var (
	md_ValidateTransferPrimeReply                    protoreflect.MessageDescriptor
	fd_ValidateTransferPrimeReply_updateSourceWallet protoreflect.FieldDescriptor
)

func init() {
	file_qadena_qadena_enclave_proto_init()
	md_ValidateTransferPrimeReply = File_qadena_qadena_enclave_proto.Messages().ByName("ValidateTransferPrimeReply")
	fd_ValidateTransferPrimeReply_updateSourceWallet = md_ValidateTransferPrimeReply.Fields().ByName("updateSourceWallet")
}

var _ protoreflect.Message = (*fastReflection_ValidateTransferPrimeReply)(nil)

type fastReflection_ValidateTransferPrimeReply ValidateTransferPrimeReply

func (x *ValidateTransferPrimeReply) ProtoReflect() protoreflect.Message {
	return (*fastReflection_ValidateTransferPrimeReply)(x)
}

func (x *ValidateTransferPrimeReply) slowProtoReflect() protoreflect.Message {
	mi := &file_qadena_qadena_enclave_proto_msgTypes[61]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_ValidateTransferPrimeReply_messageType fastReflection_ValidateTransferPrimeReply_messageType
var _ protoreflect.MessageType = fastReflection_ValidateTransferPrimeReply_messageType{}

type fastReflection_ValidateTransferPrimeReply_messageType struct{}

func (x fastReflection_ValidateTransferPrimeReply_messageType) Zero() protoreflect.Message {
	return (*fastReflection_ValidateTransferPrimeReply)(nil)
}
func (x fastReflection_ValidateTransferPrimeReply_messageType) New() protoreflect.Message {
	return new(fastReflection_ValidateTransferPrimeReply)
}
func (x fastReflection_ValidateTransferPrimeReply_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_ValidateTransferPrimeReply
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_ValidateTransferPrimeReply) Descriptor() protoreflect.MessageDescriptor {
	return md_ValidateTransferPrimeReply
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_ValidateTransferPrimeReply) Type() protoreflect.MessageType {
	return _fastReflection_ValidateTransferPrimeReply_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_ValidateTransferPrimeReply) New() protoreflect.Message {
	return new(fastReflection_ValidateTransferPrimeReply)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_ValidateTransferPrimeReply) Interface() protoreflect.ProtoMessage {
	return (*ValidateTransferPrimeReply)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_ValidateTransferPrimeReply) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.UpdateSourceWallet != false {
		value := protoreflect.ValueOfBool(x.UpdateSourceWallet)
		if !f(fd_ValidateTransferPrimeReply_updateSourceWallet, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_ValidateTransferPrimeReply) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "qadena.qadena.ValidateTransferPrimeReply.updateSourceWallet":
		return x.UpdateSourceWallet != false
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: qadena.qadena.ValidateTransferPrimeReply"))
		}
		panic(fmt.Errorf("message qadena.qadena.ValidateTransferPrimeReply does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_ValidateTransferPrimeReply) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "qadena.qadena.ValidateTransferPrimeReply.updateSourceWallet":
		x.UpdateSourceWallet = false
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: qadena.qadena.ValidateTransferPrimeReply"))
		}
		panic(fmt.Errorf("message qadena.qadena.ValidateTransferPrimeReply does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_ValidateTransferPrimeReply) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "qadena.qadena.ValidateTransferPrimeReply.updateSourceWallet":
		value := x.UpdateSourceWallet
		return protoreflect.ValueOfBool(value)
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: qadena.qadena.ValidateTransferPrimeReply"))
		}
		panic(fmt.Errorf("message qadena.qadena.ValidateTransferPrimeReply does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_ValidateTransferPrimeReply) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "qadena.qadena.ValidateTransferPrimeReply.updateSourceWallet":
		x.UpdateSourceWallet = value.Bool()
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: qadena.qadena.ValidateTransferPrimeReply"))
		}
		panic(fmt.Errorf("message qadena.qadena.ValidateTransferPrimeReply does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_ValidateTransferPrimeReply) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "qadena.qadena.ValidateTransferPrimeReply.updateSourceWallet":
		panic(fmt.Errorf("field updateSourceWallet of message qadena.qadena.ValidateTransferPrimeReply is not mutable"))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: qadena.qadena.ValidateTransferPrimeReply"))
		}
		panic(fmt.Errorf("message qadena.qadena.ValidateTransferPrimeReply does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_ValidateTransferPrimeReply) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "qadena.qadena.ValidateTransferPrimeReply.updateSourceWallet":
		return protoreflect.ValueOfBool(false)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: qadena.qadena.ValidateTransferPrimeReply"))
		}
		panic(fmt.Errorf("message qadena.qadena.ValidateTransferPrimeReply does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_ValidateTransferPrimeReply) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in qadena.qadena.ValidateTransferPrimeReply", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_ValidateTransferPrimeReply) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_ValidateTransferPrimeReply) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_ValidateTransferPrimeReply) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_ValidateTransferPrimeReply) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*ValidateTransferPrimeReply)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		if x.UpdateSourceWallet {
			n += 2
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*ValidateTransferPrimeReply)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if x.UpdateSourceWallet {
			i--
			if x.UpdateSourceWallet {
				dAtA[i] = 1
			} else {
				dAtA[i] = 0
			}
			i--
			dAtA[i] = 0x8
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*ValidateTransferPrimeReply)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: ValidateTransferPrimeReply: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: ValidateTransferPrimeReply: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field UpdateSourceWallet", wireType)
				}
				var v int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					v |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				x.UpdateSourceWallet = bool(v != 0)
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var (
	md_ValidateTransferDoublePrimeReply                         protoreflect.MessageDescriptor
	fd_ValidateTransferDoublePrimeReply_updateDestinationWallet protoreflect.FieldDescriptor
)

func init() {
	file_qadena_qadena_enclave_proto_init()
	md_ValidateTransferDoublePrimeReply = File_qadena_qadena_enclave_proto.Messages().ByName("ValidateTransferDoublePrimeReply")
	fd_ValidateTransferDoublePrimeReply_updateDestinationWallet = md_ValidateTransferDoublePrimeReply.Fields().ByName("updateDestinationWallet")
}

var _ protoreflect.Message = (*fastReflection_ValidateTransferDoublePrimeReply)(nil)

type fastReflection_ValidateTransferDoublePrimeReply ValidateTransferDoublePrimeReply

func (x *ValidateTransferDoublePrimeReply) ProtoReflect() protoreflect.Message {
	return (*fastReflection_ValidateTransferDoublePrimeReply)(x)
}

func (x *ValidateTransferDoublePrimeReply) slowProtoReflect() protoreflect.Message {
	mi := &file_qadena_qadena_enclave_proto_msgTypes[62]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_ValidateTransferDoublePrimeReply_messageType fastReflection_ValidateTransferDoublePrimeReply_messageType
var _ protoreflect.MessageType = fastReflection_ValidateTransferDoublePrimeReply_messageType{}

type fastReflection_ValidateTransferDoublePrimeReply_messageType struct{}

func (x fastReflection_ValidateTransferDoublePrimeReply_messageType) Zero() protoreflect.Message {
	return (*fastReflection_ValidateTransferDoublePrimeReply)(nil)
}
func (x fastReflection_ValidateTransferDoublePrimeReply_messageType) New() protoreflect.Message {
	return new(fastReflection_ValidateTransferDoublePrimeReply)
}
func (x fastReflection_ValidateTransferDoublePrimeReply_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_ValidateTransferDoublePrimeReply
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_ValidateTransferDoublePrimeReply) Descriptor() protoreflect.MessageDescriptor {
	return md_ValidateTransferDoublePrimeReply
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_ValidateTransferDoublePrimeReply) Type() protoreflect.MessageType {
	return _fastReflection_ValidateTransferDoublePrimeReply_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_ValidateTransferDoublePrimeReply) New() protoreflect.Message {
	return new(fastReflection_ValidateTransferDoublePrimeReply)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_ValidateTransferDoublePrimeReply) Interface() protoreflect.ProtoMessage {
	return (*ValidateTransferDoublePrimeReply)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_ValidateTransferDoublePrimeReply) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.UpdateDestinationWallet != false {
		value := protoreflect.ValueOfBool(x.UpdateDestinationWallet)
		if !f(fd_ValidateTransferDoublePrimeReply_updateDestinationWallet, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_ValidateTransferDoublePrimeReply) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "qadena.qadena.ValidateTransferDoublePrimeReply.updateDestinationWallet":
		return x.UpdateDestinationWallet != false
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: qadena.qadena.ValidateTransferDoublePrimeReply"))
		}
		panic(fmt.Errorf("message qadena.qadena.ValidateTransferDoublePrimeReply does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_ValidateTransferDoublePrimeReply) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "qadena.qadena.ValidateTransferDoublePrimeReply.updateDestinationWallet":
		x.UpdateDestinationWallet = false
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: qadena.qadena.ValidateTransferDoublePrimeReply"))
		}
		panic(fmt.Errorf("message qadena.qadena.ValidateTransferDoublePrimeReply does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_ValidateTransferDoublePrimeReply) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "qadena.qadena.ValidateTransferDoublePrimeReply.updateDestinationWallet":
		value := x.UpdateDestinationWallet
		return protoreflect.ValueOfBool(value)
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: qadena.qadena.ValidateTransferDoublePrimeReply"))
		}
		panic(fmt.Errorf("message qadena.qadena.ValidateTransferDoublePrimeReply does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_ValidateTransferDoublePrimeReply) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "qadena.qadena.ValidateTransferDoublePrimeReply.updateDestinationWallet":
		x.UpdateDestinationWallet = value.Bool()
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: qadena.qadena.ValidateTransferDoublePrimeReply"))
		}
		panic(fmt.Errorf("message qadena.qadena.ValidateTransferDoublePrimeReply does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_ValidateTransferDoublePrimeReply) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "qadena.qadena.ValidateTransferDoublePrimeReply.updateDestinationWallet":
		panic(fmt.Errorf("field updateDestinationWallet of message qadena.qadena.ValidateTransferDoublePrimeReply is not mutable"))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: qadena.qadena.ValidateTransferDoublePrimeReply"))
		}
		panic(fmt.Errorf("message qadena.qadena.ValidateTransferDoublePrimeReply does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_ValidateTransferDoublePrimeReply) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "qadena.qadena.ValidateTransferDoublePrimeReply.updateDestinationWallet":
		return protoreflect.ValueOfBool(false)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: qadena.qadena.ValidateTransferDoublePrimeReply"))
		}
		panic(fmt.Errorf("message qadena.qadena.ValidateTransferDoublePrimeReply does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_ValidateTransferDoublePrimeReply) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in qadena.qadena.ValidateTransferDoublePrimeReply", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_ValidateTransferDoublePrimeReply) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_ValidateTransferDoublePrimeReply) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_ValidateTransferDoublePrimeReply) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_ValidateTransferDoublePrimeReply) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*ValidateTransferDoublePrimeReply)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		if x.UpdateDestinationWallet {
			n += 2
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*ValidateTransferDoublePrimeReply)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if x.UpdateDestinationWallet {
			i--
			if x.UpdateDestinationWallet {
				dAtA[i] = 1
			} else {
				dAtA[i] = 0
			}
			i--
			dAtA[i] = 0x8
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*ValidateTransferDoublePrimeReply)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: ValidateTransferDoublePrimeReply: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: ValidateTransferDoublePrimeReply: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field UpdateDestinationWallet", wireType)
				}
				var v int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					v |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				x.UpdateDestinationWallet = bool(v != 0)
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var (
	md_ScanTransactionReply        protoreflect.MessageDescriptor
	fd_ScanTransactionReply_status protoreflect.FieldDescriptor
)

func init() {
	file_qadena_qadena_enclave_proto_init()
	md_ScanTransactionReply = File_qadena_qadena_enclave_proto.Messages().ByName("ScanTransactionReply")
	fd_ScanTransactionReply_status = md_ScanTransactionReply.Fields().ByName("status")
}

var _ protoreflect.Message = (*fastReflection_ScanTransactionReply)(nil)

type fastReflection_ScanTransactionReply ScanTransactionReply

func (x *ScanTransactionReply) ProtoReflect() protoreflect.Message {
	return (*fastReflection_ScanTransactionReply)(x)
}

func (x *ScanTransactionReply) slowProtoReflect() protoreflect.Message {
	mi := &file_qadena_qadena_enclave_proto_msgTypes[63]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_ScanTransactionReply_messageType fastReflection_ScanTransactionReply_messageType
var _ protoreflect.MessageType = fastReflection_ScanTransactionReply_messageType{}

type fastReflection_ScanTransactionReply_messageType struct{}

func (x fastReflection_ScanTransactionReply_messageType) Zero() protoreflect.Message {
	return (*fastReflection_ScanTransactionReply)(nil)
}
func (x fastReflection_ScanTransactionReply_messageType) New() protoreflect.Message {
	return new(fastReflection_ScanTransactionReply)
}
func (x fastReflection_ScanTransactionReply_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_ScanTransactionReply
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_ScanTransactionReply) Descriptor() protoreflect.MessageDescriptor {
	return md_ScanTransactionReply
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_ScanTransactionReply) Type() protoreflect.MessageType {
	return _fastReflection_ScanTransactionReply_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_ScanTransactionReply) New() protoreflect.Message {
	return new(fastReflection_ScanTransactionReply)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_ScanTransactionReply) Interface() protoreflect.ProtoMessage {
	return (*ScanTransactionReply)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_ScanTransactionReply) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.Status != false {
		value := protoreflect.ValueOfBool(x.Status)
		if !f(fd_ScanTransactionReply_status, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_ScanTransactionReply) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "qadena.qadena.ScanTransactionReply.status":
		return x.Status != false
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: qadena.qadena.ScanTransactionReply"))
		}
		panic(fmt.Errorf("message qadena.qadena.ScanTransactionReply does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_ScanTransactionReply) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "qadena.qadena.ScanTransactionReply.status":
		x.Status = false
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: qadena.qadena.ScanTransactionReply"))
		}
		panic(fmt.Errorf("message qadena.qadena.ScanTransactionReply does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_ScanTransactionReply) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "qadena.qadena.ScanTransactionReply.status":
		value := x.Status
		return protoreflect.ValueOfBool(value)
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: qadena.qadena.ScanTransactionReply"))
		}
		panic(fmt.Errorf("message qadena.qadena.ScanTransactionReply does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_ScanTransactionReply) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "qadena.qadena.ScanTransactionReply.status":
		x.Status = value.Bool()
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: qadena.qadena.ScanTransactionReply"))
		}
		panic(fmt.Errorf("message qadena.qadena.ScanTransactionReply does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_ScanTransactionReply) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "qadena.qadena.ScanTransactionReply.status":
		panic(fmt.Errorf("field status of message qadena.qadena.ScanTransactionReply is not mutable"))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: qadena.qadena.ScanTransactionReply"))
		}
		panic(fmt.Errorf("message qadena.qadena.ScanTransactionReply does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_ScanTransactionReply) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "qadena.qadena.ScanTransactionReply.status":
		return protoreflect.ValueOfBool(false)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: qadena.qadena.ScanTransactionReply"))
		}
		panic(fmt.Errorf("message qadena.qadena.ScanTransactionReply does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_ScanTransactionReply) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in qadena.qadena.ScanTransactionReply", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_ScanTransactionReply) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_ScanTransactionReply) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_ScanTransactionReply) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_ScanTransactionReply) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*ScanTransactionReply)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		if x.Status {
			n += 2
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*ScanTransactionReply)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if x.Status {
			i--
			if x.Status {
				dAtA[i] = 1
			} else {
				dAtA[i] = 0
			}
			i--
			dAtA[i] = 0x8
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*ScanTransactionReply)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: ScanTransactionReply: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: ScanTransactionReply: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Status", wireType)
				}
				var v int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					v |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				x.Status = bool(v != 0)
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var _ protoreflect.List = (*_EnclaveStoreStringArray_1_list)(nil)

type _EnclaveStoreStringArray_1_list struct {
	list *[]string
}

func (x *_EnclaveStoreStringArray_1_list) Len() int {
	if x.list == nil {
		return 0
	}
	return len(*x.list)
}

func (x *_EnclaveStoreStringArray_1_list) Get(i int) protoreflect.Value {
	return protoreflect.ValueOfString((*x.list)[i])
}

func (x *_EnclaveStoreStringArray_1_list) Set(i int, value protoreflect.Value) {
	valueUnwrapped := value.String()
	concreteValue := valueUnwrapped
	(*x.list)[i] = concreteValue
}

func (x *_EnclaveStoreStringArray_1_list) Append(value protoreflect.Value) {
	valueUnwrapped := value.String()
	concreteValue := valueUnwrapped
	*x.list = append(*x.list, concreteValue)
}

func (x *_EnclaveStoreStringArray_1_list) AppendMutable() protoreflect.Value {
	panic(fmt.Errorf("AppendMutable can not be called on message EnclaveStoreStringArray at list field A as it is not of Message kind"))
}

func (x *_EnclaveStoreStringArray_1_list) Truncate(n int) {
	*x.list = (*x.list)[:n]
}

func (x *_EnclaveStoreStringArray_1_list) NewElement() protoreflect.Value {
	v := ""
	return protoreflect.ValueOfString(v)
}

func (x *_EnclaveStoreStringArray_1_list) IsValid() bool {
	return x.list != nil
}

var (
	md_EnclaveStoreStringArray   protoreflect.MessageDescriptor
	fd_EnclaveStoreStringArray_a protoreflect.FieldDescriptor
)

func init() {
	file_qadena_qadena_enclave_proto_init()
	md_EnclaveStoreStringArray = File_qadena_qadena_enclave_proto.Messages().ByName("EnclaveStoreStringArray")
	fd_EnclaveStoreStringArray_a = md_EnclaveStoreStringArray.Fields().ByName("a")
}

var _ protoreflect.Message = (*fastReflection_EnclaveStoreStringArray)(nil)

type fastReflection_EnclaveStoreStringArray EnclaveStoreStringArray

func (x *EnclaveStoreStringArray) ProtoReflect() protoreflect.Message {
	return (*fastReflection_EnclaveStoreStringArray)(x)
}

func (x *EnclaveStoreStringArray) slowProtoReflect() protoreflect.Message {
	mi := &file_qadena_qadena_enclave_proto_msgTypes[64]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_EnclaveStoreStringArray_messageType fastReflection_EnclaveStoreStringArray_messageType
var _ protoreflect.MessageType = fastReflection_EnclaveStoreStringArray_messageType{}

type fastReflection_EnclaveStoreStringArray_messageType struct{}

func (x fastReflection_EnclaveStoreStringArray_messageType) Zero() protoreflect.Message {
	return (*fastReflection_EnclaveStoreStringArray)(nil)
}
func (x fastReflection_EnclaveStoreStringArray_messageType) New() protoreflect.Message {
	return new(fastReflection_EnclaveStoreStringArray)
}
func (x fastReflection_EnclaveStoreStringArray_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_EnclaveStoreStringArray
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_EnclaveStoreStringArray) Descriptor() protoreflect.MessageDescriptor {
	return md_EnclaveStoreStringArray
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_EnclaveStoreStringArray) Type() protoreflect.MessageType {
	return _fastReflection_EnclaveStoreStringArray_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_EnclaveStoreStringArray) New() protoreflect.Message {
	return new(fastReflection_EnclaveStoreStringArray)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_EnclaveStoreStringArray) Interface() protoreflect.ProtoMessage {
	return (*EnclaveStoreStringArray)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_EnclaveStoreStringArray) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if len(x.A) != 0 {
		value := protoreflect.ValueOfList(&_EnclaveStoreStringArray_1_list{list: &x.A})
		if !f(fd_EnclaveStoreStringArray_a, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_EnclaveStoreStringArray) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "qadena.qadena.EnclaveStoreStringArray.a":
		return len(x.A) != 0
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: qadena.qadena.EnclaveStoreStringArray"))
		}
		panic(fmt.Errorf("message qadena.qadena.EnclaveStoreStringArray does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_EnclaveStoreStringArray) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "qadena.qadena.EnclaveStoreStringArray.a":
		x.A = nil
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: qadena.qadena.EnclaveStoreStringArray"))
		}
		panic(fmt.Errorf("message qadena.qadena.EnclaveStoreStringArray does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_EnclaveStoreStringArray) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "qadena.qadena.EnclaveStoreStringArray.a":
		if len(x.A) == 0 {
			return protoreflect.ValueOfList(&_EnclaveStoreStringArray_1_list{})
		}
		listValue := &_EnclaveStoreStringArray_1_list{list: &x.A}
		return protoreflect.ValueOfList(listValue)
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: qadena.qadena.EnclaveStoreStringArray"))
		}
		panic(fmt.Errorf("message qadena.qadena.EnclaveStoreStringArray does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_EnclaveStoreStringArray) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "qadena.qadena.EnclaveStoreStringArray.a":
		lv := value.List()
		clv := lv.(*_EnclaveStoreStringArray_1_list)
		x.A = *clv.list
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: qadena.qadena.EnclaveStoreStringArray"))
		}
		panic(fmt.Errorf("message qadena.qadena.EnclaveStoreStringArray does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_EnclaveStoreStringArray) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "qadena.qadena.EnclaveStoreStringArray.a":
		if x.A == nil {
			x.A = []string{}
		}
		value := &_EnclaveStoreStringArray_1_list{list: &x.A}
		return protoreflect.ValueOfList(value)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: qadena.qadena.EnclaveStoreStringArray"))
		}
		panic(fmt.Errorf("message qadena.qadena.EnclaveStoreStringArray does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_EnclaveStoreStringArray) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "qadena.qadena.EnclaveStoreStringArray.a":
		list := []string{}
		return protoreflect.ValueOfList(&_EnclaveStoreStringArray_1_list{list: &list})
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: qadena.qadena.EnclaveStoreStringArray"))
		}
		panic(fmt.Errorf("message qadena.qadena.EnclaveStoreStringArray does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_EnclaveStoreStringArray) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in qadena.qadena.EnclaveStoreStringArray", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_EnclaveStoreStringArray) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_EnclaveStoreStringArray) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_EnclaveStoreStringArray) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_EnclaveStoreStringArray) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*EnclaveStoreStringArray)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		if len(x.A) > 0 {
			for _, s := range x.A {
				l = len(s)
				n += 1 + l + runtime.Sov(uint64(l))
			}
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*EnclaveStoreStringArray)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if len(x.A) > 0 {
			for iNdEx := len(x.A) - 1; iNdEx >= 0; iNdEx-- {
				i -= len(x.A[iNdEx])
				copy(dAtA[i:], x.A[iNdEx])
				i = runtime.EncodeVarint(dAtA, i, uint64(len(x.A[iNdEx])))
				i--
				dAtA[i] = 0xa
			}
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*EnclaveStoreStringArray)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: EnclaveStoreStringArray: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: EnclaveStoreStringArray: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field A", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.A = append(x.A, string(dAtA[iNdEx:postIndex]))
				iNdEx = postIndex
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var (
	md_EnclaveStoreString   protoreflect.MessageDescriptor
	fd_EnclaveStoreString_s protoreflect.FieldDescriptor
)

func init() {
	file_qadena_qadena_enclave_proto_init()
	md_EnclaveStoreString = File_qadena_qadena_enclave_proto.Messages().ByName("EnclaveStoreString")
	fd_EnclaveStoreString_s = md_EnclaveStoreString.Fields().ByName("s")
}

var _ protoreflect.Message = (*fastReflection_EnclaveStoreString)(nil)

type fastReflection_EnclaveStoreString EnclaveStoreString

func (x *EnclaveStoreString) ProtoReflect() protoreflect.Message {
	return (*fastReflection_EnclaveStoreString)(x)
}

func (x *EnclaveStoreString) slowProtoReflect() protoreflect.Message {
	mi := &file_qadena_qadena_enclave_proto_msgTypes[65]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_EnclaveStoreString_messageType fastReflection_EnclaveStoreString_messageType
var _ protoreflect.MessageType = fastReflection_EnclaveStoreString_messageType{}

type fastReflection_EnclaveStoreString_messageType struct{}

func (x fastReflection_EnclaveStoreString_messageType) Zero() protoreflect.Message {
	return (*fastReflection_EnclaveStoreString)(nil)
}
func (x fastReflection_EnclaveStoreString_messageType) New() protoreflect.Message {
	return new(fastReflection_EnclaveStoreString)
}
func (x fastReflection_EnclaveStoreString_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_EnclaveStoreString
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_EnclaveStoreString) Descriptor() protoreflect.MessageDescriptor {
	return md_EnclaveStoreString
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_EnclaveStoreString) Type() protoreflect.MessageType {
	return _fastReflection_EnclaveStoreString_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_EnclaveStoreString) New() protoreflect.Message {
	return new(fastReflection_EnclaveStoreString)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_EnclaveStoreString) Interface() protoreflect.ProtoMessage {
	return (*EnclaveStoreString)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_EnclaveStoreString) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.S != "" {
		value := protoreflect.ValueOfString(x.S)
		if !f(fd_EnclaveStoreString_s, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_EnclaveStoreString) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "qadena.qadena.EnclaveStoreString.s":
		return x.S != ""
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: qadena.qadena.EnclaveStoreString"))
		}
		panic(fmt.Errorf("message qadena.qadena.EnclaveStoreString does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_EnclaveStoreString) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "qadena.qadena.EnclaveStoreString.s":
		x.S = ""
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: qadena.qadena.EnclaveStoreString"))
		}
		panic(fmt.Errorf("message qadena.qadena.EnclaveStoreString does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_EnclaveStoreString) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "qadena.qadena.EnclaveStoreString.s":
		value := x.S
		return protoreflect.ValueOfString(value)
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: qadena.qadena.EnclaveStoreString"))
		}
		panic(fmt.Errorf("message qadena.qadena.EnclaveStoreString does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_EnclaveStoreString) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "qadena.qadena.EnclaveStoreString.s":
		x.S = value.Interface().(string)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: qadena.qadena.EnclaveStoreString"))
		}
		panic(fmt.Errorf("message qadena.qadena.EnclaveStoreString does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_EnclaveStoreString) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "qadena.qadena.EnclaveStoreString.s":
		panic(fmt.Errorf("field s of message qadena.qadena.EnclaveStoreString is not mutable"))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: qadena.qadena.EnclaveStoreString"))
		}
		panic(fmt.Errorf("message qadena.qadena.EnclaveStoreString does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_EnclaveStoreString) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "qadena.qadena.EnclaveStoreString.s":
		return protoreflect.ValueOfString("")
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: qadena.qadena.EnclaveStoreString"))
		}
		panic(fmt.Errorf("message qadena.qadena.EnclaveStoreString does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_EnclaveStoreString) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in qadena.qadena.EnclaveStoreString", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_EnclaveStoreString) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_EnclaveStoreString) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_EnclaveStoreString) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_EnclaveStoreString) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*EnclaveStoreString)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		l = len(x.S)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*EnclaveStoreString)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if len(x.S) > 0 {
			i -= len(x.S)
			copy(dAtA[i:], x.S)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.S)))
			i--
			dAtA[i] = 0xa
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*EnclaveStoreString)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: EnclaveStoreString: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: EnclaveStoreString: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field S", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.S = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var _ protoreflect.List = (*_EnclaveEnclaveIdentityArray_1_list)(nil)

type _EnclaveEnclaveIdentityArray_1_list struct {
	list *[]*EnclaveIdentity
}

func (x *_EnclaveEnclaveIdentityArray_1_list) Len() int {
	if x.list == nil {
		return 0
	}
	return len(*x.list)
}

func (x *_EnclaveEnclaveIdentityArray_1_list) Get(i int) protoreflect.Value {
	return protoreflect.ValueOfMessage((*x.list)[i].ProtoReflect())
}

func (x *_EnclaveEnclaveIdentityArray_1_list) Set(i int, value protoreflect.Value) {
	valueUnwrapped := value.Message()
	concreteValue := valueUnwrapped.Interface().(*EnclaveIdentity)
	(*x.list)[i] = concreteValue
}

func (x *_EnclaveEnclaveIdentityArray_1_list) Append(value protoreflect.Value) {
	valueUnwrapped := value.Message()
	concreteValue := valueUnwrapped.Interface().(*EnclaveIdentity)
	*x.list = append(*x.list, concreteValue)
}

func (x *_EnclaveEnclaveIdentityArray_1_list) AppendMutable() protoreflect.Value {
	v := new(EnclaveIdentity)
	*x.list = append(*x.list, v)
	return protoreflect.ValueOfMessage(v.ProtoReflect())
}

func (x *_EnclaveEnclaveIdentityArray_1_list) Truncate(n int) {
	for i := n; i < len(*x.list); i++ {
		(*x.list)[i] = nil
	}
	*x.list = (*x.list)[:n]
}

func (x *_EnclaveEnclaveIdentityArray_1_list) NewElement() protoreflect.Value {
	v := new(EnclaveIdentity)
	return protoreflect.ValueOfMessage(v.ProtoReflect())
}

func (x *_EnclaveEnclaveIdentityArray_1_list) IsValid() bool {
	return x.list != nil
}

var (
	md_EnclaveEnclaveIdentityArray          protoreflect.MessageDescriptor
	fd_EnclaveEnclaveIdentityArray_identity protoreflect.FieldDescriptor
)

func init() {
	file_qadena_qadena_enclave_proto_init()
	md_EnclaveEnclaveIdentityArray = File_qadena_qadena_enclave_proto.Messages().ByName("EnclaveEnclaveIdentityArray")
	fd_EnclaveEnclaveIdentityArray_identity = md_EnclaveEnclaveIdentityArray.Fields().ByName("identity")
}

var _ protoreflect.Message = (*fastReflection_EnclaveEnclaveIdentityArray)(nil)

type fastReflection_EnclaveEnclaveIdentityArray EnclaveEnclaveIdentityArray

func (x *EnclaveEnclaveIdentityArray) ProtoReflect() protoreflect.Message {
	return (*fastReflection_EnclaveEnclaveIdentityArray)(x)
}

func (x *EnclaveEnclaveIdentityArray) slowProtoReflect() protoreflect.Message {
	mi := &file_qadena_qadena_enclave_proto_msgTypes[66]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_EnclaveEnclaveIdentityArray_messageType fastReflection_EnclaveEnclaveIdentityArray_messageType
var _ protoreflect.MessageType = fastReflection_EnclaveEnclaveIdentityArray_messageType{}

type fastReflection_EnclaveEnclaveIdentityArray_messageType struct{}

func (x fastReflection_EnclaveEnclaveIdentityArray_messageType) Zero() protoreflect.Message {
	return (*fastReflection_EnclaveEnclaveIdentityArray)(nil)
}
func (x fastReflection_EnclaveEnclaveIdentityArray_messageType) New() protoreflect.Message {
	return new(fastReflection_EnclaveEnclaveIdentityArray)
}
func (x fastReflection_EnclaveEnclaveIdentityArray_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_EnclaveEnclaveIdentityArray
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_EnclaveEnclaveIdentityArray) Descriptor() protoreflect.MessageDescriptor {
	return md_EnclaveEnclaveIdentityArray
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_EnclaveEnclaveIdentityArray) Type() protoreflect.MessageType {
	return _fastReflection_EnclaveEnclaveIdentityArray_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_EnclaveEnclaveIdentityArray) New() protoreflect.Message {
	return new(fastReflection_EnclaveEnclaveIdentityArray)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_EnclaveEnclaveIdentityArray) Interface() protoreflect.ProtoMessage {
	return (*EnclaveEnclaveIdentityArray)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_EnclaveEnclaveIdentityArray) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if len(x.Identity) != 0 {
		value := protoreflect.ValueOfList(&_EnclaveEnclaveIdentityArray_1_list{list: &x.Identity})
		if !f(fd_EnclaveEnclaveIdentityArray_identity, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_EnclaveEnclaveIdentityArray) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "qadena.qadena.EnclaveEnclaveIdentityArray.identity":
		return len(x.Identity) != 0
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: qadena.qadena.EnclaveEnclaveIdentityArray"))
		}
		panic(fmt.Errorf("message qadena.qadena.EnclaveEnclaveIdentityArray does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_EnclaveEnclaveIdentityArray) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "qadena.qadena.EnclaveEnclaveIdentityArray.identity":
		x.Identity = nil
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: qadena.qadena.EnclaveEnclaveIdentityArray"))
		}
		panic(fmt.Errorf("message qadena.qadena.EnclaveEnclaveIdentityArray does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_EnclaveEnclaveIdentityArray) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "qadena.qadena.EnclaveEnclaveIdentityArray.identity":
		if len(x.Identity) == 0 {
			return protoreflect.ValueOfList(&_EnclaveEnclaveIdentityArray_1_list{})
		}
		listValue := &_EnclaveEnclaveIdentityArray_1_list{list: &x.Identity}
		return protoreflect.ValueOfList(listValue)
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: qadena.qadena.EnclaveEnclaveIdentityArray"))
		}
		panic(fmt.Errorf("message qadena.qadena.EnclaveEnclaveIdentityArray does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_EnclaveEnclaveIdentityArray) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "qadena.qadena.EnclaveEnclaveIdentityArray.identity":
		lv := value.List()
		clv := lv.(*_EnclaveEnclaveIdentityArray_1_list)
		x.Identity = *clv.list
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: qadena.qadena.EnclaveEnclaveIdentityArray"))
		}
		panic(fmt.Errorf("message qadena.qadena.EnclaveEnclaveIdentityArray does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_EnclaveEnclaveIdentityArray) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "qadena.qadena.EnclaveEnclaveIdentityArray.identity":
		if x.Identity == nil {
			x.Identity = []*EnclaveIdentity{}
		}
		value := &_EnclaveEnclaveIdentityArray_1_list{list: &x.Identity}
		return protoreflect.ValueOfList(value)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: qadena.qadena.EnclaveEnclaveIdentityArray"))
		}
		panic(fmt.Errorf("message qadena.qadena.EnclaveEnclaveIdentityArray does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_EnclaveEnclaveIdentityArray) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "qadena.qadena.EnclaveEnclaveIdentityArray.identity":
		list := []*EnclaveIdentity{}
		return protoreflect.ValueOfList(&_EnclaveEnclaveIdentityArray_1_list{list: &list})
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: qadena.qadena.EnclaveEnclaveIdentityArray"))
		}
		panic(fmt.Errorf("message qadena.qadena.EnclaveEnclaveIdentityArray does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_EnclaveEnclaveIdentityArray) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in qadena.qadena.EnclaveEnclaveIdentityArray", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_EnclaveEnclaveIdentityArray) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_EnclaveEnclaveIdentityArray) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_EnclaveEnclaveIdentityArray) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_EnclaveEnclaveIdentityArray) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*EnclaveEnclaveIdentityArray)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		if len(x.Identity) > 0 {
			for _, e := range x.Identity {
				l = options.Size(e)
				n += 1 + l + runtime.Sov(uint64(l))
			}
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*EnclaveEnclaveIdentityArray)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if len(x.Identity) > 0 {
			for iNdEx := len(x.Identity) - 1; iNdEx >= 0; iNdEx-- {
				encoded, err := options.Marshal(x.Identity[iNdEx])
				if err != nil {
					return protoiface.MarshalOutput{
						NoUnkeyedLiterals: input.NoUnkeyedLiterals,
						Buf:               input.Buf,
					}, err
				}
				i -= len(encoded)
				copy(dAtA[i:], encoded)
				i = runtime.EncodeVarint(dAtA, i, uint64(len(encoded)))
				i--
				dAtA[i] = 0xa
			}
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*EnclaveEnclaveIdentityArray)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: EnclaveEnclaveIdentityArray: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: EnclaveEnclaveIdentityArray: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Identity", wireType)
				}
				var msglen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					msglen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if msglen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + msglen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Identity = append(x.Identity, &EnclaveIdentity{})
				if err := options.Unmarshal(dAtA[iNdEx:postIndex], x.Identity[len(x.Identity)-1]); err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				iNdEx = postIndex
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

// Copyright 2015 gRPC authors.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.0
// 	protoc        (unknown)
// source: qadena/qadena/enclave.proto

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// The request message containing the user's name.
type HelloRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *HelloRequest) Reset() {
	*x = HelloRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_qadena_qadena_enclave_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HelloRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HelloRequest) ProtoMessage() {}

// Deprecated: Use HelloRequest.ProtoReflect.Descriptor instead.
func (*HelloRequest) Descriptor() ([]byte, []int) {
	return file_qadena_qadena_enclave_proto_rawDescGZIP(), []int{0}
}

func (x *HelloRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

// The response message containing the greetings
type HelloReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Message string `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *HelloReply) Reset() {
	*x = HelloReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_qadena_qadena_enclave_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HelloReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HelloReply) ProtoMessage() {}

// Deprecated: Use HelloReply.ProtoReflect.Descriptor instead.
func (*HelloReply) Descriptor() ([]byte, []int) {
	return file_qadena_qadena_enclave_proto_rawDescGZIP(), []int{1}
}

func (x *HelloReply) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type MsgEndBlock struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *MsgEndBlock) Reset() {
	*x = MsgEndBlock{}
	if protoimpl.UnsafeEnabled {
		mi := &file_qadena_qadena_enclave_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MsgEndBlock) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MsgEndBlock) ProtoMessage() {}

// Deprecated: Use MsgEndBlock.ProtoReflect.Descriptor instead.
func (*MsgEndBlock) Descriptor() ([]byte, []int) {
	return file_qadena_qadena_enclave_proto_rawDescGZIP(), []int{2}
}

type EndBlockReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *EndBlockReply) Reset() {
	*x = EndBlockReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_qadena_qadena_enclave_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EndBlockReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EndBlockReply) ProtoMessage() {}

// Deprecated: Use EndBlockReply.ProtoReflect.Descriptor instead.
func (*EndBlockReply) Descriptor() ([]byte, []int) {
	return file_qadena_qadena_enclave_proto_rawDescGZIP(), []int{3}
}

type QueryGetSubWalletIDByOriginalWalletIDResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SubWalletID string `protobuf:"bytes,1,opt,name=subWalletID,proto3" json:"subWalletID,omitempty"`
}

func (x *QueryGetSubWalletIDByOriginalWalletIDResponse) Reset() {
	*x = QueryGetSubWalletIDByOriginalWalletIDResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_qadena_qadena_enclave_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryGetSubWalletIDByOriginalWalletIDResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryGetSubWalletIDByOriginalWalletIDResponse) ProtoMessage() {}

// Deprecated: Use QueryGetSubWalletIDByOriginalWalletIDResponse.ProtoReflect.Descriptor instead.
func (*QueryGetSubWalletIDByOriginalWalletIDResponse) Descriptor() ([]byte, []int) {
	return file_qadena_qadena_enclave_proto_rawDescGZIP(), []int{4}
}

func (x *QueryGetSubWalletIDByOriginalWalletIDResponse) GetSubWalletID() string {
	if x != nil {
		return x.SubWalletID
	}
	return ""
}

type StoreHash struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Key  string `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	Hash string `protobuf:"bytes,2,opt,name=hash,proto3" json:"hash,omitempty"`
}

func (x *StoreHash) Reset() {
	*x = StoreHash{}
	if protoimpl.UnsafeEnabled {
		mi := &file_qadena_qadena_enclave_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StoreHash) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StoreHash) ProtoMessage() {}

// Deprecated: Use StoreHash.ProtoReflect.Descriptor instead.
func (*StoreHash) Descriptor() ([]byte, []int) {
	return file_qadena_qadena_enclave_proto_rawDescGZIP(), []int{5}
}

func (x *StoreHash) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *StoreHash) GetHash() string {
	if x != nil {
		return x.Hash
	}
	return ""
}

type MsgGetStoreHash struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *MsgGetStoreHash) Reset() {
	*x = MsgGetStoreHash{}
	if protoimpl.UnsafeEnabled {
		mi := &file_qadena_qadena_enclave_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MsgGetStoreHash) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MsgGetStoreHash) ProtoMessage() {}

// Deprecated: Use MsgGetStoreHash.ProtoReflect.Descriptor instead.
func (*MsgGetStoreHash) Descriptor() ([]byte, []int) {
	return file_qadena_qadena_enclave_proto_rawDescGZIP(), []int{6}
}

type GetStoreHashReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Hashes []*StoreHash `protobuf:"bytes,1,rep,name=hashes,proto3" json:"hashes,omitempty"`
}

func (x *GetStoreHashReply) Reset() {
	*x = GetStoreHashReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_qadena_qadena_enclave_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetStoreHashReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetStoreHashReply) ProtoMessage() {}

// Deprecated: Use GetStoreHashReply.ProtoReflect.Descriptor instead.
func (*GetStoreHashReply) Descriptor() ([]byte, []int) {
	return file_qadena_qadena_enclave_proto_rawDescGZIP(), []int{7}
}

func (x *GetStoreHashReply) GetHashes() []*StoreHash {
	if x != nil {
		return x.Hashes
	}
	return nil
}

type MsgAddAsValidator struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *MsgAddAsValidator) Reset() {
	*x = MsgAddAsValidator{}
	if protoimpl.UnsafeEnabled {
		mi := &file_qadena_qadena_enclave_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MsgAddAsValidator) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MsgAddAsValidator) ProtoMessage() {}

// Deprecated: Use MsgAddAsValidator.ProtoReflect.Descriptor instead.
func (*MsgAddAsValidator) Descriptor() ([]byte, []int) {
	return file_qadena_qadena_enclave_proto_rawDescGZIP(), []int{8}
}

type MsgSyncEnclave struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PioneerID              string `protobuf:"bytes,1,opt,name=pioneerID,proto3" json:"pioneerID,omitempty"`
	ExternalAddress        string `protobuf:"bytes,2,opt,name=externalAddress,proto3" json:"externalAddress,omitempty"`
	PioneerArmorPrivK      string `protobuf:"bytes,3,opt,name=pioneerArmorPrivK,proto3" json:"pioneerArmorPrivK,omitempty"`
	PioneerArmorPassPhrase string `protobuf:"bytes,4,opt,name=pioneerArmorPassPhrase,proto3" json:"pioneerArmorPassPhrase,omitempty"`
	SeedNode               string `protobuf:"bytes,5,opt,name=seedNode,proto3" json:"seedNode,omitempty"`
}

func (x *MsgSyncEnclave) Reset() {
	*x = MsgSyncEnclave{}
	if protoimpl.UnsafeEnabled {
		mi := &file_qadena_qadena_enclave_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MsgSyncEnclave) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MsgSyncEnclave) ProtoMessage() {}

// Deprecated: Use MsgSyncEnclave.ProtoReflect.Descriptor instead.
func (*MsgSyncEnclave) Descriptor() ([]byte, []int) {
	return file_qadena_qadena_enclave_proto_rawDescGZIP(), []int{9}
}

func (x *MsgSyncEnclave) GetPioneerID() string {
	if x != nil {
		return x.PioneerID
	}
	return ""
}

func (x *MsgSyncEnclave) GetExternalAddress() string {
	if x != nil {
		return x.ExternalAddress
	}
	return ""
}

func (x *MsgSyncEnclave) GetPioneerArmorPrivK() string {
	if x != nil {
		return x.PioneerArmorPrivK
	}
	return ""
}

func (x *MsgSyncEnclave) GetPioneerArmorPassPhrase() string {
	if x != nil {
		return x.PioneerArmorPassPhrase
	}
	return ""
}

func (x *MsgSyncEnclave) GetSeedNode() string {
	if x != nil {
		return x.SeedNode
	}
	return ""
}

type MsgUpgradeEnclave struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RemoteReport []byte `protobuf:"bytes,1,opt,name=remoteReport,proto3" json:"remoteReport,omitempty"`
	EnclavePubK  string `protobuf:"bytes,2,opt,name=enclavePubK,proto3" json:"enclavePubK,omitempty"`
}

func (x *MsgUpgradeEnclave) Reset() {
	*x = MsgUpgradeEnclave{}
	if protoimpl.UnsafeEnabled {
		mi := &file_qadena_qadena_enclave_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MsgUpgradeEnclave) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MsgUpgradeEnclave) ProtoMessage() {}

// Deprecated: Use MsgUpgradeEnclave.ProtoReflect.Descriptor instead.
func (*MsgUpgradeEnclave) Descriptor() ([]byte, []int) {
	return file_qadena_qadena_enclave_proto_rawDescGZIP(), []int{10}
}

func (x *MsgUpgradeEnclave) GetRemoteReport() []byte {
	if x != nil {
		return x.RemoteReport
	}
	return nil
}

func (x *MsgUpgradeEnclave) GetEnclavePubK() string {
	if x != nil {
		return x.EnclavePubK
	}
	return ""
}

type UpgradeEnclaveReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RemoteReport                      []byte `protobuf:"bytes,1,opt,name=remoteReport,proto3" json:"remoteReport,omitempty"`
	EncEnclavePrivateStateEnclavePubK []byte `protobuf:"bytes,2,opt,name=encEnclavePrivateStateEnclavePubK,proto3" json:"encEnclavePrivateStateEnclavePubK,omitempty"`
}

func (x *UpgradeEnclaveReply) Reset() {
	*x = UpgradeEnclaveReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_qadena_qadena_enclave_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpgradeEnclaveReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpgradeEnclaveReply) ProtoMessage() {}

// Deprecated: Use UpgradeEnclaveReply.ProtoReflect.Descriptor instead.
func (*UpgradeEnclaveReply) Descriptor() ([]byte, []int) {
	return file_qadena_qadena_enclave_proto_rawDescGZIP(), []int{11}
}

func (x *UpgradeEnclaveReply) GetRemoteReport() []byte {
	if x != nil {
		return x.RemoteReport
	}
	return nil
}

func (x *UpgradeEnclaveReply) GetEncEnclavePrivateStateEnclavePubK() []byte {
	if x != nil {
		return x.EncEnclavePrivateStateEnclavePubK
	}
	return nil
}

type MsgExportPrivateKey struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PubKID string `protobuf:"bytes,1,opt,name=pubKID,proto3" json:"pubKID,omitempty"`
}

func (x *MsgExportPrivateKey) Reset() {
	*x = MsgExportPrivateKey{}
	if protoimpl.UnsafeEnabled {
		mi := &file_qadena_qadena_enclave_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MsgExportPrivateKey) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MsgExportPrivateKey) ProtoMessage() {}

// Deprecated: Use MsgExportPrivateKey.ProtoReflect.Descriptor instead.
func (*MsgExportPrivateKey) Descriptor() ([]byte, []int) {
	return file_qadena_qadena_enclave_proto_rawDescGZIP(), []int{12}
}

func (x *MsgExportPrivateKey) GetPubKID() string {
	if x != nil {
		return x.PubKID
	}
	return ""
}

type MsgRemovePrivateKey struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PubKID string `protobuf:"bytes,1,opt,name=pubKID,proto3" json:"pubKID,omitempty"`
}

func (x *MsgRemovePrivateKey) Reset() {
	*x = MsgRemovePrivateKey{}
	if protoimpl.UnsafeEnabled {
		mi := &file_qadena_qadena_enclave_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MsgRemovePrivateKey) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MsgRemovePrivateKey) ProtoMessage() {}

// Deprecated: Use MsgRemovePrivateKey.ProtoReflect.Descriptor instead.
func (*MsgRemovePrivateKey) Descriptor() ([]byte, []int) {
	return file_qadena_qadena_enclave_proto_rawDescGZIP(), []int{13}
}

func (x *MsgRemovePrivateKey) GetPubKID() string {
	if x != nil {
		return x.PubKID
	}
	return ""
}

type MsgExportPrivateState struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *MsgExportPrivateState) Reset() {
	*x = MsgExportPrivateState{}
	if protoimpl.UnsafeEnabled {
		mi := &file_qadena_qadena_enclave_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MsgExportPrivateState) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MsgExportPrivateState) ProtoMessage() {}

// Deprecated: Use MsgExportPrivateState.ProtoReflect.Descriptor instead.
func (*MsgExportPrivateState) Descriptor() ([]byte, []int) {
	return file_qadena_qadena_enclave_proto_rawDescGZIP(), []int{14}
}

type MsgUpdateSSIntervalKey struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *MsgUpdateSSIntervalKey) Reset() {
	*x = MsgUpdateSSIntervalKey{}
	if protoimpl.UnsafeEnabled {
		mi := &file_qadena_qadena_enclave_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MsgUpdateSSIntervalKey) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MsgUpdateSSIntervalKey) ProtoMessage() {}

// Deprecated: Use MsgUpdateSSIntervalKey.ProtoReflect.Descriptor instead.
func (*MsgUpdateSSIntervalKey) Descriptor() ([]byte, []int) {
	return file_qadena_qadena_enclave_proto_rawDescGZIP(), []int{15}
}

type UpdateSSIntervalKeyReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *UpdateSSIntervalKeyReply) Reset() {
	*x = UpdateSSIntervalKeyReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_qadena_qadena_enclave_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateSSIntervalKeyReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateSSIntervalKeyReply) ProtoMessage() {}

// Deprecated: Use UpdateSSIntervalKeyReply.ProtoReflect.Descriptor instead.
func (*UpdateSSIntervalKeyReply) Descriptor() ([]byte, []int) {
	return file_qadena_qadena_enclave_proto_rawDescGZIP(), []int{16}
}

type RemovePrivateKeyReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *RemovePrivateKeyReply) Reset() {
	*x = RemovePrivateKeyReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_qadena_qadena_enclave_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RemovePrivateKeyReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemovePrivateKeyReply) ProtoMessage() {}

// Deprecated: Use RemovePrivateKeyReply.ProtoReflect.Descriptor instead.
func (*RemovePrivateKeyReply) Descriptor() ([]byte, []int) {
	return file_qadena_qadena_enclave_proto_rawDescGZIP(), []int{17}
}

type ExportPrivateKeyReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PrivK string `protobuf:"bytes,1,opt,name=privK,proto3" json:"privK,omitempty"`
}

func (x *ExportPrivateKeyReply) Reset() {
	*x = ExportPrivateKeyReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_qadena_qadena_enclave_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ExportPrivateKeyReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExportPrivateKeyReply) ProtoMessage() {}

// Deprecated: Use ExportPrivateKeyReply.ProtoReflect.Descriptor instead.
func (*ExportPrivateKeyReply) Descriptor() ([]byte, []int) {
	return file_qadena_qadena_enclave_proto_rawDescGZIP(), []int{18}
}

func (x *ExportPrivateKeyReply) GetPrivK() string {
	if x != nil {
		return x.PrivK
	}
	return ""
}

type ExportPrivateStateReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	State string `protobuf:"bytes,1,opt,name=state,proto3" json:"state,omitempty"`
}

func (x *ExportPrivateStateReply) Reset() {
	*x = ExportPrivateStateReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_qadena_qadena_enclave_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ExportPrivateStateReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExportPrivateStateReply) ProtoMessage() {}

// Deprecated: Use ExportPrivateStateReply.ProtoReflect.Descriptor instead.
func (*ExportPrivateStateReply) Descriptor() ([]byte, []int) {
	return file_qadena_qadena_enclave_proto_rawDescGZIP(), []int{19}
}

func (x *ExportPrivateStateReply) GetState() string {
	if x != nil {
		return x.State
	}
	return ""
}

type ValidateAuthenticateServiceProviderRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PubKID              string `protobuf:"bytes,1,opt,name=pubKID,proto3" json:"pubKID,omitempty"`
	ServiceProviderType string `protobuf:"bytes,2,opt,name=serviceProviderType,proto3" json:"serviceProviderType,omitempty"`
}

func (x *ValidateAuthenticateServiceProviderRequest) Reset() {
	*x = ValidateAuthenticateServiceProviderRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_qadena_qadena_enclave_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ValidateAuthenticateServiceProviderRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ValidateAuthenticateServiceProviderRequest) ProtoMessage() {}

// Deprecated: Use ValidateAuthenticateServiceProviderRequest.ProtoReflect.Descriptor instead.
func (*ValidateAuthenticateServiceProviderRequest) Descriptor() ([]byte, []int) {
	return file_qadena_qadena_enclave_proto_rawDescGZIP(), []int{20}
}

func (x *ValidateAuthenticateServiceProviderRequest) GetPubKID() string {
	if x != nil {
		return x.PubKID
	}
	return ""
}

func (x *ValidateAuthenticateServiceProviderRequest) GetServiceProviderType() string {
	if x != nil {
		return x.ServiceProviderType
	}
	return ""
}

type ValidateAuthenticateServiceProviderReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status bool `protobuf:"varint,1,opt,name=status,proto3" json:"status,omitempty"`
}

func (x *ValidateAuthenticateServiceProviderReply) Reset() {
	*x = ValidateAuthenticateServiceProviderReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_qadena_qadena_enclave_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ValidateAuthenticateServiceProviderReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ValidateAuthenticateServiceProviderReply) ProtoMessage() {}

// Deprecated: Use ValidateAuthenticateServiceProviderReply.ProtoReflect.Descriptor instead.
func (*ValidateAuthenticateServiceProviderReply) Descriptor() ([]byte, []int) {
	return file_qadena_qadena_enclave_proto_rawDescGZIP(), []int{21}
}

func (x *ValidateAuthenticateServiceProviderReply) GetStatus() bool {
	if x != nil {
		return x.Status
	}
	return false
}

type MsgInitEnclave struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PioneerID              string `protobuf:"bytes,1,opt,name=pioneerID,proto3" json:"pioneerID,omitempty"`
	ExternalAddress        string `protobuf:"bytes,2,opt,name=externalAddress,proto3" json:"externalAddress,omitempty"`
	PioneerArmorPrivK      string `protobuf:"bytes,3,opt,name=pioneerArmorPrivK,proto3" json:"pioneerArmorPrivK,omitempty"`
	PioneerArmorPassPhrase string `protobuf:"bytes,4,opt,name=pioneerArmorPassPhrase,proto3" json:"pioneerArmorPassPhrase,omitempty"`
	JarID                  string `protobuf:"bytes,5,opt,name=jarID,proto3" json:"jarID,omitempty"`
	RegulatorID            string `protobuf:"bytes,6,opt,name=regulatorID,proto3" json:"regulatorID,omitempty"`
	SignerID               string `protobuf:"bytes,7,opt,name=signerID,proto3" json:"signerID,omitempty"`
	UniqueID               string `protobuf:"bytes,8,opt,name=uniqueID,proto3" json:"uniqueID,omitempty"`
}

func (x *MsgInitEnclave) Reset() {
	*x = MsgInitEnclave{}
	if protoimpl.UnsafeEnabled {
		mi := &file_qadena_qadena_enclave_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MsgInitEnclave) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MsgInitEnclave) ProtoMessage() {}

// Deprecated: Use MsgInitEnclave.ProtoReflect.Descriptor instead.
func (*MsgInitEnclave) Descriptor() ([]byte, []int) {
	return file_qadena_qadena_enclave_proto_rawDescGZIP(), []int{22}
}

func (x *MsgInitEnclave) GetPioneerID() string {
	if x != nil {
		return x.PioneerID
	}
	return ""
}

func (x *MsgInitEnclave) GetExternalAddress() string {
	if x != nil {
		return x.ExternalAddress
	}
	return ""
}

func (x *MsgInitEnclave) GetPioneerArmorPrivK() string {
	if x != nil {
		return x.PioneerArmorPrivK
	}
	return ""
}

func (x *MsgInitEnclave) GetPioneerArmorPassPhrase() string {
	if x != nil {
		return x.PioneerArmorPassPhrase
	}
	return ""
}

func (x *MsgInitEnclave) GetJarID() string {
	if x != nil {
		return x.JarID
	}
	return ""
}

func (x *MsgInitEnclave) GetRegulatorID() string {
	if x != nil {
		return x.RegulatorID
	}
	return ""
}

func (x *MsgInitEnclave) GetSignerID() string {
	if x != nil {
		return x.SignerID
	}
	return ""
}

func (x *MsgInitEnclave) GetUniqueID() string {
	if x != nil {
		return x.UniqueID
	}
	return ""
}

type VShareSignatory struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EncSignatoryVShare []byte          `protobuf:"bytes,1,opt,name=encSignatoryVShare,proto3" json:"encSignatoryVShare,omitempty"`
	VShareBind         *VShareBindData `protobuf:"bytes,2,opt,name=vShareBind,proto3" json:"vShareBind,omitempty"`
}

func (x *VShareSignatory) Reset() {
	*x = VShareSignatory{}
	if protoimpl.UnsafeEnabled {
		mi := &file_qadena_qadena_enclave_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VShareSignatory) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VShareSignatory) ProtoMessage() {}

// Deprecated: Use VShareSignatory.ProtoReflect.Descriptor instead.
func (*VShareSignatory) Descriptor() ([]byte, []int) {
	return file_qadena_qadena_enclave_proto_rawDescGZIP(), []int{23}
}

func (x *VShareSignatory) GetEncSignatoryVShare() []byte {
	if x != nil {
		return x.EncSignatoryVShare
	}
	return nil
}

func (x *VShareSignatory) GetVShareBind() *VShareBindData {
	if x != nil {
		return x.VShareBind
	}
	return nil
}

type ValidateAuthorizedSignerRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Creator             string             `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	RequestingSignatory *VShareSignatory   `protobuf:"bytes,2,opt,name=requestingSignatory,proto3" json:"requestingSignatory,omitempty"`
	RequiredSignatory   []*VShareSignatory `protobuf:"bytes,3,rep,name=requiredSignatory,proto3" json:"requiredSignatory,omitempty"`
	CompletedSignatory  []*VShareSignatory `protobuf:"bytes,4,rep,name=completedSignatory,proto3" json:"completedSignatory,omitempty"`
}

func (x *ValidateAuthorizedSignerRequest) Reset() {
	*x = ValidateAuthorizedSignerRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_qadena_qadena_enclave_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ValidateAuthorizedSignerRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ValidateAuthorizedSignerRequest) ProtoMessage() {}

// Deprecated: Use ValidateAuthorizedSignerRequest.ProtoReflect.Descriptor instead.
func (*ValidateAuthorizedSignerRequest) Descriptor() ([]byte, []int) {
	return file_qadena_qadena_enclave_proto_rawDescGZIP(), []int{24}
}

func (x *ValidateAuthorizedSignerRequest) GetCreator() string {
	if x != nil {
		return x.Creator
	}
	return ""
}

func (x *ValidateAuthorizedSignerRequest) GetRequestingSignatory() *VShareSignatory {
	if x != nil {
		return x.RequestingSignatory
	}
	return nil
}

func (x *ValidateAuthorizedSignerRequest) GetRequiredSignatory() []*VShareSignatory {
	if x != nil {
		return x.RequiredSignatory
	}
	return nil
}

func (x *ValidateAuthorizedSignerRequest) GetCompletedSignatory() []*VShareSignatory {
	if x != nil {
		return x.CompletedSignatory
	}
	return nil
}

type ValidateAuthorizedSignerReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status bool `protobuf:"varint,1,opt,name=status,proto3" json:"status,omitempty"`
}

func (x *ValidateAuthorizedSignerReply) Reset() {
	*x = ValidateAuthorizedSignerReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_qadena_qadena_enclave_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ValidateAuthorizedSignerReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ValidateAuthorizedSignerReply) ProtoMessage() {}

// Deprecated: Use ValidateAuthorizedSignerReply.ProtoReflect.Descriptor instead.
func (*ValidateAuthorizedSignerReply) Descriptor() ([]byte, []int) {
	return file_qadena_qadena_enclave_proto_rawDescGZIP(), []int{25}
}

func (x *ValidateAuthorizedSignerReply) GetStatus() bool {
	if x != nil {
		return x.Status
	}
	return false
}

type ValidateAuthorizedSignatoryRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Creator          string             `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	Signatory        *VShareSignatory   `protobuf:"bytes,2,opt,name=signatory,proto3" json:"signatory,omitempty"`
	CurrentSignatory []*VShareSignatory `protobuf:"bytes,3,rep,name=currentSignatory,proto3" json:"currentSignatory,omitempty"`
}

func (x *ValidateAuthorizedSignatoryRequest) Reset() {
	*x = ValidateAuthorizedSignatoryRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_qadena_qadena_enclave_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ValidateAuthorizedSignatoryRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ValidateAuthorizedSignatoryRequest) ProtoMessage() {}

// Deprecated: Use ValidateAuthorizedSignatoryRequest.ProtoReflect.Descriptor instead.
func (*ValidateAuthorizedSignatoryRequest) Descriptor() ([]byte, []int) {
	return file_qadena_qadena_enclave_proto_rawDescGZIP(), []int{26}
}

func (x *ValidateAuthorizedSignatoryRequest) GetCreator() string {
	if x != nil {
		return x.Creator
	}
	return ""
}

func (x *ValidateAuthorizedSignatoryRequest) GetSignatory() *VShareSignatory {
	if x != nil {
		return x.Signatory
	}
	return nil
}

func (x *ValidateAuthorizedSignatoryRequest) GetCurrentSignatory() []*VShareSignatory {
	if x != nil {
		return x.CurrentSignatory
	}
	return nil
}

type ValidateAuthorizedSignatoryReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status bool `protobuf:"varint,1,opt,name=status,proto3" json:"status,omitempty"`
}

func (x *ValidateAuthorizedSignatoryReply) Reset() {
	*x = ValidateAuthorizedSignatoryReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_qadena_qadena_enclave_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ValidateAuthorizedSignatoryReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ValidateAuthorizedSignatoryReply) ProtoMessage() {}

// Deprecated: Use ValidateAuthorizedSignatoryReply.ProtoReflect.Descriptor instead.
func (*ValidateAuthorizedSignatoryReply) Descriptor() ([]byte, []int) {
	return file_qadena_qadena_enclave_proto_rawDescGZIP(), []int{27}
}

func (x *ValidateAuthorizedSignatoryReply) GetStatus() bool {
	if x != nil {
		return x.Status
	}
	return false
}

type MsgUpdateHeight struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Height     int64 `protobuf:"varint,1,opt,name=height,proto3" json:"height,omitempty"`
	IsProposer bool  `protobuf:"varint,2,opt,name=isProposer,proto3" json:"isProposer,omitempty"`
}

func (x *MsgUpdateHeight) Reset() {
	*x = MsgUpdateHeight{}
	if protoimpl.UnsafeEnabled {
		mi := &file_qadena_qadena_enclave_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MsgUpdateHeight) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MsgUpdateHeight) ProtoMessage() {}

// Deprecated: Use MsgUpdateHeight.ProtoReflect.Descriptor instead.
func (*MsgUpdateHeight) Descriptor() ([]byte, []int) {
	return file_qadena_qadena_enclave_proto_rawDescGZIP(), []int{28}
}

func (x *MsgUpdateHeight) GetHeight() int64 {
	if x != nil {
		return x.Height
	}
	return 0
}

func (x *MsgUpdateHeight) GetIsProposer() bool {
	if x != nil {
		return x.IsProposer
	}
	return false
}

type MsgScanTransactions struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Timestamp    *timestamppb.Timestamp `protobuf:"bytes,1,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	Height       int64                  `protobuf:"varint,2,opt,name=height,proto3" json:"height,omitempty"`
	Msg          *MsgTransferFunds      `protobuf:"bytes,3,opt,name=msg,proto3" json:"msg,omitempty"`
	Exchangerate string                 `protobuf:"bytes,4,opt,name=exchangerate,proto3" json:"exchangerate,omitempty"`
}

func (x *MsgScanTransactions) Reset() {
	*x = MsgScanTransactions{}
	if protoimpl.UnsafeEnabled {
		mi := &file_qadena_qadena_enclave_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MsgScanTransactions) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MsgScanTransactions) ProtoMessage() {}

// Deprecated: Use MsgScanTransactions.ProtoReflect.Descriptor instead.
func (*MsgScanTransactions) Descriptor() ([]byte, []int) {
	return file_qadena_qadena_enclave_proto_rawDescGZIP(), []int{29}
}

func (x *MsgScanTransactions) GetTimestamp() *timestamppb.Timestamp {
	if x != nil {
		return x.Timestamp
	}
	return nil
}

func (x *MsgScanTransactions) GetHeight() int64 {
	if x != nil {
		return x.Height
	}
	return 0
}

func (x *MsgScanTransactions) GetMsg() *MsgTransferFunds {
	if x != nil {
		return x.Msg
	}
	return nil
}

func (x *MsgScanTransactions) GetExchangerate() string {
	if x != nil {
		return x.Exchangerate
	}
	return ""
}

type MsgSyncWallets struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Clear_ bool `protobuf:"varint,1,opt,name=clear,proto3" json:"clear,omitempty"`
}

func (x *MsgSyncWallets) Reset() {
	*x = MsgSyncWallets{}
	if protoimpl.UnsafeEnabled {
		mi := &file_qadena_qadena_enclave_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MsgSyncWallets) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MsgSyncWallets) ProtoMessage() {}

// Deprecated: Use MsgSyncWallets.ProtoReflect.Descriptor instead.
func (*MsgSyncWallets) Descriptor() ([]byte, []int) {
	return file_qadena_qadena_enclave_proto_rawDescGZIP(), []int{30}
}

func (x *MsgSyncWallets) GetClear_() bool {
	if x != nil {
		return x.Clear_
	}
	return false
}

type SyncWalletsReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Wallets []*Wallet `protobuf:"bytes,1,rep,name=wallets,proto3" json:"wallets,omitempty"`
}

func (x *SyncWalletsReply) Reset() {
	*x = SyncWalletsReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_qadena_qadena_enclave_proto_msgTypes[31]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SyncWalletsReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SyncWalletsReply) ProtoMessage() {}

// Deprecated: Use SyncWalletsReply.ProtoReflect.Descriptor instead.
func (*SyncWalletsReply) Descriptor() ([]byte, []int) {
	return file_qadena_qadena_enclave_proto_rawDescGZIP(), []int{31}
}

func (x *SyncWalletsReply) GetWallets() []*Wallet {
	if x != nil {
		return x.Wallets
	}
	return nil
}

type MsgSyncCredentials struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Clear_ bool `protobuf:"varint,1,opt,name=clear,proto3" json:"clear,omitempty"`
}

func (x *MsgSyncCredentials) Reset() {
	*x = MsgSyncCredentials{}
	if protoimpl.UnsafeEnabled {
		mi := &file_qadena_qadena_enclave_proto_msgTypes[32]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MsgSyncCredentials) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MsgSyncCredentials) ProtoMessage() {}

// Deprecated: Use MsgSyncCredentials.ProtoReflect.Descriptor instead.
func (*MsgSyncCredentials) Descriptor() ([]byte, []int) {
	return file_qadena_qadena_enclave_proto_rawDescGZIP(), []int{32}
}

func (x *MsgSyncCredentials) GetClear_() bool {
	if x != nil {
		return x.Clear_
	}
	return false
}

type SyncCredentialsReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Credentials []*Credential `protobuf:"bytes,1,rep,name=credentials,proto3" json:"credentials,omitempty"`
}

func (x *SyncCredentialsReply) Reset() {
	*x = SyncCredentialsReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_qadena_qadena_enclave_proto_msgTypes[33]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SyncCredentialsReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SyncCredentialsReply) ProtoMessage() {}

// Deprecated: Use SyncCredentialsReply.ProtoReflect.Descriptor instead.
func (*SyncCredentialsReply) Descriptor() ([]byte, []int) {
	return file_qadena_qadena_enclave_proto_rawDescGZIP(), []int{33}
}

func (x *SyncCredentialsReply) GetCredentials() []*Credential {
	if x != nil {
		return x.Credentials
	}
	return nil
}

type MsgSyncRecoverKeys struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Clear_ bool `protobuf:"varint,1,opt,name=clear,proto3" json:"clear,omitempty"`
}

func (x *MsgSyncRecoverKeys) Reset() {
	*x = MsgSyncRecoverKeys{}
	if protoimpl.UnsafeEnabled {
		mi := &file_qadena_qadena_enclave_proto_msgTypes[34]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MsgSyncRecoverKeys) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MsgSyncRecoverKeys) ProtoMessage() {}

// Deprecated: Use MsgSyncRecoverKeys.ProtoReflect.Descriptor instead.
func (*MsgSyncRecoverKeys) Descriptor() ([]byte, []int) {
	return file_qadena_qadena_enclave_proto_rawDescGZIP(), []int{34}
}

func (x *MsgSyncRecoverKeys) GetClear_() bool {
	if x != nil {
		return x.Clear_
	}
	return false
}

type SyncRecoverKeysReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RecoverKeys []*RecoverKey `protobuf:"bytes,1,rep,name=recoverKeys,proto3" json:"recoverKeys,omitempty"`
}

func (x *SyncRecoverKeysReply) Reset() {
	*x = SyncRecoverKeysReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_qadena_qadena_enclave_proto_msgTypes[35]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SyncRecoverKeysReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SyncRecoverKeysReply) ProtoMessage() {}

// Deprecated: Use SyncRecoverKeysReply.ProtoReflect.Descriptor instead.
func (*SyncRecoverKeysReply) Descriptor() ([]byte, []int) {
	return file_qadena_qadena_enclave_proto_rawDescGZIP(), []int{35}
}

func (x *SyncRecoverKeysReply) GetRecoverKeys() []*RecoverKey {
	if x != nil {
		return x.RecoverKeys
	}
	return nil
}

type SetSecretSharePrivateKeyReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status bool `protobuf:"varint,1,opt,name=status,proto3" json:"status,omitempty"`
}

func (x *SetSecretSharePrivateKeyReply) Reset() {
	*x = SetSecretSharePrivateKeyReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_qadena_qadena_enclave_proto_msgTypes[36]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetSecretSharePrivateKeyReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetSecretSharePrivateKeyReply) ProtoMessage() {}

// Deprecated: Use SetSecretSharePrivateKeyReply.ProtoReflect.Descriptor instead.
func (*SetSecretSharePrivateKeyReply) Descriptor() ([]byte, []int) {
	return file_qadena_qadena_enclave_proto_rawDescGZIP(), []int{36}
}

func (x *SetSecretSharePrivateKeyReply) GetStatus() bool {
	if x != nil {
		return x.Status
	}
	return false
}

type MsgSyncSuspiciousTransactions struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Clear_ bool `protobuf:"varint,1,opt,name=clear,proto3" json:"clear,omitempty"`
}

func (x *MsgSyncSuspiciousTransactions) Reset() {
	*x = MsgSyncSuspiciousTransactions{}
	if protoimpl.UnsafeEnabled {
		mi := &file_qadena_qadena_enclave_proto_msgTypes[37]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MsgSyncSuspiciousTransactions) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MsgSyncSuspiciousTransactions) ProtoMessage() {}

// Deprecated: Use MsgSyncSuspiciousTransactions.ProtoReflect.Descriptor instead.
func (*MsgSyncSuspiciousTransactions) Descriptor() ([]byte, []int) {
	return file_qadena_qadena_enclave_proto_rawDescGZIP(), []int{37}
}

func (x *MsgSyncSuspiciousTransactions) GetClear_() bool {
	if x != nil {
		return x.Clear_
	}
	return false
}

type SyncSuspiciousTransactionsReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SuspiciousTransactions []*SuspiciousTransaction `protobuf:"bytes,1,rep,name=suspiciousTransactions,proto3" json:"suspiciousTransactions,omitempty"`
}

func (x *SyncSuspiciousTransactionsReply) Reset() {
	*x = SyncSuspiciousTransactionsReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_qadena_qadena_enclave_proto_msgTypes[38]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SyncSuspiciousTransactionsReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SyncSuspiciousTransactionsReply) ProtoMessage() {}

// Deprecated: Use SyncSuspiciousTransactionsReply.ProtoReflect.Descriptor instead.
func (*SyncSuspiciousTransactionsReply) Descriptor() ([]byte, []int) {
	return file_qadena_qadena_enclave_proto_rawDescGZIP(), []int{38}
}

func (x *SyncSuspiciousTransactionsReply) GetSuspiciousTransactions() []*SuspiciousTransaction {
	if x != nil {
		return x.SuspiciousTransactions
	}
	return nil
}

type InitEnclaveReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status bool `protobuf:"varint,1,opt,name=status,proto3" json:"status,omitempty"`
}

func (x *InitEnclaveReply) Reset() {
	*x = InitEnclaveReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_qadena_qadena_enclave_proto_msgTypes[39]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InitEnclaveReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InitEnclaveReply) ProtoMessage() {}

// Deprecated: Use InitEnclaveReply.ProtoReflect.Descriptor instead.
func (*InitEnclaveReply) Descriptor() ([]byte, []int) {
	return file_qadena_qadena_enclave_proto_rawDescGZIP(), []int{39}
}

func (x *InitEnclaveReply) GetStatus() bool {
	if x != nil {
		return x.Status
	}
	return false
}

type UpdateHeightReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status bool `protobuf:"varint,1,opt,name=status,proto3" json:"status,omitempty"`
}

func (x *UpdateHeightReply) Reset() {
	*x = UpdateHeightReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_qadena_qadena_enclave_proto_msgTypes[40]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateHeightReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateHeightReply) ProtoMessage() {}

// Deprecated: Use UpdateHeightReply.ProtoReflect.Descriptor instead.
func (*UpdateHeightReply) Descriptor() ([]byte, []int) {
	return file_qadena_qadena_enclave_proto_rawDescGZIP(), []int{40}
}

func (x *UpdateHeightReply) GetStatus() bool {
	if x != nil {
		return x.Status
	}
	return false
}

type MsgTransactionComplete struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Success bool `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
}

func (x *MsgTransactionComplete) Reset() {
	*x = MsgTransactionComplete{}
	if protoimpl.UnsafeEnabled {
		mi := &file_qadena_qadena_enclave_proto_msgTypes[41]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MsgTransactionComplete) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MsgTransactionComplete) ProtoMessage() {}

// Deprecated: Use MsgTransactionComplete.ProtoReflect.Descriptor instead.
func (*MsgTransactionComplete) Descriptor() ([]byte, []int) {
	return file_qadena_qadena_enclave_proto_rawDescGZIP(), []int{41}
}

func (x *MsgTransactionComplete) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

type TransactionCompleteReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status bool `protobuf:"varint,1,opt,name=status,proto3" json:"status,omitempty"`
}

func (x *TransactionCompleteReply) Reset() {
	*x = TransactionCompleteReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_qadena_qadena_enclave_proto_msgTypes[42]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TransactionCompleteReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TransactionCompleteReply) ProtoMessage() {}

// Deprecated: Use TransactionCompleteReply.ProtoReflect.Descriptor instead.
func (*TransactionCompleteReply) Descriptor() ([]byte, []int) {
	return file_qadena_qadena_enclave_proto_rawDescGZIP(), []int{42}
}

func (x *TransactionCompleteReply) GetStatus() bool {
	if x != nil {
		return x.Status
	}
	return false
}

type SyncEnclaveReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status bool `protobuf:"varint,1,opt,name=status,proto3" json:"status,omitempty"`
}

func (x *SyncEnclaveReply) Reset() {
	*x = SyncEnclaveReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_qadena_qadena_enclave_proto_msgTypes[43]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SyncEnclaveReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SyncEnclaveReply) ProtoMessage() {}

// Deprecated: Use SyncEnclaveReply.ProtoReflect.Descriptor instead.
func (*SyncEnclaveReply) Descriptor() ([]byte, []int) {
	return file_qadena_qadena_enclave_proto_rawDescGZIP(), []int{43}
}

func (x *SyncEnclaveReply) GetStatus() bool {
	if x != nil {
		return x.Status
	}
	return false
}

type AddAsValidatorReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status bool `protobuf:"varint,1,opt,name=status,proto3" json:"status,omitempty"`
}

func (x *AddAsValidatorReply) Reset() {
	*x = AddAsValidatorReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_qadena_qadena_enclave_proto_msgTypes[44]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddAsValidatorReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddAsValidatorReply) ProtoMessage() {}

// Deprecated: Use AddAsValidatorReply.ProtoReflect.Descriptor instead.
func (*AddAsValidatorReply) Descriptor() ([]byte, []int) {
	return file_qadena_qadena_enclave_proto_rawDescGZIP(), []int{44}
}

func (x *AddAsValidatorReply) GetStatus() bool {
	if x != nil {
		return x.Status
	}
	return false
}

type SetWalletReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status bool `protobuf:"varint,1,opt,name=status,proto3" json:"status,omitempty"`
}

func (x *SetWalletReply) Reset() {
	*x = SetWalletReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_qadena_qadena_enclave_proto_msgTypes[45]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetWalletReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetWalletReply) ProtoMessage() {}

// Deprecated: Use SetWalletReply.ProtoReflect.Descriptor instead.
func (*SetWalletReply) Descriptor() ([]byte, []int) {
	return file_qadena_qadena_enclave_proto_rawDescGZIP(), []int{45}
}

func (x *SetWalletReply) GetStatus() bool {
	if x != nil {
		return x.Status
	}
	return false
}

type SetEnclaveIdentityReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status bool `protobuf:"varint,1,opt,name=status,proto3" json:"status,omitempty"`
}

func (x *SetEnclaveIdentityReply) Reset() {
	*x = SetEnclaveIdentityReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_qadena_qadena_enclave_proto_msgTypes[46]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetEnclaveIdentityReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetEnclaveIdentityReply) ProtoMessage() {}

// Deprecated: Use SetEnclaveIdentityReply.ProtoReflect.Descriptor instead.
func (*SetEnclaveIdentityReply) Descriptor() ([]byte, []int) {
	return file_qadena_qadena_enclave_proto_rawDescGZIP(), []int{46}
}

func (x *SetEnclaveIdentityReply) GetStatus() bool {
	if x != nil {
		return x.Status
	}
	return false
}

type PioneerUpdateEnclaveIdentity struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EnclaveIdentity *EnclaveIdentity `protobuf:"bytes,1,opt,name=enclaveIdentity,proto3" json:"enclaveIdentity,omitempty"`
	RemoteReport    []byte           `protobuf:"bytes,2,opt,name=remoteReport,proto3" json:"remoteReport,omitempty"`
}

func (x *PioneerUpdateEnclaveIdentity) Reset() {
	*x = PioneerUpdateEnclaveIdentity{}
	if protoimpl.UnsafeEnabled {
		mi := &file_qadena_qadena_enclave_proto_msgTypes[47]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PioneerUpdateEnclaveIdentity) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PioneerUpdateEnclaveIdentity) ProtoMessage() {}

// Deprecated: Use PioneerUpdateEnclaveIdentity.ProtoReflect.Descriptor instead.
func (*PioneerUpdateEnclaveIdentity) Descriptor() ([]byte, []int) {
	return file_qadena_qadena_enclave_proto_rawDescGZIP(), []int{47}
}

func (x *PioneerUpdateEnclaveIdentity) GetEnclaveIdentity() *EnclaveIdentity {
	if x != nil {
		return x.EnclaveIdentity
	}
	return nil
}

func (x *PioneerUpdateEnclaveIdentity) GetRemoteReport() []byte {
	if x != nil {
		return x.RemoteReport
	}
	return nil
}

type UpdateEnclaveIdentityReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status bool `protobuf:"varint,1,opt,name=status,proto3" json:"status,omitempty"`
}

func (x *UpdateEnclaveIdentityReply) Reset() {
	*x = UpdateEnclaveIdentityReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_qadena_qadena_enclave_proto_msgTypes[48]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateEnclaveIdentityReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateEnclaveIdentityReply) ProtoMessage() {}

// Deprecated: Use UpdateEnclaveIdentityReply.ProtoReflect.Descriptor instead.
func (*UpdateEnclaveIdentityReply) Descriptor() ([]byte, []int) {
	return file_qadena_qadena_enclave_proto_rawDescGZIP(), []int{48}
}

func (x *UpdateEnclaveIdentityReply) GetStatus() bool {
	if x != nil {
		return x.Status
	}
	return false
}

type SetProtectKeyReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status bool `protobuf:"varint,1,opt,name=status,proto3" json:"status,omitempty"`
}

func (x *SetProtectKeyReply) Reset() {
	*x = SetProtectKeyReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_qadena_qadena_enclave_proto_msgTypes[49]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetProtectKeyReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetProtectKeyReply) ProtoMessage() {}

// Deprecated: Use SetProtectKeyReply.ProtoReflect.Descriptor instead.
func (*SetProtectKeyReply) Descriptor() ([]byte, []int) {
	return file_qadena_qadena_enclave_proto_rawDescGZIP(), []int{49}
}

func (x *SetProtectKeyReply) GetStatus() bool {
	if x != nil {
		return x.Status
	}
	return false
}

type SetRecoverKeyReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status bool `protobuf:"varint,1,opt,name=status,proto3" json:"status,omitempty"`
}

func (x *SetRecoverKeyReply) Reset() {
	*x = SetRecoverKeyReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_qadena_qadena_enclave_proto_msgTypes[50]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetRecoverKeyReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetRecoverKeyReply) ProtoMessage() {}

// Deprecated: Use SetRecoverKeyReply.ProtoReflect.Descriptor instead.
func (*SetRecoverKeyReply) Descriptor() ([]byte, []int) {
	return file_qadena_qadena_enclave_proto_rawDescGZIP(), []int{50}
}

func (x *SetRecoverKeyReply) GetStatus() bool {
	if x != nil {
		return x.Status
	}
	return false
}

type SetCredentialReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status bool `protobuf:"varint,1,opt,name=status,proto3" json:"status,omitempty"`
}

func (x *SetCredentialReply) Reset() {
	*x = SetCredentialReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_qadena_qadena_enclave_proto_msgTypes[51]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetCredentialReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetCredentialReply) ProtoMessage() {}

// Deprecated: Use SetCredentialReply.ProtoReflect.Descriptor instead.
func (*SetCredentialReply) Descriptor() ([]byte, []int) {
	return file_qadena_qadena_enclave_proto_rawDescGZIP(), []int{51}
}

func (x *SetCredentialReply) GetStatus() bool {
	if x != nil {
		return x.Status
	}
	return false
}

type RemoveCredentialReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status bool `protobuf:"varint,1,opt,name=status,proto3" json:"status,omitempty"`
}

func (x *RemoveCredentialReply) Reset() {
	*x = RemoveCredentialReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_qadena_qadena_enclave_proto_msgTypes[52]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RemoveCredentialReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemoveCredentialReply) ProtoMessage() {}

// Deprecated: Use RemoveCredentialReply.ProtoReflect.Descriptor instead.
func (*RemoveCredentialReply) Descriptor() ([]byte, []int) {
	return file_qadena_qadena_enclave_proto_rawDescGZIP(), []int{52}
}

func (x *RemoveCredentialReply) GetStatus() bool {
	if x != nil {
		return x.Status
	}
	return false
}

type RecoverKeyReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status bool `protobuf:"varint,1,opt,name=status,proto3" json:"status,omitempty"`
}

func (x *RecoverKeyReply) Reset() {
	*x = RecoverKeyReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_qadena_qadena_enclave_proto_msgTypes[53]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RecoverKeyReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RecoverKeyReply) ProtoMessage() {}

// Deprecated: Use RecoverKeyReply.ProtoReflect.Descriptor instead.
func (*RecoverKeyReply) Descriptor() ([]byte, []int) {
	return file_qadena_qadena_enclave_proto_rawDescGZIP(), []int{53}
}

func (x *RecoverKeyReply) GetStatus() bool {
	if x != nil {
		return x.Status
	}
	return false
}

type SignRecoverKeyReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status bool `protobuf:"varint,1,opt,name=status,proto3" json:"status,omitempty"`
}

func (x *SignRecoverKeyReply) Reset() {
	*x = SignRecoverKeyReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_qadena_qadena_enclave_proto_msgTypes[54]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SignRecoverKeyReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SignRecoverKeyReply) ProtoMessage() {}

// Deprecated: Use SignRecoverKeyReply.ProtoReflect.Descriptor instead.
func (*SignRecoverKeyReply) Descriptor() ([]byte, []int) {
	return file_qadena_qadena_enclave_proto_rawDescGZIP(), []int{54}
}

func (x *SignRecoverKeyReply) GetStatus() bool {
	if x != nil {
		return x.Status
	}
	return false
}

type SetPublicKeyReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status bool `protobuf:"varint,1,opt,name=status,proto3" json:"status,omitempty"`
}

func (x *SetPublicKeyReply) Reset() {
	*x = SetPublicKeyReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_qadena_qadena_enclave_proto_msgTypes[55]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetPublicKeyReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetPublicKeyReply) ProtoMessage() {}

// Deprecated: Use SetPublicKeyReply.ProtoReflect.Descriptor instead.
func (*SetPublicKeyReply) Descriptor() ([]byte, []int) {
	return file_qadena_qadena_enclave_proto_rawDescGZIP(), []int{55}
}

func (x *SetPublicKeyReply) GetStatus() bool {
	if x != nil {
		return x.Status
	}
	return false
}

type SetJarRegulatorReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status bool `protobuf:"varint,1,opt,name=status,proto3" json:"status,omitempty"`
}

func (x *SetJarRegulatorReply) Reset() {
	*x = SetJarRegulatorReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_qadena_qadena_enclave_proto_msgTypes[56]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetJarRegulatorReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetJarRegulatorReply) ProtoMessage() {}

// Deprecated: Use SetJarRegulatorReply.ProtoReflect.Descriptor instead.
func (*SetJarRegulatorReply) Descriptor() ([]byte, []int) {
	return file_qadena_qadena_enclave_proto_rawDescGZIP(), []int{56}
}

func (x *SetJarRegulatorReply) GetStatus() bool {
	if x != nil {
		return x.Status
	}
	return false
}

type SetPioneerJarReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status bool `protobuf:"varint,1,opt,name=status,proto3" json:"status,omitempty"`
}

func (x *SetPioneerJarReply) Reset() {
	*x = SetPioneerJarReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_qadena_qadena_enclave_proto_msgTypes[57]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetPioneerJarReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetPioneerJarReply) ProtoMessage() {}

// Deprecated: Use SetPioneerJarReply.ProtoReflect.Descriptor instead.
func (*SetPioneerJarReply) Descriptor() ([]byte, []int) {
	return file_qadena_qadena_enclave_proto_rawDescGZIP(), []int{57}
}

func (x *SetPioneerJarReply) GetStatus() bool {
	if x != nil {
		return x.Status
	}
	return false
}

type SetIntervalPublicKeyIdReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status bool `protobuf:"varint,1,opt,name=status,proto3" json:"status,omitempty"`
}

func (x *SetIntervalPublicKeyIdReply) Reset() {
	*x = SetIntervalPublicKeyIdReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_qadena_qadena_enclave_proto_msgTypes[58]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetIntervalPublicKeyIdReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetIntervalPublicKeyIdReply) ProtoMessage() {}

// Deprecated: Use SetIntervalPublicKeyIdReply.ProtoReflect.Descriptor instead.
func (*SetIntervalPublicKeyIdReply) Descriptor() ([]byte, []int) {
	return file_qadena_qadena_enclave_proto_rawDescGZIP(), []int{58}
}

func (x *SetIntervalPublicKeyIdReply) GetStatus() bool {
	if x != nil {
		return x.Status
	}
	return false
}

type ValidateDestinationWalletReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status int32 `protobuf:"varint,1,opt,name=status,proto3" json:"status,omitempty"`
}

func (x *ValidateDestinationWalletReply) Reset() {
	*x = ValidateDestinationWalletReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_qadena_qadena_enclave_proto_msgTypes[59]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ValidateDestinationWalletReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ValidateDestinationWalletReply) ProtoMessage() {}

// Deprecated: Use ValidateDestinationWalletReply.ProtoReflect.Descriptor instead.
func (*ValidateDestinationWalletReply) Descriptor() ([]byte, []int) {
	return file_qadena_qadena_enclave_proto_rawDescGZIP(), []int{59}
}

func (x *ValidateDestinationWalletReply) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

type ValidateCredentialReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status bool `protobuf:"varint,1,opt,name=status,proto3" json:"status,omitempty"`
}

func (x *ValidateCredentialReply) Reset() {
	*x = ValidateCredentialReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_qadena_qadena_enclave_proto_msgTypes[60]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ValidateCredentialReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ValidateCredentialReply) ProtoMessage() {}

// Deprecated: Use ValidateCredentialReply.ProtoReflect.Descriptor instead.
func (*ValidateCredentialReply) Descriptor() ([]byte, []int) {
	return file_qadena_qadena_enclave_proto_rawDescGZIP(), []int{60}
}

func (x *ValidateCredentialReply) GetStatus() bool {
	if x != nil {
		return x.Status
	}
	return false
}

type ValidateTransferPrimeReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UpdateSourceWallet bool `protobuf:"varint,1,opt,name=updateSourceWallet,proto3" json:"updateSourceWallet,omitempty"`
}

func (x *ValidateTransferPrimeReply) Reset() {
	*x = ValidateTransferPrimeReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_qadena_qadena_enclave_proto_msgTypes[61]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ValidateTransferPrimeReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ValidateTransferPrimeReply) ProtoMessage() {}

// Deprecated: Use ValidateTransferPrimeReply.ProtoReflect.Descriptor instead.
func (*ValidateTransferPrimeReply) Descriptor() ([]byte, []int) {
	return file_qadena_qadena_enclave_proto_rawDescGZIP(), []int{61}
}

func (x *ValidateTransferPrimeReply) GetUpdateSourceWallet() bool {
	if x != nil {
		return x.UpdateSourceWallet
	}
	return false
}

type ValidateTransferDoublePrimeReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UpdateDestinationWallet bool `protobuf:"varint,1,opt,name=updateDestinationWallet,proto3" json:"updateDestinationWallet,omitempty"`
}

func (x *ValidateTransferDoublePrimeReply) Reset() {
	*x = ValidateTransferDoublePrimeReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_qadena_qadena_enclave_proto_msgTypes[62]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ValidateTransferDoublePrimeReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ValidateTransferDoublePrimeReply) ProtoMessage() {}

// Deprecated: Use ValidateTransferDoublePrimeReply.ProtoReflect.Descriptor instead.
func (*ValidateTransferDoublePrimeReply) Descriptor() ([]byte, []int) {
	return file_qadena_qadena_enclave_proto_rawDescGZIP(), []int{62}
}

func (x *ValidateTransferDoublePrimeReply) GetUpdateDestinationWallet() bool {
	if x != nil {
		return x.UpdateDestinationWallet
	}
	return false
}

type ScanTransactionReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status bool `protobuf:"varint,1,opt,name=status,proto3" json:"status,omitempty"`
}

func (x *ScanTransactionReply) Reset() {
	*x = ScanTransactionReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_qadena_qadena_enclave_proto_msgTypes[63]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ScanTransactionReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ScanTransactionReply) ProtoMessage() {}

// Deprecated: Use ScanTransactionReply.ProtoReflect.Descriptor instead.
func (*ScanTransactionReply) Descriptor() ([]byte, []int) {
	return file_qadena_qadena_enclave_proto_rawDescGZIP(), []int{63}
}

func (x *ScanTransactionReply) GetStatus() bool {
	if x != nil {
		return x.Status
	}
	return false
}

// these are used to marshal strings and arrays of strings, needed by the persistent KV implementation in the enclave
type EnclaveStoreStringArray struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	A []string `protobuf:"bytes,1,rep,name=a,proto3" json:"a,omitempty"`
}

func (x *EnclaveStoreStringArray) Reset() {
	*x = EnclaveStoreStringArray{}
	if protoimpl.UnsafeEnabled {
		mi := &file_qadena_qadena_enclave_proto_msgTypes[64]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EnclaveStoreStringArray) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EnclaveStoreStringArray) ProtoMessage() {}

// Deprecated: Use EnclaveStoreStringArray.ProtoReflect.Descriptor instead.
func (*EnclaveStoreStringArray) Descriptor() ([]byte, []int) {
	return file_qadena_qadena_enclave_proto_rawDescGZIP(), []int{64}
}

func (x *EnclaveStoreStringArray) GetA() []string {
	if x != nil {
		return x.A
	}
	return nil
}

type EnclaveStoreString struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	S string `protobuf:"bytes,1,opt,name=s,proto3" json:"s,omitempty"`
}

func (x *EnclaveStoreString) Reset() {
	*x = EnclaveStoreString{}
	if protoimpl.UnsafeEnabled {
		mi := &file_qadena_qadena_enclave_proto_msgTypes[65]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EnclaveStoreString) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EnclaveStoreString) ProtoMessage() {}

// Deprecated: Use EnclaveStoreString.ProtoReflect.Descriptor instead.
func (*EnclaveStoreString) Descriptor() ([]byte, []int) {
	return file_qadena_qadena_enclave_proto_rawDescGZIP(), []int{65}
}

func (x *EnclaveStoreString) GetS() string {
	if x != nil {
		return x.S
	}
	return ""
}

type EnclaveEnclaveIdentityArray struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Identity []*EnclaveIdentity `protobuf:"bytes,1,rep,name=identity,proto3" json:"identity,omitempty"`
}

func (x *EnclaveEnclaveIdentityArray) Reset() {
	*x = EnclaveEnclaveIdentityArray{}
	if protoimpl.UnsafeEnabled {
		mi := &file_qadena_qadena_enclave_proto_msgTypes[66]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EnclaveEnclaveIdentityArray) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EnclaveEnclaveIdentityArray) ProtoMessage() {}

// Deprecated: Use EnclaveEnclaveIdentityArray.ProtoReflect.Descriptor instead.
func (*EnclaveEnclaveIdentityArray) Descriptor() ([]byte, []int) {
	return file_qadena_qadena_enclave_proto_rawDescGZIP(), []int{66}
}

func (x *EnclaveEnclaveIdentityArray) GetIdentity() []*EnclaveIdentity {
	if x != nil {
		return x.Identity
	}
	return nil
}

var File_qadena_qadena_enclave_proto protoreflect.FileDescriptor

var file_qadena_qadena_enclave_proto_rawDesc = []byte{
	0x0a, 0x1b, 0x71, 0x61, 0x64, 0x65, 0x6e, 0x61, 0x2f, 0x71, 0x61, 0x64, 0x65, 0x6e, 0x61, 0x2f,
	0x65, 0x6e, 0x63, 0x6c, 0x61, 0x76, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0d, 0x71,
	0x61, 0x64, 0x65, 0x6e, 0x61, 0x2e, 0x71, 0x61, 0x64, 0x65, 0x6e, 0x61, 0x1a, 0x1a, 0x71, 0x61,
	0x64, 0x65, 0x6e, 0x61, 0x2f, 0x71, 0x61, 0x64, 0x65, 0x6e, 0x61, 0x2f, 0x77, 0x61, 0x6c, 0x6c,
	0x65, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x16, 0x71, 0x61, 0x64, 0x65, 0x6e, 0x61,
	0x2f, 0x71, 0x61, 0x64, 0x65, 0x6e, 0x61, 0x2f, 0x74, 0x78, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x1a, 0x1e, 0x71, 0x61, 0x64, 0x65, 0x6e, 0x61, 0x2f, 0x71, 0x61, 0x64, 0x65, 0x6e, 0x61, 0x2f,
	0x63, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x1a, 0x2a, 0x71, 0x61, 0x64, 0x65, 0x6e, 0x61, 0x2f, 0x71, 0x61, 0x64, 0x65, 0x6e, 0x61, 0x2f,
	0x73, 0x75, 0x73, 0x70, 0x69, 0x63, 0x69, 0x6f, 0x75, 0x73, 0x5f, 0x74, 0x72, 0x61, 0x6e, 0x73,
	0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1e, 0x71, 0x61,
	0x64, 0x65, 0x6e, 0x61, 0x2f, 0x71, 0x61, 0x64, 0x65, 0x6e, 0x61, 0x2f, 0x70, 0x75, 0x62, 0x6c,
	0x69, 0x63, 0x5f, 0x6b, 0x65, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x21, 0x71, 0x61,
	0x64, 0x65, 0x6e, 0x61, 0x2f, 0x71, 0x61, 0x64, 0x65, 0x6e, 0x61, 0x2f, 0x6a, 0x61, 0x72, 0x5f,
	0x72, 0x65, 0x67, 0x75, 0x6c, 0x61, 0x74, 0x6f, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a,
	0x2b, 0x71, 0x61, 0x64, 0x65, 0x6e, 0x61, 0x2f, 0x71, 0x61, 0x64, 0x65, 0x6e, 0x61, 0x2f, 0x69,
	0x6e, 0x74, 0x65, 0x72, 0x76, 0x61, 0x6c, 0x5f, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x5f, 0x6b,
	0x65, 0x79, 0x5f, 0x69, 0x5f, 0x64, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x27, 0x71, 0x61,
	0x64, 0x65, 0x6e, 0x61, 0x2f, 0x71, 0x61, 0x64, 0x65, 0x6e, 0x61, 0x2f, 0x73, 0x65, 0x63, 0x72,
	0x65, 0x74, 0x5f, 0x73, 0x68, 0x61, 0x72, 0x65, 0x5f, 0x70, 0x72, 0x69, 0x76, 0x5f, 0x6b, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x19, 0x71, 0x61, 0x64, 0x65, 0x6e, 0x61, 0x2f, 0x71, 0x61,
	0x64, 0x65, 0x6e, 0x61, 0x2f, 0x71, 0x75, 0x65, 0x72, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x1a, 0x1f, 0x71, 0x61, 0x64, 0x65, 0x6e, 0x61, 0x2f, 0x71, 0x61, 0x64, 0x65, 0x6e, 0x61, 0x2f,
	0x70, 0x72, 0x6f, 0x74, 0x65, 0x63, 0x74, 0x5f, 0x6b, 0x65, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x1a, 0x1f, 0x71, 0x61, 0x64, 0x65, 0x6e, 0x61, 0x2f, 0x71, 0x61, 0x64, 0x65, 0x6e, 0x61,
	0x2f, 0x72, 0x65, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x5f, 0x6b, 0x65, 0x79, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x1a, 0x25, 0x71, 0x61, 0x64, 0x65, 0x6e, 0x61, 0x2f, 0x71, 0x61, 0x64, 0x65, 0x6e,
	0x61, 0x2f, 0x76, 0x5f, 0x73, 0x68, 0x61, 0x72, 0x65, 0x5f, 0x62, 0x69, 0x6e, 0x64, 0x5f, 0x64,
	0x61, 0x74, 0x61, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1f, 0x71, 0x61, 0x64, 0x65, 0x6e,
	0x61, 0x2f, 0x71, 0x61, 0x64, 0x65, 0x6e, 0x61, 0x2f, 0x70, 0x69, 0x6f, 0x6e, 0x65, 0x65, 0x72,
	0x5f, 0x6a, 0x61, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x24, 0x71, 0x61, 0x64, 0x65,
	0x6e, 0x61, 0x2f, 0x71, 0x61, 0x64, 0x65, 0x6e, 0x61, 0x2f, 0x65, 0x6e, 0x63, 0x6c, 0x61, 0x76,
	0x65, 0x5f, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x1a, 0x14, 0x67, 0x6f, 0x67, 0x6f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x67, 0x6f, 0x67,
	0x6f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x22, 0x0a, 0x0c, 0x48, 0x65, 0x6c, 0x6c, 0x6f,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x26, 0x0a, 0x0a, 0x48,
	0x65, 0x6c, 0x6c, 0x6f, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x22, 0x0d, 0x0a, 0x0b, 0x4d, 0x73, 0x67, 0x45, 0x6e, 0x64, 0x42, 0x6c, 0x6f,
	0x63, 0x6b, 0x22, 0x0f, 0x0a, 0x0d, 0x45, 0x6e, 0x64, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x52, 0x65,
	0x70, 0x6c, 0x79, 0x22, 0x51, 0x0a, 0x2d, 0x51, 0x75, 0x65, 0x72, 0x79, 0x47, 0x65, 0x74, 0x53,
	0x75, 0x62, 0x57, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x49, 0x44, 0x42, 0x79, 0x4f, 0x72, 0x69, 0x67,
	0x69, 0x6e, 0x61, 0x6c, 0x57, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x49, 0x44, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x73, 0x75, 0x62, 0x57, 0x61, 0x6c, 0x6c, 0x65,
	0x74, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x73, 0x75, 0x62, 0x57, 0x61,
	0x6c, 0x6c, 0x65, 0x74, 0x49, 0x44, 0x22, 0x31, 0x0a, 0x09, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x48,
	0x61, 0x73, 0x68, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x12, 0x0a, 0x04, 0x68, 0x61, 0x73, 0x68, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x68, 0x61, 0x73, 0x68, 0x22, 0x11, 0x0a, 0x0f, 0x4d, 0x73, 0x67,
	0x47, 0x65, 0x74, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x48, 0x61, 0x73, 0x68, 0x22, 0x45, 0x0a, 0x11,
	0x47, 0x65, 0x74, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x48, 0x61, 0x73, 0x68, 0x52, 0x65, 0x70, 0x6c,
	0x79, 0x12, 0x30, 0x0a, 0x06, 0x68, 0x61, 0x73, 0x68, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x18, 0x2e, 0x71, 0x61, 0x64, 0x65, 0x6e, 0x61, 0x2e, 0x71, 0x61, 0x64, 0x65, 0x6e,
	0x61, 0x2e, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x48, 0x61, 0x73, 0x68, 0x52, 0x06, 0x68, 0x61, 0x73,
	0x68, 0x65, 0x73, 0x22, 0x13, 0x0a, 0x11, 0x4d, 0x73, 0x67, 0x41, 0x64, 0x64, 0x41, 0x73, 0x56,
	0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x6f, 0x72, 0x22, 0xda, 0x01, 0x0a, 0x0e, 0x4d, 0x73, 0x67,
	0x53, 0x79, 0x6e, 0x63, 0x45, 0x6e, 0x63, 0x6c, 0x61, 0x76, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x70,
	0x69, 0x6f, 0x6e, 0x65, 0x65, 0x72, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x70, 0x69, 0x6f, 0x6e, 0x65, 0x65, 0x72, 0x49, 0x44, 0x12, 0x28, 0x0a, 0x0f, 0x65, 0x78, 0x74,
	0x65, 0x72, 0x6e, 0x61, 0x6c, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0f, 0x65, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x41, 0x64, 0x64, 0x72,
	0x65, 0x73, 0x73, 0x12, 0x2c, 0x0a, 0x11, 0x70, 0x69, 0x6f, 0x6e, 0x65, 0x65, 0x72, 0x41, 0x72,
	0x6d, 0x6f, 0x72, 0x50, 0x72, 0x69, 0x76, 0x4b, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x11,
	0x70, 0x69, 0x6f, 0x6e, 0x65, 0x65, 0x72, 0x41, 0x72, 0x6d, 0x6f, 0x72, 0x50, 0x72, 0x69, 0x76,
	0x4b, 0x12, 0x36, 0x0a, 0x16, 0x70, 0x69, 0x6f, 0x6e, 0x65, 0x65, 0x72, 0x41, 0x72, 0x6d, 0x6f,
	0x72, 0x50, 0x61, 0x73, 0x73, 0x50, 0x68, 0x72, 0x61, 0x73, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x16, 0x70, 0x69, 0x6f, 0x6e, 0x65, 0x65, 0x72, 0x41, 0x72, 0x6d, 0x6f, 0x72, 0x50,
	0x61, 0x73, 0x73, 0x50, 0x68, 0x72, 0x61, 0x73, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x73, 0x65, 0x65,
	0x64, 0x4e, 0x6f, 0x64, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x73, 0x65, 0x65,
	0x64, 0x4e, 0x6f, 0x64, 0x65, 0x22, 0x59, 0x0a, 0x11, 0x4d, 0x73, 0x67, 0x55, 0x70, 0x67, 0x72,
	0x61, 0x64, 0x65, 0x45, 0x6e, 0x63, 0x6c, 0x61, 0x76, 0x65, 0x12, 0x22, 0x0a, 0x0c, 0x72, 0x65,
	0x6d, 0x6f, 0x74, 0x65, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c,
	0x52, 0x0c, 0x72, 0x65, 0x6d, 0x6f, 0x74, 0x65, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x12, 0x20,
	0x0a, 0x0b, 0x65, 0x6e, 0x63, 0x6c, 0x61, 0x76, 0x65, 0x50, 0x75, 0x62, 0x4b, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0b, 0x65, 0x6e, 0x63, 0x6c, 0x61, 0x76, 0x65, 0x50, 0x75, 0x62, 0x4b,
	0x22, 0x87, 0x01, 0x0a, 0x13, 0x55, 0x70, 0x67, 0x72, 0x61, 0x64, 0x65, 0x45, 0x6e, 0x63, 0x6c,
	0x61, 0x76, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x22, 0x0a, 0x0c, 0x72, 0x65, 0x6d, 0x6f,
	0x74, 0x65, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0c,
	0x72, 0x65, 0x6d, 0x6f, 0x74, 0x65, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x12, 0x4c, 0x0a, 0x21,
	0x65, 0x6e, 0x63, 0x45, 0x6e, 0x63, 0x6c, 0x61, 0x76, 0x65, 0x50, 0x72, 0x69, 0x76, 0x61, 0x74,
	0x65, 0x53, 0x74, 0x61, 0x74, 0x65, 0x45, 0x6e, 0x63, 0x6c, 0x61, 0x76, 0x65, 0x50, 0x75, 0x62,
	0x4b, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x21, 0x65, 0x6e, 0x63, 0x45, 0x6e, 0x63, 0x6c,
	0x61, 0x76, 0x65, 0x50, 0x72, 0x69, 0x76, 0x61, 0x74, 0x65, 0x53, 0x74, 0x61, 0x74, 0x65, 0x45,
	0x6e, 0x63, 0x6c, 0x61, 0x76, 0x65, 0x50, 0x75, 0x62, 0x4b, 0x22, 0x2d, 0x0a, 0x13, 0x4d, 0x73,
	0x67, 0x45, 0x78, 0x70, 0x6f, 0x72, 0x74, 0x50, 0x72, 0x69, 0x76, 0x61, 0x74, 0x65, 0x4b, 0x65,
	0x79, 0x12, 0x16, 0x0a, 0x06, 0x70, 0x75, 0x62, 0x4b, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x70, 0x75, 0x62, 0x4b, 0x49, 0x44, 0x22, 0x2d, 0x0a, 0x13, 0x4d, 0x73, 0x67,
	0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x50, 0x72, 0x69, 0x76, 0x61, 0x74, 0x65, 0x4b, 0x65, 0x79,
	0x12, 0x16, 0x0a, 0x06, 0x70, 0x75, 0x62, 0x4b, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x70, 0x75, 0x62, 0x4b, 0x49, 0x44, 0x22, 0x17, 0x0a, 0x15, 0x4d, 0x73, 0x67, 0x45,
	0x78, 0x70, 0x6f, 0x72, 0x74, 0x50, 0x72, 0x69, 0x76, 0x61, 0x74, 0x65, 0x53, 0x74, 0x61, 0x74,
	0x65, 0x22, 0x18, 0x0a, 0x16, 0x4d, 0x73, 0x67, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x53,
	0x49, 0x6e, 0x74, 0x65, 0x72, 0x76, 0x61, 0x6c, 0x4b, 0x65, 0x79, 0x22, 0x1a, 0x0a, 0x18, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x53, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x76, 0x61, 0x6c, 0x4b,
	0x65, 0x79, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x17, 0x0a, 0x15, 0x52, 0x65, 0x6d, 0x6f, 0x76,
	0x65, 0x50, 0x72, 0x69, 0x76, 0x61, 0x74, 0x65, 0x4b, 0x65, 0x79, 0x52, 0x65, 0x70, 0x6c, 0x79,
	0x22, 0x2d, 0x0a, 0x15, 0x45, 0x78, 0x70, 0x6f, 0x72, 0x74, 0x50, 0x72, 0x69, 0x76, 0x61, 0x74,
	0x65, 0x4b, 0x65, 0x79, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x72, 0x69,
	0x76, 0x4b, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x70, 0x72, 0x69, 0x76, 0x4b, 0x22,
	0x2f, 0x0a, 0x17, 0x45, 0x78, 0x70, 0x6f, 0x72, 0x74, 0x50, 0x72, 0x69, 0x76, 0x61, 0x74, 0x65,
	0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x74,
	0x61, 0x74, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65,
	0x22, 0x76, 0x0a, 0x2a, 0x56, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x41, 0x75, 0x74, 0x68,
	0x65, 0x6e, 0x74, 0x69, 0x63, 0x61, 0x74, 0x65, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x50,
	0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16,
	0x0a, 0x06, 0x70, 0x75, 0x62, 0x4b, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x70, 0x75, 0x62, 0x4b, 0x49, 0x44, 0x12, 0x30, 0x0a, 0x13, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x13, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x50, 0x72, 0x6f, 0x76,
	0x69, 0x64, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x22, 0x42, 0x0a, 0x28, 0x56, 0x61, 0x6c, 0x69,
	0x64, 0x61, 0x74, 0x65, 0x41, 0x75, 0x74, 0x68, 0x65, 0x6e, 0x74, 0x69, 0x63, 0x61, 0x74, 0x65,
	0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x52,
	0x65, 0x70, 0x6c, 0x79, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0xae, 0x02, 0x0a,
	0x0e, 0x4d, 0x73, 0x67, 0x49, 0x6e, 0x69, 0x74, 0x45, 0x6e, 0x63, 0x6c, 0x61, 0x76, 0x65, 0x12,
	0x1c, 0x0a, 0x09, 0x70, 0x69, 0x6f, 0x6e, 0x65, 0x65, 0x72, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x09, 0x70, 0x69, 0x6f, 0x6e, 0x65, 0x65, 0x72, 0x49, 0x44, 0x12, 0x28, 0x0a,
	0x0f, 0x65, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x65, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c,
	0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x2c, 0x0a, 0x11, 0x70, 0x69, 0x6f, 0x6e, 0x65,
	0x65, 0x72, 0x41, 0x72, 0x6d, 0x6f, 0x72, 0x50, 0x72, 0x69, 0x76, 0x4b, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x11, 0x70, 0x69, 0x6f, 0x6e, 0x65, 0x65, 0x72, 0x41, 0x72, 0x6d, 0x6f, 0x72,
	0x50, 0x72, 0x69, 0x76, 0x4b, 0x12, 0x36, 0x0a, 0x16, 0x70, 0x69, 0x6f, 0x6e, 0x65, 0x65, 0x72,
	0x41, 0x72, 0x6d, 0x6f, 0x72, 0x50, 0x61, 0x73, 0x73, 0x50, 0x68, 0x72, 0x61, 0x73, 0x65, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x16, 0x70, 0x69, 0x6f, 0x6e, 0x65, 0x65, 0x72, 0x41, 0x72,
	0x6d, 0x6f, 0x72, 0x50, 0x61, 0x73, 0x73, 0x50, 0x68, 0x72, 0x61, 0x73, 0x65, 0x12, 0x14, 0x0a,
	0x05, 0x6a, 0x61, 0x72, 0x49, 0x44, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6a, 0x61,
	0x72, 0x49, 0x44, 0x12, 0x20, 0x0a, 0x0b, 0x72, 0x65, 0x67, 0x75, 0x6c, 0x61, 0x74, 0x6f, 0x72,
	0x49, 0x44, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x72, 0x65, 0x67, 0x75, 0x6c, 0x61,
	0x74, 0x6f, 0x72, 0x49, 0x44, 0x12, 0x1a, 0x0a, 0x08, 0x73, 0x69, 0x67, 0x6e, 0x65, 0x72, 0x49,
	0x44, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x73, 0x69, 0x67, 0x6e, 0x65, 0x72, 0x49,
	0x44, 0x12, 0x1a, 0x0a, 0x08, 0x75, 0x6e, 0x69, 0x71, 0x75, 0x65, 0x49, 0x44, 0x18, 0x08, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x6e, 0x69, 0x71, 0x75, 0x65, 0x49, 0x44, 0x22, 0x80, 0x01,
	0x0a, 0x0f, 0x56, 0x53, 0x68, 0x61, 0x72, 0x65, 0x53, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x6f, 0x72,
	0x79, 0x12, 0x2e, 0x0a, 0x12, 0x65, 0x6e, 0x63, 0x53, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x6f, 0x72,
	0x79, 0x56, 0x53, 0x68, 0x61, 0x72, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x12, 0x65,
	0x6e, 0x63, 0x53, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x6f, 0x72, 0x79, 0x56, 0x53, 0x68, 0x61, 0x72,
	0x65, 0x12, 0x3d, 0x0a, 0x0a, 0x76, 0x53, 0x68, 0x61, 0x72, 0x65, 0x42, 0x69, 0x6e, 0x64, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x71, 0x61, 0x64, 0x65, 0x6e, 0x61, 0x2e, 0x71,
	0x61, 0x64, 0x65, 0x6e, 0x61, 0x2e, 0x56, 0x53, 0x68, 0x61, 0x72, 0x65, 0x42, 0x69, 0x6e, 0x64,
	0x44, 0x61, 0x74, 0x61, 0x52, 0x0a, 0x76, 0x53, 0x68, 0x61, 0x72, 0x65, 0x42, 0x69, 0x6e, 0x64,
	0x22, 0xab, 0x02, 0x0a, 0x1f, 0x56, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x41, 0x75, 0x74,
	0x68, 0x6f, 0x72, 0x69, 0x7a, 0x65, 0x64, 0x53, 0x69, 0x67, 0x6e, 0x65, 0x72, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x72, 0x65, 0x61, 0x74, 0x6f, 0x72, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x72, 0x65, 0x61, 0x74, 0x6f, 0x72, 0x12, 0x50,
	0x0a, 0x13, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6e, 0x67, 0x53, 0x69, 0x67, 0x6e,
	0x61, 0x74, 0x6f, 0x72, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x71, 0x61,
	0x64, 0x65, 0x6e, 0x61, 0x2e, 0x71, 0x61, 0x64, 0x65, 0x6e, 0x61, 0x2e, 0x56, 0x53, 0x68, 0x61,
	0x72, 0x65, 0x53, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x6f, 0x72, 0x79, 0x52, 0x13, 0x72, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x69, 0x6e, 0x67, 0x53, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x6f, 0x72, 0x79,
	0x12, 0x4c, 0x0a, 0x11, 0x72, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x64, 0x53, 0x69, 0x67, 0x6e,
	0x61, 0x74, 0x6f, 0x72, 0x79, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x71, 0x61,
	0x64, 0x65, 0x6e, 0x61, 0x2e, 0x71, 0x61, 0x64, 0x65, 0x6e, 0x61, 0x2e, 0x56, 0x53, 0x68, 0x61,
	0x72, 0x65, 0x53, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x6f, 0x72, 0x79, 0x52, 0x11, 0x72, 0x65, 0x71,
	0x75, 0x69, 0x72, 0x65, 0x64, 0x53, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x6f, 0x72, 0x79, 0x12, 0x4e,
	0x0a, 0x12, 0x63, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x53, 0x69, 0x67, 0x6e, 0x61,
	0x74, 0x6f, 0x72, 0x79, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x71, 0x61, 0x64,
	0x65, 0x6e, 0x61, 0x2e, 0x71, 0x61, 0x64, 0x65, 0x6e, 0x61, 0x2e, 0x56, 0x53, 0x68, 0x61, 0x72,
	0x65, 0x53, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x6f, 0x72, 0x79, 0x52, 0x12, 0x63, 0x6f, 0x6d, 0x70,
	0x6c, 0x65, 0x74, 0x65, 0x64, 0x53, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x6f, 0x72, 0x79, 0x22, 0x37,
	0x0a, 0x1d, 0x56, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x41, 0x75, 0x74, 0x68, 0x6f, 0x72,
	0x69, 0x7a, 0x65, 0x64, 0x53, 0x69, 0x67, 0x6e, 0x65, 0x72, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12,
	0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0xc8, 0x01, 0x0a, 0x22, 0x56, 0x61, 0x6c, 0x69,
	0x64, 0x61, 0x74, 0x65, 0x41, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x69, 0x7a, 0x65, 0x64, 0x53, 0x69,
	0x67, 0x6e, 0x61, 0x74, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x18,
	0x0a, 0x07, 0x63, 0x72, 0x65, 0x61, 0x74, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x63, 0x72, 0x65, 0x61, 0x74, 0x6f, 0x72, 0x12, 0x3c, 0x0a, 0x09, 0x73, 0x69, 0x67, 0x6e,
	0x61, 0x74, 0x6f, 0x72, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x71, 0x61,
	0x64, 0x65, 0x6e, 0x61, 0x2e, 0x71, 0x61, 0x64, 0x65, 0x6e, 0x61, 0x2e, 0x56, 0x53, 0x68, 0x61,
	0x72, 0x65, 0x53, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x6f, 0x72, 0x79, 0x52, 0x09, 0x73, 0x69, 0x67,
	0x6e, 0x61, 0x74, 0x6f, 0x72, 0x79, 0x12, 0x4a, 0x0a, 0x10, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e,
	0x74, 0x53, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x6f, 0x72, 0x79, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x1e, 0x2e, 0x71, 0x61, 0x64, 0x65, 0x6e, 0x61, 0x2e, 0x71, 0x61, 0x64, 0x65, 0x6e, 0x61,
	0x2e, 0x56, 0x53, 0x68, 0x61, 0x72, 0x65, 0x53, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x6f, 0x72, 0x79,
	0x52, 0x10, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x53, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x6f,
	0x72, 0x79, 0x22, 0x3a, 0x0a, 0x20, 0x56, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x41, 0x75,
	0x74, 0x68, 0x6f, 0x72, 0x69, 0x7a, 0x65, 0x64, 0x53, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x6f, 0x72,
	0x79, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x49,
	0x0a, 0x0f, 0x4d, 0x73, 0x67, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x48, 0x65, 0x69, 0x67, 0x68,
	0x74, 0x12, 0x16, 0x0a, 0x06, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x06, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x12, 0x1e, 0x0a, 0x0a, 0x69, 0x73, 0x50,
	0x72, 0x6f, 0x70, 0x6f, 0x73, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0a, 0x69,
	0x73, 0x50, 0x72, 0x6f, 0x70, 0x6f, 0x73, 0x65, 0x72, 0x22, 0xc8, 0x01, 0x0a, 0x13, 0x4d, 0x73,
	0x67, 0x53, 0x63, 0x61, 0x6e, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x12, 0x42, 0x0a, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70,
	0x42, 0x08, 0xc8, 0xde, 0x1f, 0x00, 0x90, 0xdf, 0x1f, 0x01, 0x52, 0x09, 0x74, 0x69, 0x6d, 0x65,
	0x73, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x16, 0x0a, 0x06, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x12, 0x31, 0x0a,
	0x03, 0x6d, 0x73, 0x67, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x71, 0x61, 0x64,
	0x65, 0x6e, 0x61, 0x2e, 0x71, 0x61, 0x64, 0x65, 0x6e, 0x61, 0x2e, 0x4d, 0x73, 0x67, 0x54, 0x72,
	0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x46, 0x75, 0x6e, 0x64, 0x73, 0x52, 0x03, 0x6d, 0x73, 0x67,
	0x12, 0x22, 0x0a, 0x0c, 0x65, 0x78, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x72, 0x61, 0x74, 0x65,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x65, 0x78, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65,
	0x72, 0x61, 0x74, 0x65, 0x22, 0x26, 0x0a, 0x0e, 0x4d, 0x73, 0x67, 0x53, 0x79, 0x6e, 0x63, 0x57,
	0x61, 0x6c, 0x6c, 0x65, 0x74, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6c, 0x65, 0x61, 0x72, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x63, 0x6c, 0x65, 0x61, 0x72, 0x22, 0x43, 0x0a, 0x10,
	0x53, 0x79, 0x6e, 0x63, 0x57, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x73, 0x52, 0x65, 0x70, 0x6c, 0x79,
	0x12, 0x2f, 0x0a, 0x07, 0x77, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x15, 0x2e, 0x71, 0x61, 0x64, 0x65, 0x6e, 0x61, 0x2e, 0x71, 0x61, 0x64, 0x65, 0x6e,
	0x61, 0x2e, 0x57, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x52, 0x07, 0x77, 0x61, 0x6c, 0x6c, 0x65, 0x74,
	0x73, 0x22, 0x2a, 0x0a, 0x12, 0x4d, 0x73, 0x67, 0x53, 0x79, 0x6e, 0x63, 0x43, 0x72, 0x65, 0x64,
	0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6c, 0x65, 0x61, 0x72,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x63, 0x6c, 0x65, 0x61, 0x72, 0x22, 0x53, 0x0a,
	0x14, 0x53, 0x79, 0x6e, 0x63, 0x43, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x73,
	0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x3b, 0x0a, 0x0b, 0x63, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74,
	0x69, 0x61, 0x6c, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x71, 0x61, 0x64,
	0x65, 0x6e, 0x61, 0x2e, 0x71, 0x61, 0x64, 0x65, 0x6e, 0x61, 0x2e, 0x43, 0x72, 0x65, 0x64, 0x65,
	0x6e, 0x74, 0x69, 0x61, 0x6c, 0x52, 0x0b, 0x63, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61,
	0x6c, 0x73, 0x22, 0x2a, 0x0a, 0x12, 0x4d, 0x73, 0x67, 0x53, 0x79, 0x6e, 0x63, 0x52, 0x65, 0x63,
	0x6f, 0x76, 0x65, 0x72, 0x4b, 0x65, 0x79, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6c, 0x65, 0x61,
	0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x63, 0x6c, 0x65, 0x61, 0x72, 0x22, 0x53,
	0x0a, 0x14, 0x53, 0x79, 0x6e, 0x63, 0x52, 0x65, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x4b, 0x65, 0x79,
	0x73, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x3b, 0x0a, 0x0b, 0x72, 0x65, 0x63, 0x6f, 0x76, 0x65,
	0x72, 0x4b, 0x65, 0x79, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x71, 0x61,
	0x64, 0x65, 0x6e, 0x61, 0x2e, 0x71, 0x61, 0x64, 0x65, 0x6e, 0x61, 0x2e, 0x52, 0x65, 0x63, 0x6f,
	0x76, 0x65, 0x72, 0x4b, 0x65, 0x79, 0x52, 0x0b, 0x72, 0x65, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x4b,
	0x65, 0x79, 0x73, 0x22, 0x37, 0x0a, 0x1d, 0x53, 0x65, 0x74, 0x53, 0x65, 0x63, 0x72, 0x65, 0x74,
	0x53, 0x68, 0x61, 0x72, 0x65, 0x50, 0x72, 0x69, 0x76, 0x61, 0x74, 0x65, 0x4b, 0x65, 0x79, 0x52,
	0x65, 0x70, 0x6c, 0x79, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x35, 0x0a, 0x1d,
	0x4d, 0x73, 0x67, 0x53, 0x79, 0x6e, 0x63, 0x53, 0x75, 0x73, 0x70, 0x69, 0x63, 0x69, 0x6f, 0x75,
	0x73, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x14, 0x0a,
	0x05, 0x63, 0x6c, 0x65, 0x61, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x63, 0x6c,
	0x65, 0x61, 0x72, 0x22, 0x7f, 0x0a, 0x1f, 0x53, 0x79, 0x6e, 0x63, 0x53, 0x75, 0x73, 0x70, 0x69,
	0x63, 0x69, 0x6f, 0x75, 0x73, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x5c, 0x0a, 0x16, 0x73, 0x75, 0x73, 0x70, 0x69, 0x63,
	0x69, 0x6f, 0x75, 0x73, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x71, 0x61, 0x64, 0x65, 0x6e, 0x61, 0x2e,
	0x71, 0x61, 0x64, 0x65, 0x6e, 0x61, 0x2e, 0x53, 0x75, 0x73, 0x70, 0x69, 0x63, 0x69, 0x6f, 0x75,
	0x73, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x16, 0x73, 0x75,
	0x73, 0x70, 0x69, 0x63, 0x69, 0x6f, 0x75, 0x73, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x22, 0x2a, 0x0a, 0x10, 0x49, 0x6e, 0x69, 0x74, 0x45, 0x6e, 0x63, 0x6c,
	0x61, 0x76, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x22, 0x2b, 0x0a, 0x11, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x48, 0x65, 0x69, 0x67, 0x68, 0x74,
	0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x32, 0x0a,
	0x16, 0x4d, 0x73, 0x67, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x43,
	0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65,
	0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73,
	0x73, 0x22, 0x32, 0x0a, 0x18, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x16, 0x0a,
	0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x73,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x2a, 0x0a, 0x10, 0x53, 0x79, 0x6e, 0x63, 0x45, 0x6e, 0x63,
	0x6c, 0x61, 0x76, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x22, 0x2d, 0x0a, 0x13, 0x41, 0x64, 0x64, 0x41, 0x73, 0x56, 0x61, 0x6c, 0x69, 0x64, 0x61,
	0x74, 0x6f, 0x72, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x22, 0x28, 0x0a, 0x0e, 0x53, 0x65, 0x74, 0x57, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x52, 0x65, 0x70,
	0x6c, 0x79, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x31, 0x0a, 0x17, 0x53, 0x65,
	0x74, 0x45, 0x6e, 0x63, 0x6c, 0x61, 0x76, 0x65, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79,
	0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x8c, 0x01,
	0x0a, 0x1c, 0x50, 0x69, 0x6f, 0x6e, 0x65, 0x65, 0x72, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x45,
	0x6e, 0x63, 0x6c, 0x61, 0x76, 0x65, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x12, 0x48,
	0x0a, 0x0f, 0x65, 0x6e, 0x63, 0x6c, 0x61, 0x76, 0x65, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74,
	0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x71, 0x61, 0x64, 0x65, 0x6e, 0x61,
	0x2e, 0x71, 0x61, 0x64, 0x65, 0x6e, 0x61, 0x2e, 0x45, 0x6e, 0x63, 0x6c, 0x61, 0x76, 0x65, 0x49,
	0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x52, 0x0f, 0x65, 0x6e, 0x63, 0x6c, 0x61, 0x76, 0x65,
	0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x12, 0x22, 0x0a, 0x0c, 0x72, 0x65, 0x6d, 0x6f,
	0x74, 0x65, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0c,
	0x72, 0x65, 0x6d, 0x6f, 0x74, 0x65, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x22, 0x34, 0x0a, 0x1a,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x45, 0x6e, 0x63, 0x6c, 0x61, 0x76, 0x65, 0x49, 0x64, 0x65,
	0x6e, 0x74, 0x69, 0x74, 0x79, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x22, 0x2c, 0x0a, 0x12, 0x53, 0x65, 0x74, 0x50, 0x72, 0x6f, 0x74, 0x65, 0x63, 0x74,
	0x4b, 0x65, 0x79, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x22, 0x2c, 0x0a, 0x12, 0x53, 0x65, 0x74, 0x52, 0x65, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x4b, 0x65,
	0x79, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x2c,
	0x0a, 0x12, 0x53, 0x65, 0x74, 0x43, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x52,
	0x65, 0x70, 0x6c, 0x79, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x2f, 0x0a, 0x15,
	0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x43, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c,
	0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x29, 0x0a,
	0x0f, 0x52, 0x65, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x4b, 0x65, 0x79, 0x52, 0x65, 0x70, 0x6c, 0x79,
	0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x2d, 0x0a, 0x13, 0x53, 0x69, 0x67, 0x6e,
	0x52, 0x65, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x4b, 0x65, 0x79, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12,
	0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x2b, 0x0a, 0x11, 0x53, 0x65, 0x74, 0x50, 0x75,
	0x62, 0x6c, 0x69, 0x63, 0x4b, 0x65, 0x79, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x16, 0x0a, 0x06,
	0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x73, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x22, 0x2e, 0x0a, 0x14, 0x53, 0x65, 0x74, 0x4a, 0x61, 0x72, 0x52, 0x65,
	0x67, 0x75, 0x6c, 0x61, 0x74, 0x6f, 0x72, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x16, 0x0a, 0x06,
	0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x73, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x22, 0x2c, 0x0a, 0x12, 0x53, 0x65, 0x74, 0x50, 0x69, 0x6f, 0x6e, 0x65,
	0x65, 0x72, 0x4a, 0x61, 0x72, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x22, 0x35, 0x0a, 0x1b, 0x53, 0x65, 0x74, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x76, 0x61,
	0x6c, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x4b, 0x65, 0x79, 0x49, 0x64, 0x52, 0x65, 0x70, 0x6c,
	0x79, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x38, 0x0a, 0x1e, 0x56, 0x61, 0x6c,
	0x69, 0x64, 0x61, 0x74, 0x65, 0x44, 0x65, 0x73, 0x74, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x57, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x16, 0x0a, 0x06, 0x73,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x73, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x22, 0x31, 0x0a, 0x17, 0x56, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x43,
	0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x16,
	0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06,
	0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x4c, 0x0a, 0x1a, 0x56, 0x61, 0x6c, 0x69, 0x64, 0x61,
	0x74, 0x65, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x50, 0x72, 0x69, 0x6d, 0x65, 0x52,
	0x65, 0x70, 0x6c, 0x79, 0x12, 0x2e, 0x0a, 0x12, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x6f,
	0x75, 0x72, 0x63, 0x65, 0x57, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x12, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x57, 0x61,
	0x6c, 0x6c, 0x65, 0x74, 0x22, 0x5c, 0x0a, 0x20, 0x56, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65,
	0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x44, 0x6f, 0x75, 0x62, 0x6c, 0x65, 0x50, 0x72,
	0x69, 0x6d, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x38, 0x0a, 0x17, 0x75, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x44, 0x65, 0x73, 0x74, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x57, 0x61, 0x6c,
	0x6c, 0x65, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x17, 0x75, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x44, 0x65, 0x73, 0x74, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x57, 0x61, 0x6c, 0x6c,
	0x65, 0x74, 0x22, 0x2e, 0x0a, 0x14, 0x53, 0x63, 0x61, 0x6e, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x22, 0x27, 0x0a, 0x17, 0x45, 0x6e, 0x63, 0x6c, 0x61, 0x76, 0x65, 0x53, 0x74, 0x6f,
	0x72, 0x65, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x41, 0x72, 0x72, 0x61, 0x79, 0x12, 0x0c, 0x0a,
	0x01, 0x61, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x01, 0x61, 0x22, 0x22, 0x0a, 0x12, 0x45,
	0x6e, 0x63, 0x6c, 0x61, 0x76, 0x65, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x53, 0x74, 0x72, 0x69, 0x6e,
	0x67, 0x12, 0x0c, 0x0a, 0x01, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x01, 0x73, 0x22,
	0x59, 0x0a, 0x1b, 0x45, 0x6e, 0x63, 0x6c, 0x61, 0x76, 0x65, 0x45, 0x6e, 0x63, 0x6c, 0x61, 0x76,
	0x65, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x41, 0x72, 0x72, 0x61, 0x79, 0x12, 0x3a,
	0x0a, 0x08, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x1e, 0x2e, 0x71, 0x61, 0x64, 0x65, 0x6e, 0x61, 0x2e, 0x71, 0x61, 0x64, 0x65, 0x6e, 0x61,
	0x2e, 0x45, 0x6e, 0x63, 0x6c, 0x61, 0x76, 0x65, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79,
	0x52, 0x08, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x32, 0x4f, 0x0a, 0x07, 0x47, 0x72,
	0x65, 0x65, 0x74, 0x65, 0x72, 0x12, 0x44, 0x0a, 0x08, 0x53, 0x61, 0x79, 0x48, 0x65, 0x6c, 0x6c,
	0x6f, 0x12, 0x1b, 0x2e, 0x71, 0x61, 0x64, 0x65, 0x6e, 0x61, 0x2e, 0x71, 0x61, 0x64, 0x65, 0x6e,
	0x61, 0x2e, 0x48, 0x65, 0x6c, 0x6c, 0x6f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x19,
	0x2e, 0x71, 0x61, 0x64, 0x65, 0x6e, 0x61, 0x2e, 0x71, 0x61, 0x64, 0x65, 0x6e, 0x61, 0x2e, 0x48,
	0x65, 0x6c, 0x6c, 0x6f, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x32, 0xf3, 0x23, 0x0a, 0x0d,
	0x51, 0x61, 0x64, 0x65, 0x6e, 0x61, 0x45, 0x6e, 0x63, 0x6c, 0x61, 0x76, 0x65, 0x12, 0x4f, 0x0a,
	0x0b, 0x49, 0x6e, 0x69, 0x74, 0x45, 0x6e, 0x63, 0x6c, 0x61, 0x76, 0x65, 0x12, 0x1d, 0x2e, 0x71,
	0x61, 0x64, 0x65, 0x6e, 0x61, 0x2e, 0x71, 0x61, 0x64, 0x65, 0x6e, 0x61, 0x2e, 0x4d, 0x73, 0x67,
	0x49, 0x6e, 0x69, 0x74, 0x45, 0x6e, 0x63, 0x6c, 0x61, 0x76, 0x65, 0x1a, 0x1f, 0x2e, 0x71, 0x61,
	0x64, 0x65, 0x6e, 0x61, 0x2e, 0x71, 0x61, 0x64, 0x65, 0x6e, 0x61, 0x2e, 0x49, 0x6e, 0x69, 0x74,
	0x45, 0x6e, 0x63, 0x6c, 0x61, 0x76, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x12, 0x4f,
	0x0a, 0x0b, 0x53, 0x79, 0x6e, 0x63, 0x45, 0x6e, 0x63, 0x6c, 0x61, 0x76, 0x65, 0x12, 0x1d, 0x2e,
	0x71, 0x61, 0x64, 0x65, 0x6e, 0x61, 0x2e, 0x71, 0x61, 0x64, 0x65, 0x6e, 0x61, 0x2e, 0x4d, 0x73,
	0x67, 0x53, 0x79, 0x6e, 0x63, 0x45, 0x6e, 0x63, 0x6c, 0x61, 0x76, 0x65, 0x1a, 0x1f, 0x2e, 0x71,
	0x61, 0x64, 0x65, 0x6e, 0x61, 0x2e, 0x71, 0x61, 0x64, 0x65, 0x6e, 0x61, 0x2e, 0x53, 0x79, 0x6e,
	0x63, 0x45, 0x6e, 0x63, 0x6c, 0x61, 0x76, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x12,
	0x58, 0x0a, 0x0e, 0x55, 0x70, 0x67, 0x72, 0x61, 0x64, 0x65, 0x45, 0x6e, 0x63, 0x6c, 0x61, 0x76,
	0x65, 0x12, 0x20, 0x2e, 0x71, 0x61, 0x64, 0x65, 0x6e, 0x61, 0x2e, 0x71, 0x61, 0x64, 0x65, 0x6e,
	0x61, 0x2e, 0x4d, 0x73, 0x67, 0x55, 0x70, 0x67, 0x72, 0x61, 0x64, 0x65, 0x45, 0x6e, 0x63, 0x6c,
	0x61, 0x76, 0x65, 0x1a, 0x22, 0x2e, 0x71, 0x61, 0x64, 0x65, 0x6e, 0x61, 0x2e, 0x71, 0x61, 0x64,
	0x65, 0x6e, 0x61, 0x2e, 0x55, 0x70, 0x67, 0x72, 0x61, 0x64, 0x65, 0x45, 0x6e, 0x63, 0x6c, 0x61,
	0x76, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x12, 0x5e, 0x0a, 0x10, 0x45, 0x78, 0x70,
	0x6f, 0x72, 0x74, 0x50, 0x72, 0x69, 0x76, 0x61, 0x74, 0x65, 0x4b, 0x65, 0x79, 0x12, 0x22, 0x2e,
	0x71, 0x61, 0x64, 0x65, 0x6e, 0x61, 0x2e, 0x71, 0x61, 0x64, 0x65, 0x6e, 0x61, 0x2e, 0x4d, 0x73,
	0x67, 0x45, 0x78, 0x70, 0x6f, 0x72, 0x74, 0x50, 0x72, 0x69, 0x76, 0x61, 0x74, 0x65, 0x4b, 0x65,
	0x79, 0x1a, 0x24, 0x2e, 0x71, 0x61, 0x64, 0x65, 0x6e, 0x61, 0x2e, 0x71, 0x61, 0x64, 0x65, 0x6e,
	0x61, 0x2e, 0x45, 0x78, 0x70, 0x6f, 0x72, 0x74, 0x50, 0x72, 0x69, 0x76, 0x61, 0x74, 0x65, 0x4b,
	0x65, 0x79, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x12, 0x64, 0x0a, 0x12, 0x45, 0x78, 0x70,
	0x6f, 0x72, 0x74, 0x50, 0x72, 0x69, 0x76, 0x61, 0x74, 0x65, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12,
	0x24, 0x2e, 0x71, 0x61, 0x64, 0x65, 0x6e, 0x61, 0x2e, 0x71, 0x61, 0x64, 0x65, 0x6e, 0x61, 0x2e,
	0x4d, 0x73, 0x67, 0x45, 0x78, 0x70, 0x6f, 0x72, 0x74, 0x50, 0x72, 0x69, 0x76, 0x61, 0x74, 0x65,
	0x53, 0x74, 0x61, 0x74, 0x65, 0x1a, 0x26, 0x2e, 0x71, 0x61, 0x64, 0x65, 0x6e, 0x61, 0x2e, 0x71,
	0x61, 0x64, 0x65, 0x6e, 0x61, 0x2e, 0x45, 0x78, 0x70, 0x6f, 0x72, 0x74, 0x50, 0x72, 0x69, 0x76,
	0x61, 0x74, 0x65, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x12,
	0x5e, 0x0a, 0x10, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x50, 0x72, 0x69, 0x76, 0x61, 0x74, 0x65,
	0x4b, 0x65, 0x79, 0x12, 0x22, 0x2e, 0x71, 0x61, 0x64, 0x65, 0x6e, 0x61, 0x2e, 0x71, 0x61, 0x64,
	0x65, 0x6e, 0x61, 0x2e, 0x4d, 0x73, 0x67, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x50, 0x72, 0x69,
	0x76, 0x61, 0x74, 0x65, 0x4b, 0x65, 0x79, 0x1a, 0x24, 0x2e, 0x71, 0x61, 0x64, 0x65, 0x6e, 0x61,
	0x2e, 0x71, 0x61, 0x64, 0x65, 0x6e, 0x61, 0x2e, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x50, 0x72,
	0x69, 0x76, 0x61, 0x74, 0x65, 0x4b, 0x65, 0x79, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x12,
	0x67, 0x0a, 0x13, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x53, 0x49, 0x6e, 0x74, 0x65, 0x72,
	0x76, 0x61, 0x6c, 0x4b, 0x65, 0x79, 0x12, 0x25, 0x2e, 0x71, 0x61, 0x64, 0x65, 0x6e, 0x61, 0x2e,
	0x71, 0x61, 0x64, 0x65, 0x6e, 0x61, 0x2e, 0x4d, 0x73, 0x67, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x53, 0x53, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x76, 0x61, 0x6c, 0x4b, 0x65, 0x79, 0x1a, 0x27, 0x2e,
	0x71, 0x61, 0x64, 0x65, 0x6e, 0x61, 0x2e, 0x71, 0x61, 0x64, 0x65, 0x6e, 0x61, 0x2e, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x53, 0x53, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x76, 0x61, 0x6c, 0x4b, 0x65,
	0x79, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x12, 0x7a, 0x0a, 0x17, 0x51, 0x75, 0x65, 0x72,
	0x79, 0x45, 0x6e, 0x63, 0x6c, 0x61, 0x76, 0x65, 0x53, 0x79, 0x6e, 0x63, 0x45, 0x6e, 0x63, 0x6c,
	0x61, 0x76, 0x65, 0x12, 0x2d, 0x2e, 0x71, 0x61, 0x64, 0x65, 0x6e, 0x61, 0x2e, 0x71, 0x61, 0x64,
	0x65, 0x6e, 0x61, 0x2e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x45, 0x6e, 0x63, 0x6c, 0x61, 0x76, 0x65,
	0x53, 0x79, 0x6e, 0x63, 0x45, 0x6e, 0x63, 0x6c, 0x61, 0x76, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x2e, 0x2e, 0x71, 0x61, 0x64, 0x65, 0x6e, 0x61, 0x2e, 0x71, 0x61, 0x64, 0x65,
	0x6e, 0x61, 0x2e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x45, 0x6e, 0x63, 0x6c, 0x61, 0x76, 0x65, 0x53,
	0x79, 0x6e, 0x63, 0x45, 0x6e, 0x63, 0x6c, 0x61, 0x76, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x00, 0x12, 0x7a, 0x0a, 0x17, 0x51, 0x75, 0x65, 0x72, 0x79, 0x45, 0x6e, 0x63,
	0x6c, 0x61, 0x76, 0x65, 0x53, 0x65, 0x63, 0x72, 0x65, 0x74, 0x53, 0x68, 0x61, 0x72, 0x65, 0x12,
	0x2d, 0x2e, 0x71, 0x61, 0x64, 0x65, 0x6e, 0x61, 0x2e, 0x71, 0x61, 0x64, 0x65, 0x6e, 0x61, 0x2e,
	0x51, 0x75, 0x65, 0x72, 0x79, 0x45, 0x6e, 0x63, 0x6c, 0x61, 0x76, 0x65, 0x53, 0x65, 0x63, 0x72,
	0x65, 0x74, 0x53, 0x68, 0x61, 0x72, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2e,
	0x2e, 0x71, 0x61, 0x64, 0x65, 0x6e, 0x61, 0x2e, 0x71, 0x61, 0x64, 0x65, 0x6e, 0x61, 0x2e, 0x51,
	0x75, 0x65, 0x72, 0x79, 0x45, 0x6e, 0x63, 0x6c, 0x61, 0x76, 0x65, 0x53, 0x65, 0x63, 0x72, 0x65,
	0x74, 0x53, 0x68, 0x61, 0x72, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00,
	0x12, 0x86, 0x01, 0x0a, 0x1b, 0x51, 0x75, 0x65, 0x72, 0x79, 0x45, 0x6e, 0x63, 0x6c, 0x61, 0x76,
	0x65, 0x52, 0x65, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x4b, 0x65, 0x79, 0x53, 0x68, 0x61, 0x72, 0x65,
	0x12, 0x31, 0x2e, 0x71, 0x61, 0x64, 0x65, 0x6e, 0x61, 0x2e, 0x71, 0x61, 0x64, 0x65, 0x6e, 0x61,
	0x2e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x45, 0x6e, 0x63, 0x6c, 0x61, 0x76, 0x65, 0x52, 0x65, 0x63,
	0x6f, 0x76, 0x65, 0x72, 0x4b, 0x65, 0x79, 0x53, 0x68, 0x61, 0x72, 0x65, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x32, 0x2e, 0x71, 0x61, 0x64, 0x65, 0x6e, 0x61, 0x2e, 0x71, 0x61, 0x64,
	0x65, 0x6e, 0x61, 0x2e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x45, 0x6e, 0x63, 0x6c, 0x61, 0x76, 0x65,
	0x52, 0x65, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x4b, 0x65, 0x79, 0x53, 0x68, 0x61, 0x72, 0x65, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x9e, 0x01, 0x0a, 0x23, 0x51, 0x75,
	0x65, 0x72, 0x79, 0x45, 0x6e, 0x63, 0x6c, 0x61, 0x76, 0x65, 0x56, 0x61, 0x6c, 0x69, 0x64, 0x61,
	0x74, 0x65, 0x45, 0x6e, 0x63, 0x6c, 0x61, 0x76, 0x65, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74,
	0x79, 0x12, 0x39, 0x2e, 0x71, 0x61, 0x64, 0x65, 0x6e, 0x61, 0x2e, 0x71, 0x61, 0x64, 0x65, 0x6e,
	0x61, 0x2e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x45, 0x6e, 0x63, 0x6c, 0x61, 0x76, 0x65, 0x56, 0x61,
	0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x45, 0x6e, 0x63, 0x6c, 0x61, 0x76, 0x65, 0x49, 0x64, 0x65,
	0x6e, 0x74, 0x69, 0x74, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x3a, 0x2e, 0x71,
	0x61, 0x64, 0x65, 0x6e, 0x61, 0x2e, 0x71, 0x61, 0x64, 0x65, 0x6e, 0x61, 0x2e, 0x51, 0x75, 0x65,
	0x72, 0x79, 0x45, 0x6e, 0x63, 0x6c, 0x61, 0x76, 0x65, 0x56, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74,
	0x65, 0x45, 0x6e, 0x63, 0x6c, 0x61, 0x76, 0x65, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x5e, 0x0a, 0x12, 0x53, 0x65,
	0x74, 0x45, 0x6e, 0x63, 0x6c, 0x61, 0x76, 0x65, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79,
	0x12, 0x1e, 0x2e, 0x71, 0x61, 0x64, 0x65, 0x6e, 0x61, 0x2e, 0x71, 0x61, 0x64, 0x65, 0x6e, 0x61,
	0x2e, 0x45, 0x6e, 0x63, 0x6c, 0x61, 0x76, 0x65, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79,
	0x1a, 0x26, 0x2e, 0x71, 0x61, 0x64, 0x65, 0x6e, 0x61, 0x2e, 0x71, 0x61, 0x64, 0x65, 0x6e, 0x61,
	0x2e, 0x53, 0x65, 0x74, 0x45, 0x6e, 0x63, 0x6c, 0x61, 0x76, 0x65, 0x49, 0x64, 0x65, 0x6e, 0x74,
	0x69, 0x74, 0x79, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x12, 0x71, 0x0a, 0x15, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x45, 0x6e, 0x63, 0x6c, 0x61, 0x76, 0x65, 0x49, 0x64, 0x65, 0x6e, 0x74,
	0x69, 0x74, 0x79, 0x12, 0x2b, 0x2e, 0x71, 0x61, 0x64, 0x65, 0x6e, 0x61, 0x2e, 0x71, 0x61, 0x64,
	0x65, 0x6e, 0x61, 0x2e, 0x50, 0x69, 0x6f, 0x6e, 0x65, 0x65, 0x72, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x45, 0x6e, 0x63, 0x6c, 0x61, 0x76, 0x65, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79,
	0x1a, 0x29, 0x2e, 0x71, 0x61, 0x64, 0x65, 0x6e, 0x61, 0x2e, 0x71, 0x61, 0x64, 0x65, 0x6e, 0x61,
	0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x45, 0x6e, 0x63, 0x6c, 0x61, 0x76, 0x65, 0x49, 0x64,
	0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x12, 0x43, 0x0a,
	0x09, 0x53, 0x65, 0x74, 0x57, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x12, 0x15, 0x2e, 0x71, 0x61, 0x64,
	0x65, 0x6e, 0x61, 0x2e, 0x71, 0x61, 0x64, 0x65, 0x6e, 0x61, 0x2e, 0x57, 0x61, 0x6c, 0x6c, 0x65,
	0x74, 0x1a, 0x1d, 0x2e, 0x71, 0x61, 0x64, 0x65, 0x6e, 0x61, 0x2e, 0x71, 0x61, 0x64, 0x65, 0x6e,
	0x61, 0x2e, 0x53, 0x65, 0x74, 0x57, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x52, 0x65, 0x70, 0x6c, 0x79,
	0x22, 0x00, 0x12, 0x4f, 0x0a, 0x0d, 0x53, 0x65, 0x74, 0x50, 0x72, 0x6f, 0x74, 0x65, 0x63, 0x74,
	0x4b, 0x65, 0x79, 0x12, 0x19, 0x2e, 0x71, 0x61, 0x64, 0x65, 0x6e, 0x61, 0x2e, 0x71, 0x61, 0x64,
	0x65, 0x6e, 0x61, 0x2e, 0x50, 0x72, 0x6f, 0x74, 0x65, 0x63, 0x74, 0x4b, 0x65, 0x79, 0x1a, 0x21,
	0x2e, 0x71, 0x61, 0x64, 0x65, 0x6e, 0x61, 0x2e, 0x71, 0x61, 0x64, 0x65, 0x6e, 0x61, 0x2e, 0x53,
	0x65, 0x74, 0x50, 0x72, 0x6f, 0x74, 0x65, 0x63, 0x74, 0x4b, 0x65, 0x79, 0x52, 0x65, 0x70, 0x6c,
	0x79, 0x22, 0x00, 0x12, 0x4f, 0x0a, 0x0d, 0x53, 0x65, 0x74, 0x52, 0x65, 0x63, 0x6f, 0x76, 0x65,
	0x72, 0x4b, 0x65, 0x79, 0x12, 0x19, 0x2e, 0x71, 0x61, 0x64, 0x65, 0x6e, 0x61, 0x2e, 0x71, 0x61,
	0x64, 0x65, 0x6e, 0x61, 0x2e, 0x52, 0x65, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x4b, 0x65, 0x79, 0x1a,
	0x21, 0x2e, 0x71, 0x61, 0x64, 0x65, 0x6e, 0x61, 0x2e, 0x71, 0x61, 0x64, 0x65, 0x6e, 0x61, 0x2e,
	0x53, 0x65, 0x74, 0x52, 0x65, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x4b, 0x65, 0x79, 0x52, 0x65, 0x70,
	0x6c, 0x79, 0x22, 0x00, 0x12, 0x4f, 0x0a, 0x0d, 0x53, 0x65, 0x74, 0x43, 0x72, 0x65, 0x64, 0x65,
	0x6e, 0x74, 0x69, 0x61, 0x6c, 0x12, 0x19, 0x2e, 0x71, 0x61, 0x64, 0x65, 0x6e, 0x61, 0x2e, 0x71,
	0x61, 0x64, 0x65, 0x6e, 0x61, 0x2e, 0x43, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c,
	0x1a, 0x21, 0x2e, 0x71, 0x61, 0x64, 0x65, 0x6e, 0x61, 0x2e, 0x71, 0x61, 0x64, 0x65, 0x6e, 0x61,
	0x2e, 0x53, 0x65, 0x74, 0x43, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x52, 0x65,
	0x70, 0x6c, 0x79, 0x22, 0x00, 0x12, 0x55, 0x0a, 0x10, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x43,
	0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x12, 0x19, 0x2e, 0x71, 0x61, 0x64, 0x65,
	0x6e, 0x61, 0x2e, 0x71, 0x61, 0x64, 0x65, 0x6e, 0x61, 0x2e, 0x43, 0x72, 0x65, 0x64, 0x65, 0x6e,
	0x74, 0x69, 0x61, 0x6c, 0x1a, 0x24, 0x2e, 0x71, 0x61, 0x64, 0x65, 0x6e, 0x61, 0x2e, 0x71, 0x61,
	0x64, 0x65, 0x6e, 0x61, 0x2e, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x43, 0x72, 0x65, 0x64, 0x65,
	0x6e, 0x74, 0x69, 0x61, 0x6c, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x12, 0x55, 0x0a, 0x16,
	0x52, 0x65, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x4b, 0x65, 0x79, 0x42, 0x79, 0x43, 0x72, 0x65, 0x64,
	0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x12, 0x19, 0x2e, 0x71, 0x61, 0x64, 0x65, 0x6e, 0x61, 0x2e,
	0x71, 0x61, 0x64, 0x65, 0x6e, 0x61, 0x2e, 0x43, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61,
	0x6c, 0x1a, 0x1e, 0x2e, 0x71, 0x61, 0x64, 0x65, 0x6e, 0x61, 0x2e, 0x71, 0x61, 0x64, 0x65, 0x6e,
	0x61, 0x2e, 0x52, 0x65, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x4b, 0x65, 0x79, 0x52, 0x65, 0x70, 0x6c,
	0x79, 0x22, 0x00, 0x12, 0x61, 0x0a, 0x0f, 0x43, 0x6c, 0x61, 0x69, 0x6d, 0x43, 0x72, 0x65, 0x64,
	0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x12, 0x21, 0x2e, 0x71, 0x61, 0x64, 0x65, 0x6e, 0x61, 0x2e,
	0x71, 0x61, 0x64, 0x65, 0x6e, 0x61, 0x2e, 0x4d, 0x73, 0x67, 0x43, 0x6c, 0x61, 0x69, 0x6d, 0x43,
	0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x1a, 0x29, 0x2e, 0x71, 0x61, 0x64, 0x65,
	0x6e, 0x61, 0x2e, 0x71, 0x61, 0x64, 0x65, 0x6e, 0x61, 0x2e, 0x4d, 0x73, 0x67, 0x43, 0x6c, 0x61,
	0x69, 0x6d, 0x43, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x5f, 0x0a, 0x0e, 0x53, 0x69, 0x67, 0x6e, 0x52, 0x65,
	0x63, 0x6f, 0x76, 0x65, 0x72, 0x4b, 0x65, 0x79, 0x12, 0x27, 0x2e, 0x71, 0x61, 0x64, 0x65, 0x6e,
	0x61, 0x2e, 0x71, 0x61, 0x64, 0x65, 0x6e, 0x61, 0x2e, 0x4d, 0x73, 0x67, 0x53, 0x69, 0x67, 0x6e,
	0x52, 0x65, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x50, 0x72, 0x69, 0x76, 0x61, 0x74, 0x65, 0x4b, 0x65,
	0x79, 0x1a, 0x22, 0x2e, 0x71, 0x61, 0x64, 0x65, 0x6e, 0x61, 0x2e, 0x71, 0x61, 0x64, 0x65, 0x6e,
	0x61, 0x2e, 0x53, 0x69, 0x67, 0x6e, 0x52, 0x65, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x4b, 0x65, 0x79,
	0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x12, 0x6b, 0x0a, 0x12, 0x51, 0x75, 0x65, 0x72, 0x79,
	0x47, 0x65, 0x74, 0x52, 0x65, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x4b, 0x65, 0x79, 0x12, 0x28, 0x2e,
	0x71, 0x61, 0x64, 0x65, 0x6e, 0x61, 0x2e, 0x71, 0x61, 0x64, 0x65, 0x6e, 0x61, 0x2e, 0x51, 0x75,
	0x65, 0x72, 0x79, 0x47, 0x65, 0x74, 0x52, 0x65, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x4b, 0x65, 0x79,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x29, 0x2e, 0x71, 0x61, 0x64, 0x65, 0x6e, 0x61,
	0x2e, 0x71, 0x61, 0x64, 0x65, 0x6e, 0x61, 0x2e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x47, 0x65, 0x74,
	0x52, 0x65, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x4b, 0x65, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x00, 0x12, 0x6e, 0x0a, 0x13, 0x51, 0x75, 0x65, 0x72, 0x79, 0x46, 0x69, 0x6e,
	0x64, 0x43, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x12, 0x29, 0x2e, 0x71, 0x61,
	0x64, 0x65, 0x6e, 0x61, 0x2e, 0x71, 0x61, 0x64, 0x65, 0x6e, 0x61, 0x2e, 0x51, 0x75, 0x65, 0x72,
	0x79, 0x46, 0x69, 0x6e, 0x64, 0x43, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2a, 0x2e, 0x71, 0x61, 0x64, 0x65, 0x6e, 0x61, 0x2e,
	0x71, 0x61, 0x64, 0x65, 0x6e, 0x61, 0x2e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x46, 0x69, 0x6e, 0x64,
	0x43, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x00, 0x12, 0x82, 0x01, 0x0a, 0x25, 0x51, 0x75, 0x65, 0x72, 0x79, 0x47, 0x65,
	0x74, 0x53, 0x75, 0x62, 0x57, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x49, 0x44, 0x42, 0x79, 0x4f, 0x72,
	0x69, 0x67, 0x69, 0x6e, 0x61, 0x6c, 0x57, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x49, 0x44, 0x12, 0x19,
	0x2e, 0x71, 0x61, 0x64, 0x65, 0x6e, 0x61, 0x2e, 0x71, 0x61, 0x64, 0x65, 0x6e, 0x61, 0x2e, 0x43,
	0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x1a, 0x3c, 0x2e, 0x71, 0x61, 0x64, 0x65,
	0x6e, 0x61, 0x2e, 0x71, 0x61, 0x64, 0x65, 0x6e, 0x61, 0x2e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x47,
	0x65, 0x74, 0x53, 0x75, 0x62, 0x57, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x49, 0x44, 0x42, 0x79, 0x4f,
	0x72, 0x69, 0x67, 0x69, 0x6e, 0x61, 0x6c, 0x57, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x49, 0x44, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x9b, 0x01, 0x0a, 0x23, 0x56, 0x61,
	0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x41, 0x75, 0x74, 0x68, 0x65, 0x6e, 0x74, 0x69, 0x63, 0x61,
	0x74, 0x65, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65,
	0x72, 0x12, 0x39, 0x2e, 0x71, 0x61, 0x64, 0x65, 0x6e, 0x61, 0x2e, 0x71, 0x61, 0x64, 0x65, 0x6e,
	0x61, 0x2e, 0x56, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x41, 0x75, 0x74, 0x68, 0x65, 0x6e,
	0x74, 0x69, 0x63, 0x61, 0x74, 0x65, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x50, 0x72, 0x6f,
	0x76, 0x69, 0x64, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x37, 0x2e, 0x71,
	0x61, 0x64, 0x65, 0x6e, 0x61, 0x2e, 0x71, 0x61, 0x64, 0x65, 0x6e, 0x61, 0x2e, 0x56, 0x61, 0x6c,
	0x69, 0x64, 0x61, 0x74, 0x65, 0x41, 0x75, 0x74, 0x68, 0x65, 0x6e, 0x74, 0x69, 0x63, 0x61, 0x74,
	0x65, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72,
	0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x12, 0x83, 0x01, 0x0a, 0x1b, 0x56, 0x61, 0x6c, 0x69,
	0x64, 0x61, 0x74, 0x65, 0x41, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x69, 0x7a, 0x65, 0x64, 0x53, 0x69,
	0x67, 0x6e, 0x61, 0x74, 0x6f, 0x72, 0x79, 0x12, 0x31, 0x2e, 0x71, 0x61, 0x64, 0x65, 0x6e, 0x61,
	0x2e, 0x71, 0x61, 0x64, 0x65, 0x6e, 0x61, 0x2e, 0x56, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65,
	0x41, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x69, 0x7a, 0x65, 0x64, 0x53, 0x69, 0x67, 0x6e, 0x61, 0x74,
	0x6f, 0x72, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2f, 0x2e, 0x71, 0x61, 0x64,
	0x65, 0x6e, 0x61, 0x2e, 0x71, 0x61, 0x64, 0x65, 0x6e, 0x61, 0x2e, 0x56, 0x61, 0x6c, 0x69, 0x64,
	0x61, 0x74, 0x65, 0x41, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x69, 0x7a, 0x65, 0x64, 0x53, 0x69, 0x67,
	0x6e, 0x61, 0x74, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x12, 0x7a, 0x0a,
	0x18, 0x56, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x41, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x69,
	0x7a, 0x65, 0x64, 0x53, 0x69, 0x67, 0x6e, 0x65, 0x72, 0x12, 0x2e, 0x2e, 0x71, 0x61, 0x64, 0x65,
	0x6e, 0x61, 0x2e, 0x71, 0x61, 0x64, 0x65, 0x6e, 0x61, 0x2e, 0x56, 0x61, 0x6c, 0x69, 0x64, 0x61,
	0x74, 0x65, 0x41, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x69, 0x7a, 0x65, 0x64, 0x53, 0x69, 0x67, 0x6e,
	0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2c, 0x2e, 0x71, 0x61, 0x64, 0x65,
	0x6e, 0x61, 0x2e, 0x71, 0x61, 0x64, 0x65, 0x6e, 0x61, 0x2e, 0x56, 0x61, 0x6c, 0x69, 0x64, 0x61,
	0x74, 0x65, 0x41, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x69, 0x7a, 0x65, 0x64, 0x53, 0x69, 0x67, 0x6e,
	0x65, 0x72, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x12, 0x4c, 0x0a, 0x0c, 0x53, 0x65, 0x74,
	0x50, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x4b, 0x65, 0x79, 0x12, 0x18, 0x2e, 0x71, 0x61, 0x64, 0x65,
	0x6e, 0x61, 0x2e, 0x71, 0x61, 0x64, 0x65, 0x6e, 0x61, 0x2e, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x63,
	0x4b, 0x65, 0x79, 0x1a, 0x20, 0x2e, 0x71, 0x61, 0x64, 0x65, 0x6e, 0x61, 0x2e, 0x71, 0x61, 0x64,
	0x65, 0x6e, 0x61, 0x2e, 0x53, 0x65, 0x74, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x4b, 0x65, 0x79,
	0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x12, 0x55, 0x0a, 0x0f, 0x53, 0x65, 0x74, 0x4a, 0x61,
	0x72, 0x52, 0x65, 0x67, 0x75, 0x6c, 0x61, 0x74, 0x6f, 0x72, 0x12, 0x1b, 0x2e, 0x71, 0x61, 0x64,
	0x65, 0x6e, 0x61, 0x2e, 0x71, 0x61, 0x64, 0x65, 0x6e, 0x61, 0x2e, 0x4a, 0x61, 0x72, 0x52, 0x65,
	0x67, 0x75, 0x6c, 0x61, 0x74, 0x6f, 0x72, 0x1a, 0x23, 0x2e, 0x71, 0x61, 0x64, 0x65, 0x6e, 0x61,
	0x2e, 0x71, 0x61, 0x64, 0x65, 0x6e, 0x61, 0x2e, 0x53, 0x65, 0x74, 0x4a, 0x61, 0x72, 0x52, 0x65,
	0x67, 0x75, 0x6c, 0x61, 0x74, 0x6f, 0x72, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x12, 0x6a,
	0x0a, 0x16, 0x53, 0x65, 0x74, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x76, 0x61, 0x6c, 0x50, 0x75, 0x62,
	0x6c, 0x69, 0x63, 0x4b, 0x65, 0x79, 0x49, 0x44, 0x12, 0x22, 0x2e, 0x71, 0x61, 0x64, 0x65, 0x6e,
	0x61, 0x2e, 0x71, 0x61, 0x64, 0x65, 0x6e, 0x61, 0x2e, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x76, 0x61,
	0x6c, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x4b, 0x65, 0x79, 0x49, 0x44, 0x1a, 0x2a, 0x2e, 0x71,
	0x61, 0x64, 0x65, 0x6e, 0x61, 0x2e, 0x71, 0x61, 0x64, 0x65, 0x6e, 0x61, 0x2e, 0x53, 0x65, 0x74,
	0x49, 0x6e, 0x74, 0x65, 0x72, 0x76, 0x61, 0x6c, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x4b, 0x65,
	0x79, 0x49, 0x64, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x12, 0x4f, 0x0a, 0x0d, 0x53, 0x65,
	0x74, 0x50, 0x69, 0x6f, 0x6e, 0x65, 0x65, 0x72, 0x4a, 0x61, 0x72, 0x12, 0x19, 0x2e, 0x71, 0x61,
	0x64, 0x65, 0x6e, 0x61, 0x2e, 0x71, 0x61, 0x64, 0x65, 0x6e, 0x61, 0x2e, 0x50, 0x69, 0x6f, 0x6e,
	0x65, 0x65, 0x72, 0x4a, 0x61, 0x72, 0x1a, 0x21, 0x2e, 0x71, 0x61, 0x64, 0x65, 0x6e, 0x61, 0x2e,
	0x71, 0x61, 0x64, 0x65, 0x6e, 0x61, 0x2e, 0x53, 0x65, 0x74, 0x50, 0x69, 0x6f, 0x6e, 0x65, 0x65,
	0x72, 0x4a, 0x61, 0x72, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x12, 0x6b, 0x0a, 0x18, 0x53,
	0x65, 0x74, 0x53, 0x65, 0x63, 0x72, 0x65, 0x74, 0x53, 0x68, 0x61, 0x72, 0x65, 0x50, 0x72, 0x69,
	0x76, 0x61, 0x74, 0x65, 0x4b, 0x65, 0x79, 0x12, 0x1f, 0x2e, 0x71, 0x61, 0x64, 0x65, 0x6e, 0x61,
	0x2e, 0x71, 0x61, 0x64, 0x65, 0x6e, 0x61, 0x2e, 0x53, 0x65, 0x63, 0x72, 0x65, 0x74, 0x53, 0x68,
	0x61, 0x72, 0x65, 0x50, 0x72, 0x69, 0x76, 0x4b, 0x1a, 0x2c, 0x2e, 0x71, 0x61, 0x64, 0x65, 0x6e,
	0x61, 0x2e, 0x71, 0x61, 0x64, 0x65, 0x6e, 0x61, 0x2e, 0x53, 0x65, 0x74, 0x53, 0x65, 0x63, 0x72,
	0x65, 0x74, 0x53, 0x68, 0x61, 0x72, 0x65, 0x50, 0x72, 0x69, 0x76, 0x61, 0x74, 0x65, 0x4b, 0x65,
	0x79, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x12, 0x6c, 0x0a, 0x19, 0x56, 0x61, 0x6c, 0x69,
	0x64, 0x61, 0x74, 0x65, 0x44, 0x65, 0x73, 0x74, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x57,
	0x61, 0x6c, 0x6c, 0x65, 0x74, 0x12, 0x1e, 0x2e, 0x71, 0x61, 0x64, 0x65, 0x6e, 0x61, 0x2e, 0x71,
	0x61, 0x64, 0x65, 0x6e, 0x61, 0x2e, 0x4d, 0x73, 0x67, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x57,
	0x61, 0x6c, 0x6c, 0x65, 0x74, 0x1a, 0x2d, 0x2e, 0x71, 0x61, 0x64, 0x65, 0x6e, 0x61, 0x2e, 0x71,
	0x61, 0x64, 0x65, 0x6e, 0x61, 0x2e, 0x56, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x44, 0x65,
	0x73, 0x74, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x57, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x52,
	0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x12, 0x60, 0x0a, 0x12, 0x56, 0x61, 0x6c, 0x69, 0x64, 0x61,
	0x74, 0x65, 0x43, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x12, 0x20, 0x2e, 0x71,
	0x61, 0x64, 0x65, 0x6e, 0x61, 0x2e, 0x71, 0x61, 0x64, 0x65, 0x6e, 0x61, 0x2e, 0x4d, 0x73, 0x67,
	0x42, 0x69, 0x6e, 0x64, 0x43, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x1a, 0x26,
	0x2e, 0x71, 0x61, 0x64, 0x65, 0x6e, 0x61, 0x2e, 0x71, 0x61, 0x64, 0x65, 0x6e, 0x61, 0x2e, 0x56,
	0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x43, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61,
	0x6c, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x12, 0x65, 0x0a, 0x15, 0x56, 0x61, 0x6c, 0x69,
	0x64, 0x61, 0x74, 0x65, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x50, 0x72, 0x69, 0x6d,
	0x65, 0x12, 0x1f, 0x2e, 0x71, 0x61, 0x64, 0x65, 0x6e, 0x61, 0x2e, 0x71, 0x61, 0x64, 0x65, 0x6e,
	0x61, 0x2e, 0x4d, 0x73, 0x67, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x46, 0x75, 0x6e,
	0x64, 0x73, 0x1a, 0x29, 0x2e, 0x71, 0x61, 0x64, 0x65, 0x6e, 0x61, 0x2e, 0x71, 0x61, 0x64, 0x65,
	0x6e, 0x61, 0x2e, 0x56, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x54, 0x72, 0x61, 0x6e, 0x73,
	0x66, 0x65, 0x72, 0x50, 0x72, 0x69, 0x6d, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x12,
	0x70, 0x0a, 0x1b, 0x56, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x54, 0x72, 0x61, 0x6e, 0x73,
	0x66, 0x65, 0x72, 0x44, 0x6f, 0x75, 0x62, 0x6c, 0x65, 0x50, 0x72, 0x69, 0x6d, 0x65, 0x12, 0x1e,
	0x2e, 0x71, 0x61, 0x64, 0x65, 0x6e, 0x61, 0x2e, 0x71, 0x61, 0x64, 0x65, 0x6e, 0x61, 0x2e, 0x4d,
	0x73, 0x67, 0x52, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x46, 0x75, 0x6e, 0x64, 0x73, 0x1a, 0x2f,
	0x2e, 0x71, 0x61, 0x64, 0x65, 0x6e, 0x61, 0x2e, 0x71, 0x61, 0x64, 0x65, 0x6e, 0x61, 0x2e, 0x56,
	0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x44,
	0x6f, 0x75, 0x62, 0x6c, 0x65, 0x50, 0x72, 0x69, 0x6d, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22,
	0x00, 0x12, 0x4f, 0x0a, 0x0b, 0x53, 0x79, 0x6e, 0x63, 0x57, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x73,
	0x12, 0x1d, 0x2e, 0x71, 0x61, 0x64, 0x65, 0x6e, 0x61, 0x2e, 0x71, 0x61, 0x64, 0x65, 0x6e, 0x61,
	0x2e, 0x4d, 0x73, 0x67, 0x53, 0x79, 0x6e, 0x63, 0x57, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x73, 0x1a,
	0x1f, 0x2e, 0x71, 0x61, 0x64, 0x65, 0x6e, 0x61, 0x2e, 0x71, 0x61, 0x64, 0x65, 0x6e, 0x61, 0x2e,
	0x53, 0x79, 0x6e, 0x63, 0x57, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x73, 0x52, 0x65, 0x70, 0x6c, 0x79,
	0x22, 0x00, 0x12, 0x5b, 0x0a, 0x0f, 0x53, 0x79, 0x6e, 0x63, 0x43, 0x72, 0x65, 0x64, 0x65, 0x6e,
	0x74, 0x69, 0x61, 0x6c, 0x73, 0x12, 0x21, 0x2e, 0x71, 0x61, 0x64, 0x65, 0x6e, 0x61, 0x2e, 0x71,
	0x61, 0x64, 0x65, 0x6e, 0x61, 0x2e, 0x4d, 0x73, 0x67, 0x53, 0x79, 0x6e, 0x63, 0x43, 0x72, 0x65,
	0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x73, 0x1a, 0x23, 0x2e, 0x71, 0x61, 0x64, 0x65, 0x6e,
	0x61, 0x2e, 0x71, 0x61, 0x64, 0x65, 0x6e, 0x61, 0x2e, 0x53, 0x79, 0x6e, 0x63, 0x43, 0x72, 0x65,
	0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x73, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x12,
	0x5b, 0x0a, 0x0f, 0x53, 0x79, 0x6e, 0x63, 0x52, 0x65, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x4b, 0x65,
	0x79, 0x73, 0x12, 0x21, 0x2e, 0x71, 0x61, 0x64, 0x65, 0x6e, 0x61, 0x2e, 0x71, 0x61, 0x64, 0x65,
	0x6e, 0x61, 0x2e, 0x4d, 0x73, 0x67, 0x53, 0x79, 0x6e, 0x63, 0x52, 0x65, 0x63, 0x6f, 0x76, 0x65,
	0x72, 0x4b, 0x65, 0x79, 0x73, 0x1a, 0x23, 0x2e, 0x71, 0x61, 0x64, 0x65, 0x6e, 0x61, 0x2e, 0x71,
	0x61, 0x64, 0x65, 0x6e, 0x61, 0x2e, 0x53, 0x79, 0x6e, 0x63, 0x52, 0x65, 0x63, 0x6f, 0x76, 0x65,
	0x72, 0x4b, 0x65, 0x79, 0x73, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x12, 0x7c, 0x0a, 0x1a,
	0x53, 0x79, 0x6e, 0x63, 0x53, 0x75, 0x73, 0x70, 0x69, 0x63, 0x69, 0x6f, 0x75, 0x73, 0x54, 0x72,
	0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x2c, 0x2e, 0x71, 0x61, 0x64,
	0x65, 0x6e, 0x61, 0x2e, 0x71, 0x61, 0x64, 0x65, 0x6e, 0x61, 0x2e, 0x4d, 0x73, 0x67, 0x53, 0x79,
	0x6e, 0x63, 0x53, 0x75, 0x73, 0x70, 0x69, 0x63, 0x69, 0x6f, 0x75, 0x73, 0x54, 0x72, 0x61, 0x6e,
	0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x1a, 0x2e, 0x2e, 0x71, 0x61, 0x64, 0x65, 0x6e,
	0x61, 0x2e, 0x71, 0x61, 0x64, 0x65, 0x6e, 0x61, 0x2e, 0x53, 0x79, 0x6e, 0x63, 0x53, 0x75, 0x73,
	0x70, 0x69, 0x63, 0x69, 0x6f, 0x75, 0x73, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x12, 0x5c, 0x0a, 0x0f, 0x53, 0x63,
	0x61, 0x6e, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x22, 0x2e,
	0x71, 0x61, 0x64, 0x65, 0x6e, 0x61, 0x2e, 0x71, 0x61, 0x64, 0x65, 0x6e, 0x61, 0x2e, 0x4d, 0x73,
	0x67, 0x53, 0x63, 0x61, 0x6e, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x1a, 0x23, 0x2e, 0x71, 0x61, 0x64, 0x65, 0x6e, 0x61, 0x2e, 0x71, 0x61, 0x64, 0x65, 0x6e,
	0x61, 0x2e, 0x53, 0x63, 0x61, 0x6e, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x12, 0x52, 0x0a, 0x0c, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x48, 0x65, 0x69, 0x67, 0x68, 0x74, 0x12, 0x1e, 0x2e, 0x71, 0x61, 0x64, 0x65, 0x6e,
	0x61, 0x2e, 0x71, 0x61, 0x64, 0x65, 0x6e, 0x61, 0x2e, 0x4d, 0x73, 0x67, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x48, 0x65, 0x69, 0x67, 0x68, 0x74, 0x1a, 0x20, 0x2e, 0x71, 0x61, 0x64, 0x65, 0x6e,
	0x61, 0x2e, 0x71, 0x61, 0x64, 0x65, 0x6e, 0x61, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x48,
	0x65, 0x69, 0x67, 0x68, 0x74, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x12, 0x67, 0x0a, 0x13,
	0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x6d, 0x70, 0x6c,
	0x65, 0x74, 0x65, 0x12, 0x25, 0x2e, 0x71, 0x61, 0x64, 0x65, 0x6e, 0x61, 0x2e, 0x71, 0x61, 0x64,
	0x65, 0x6e, 0x61, 0x2e, 0x4d, 0x73, 0x67, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65, 0x1a, 0x27, 0x2e, 0x71, 0x61, 0x64,
	0x65, 0x6e, 0x61, 0x2e, 0x71, 0x61, 0x64, 0x65, 0x6e, 0x61, 0x2e, 0x54, 0x72, 0x61, 0x6e, 0x73,
	0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65,
	0x70, 0x6c, 0x79, 0x22, 0x00, 0x12, 0x46, 0x0a, 0x08, 0x45, 0x6e, 0x64, 0x42, 0x6c, 0x6f, 0x63,
	0x6b, 0x12, 0x1a, 0x2e, 0x71, 0x61, 0x64, 0x65, 0x6e, 0x61, 0x2e, 0x71, 0x61, 0x64, 0x65, 0x6e,
	0x61, 0x2e, 0x4d, 0x73, 0x67, 0x45, 0x6e, 0x64, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x1a, 0x1c, 0x2e,
	0x71, 0x61, 0x64, 0x65, 0x6e, 0x61, 0x2e, 0x71, 0x61, 0x64, 0x65, 0x6e, 0x61, 0x2e, 0x45, 0x6e,
	0x64, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x12, 0x52, 0x0a,
	0x0c, 0x47, 0x65, 0x74, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x48, 0x61, 0x73, 0x68, 0x12, 0x1e, 0x2e,
	0x71, 0x61, 0x64, 0x65, 0x6e, 0x61, 0x2e, 0x71, 0x61, 0x64, 0x65, 0x6e, 0x61, 0x2e, 0x4d, 0x73,
	0x67, 0x47, 0x65, 0x74, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x48, 0x61, 0x73, 0x68, 0x1a, 0x20, 0x2e,
	0x71, 0x61, 0x64, 0x65, 0x6e, 0x61, 0x2e, 0x71, 0x61, 0x64, 0x65, 0x6e, 0x61, 0x2e, 0x47, 0x65,
	0x74, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x48, 0x61, 0x73, 0x68, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22,
	0x00, 0x42, 0x96, 0x01, 0x0a, 0x11, 0x63, 0x6f, 0x6d, 0x2e, 0x71, 0x61, 0x64, 0x65, 0x6e, 0x61,
	0x2e, 0x71, 0x61, 0x64, 0x65, 0x6e, 0x61, 0x42, 0x0c, 0x45, 0x6e, 0x63, 0x6c, 0x61, 0x76, 0x65,
	0x50, 0x72, 0x6f, 0x74, 0x6f, 0x50, 0x01, 0x5a, 0x1e, 0x63, 0x6f, 0x73, 0x6d, 0x6f, 0x73, 0x73,
	0x64, 0x6b, 0x2e, 0x69, 0x6f, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x71, 0x61, 0x64, 0x65, 0x6e, 0x61,
	0x2f, 0x71, 0x61, 0x64, 0x65, 0x6e, 0x61, 0xa2, 0x02, 0x03, 0x51, 0x51, 0x58, 0xaa, 0x02, 0x0d,
	0x51, 0x61, 0x64, 0x65, 0x6e, 0x61, 0x2e, 0x51, 0x61, 0x64, 0x65, 0x6e, 0x61, 0xca, 0x02, 0x0d,
	0x51, 0x61, 0x64, 0x65, 0x6e, 0x61, 0x5c, 0x51, 0x61, 0x64, 0x65, 0x6e, 0x61, 0xe2, 0x02, 0x19,
	0x51, 0x61, 0x64, 0x65, 0x6e, 0x61, 0x5c, 0x51, 0x61, 0x64, 0x65, 0x6e, 0x61, 0x5c, 0x47, 0x50,
	0x42, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0xea, 0x02, 0x0e, 0x51, 0x61, 0x64, 0x65,
	0x6e, 0x61, 0x3a, 0x3a, 0x51, 0x61, 0x64, 0x65, 0x6e, 0x61, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x33,
}

var (
	file_qadena_qadena_enclave_proto_rawDescOnce sync.Once
	file_qadena_qadena_enclave_proto_rawDescData = file_qadena_qadena_enclave_proto_rawDesc
)

func file_qadena_qadena_enclave_proto_rawDescGZIP() []byte {
	file_qadena_qadena_enclave_proto_rawDescOnce.Do(func() {
		file_qadena_qadena_enclave_proto_rawDescData = protoimpl.X.CompressGZIP(file_qadena_qadena_enclave_proto_rawDescData)
	})
	return file_qadena_qadena_enclave_proto_rawDescData
}

var file_qadena_qadena_enclave_proto_msgTypes = make([]protoimpl.MessageInfo, 67)
var file_qadena_qadena_enclave_proto_goTypes = []interface{}{
	(*HelloRequest)(nil),  // 0: qadena.qadena.HelloRequest
	(*HelloReply)(nil),    // 1: qadena.qadena.HelloReply
	(*MsgEndBlock)(nil),   // 2: qadena.qadena.MsgEndBlock
	(*EndBlockReply)(nil), // 3: qadena.qadena.EndBlockReply
	(*QueryGetSubWalletIDByOriginalWalletIDResponse)(nil), // 4: qadena.qadena.QueryGetSubWalletIDByOriginalWalletIDResponse
	(*StoreHash)(nil),                                   // 5: qadena.qadena.StoreHash
	(*MsgGetStoreHash)(nil),                             // 6: qadena.qadena.MsgGetStoreHash
	(*GetStoreHashReply)(nil),                           // 7: qadena.qadena.GetStoreHashReply
	(*MsgAddAsValidator)(nil),                           // 8: qadena.qadena.MsgAddAsValidator
	(*MsgSyncEnclave)(nil),                              // 9: qadena.qadena.MsgSyncEnclave
	(*MsgUpgradeEnclave)(nil),                           // 10: qadena.qadena.MsgUpgradeEnclave
	(*UpgradeEnclaveReply)(nil),                         // 11: qadena.qadena.UpgradeEnclaveReply
	(*MsgExportPrivateKey)(nil),                         // 12: qadena.qadena.MsgExportPrivateKey
	(*MsgRemovePrivateKey)(nil),                         // 13: qadena.qadena.MsgRemovePrivateKey
	(*MsgExportPrivateState)(nil),                       // 14: qadena.qadena.MsgExportPrivateState
	(*MsgUpdateSSIntervalKey)(nil),                      // 15: qadena.qadena.MsgUpdateSSIntervalKey
	(*UpdateSSIntervalKeyReply)(nil),                    // 16: qadena.qadena.UpdateSSIntervalKeyReply
	(*RemovePrivateKeyReply)(nil),                       // 17: qadena.qadena.RemovePrivateKeyReply
	(*ExportPrivateKeyReply)(nil),                       // 18: qadena.qadena.ExportPrivateKeyReply
	(*ExportPrivateStateReply)(nil),                     // 19: qadena.qadena.ExportPrivateStateReply
	(*ValidateAuthenticateServiceProviderRequest)(nil),  // 20: qadena.qadena.ValidateAuthenticateServiceProviderRequest
	(*ValidateAuthenticateServiceProviderReply)(nil),    // 21: qadena.qadena.ValidateAuthenticateServiceProviderReply
	(*MsgInitEnclave)(nil),                              // 22: qadena.qadena.MsgInitEnclave
	(*VShareSignatory)(nil),                             // 23: qadena.qadena.VShareSignatory
	(*ValidateAuthorizedSignerRequest)(nil),             // 24: qadena.qadena.ValidateAuthorizedSignerRequest
	(*ValidateAuthorizedSignerReply)(nil),               // 25: qadena.qadena.ValidateAuthorizedSignerReply
	(*ValidateAuthorizedSignatoryRequest)(nil),          // 26: qadena.qadena.ValidateAuthorizedSignatoryRequest
	(*ValidateAuthorizedSignatoryReply)(nil),            // 27: qadena.qadena.ValidateAuthorizedSignatoryReply
	(*MsgUpdateHeight)(nil),                             // 28: qadena.qadena.MsgUpdateHeight
	(*MsgScanTransactions)(nil),                         // 29: qadena.qadena.MsgScanTransactions
	(*MsgSyncWallets)(nil),                              // 30: qadena.qadena.MsgSyncWallets
	(*SyncWalletsReply)(nil),                            // 31: qadena.qadena.SyncWalletsReply
	(*MsgSyncCredentials)(nil),                          // 32: qadena.qadena.MsgSyncCredentials
	(*SyncCredentialsReply)(nil),                        // 33: qadena.qadena.SyncCredentialsReply
	(*MsgSyncRecoverKeys)(nil),                          // 34: qadena.qadena.MsgSyncRecoverKeys
	(*SyncRecoverKeysReply)(nil),                        // 35: qadena.qadena.SyncRecoverKeysReply
	(*SetSecretSharePrivateKeyReply)(nil),               // 36: qadena.qadena.SetSecretSharePrivateKeyReply
	(*MsgSyncSuspiciousTransactions)(nil),               // 37: qadena.qadena.MsgSyncSuspiciousTransactions
	(*SyncSuspiciousTransactionsReply)(nil),             // 38: qadena.qadena.SyncSuspiciousTransactionsReply
	(*InitEnclaveReply)(nil),                            // 39: qadena.qadena.InitEnclaveReply
	(*UpdateHeightReply)(nil),                           // 40: qadena.qadena.UpdateHeightReply
	(*MsgTransactionComplete)(nil),                      // 41: qadena.qadena.MsgTransactionComplete
	(*TransactionCompleteReply)(nil),                    // 42: qadena.qadena.TransactionCompleteReply
	(*SyncEnclaveReply)(nil),                            // 43: qadena.qadena.SyncEnclaveReply
	(*AddAsValidatorReply)(nil),                         // 44: qadena.qadena.AddAsValidatorReply
	(*SetWalletReply)(nil),                              // 45: qadena.qadena.SetWalletReply
	(*SetEnclaveIdentityReply)(nil),                     // 46: qadena.qadena.SetEnclaveIdentityReply
	(*PioneerUpdateEnclaveIdentity)(nil),                // 47: qadena.qadena.PioneerUpdateEnclaveIdentity
	(*UpdateEnclaveIdentityReply)(nil),                  // 48: qadena.qadena.UpdateEnclaveIdentityReply
	(*SetProtectKeyReply)(nil),                          // 49: qadena.qadena.SetProtectKeyReply
	(*SetRecoverKeyReply)(nil),                          // 50: qadena.qadena.SetRecoverKeyReply
	(*SetCredentialReply)(nil),                          // 51: qadena.qadena.SetCredentialReply
	(*RemoveCredentialReply)(nil),                       // 52: qadena.qadena.RemoveCredentialReply
	(*RecoverKeyReply)(nil),                             // 53: qadena.qadena.RecoverKeyReply
	(*SignRecoverKeyReply)(nil),                         // 54: qadena.qadena.SignRecoverKeyReply
	(*SetPublicKeyReply)(nil),                           // 55: qadena.qadena.SetPublicKeyReply
	(*SetJarRegulatorReply)(nil),                        // 56: qadena.qadena.SetJarRegulatorReply
	(*SetPioneerJarReply)(nil),                          // 57: qadena.qadena.SetPioneerJarReply
	(*SetIntervalPublicKeyIdReply)(nil),                 // 58: qadena.qadena.SetIntervalPublicKeyIdReply
	(*ValidateDestinationWalletReply)(nil),              // 59: qadena.qadena.ValidateDestinationWalletReply
	(*ValidateCredentialReply)(nil),                     // 60: qadena.qadena.ValidateCredentialReply
	(*ValidateTransferPrimeReply)(nil),                  // 61: qadena.qadena.ValidateTransferPrimeReply
	(*ValidateTransferDoublePrimeReply)(nil),            // 62: qadena.qadena.ValidateTransferDoublePrimeReply
	(*ScanTransactionReply)(nil),                        // 63: qadena.qadena.ScanTransactionReply
	(*EnclaveStoreStringArray)(nil),                     // 64: qadena.qadena.EnclaveStoreStringArray
	(*EnclaveStoreString)(nil),                          // 65: qadena.qadena.EnclaveStoreString
	(*EnclaveEnclaveIdentityArray)(nil),                 // 66: qadena.qadena.EnclaveEnclaveIdentityArray
	(*VShareBindData)(nil),                              // 67: qadena.qadena.VShareBindData
	(*timestamppb.Timestamp)(nil),                       // 68: google.protobuf.Timestamp
	(*MsgTransferFunds)(nil),                            // 69: qadena.qadena.MsgTransferFunds
	(*Wallet)(nil),                                      // 70: qadena.qadena.Wallet
	(*Credential)(nil),                                  // 71: qadena.qadena.Credential
	(*RecoverKey)(nil),                                  // 72: qadena.qadena.RecoverKey
	(*SuspiciousTransaction)(nil),                       // 73: qadena.qadena.SuspiciousTransaction
	(*EnclaveIdentity)(nil),                             // 74: qadena.qadena.EnclaveIdentity
	(*QueryEnclaveSyncEnclaveRequest)(nil),              // 75: qadena.qadena.QueryEnclaveSyncEnclaveRequest
	(*QueryEnclaveSecretShareRequest)(nil),              // 76: qadena.qadena.QueryEnclaveSecretShareRequest
	(*QueryEnclaveRecoverKeyShareRequest)(nil),          // 77: qadena.qadena.QueryEnclaveRecoverKeyShareRequest
	(*QueryEnclaveValidateEnclaveIdentityRequest)(nil),  // 78: qadena.qadena.QueryEnclaveValidateEnclaveIdentityRequest
	(*ProtectKey)(nil),                                  // 79: qadena.qadena.ProtectKey
	(*MsgClaimCredential)(nil),                          // 80: qadena.qadena.MsgClaimCredential
	(*MsgSignRecoverPrivateKey)(nil),                    // 81: qadena.qadena.MsgSignRecoverPrivateKey
	(*QueryGetRecoverKeyRequest)(nil),                   // 82: qadena.qadena.QueryGetRecoverKeyRequest
	(*QueryFindCredentialRequest)(nil),                  // 83: qadena.qadena.QueryFindCredentialRequest
	(*PublicKey)(nil),                                   // 84: qadena.qadena.PublicKey
	(*JarRegulator)(nil),                                // 85: qadena.qadena.JarRegulator
	(*IntervalPublicKeyID)(nil),                         // 86: qadena.qadena.IntervalPublicKeyID
	(*PioneerJar)(nil),                                  // 87: qadena.qadena.PioneerJar
	(*SecretSharePrivK)(nil),                            // 88: qadena.qadena.SecretSharePrivK
	(*MsgCreateWallet)(nil),                             // 89: qadena.qadena.MsgCreateWallet
	(*MsgBindCredential)(nil),                           // 90: qadena.qadena.MsgBindCredential
	(*MsgReceiveFunds)(nil),                             // 91: qadena.qadena.MsgReceiveFunds
	(*QueryEnclaveSyncEnclaveResponse)(nil),             // 92: qadena.qadena.QueryEnclaveSyncEnclaveResponse
	(*QueryEnclaveSecretShareResponse)(nil),             // 93: qadena.qadena.QueryEnclaveSecretShareResponse
	(*QueryEnclaveRecoverKeyShareResponse)(nil),         // 94: qadena.qadena.QueryEnclaveRecoverKeyShareResponse
	(*QueryEnclaveValidateEnclaveIdentityResponse)(nil), // 95: qadena.qadena.QueryEnclaveValidateEnclaveIdentityResponse
	(*MsgClaimCredentialResponse)(nil),                  // 96: qadena.qadena.MsgClaimCredentialResponse
	(*QueryGetRecoverKeyResponse)(nil),                  // 97: qadena.qadena.QueryGetRecoverKeyResponse
	(*QueryFindCredentialResponse)(nil),                 // 98: qadena.qadena.QueryFindCredentialResponse
}
var file_qadena_qadena_enclave_proto_depIdxs = []int32{
	5,  // 0: qadena.qadena.GetStoreHashReply.hashes:type_name -> qadena.qadena.StoreHash
	67, // 1: qadena.qadena.VShareSignatory.vShareBind:type_name -> qadena.qadena.VShareBindData
	23, // 2: qadena.qadena.ValidateAuthorizedSignerRequest.requestingSignatory:type_name -> qadena.qadena.VShareSignatory
	23, // 3: qadena.qadena.ValidateAuthorizedSignerRequest.requiredSignatory:type_name -> qadena.qadena.VShareSignatory
	23, // 4: qadena.qadena.ValidateAuthorizedSignerRequest.completedSignatory:type_name -> qadena.qadena.VShareSignatory
	23, // 5: qadena.qadena.ValidateAuthorizedSignatoryRequest.signatory:type_name -> qadena.qadena.VShareSignatory
	23, // 6: qadena.qadena.ValidateAuthorizedSignatoryRequest.currentSignatory:type_name -> qadena.qadena.VShareSignatory
	68, // 7: qadena.qadena.MsgScanTransactions.timestamp:type_name -> google.protobuf.Timestamp
	69, // 8: qadena.qadena.MsgScanTransactions.msg:type_name -> qadena.qadena.MsgTransferFunds
	70, // 9: qadena.qadena.SyncWalletsReply.wallets:type_name -> qadena.qadena.Wallet
	71, // 10: qadena.qadena.SyncCredentialsReply.credentials:type_name -> qadena.qadena.Credential
	72, // 11: qadena.qadena.SyncRecoverKeysReply.recoverKeys:type_name -> qadena.qadena.RecoverKey
	73, // 12: qadena.qadena.SyncSuspiciousTransactionsReply.suspiciousTransactions:type_name -> qadena.qadena.SuspiciousTransaction
	74, // 13: qadena.qadena.PioneerUpdateEnclaveIdentity.enclaveIdentity:type_name -> qadena.qadena.EnclaveIdentity
	74, // 14: qadena.qadena.EnclaveEnclaveIdentityArray.identity:type_name -> qadena.qadena.EnclaveIdentity
	0,  // 15: qadena.qadena.Greeter.SayHello:input_type -> qadena.qadena.HelloRequest
	22, // 16: qadena.qadena.QadenaEnclave.InitEnclave:input_type -> qadena.qadena.MsgInitEnclave
	9,  // 17: qadena.qadena.QadenaEnclave.SyncEnclave:input_type -> qadena.qadena.MsgSyncEnclave
	10, // 18: qadena.qadena.QadenaEnclave.UpgradeEnclave:input_type -> qadena.qadena.MsgUpgradeEnclave
	12, // 19: qadena.qadena.QadenaEnclave.ExportPrivateKey:input_type -> qadena.qadena.MsgExportPrivateKey
	14, // 20: qadena.qadena.QadenaEnclave.ExportPrivateState:input_type -> qadena.qadena.MsgExportPrivateState
	13, // 21: qadena.qadena.QadenaEnclave.RemovePrivateKey:input_type -> qadena.qadena.MsgRemovePrivateKey
	15, // 22: qadena.qadena.QadenaEnclave.UpdateSSIntervalKey:input_type -> qadena.qadena.MsgUpdateSSIntervalKey
	75, // 23: qadena.qadena.QadenaEnclave.QueryEnclaveSyncEnclave:input_type -> qadena.qadena.QueryEnclaveSyncEnclaveRequest
	76, // 24: qadena.qadena.QadenaEnclave.QueryEnclaveSecretShare:input_type -> qadena.qadena.QueryEnclaveSecretShareRequest
	77, // 25: qadena.qadena.QadenaEnclave.QueryEnclaveRecoverKeyShare:input_type -> qadena.qadena.QueryEnclaveRecoverKeyShareRequest
	78, // 26: qadena.qadena.QadenaEnclave.QueryEnclaveValidateEnclaveIdentity:input_type -> qadena.qadena.QueryEnclaveValidateEnclaveIdentityRequest
	74, // 27: qadena.qadena.QadenaEnclave.SetEnclaveIdentity:input_type -> qadena.qadena.EnclaveIdentity
	47, // 28: qadena.qadena.QadenaEnclave.UpdateEnclaveIdentity:input_type -> qadena.qadena.PioneerUpdateEnclaveIdentity
	70, // 29: qadena.qadena.QadenaEnclave.SetWallet:input_type -> qadena.qadena.Wallet
	79, // 30: qadena.qadena.QadenaEnclave.SetProtectKey:input_type -> qadena.qadena.ProtectKey
	72, // 31: qadena.qadena.QadenaEnclave.SetRecoverKey:input_type -> qadena.qadena.RecoverKey
	71, // 32: qadena.qadena.QadenaEnclave.SetCredential:input_type -> qadena.qadena.Credential
	71, // 33: qadena.qadena.QadenaEnclave.RemoveCredential:input_type -> qadena.qadena.Credential
	71, // 34: qadena.qadena.QadenaEnclave.RecoverKeyByCredential:input_type -> qadena.qadena.Credential
	80, // 35: qadena.qadena.QadenaEnclave.ClaimCredential:input_type -> qadena.qadena.MsgClaimCredential
	81, // 36: qadena.qadena.QadenaEnclave.SignRecoverKey:input_type -> qadena.qadena.MsgSignRecoverPrivateKey
	82, // 37: qadena.qadena.QadenaEnclave.QueryGetRecoverKey:input_type -> qadena.qadena.QueryGetRecoverKeyRequest
	83, // 38: qadena.qadena.QadenaEnclave.QueryFindCredential:input_type -> qadena.qadena.QueryFindCredentialRequest
	71, // 39: qadena.qadena.QadenaEnclave.QueryGetSubWalletIDByOriginalWalletID:input_type -> qadena.qadena.Credential
	20, // 40: qadena.qadena.QadenaEnclave.ValidateAuthenticateServiceProvider:input_type -> qadena.qadena.ValidateAuthenticateServiceProviderRequest
	26, // 41: qadena.qadena.QadenaEnclave.ValidateAuthorizedSignatory:input_type -> qadena.qadena.ValidateAuthorizedSignatoryRequest
	24, // 42: qadena.qadena.QadenaEnclave.ValidateAuthorizedSigner:input_type -> qadena.qadena.ValidateAuthorizedSignerRequest
	84, // 43: qadena.qadena.QadenaEnclave.SetPublicKey:input_type -> qadena.qadena.PublicKey
	85, // 44: qadena.qadena.QadenaEnclave.SetJarRegulator:input_type -> qadena.qadena.JarRegulator
	86, // 45: qadena.qadena.QadenaEnclave.SetIntervalPublicKeyID:input_type -> qadena.qadena.IntervalPublicKeyID
	87, // 46: qadena.qadena.QadenaEnclave.SetPioneerJar:input_type -> qadena.qadena.PioneerJar
	88, // 47: qadena.qadena.QadenaEnclave.SetSecretSharePrivateKey:input_type -> qadena.qadena.SecretSharePrivK
	89, // 48: qadena.qadena.QadenaEnclave.ValidateDestinationWallet:input_type -> qadena.qadena.MsgCreateWallet
	90, // 49: qadena.qadena.QadenaEnclave.ValidateCredential:input_type -> qadena.qadena.MsgBindCredential
	69, // 50: qadena.qadena.QadenaEnclave.ValidateTransferPrime:input_type -> qadena.qadena.MsgTransferFunds
	91, // 51: qadena.qadena.QadenaEnclave.ValidateTransferDoublePrime:input_type -> qadena.qadena.MsgReceiveFunds
	30, // 52: qadena.qadena.QadenaEnclave.SyncWallets:input_type -> qadena.qadena.MsgSyncWallets
	32, // 53: qadena.qadena.QadenaEnclave.SyncCredentials:input_type -> qadena.qadena.MsgSyncCredentials
	34, // 54: qadena.qadena.QadenaEnclave.SyncRecoverKeys:input_type -> qadena.qadena.MsgSyncRecoverKeys
	37, // 55: qadena.qadena.QadenaEnclave.SyncSuspiciousTransactions:input_type -> qadena.qadena.MsgSyncSuspiciousTransactions
	29, // 56: qadena.qadena.QadenaEnclave.ScanTransaction:input_type -> qadena.qadena.MsgScanTransactions
	28, // 57: qadena.qadena.QadenaEnclave.UpdateHeight:input_type -> qadena.qadena.MsgUpdateHeight
	41, // 58: qadena.qadena.QadenaEnclave.TransactionComplete:input_type -> qadena.qadena.MsgTransactionComplete
	2,  // 59: qadena.qadena.QadenaEnclave.EndBlock:input_type -> qadena.qadena.MsgEndBlock
	6,  // 60: qadena.qadena.QadenaEnclave.GetStoreHash:input_type -> qadena.qadena.MsgGetStoreHash
	1,  // 61: qadena.qadena.Greeter.SayHello:output_type -> qadena.qadena.HelloReply
	39, // 62: qadena.qadena.QadenaEnclave.InitEnclave:output_type -> qadena.qadena.InitEnclaveReply
	43, // 63: qadena.qadena.QadenaEnclave.SyncEnclave:output_type -> qadena.qadena.SyncEnclaveReply
	11, // 64: qadena.qadena.QadenaEnclave.UpgradeEnclave:output_type -> qadena.qadena.UpgradeEnclaveReply
	18, // 65: qadena.qadena.QadenaEnclave.ExportPrivateKey:output_type -> qadena.qadena.ExportPrivateKeyReply
	19, // 66: qadena.qadena.QadenaEnclave.ExportPrivateState:output_type -> qadena.qadena.ExportPrivateStateReply
	17, // 67: qadena.qadena.QadenaEnclave.RemovePrivateKey:output_type -> qadena.qadena.RemovePrivateKeyReply
	16, // 68: qadena.qadena.QadenaEnclave.UpdateSSIntervalKey:output_type -> qadena.qadena.UpdateSSIntervalKeyReply
	92, // 69: qadena.qadena.QadenaEnclave.QueryEnclaveSyncEnclave:output_type -> qadena.qadena.QueryEnclaveSyncEnclaveResponse
	93, // 70: qadena.qadena.QadenaEnclave.QueryEnclaveSecretShare:output_type -> qadena.qadena.QueryEnclaveSecretShareResponse
	94, // 71: qadena.qadena.QadenaEnclave.QueryEnclaveRecoverKeyShare:output_type -> qadena.qadena.QueryEnclaveRecoverKeyShareResponse
	95, // 72: qadena.qadena.QadenaEnclave.QueryEnclaveValidateEnclaveIdentity:output_type -> qadena.qadena.QueryEnclaveValidateEnclaveIdentityResponse
	46, // 73: qadena.qadena.QadenaEnclave.SetEnclaveIdentity:output_type -> qadena.qadena.SetEnclaveIdentityReply
	48, // 74: qadena.qadena.QadenaEnclave.UpdateEnclaveIdentity:output_type -> qadena.qadena.UpdateEnclaveIdentityReply
	45, // 75: qadena.qadena.QadenaEnclave.SetWallet:output_type -> qadena.qadena.SetWalletReply
	49, // 76: qadena.qadena.QadenaEnclave.SetProtectKey:output_type -> qadena.qadena.SetProtectKeyReply
	50, // 77: qadena.qadena.QadenaEnclave.SetRecoverKey:output_type -> qadena.qadena.SetRecoverKeyReply
	51, // 78: qadena.qadena.QadenaEnclave.SetCredential:output_type -> qadena.qadena.SetCredentialReply
	52, // 79: qadena.qadena.QadenaEnclave.RemoveCredential:output_type -> qadena.qadena.RemoveCredentialReply
	53, // 80: qadena.qadena.QadenaEnclave.RecoverKeyByCredential:output_type -> qadena.qadena.RecoverKeyReply
	96, // 81: qadena.qadena.QadenaEnclave.ClaimCredential:output_type -> qadena.qadena.MsgClaimCredentialResponse
	54, // 82: qadena.qadena.QadenaEnclave.SignRecoverKey:output_type -> qadena.qadena.SignRecoverKeyReply
	97, // 83: qadena.qadena.QadenaEnclave.QueryGetRecoverKey:output_type -> qadena.qadena.QueryGetRecoverKeyResponse
	98, // 84: qadena.qadena.QadenaEnclave.QueryFindCredential:output_type -> qadena.qadena.QueryFindCredentialResponse
	4,  // 85: qadena.qadena.QadenaEnclave.QueryGetSubWalletIDByOriginalWalletID:output_type -> qadena.qadena.QueryGetSubWalletIDByOriginalWalletIDResponse
	21, // 86: qadena.qadena.QadenaEnclave.ValidateAuthenticateServiceProvider:output_type -> qadena.qadena.ValidateAuthenticateServiceProviderReply
	27, // 87: qadena.qadena.QadenaEnclave.ValidateAuthorizedSignatory:output_type -> qadena.qadena.ValidateAuthorizedSignatoryReply
	25, // 88: qadena.qadena.QadenaEnclave.ValidateAuthorizedSigner:output_type -> qadena.qadena.ValidateAuthorizedSignerReply
	55, // 89: qadena.qadena.QadenaEnclave.SetPublicKey:output_type -> qadena.qadena.SetPublicKeyReply
	56, // 90: qadena.qadena.QadenaEnclave.SetJarRegulator:output_type -> qadena.qadena.SetJarRegulatorReply
	58, // 91: qadena.qadena.QadenaEnclave.SetIntervalPublicKeyID:output_type -> qadena.qadena.SetIntervalPublicKeyIdReply
	57, // 92: qadena.qadena.QadenaEnclave.SetPioneerJar:output_type -> qadena.qadena.SetPioneerJarReply
	36, // 93: qadena.qadena.QadenaEnclave.SetSecretSharePrivateKey:output_type -> qadena.qadena.SetSecretSharePrivateKeyReply
	59, // 94: qadena.qadena.QadenaEnclave.ValidateDestinationWallet:output_type -> qadena.qadena.ValidateDestinationWalletReply
	60, // 95: qadena.qadena.QadenaEnclave.ValidateCredential:output_type -> qadena.qadena.ValidateCredentialReply
	61, // 96: qadena.qadena.QadenaEnclave.ValidateTransferPrime:output_type -> qadena.qadena.ValidateTransferPrimeReply
	62, // 97: qadena.qadena.QadenaEnclave.ValidateTransferDoublePrime:output_type -> qadena.qadena.ValidateTransferDoublePrimeReply
	31, // 98: qadena.qadena.QadenaEnclave.SyncWallets:output_type -> qadena.qadena.SyncWalletsReply
	33, // 99: qadena.qadena.QadenaEnclave.SyncCredentials:output_type -> qadena.qadena.SyncCredentialsReply
	35, // 100: qadena.qadena.QadenaEnclave.SyncRecoverKeys:output_type -> qadena.qadena.SyncRecoverKeysReply
	38, // 101: qadena.qadena.QadenaEnclave.SyncSuspiciousTransactions:output_type -> qadena.qadena.SyncSuspiciousTransactionsReply
	63, // 102: qadena.qadena.QadenaEnclave.ScanTransaction:output_type -> qadena.qadena.ScanTransactionReply
	40, // 103: qadena.qadena.QadenaEnclave.UpdateHeight:output_type -> qadena.qadena.UpdateHeightReply
	42, // 104: qadena.qadena.QadenaEnclave.TransactionComplete:output_type -> qadena.qadena.TransactionCompleteReply
	3,  // 105: qadena.qadena.QadenaEnclave.EndBlock:output_type -> qadena.qadena.EndBlockReply
	7,  // 106: qadena.qadena.QadenaEnclave.GetStoreHash:output_type -> qadena.qadena.GetStoreHashReply
	61, // [61:107] is the sub-list for method output_type
	15, // [15:61] is the sub-list for method input_type
	15, // [15:15] is the sub-list for extension type_name
	15, // [15:15] is the sub-list for extension extendee
	0,  // [0:15] is the sub-list for field type_name
}

func init() { file_qadena_qadena_enclave_proto_init() }
func file_qadena_qadena_enclave_proto_init() {
	if File_qadena_qadena_enclave_proto != nil {
		return
	}
	file_qadena_qadena_wallet_proto_init()
	file_qadena_qadena_tx_proto_init()
	file_qadena_qadena_credential_proto_init()
	file_qadena_qadena_suspicious_transaction_proto_init()
	file_qadena_qadena_public_key_proto_init()
	file_qadena_qadena_jar_regulator_proto_init()
	file_qadena_qadena_interval_public_key_i_d_proto_init()
	file_qadena_qadena_secret_share_priv_k_proto_init()
	file_qadena_qadena_query_proto_init()
	file_qadena_qadena_protect_key_proto_init()
	file_qadena_qadena_recover_key_proto_init()
	file_qadena_qadena_v_share_bind_data_proto_init()
	file_qadena_qadena_pioneer_jar_proto_init()
	file_qadena_qadena_enclave_identity_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_qadena_qadena_enclave_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HelloRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_qadena_qadena_enclave_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HelloReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_qadena_qadena_enclave_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MsgEndBlock); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_qadena_qadena_enclave_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EndBlockReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_qadena_qadena_enclave_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryGetSubWalletIDByOriginalWalletIDResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_qadena_qadena_enclave_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StoreHash); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_qadena_qadena_enclave_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MsgGetStoreHash); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_qadena_qadena_enclave_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetStoreHashReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_qadena_qadena_enclave_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MsgAddAsValidator); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_qadena_qadena_enclave_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MsgSyncEnclave); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_qadena_qadena_enclave_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MsgUpgradeEnclave); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_qadena_qadena_enclave_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpgradeEnclaveReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_qadena_qadena_enclave_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MsgExportPrivateKey); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_qadena_qadena_enclave_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MsgRemovePrivateKey); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_qadena_qadena_enclave_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MsgExportPrivateState); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_qadena_qadena_enclave_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MsgUpdateSSIntervalKey); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_qadena_qadena_enclave_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateSSIntervalKeyReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_qadena_qadena_enclave_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RemovePrivateKeyReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_qadena_qadena_enclave_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ExportPrivateKeyReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_qadena_qadena_enclave_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ExportPrivateStateReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_qadena_qadena_enclave_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ValidateAuthenticateServiceProviderRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_qadena_qadena_enclave_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ValidateAuthenticateServiceProviderReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_qadena_qadena_enclave_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MsgInitEnclave); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_qadena_qadena_enclave_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VShareSignatory); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_qadena_qadena_enclave_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ValidateAuthorizedSignerRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_qadena_qadena_enclave_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ValidateAuthorizedSignerReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_qadena_qadena_enclave_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ValidateAuthorizedSignatoryRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_qadena_qadena_enclave_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ValidateAuthorizedSignatoryReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_qadena_qadena_enclave_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MsgUpdateHeight); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_qadena_qadena_enclave_proto_msgTypes[29].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MsgScanTransactions); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_qadena_qadena_enclave_proto_msgTypes[30].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MsgSyncWallets); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_qadena_qadena_enclave_proto_msgTypes[31].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SyncWalletsReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_qadena_qadena_enclave_proto_msgTypes[32].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MsgSyncCredentials); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_qadena_qadena_enclave_proto_msgTypes[33].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SyncCredentialsReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_qadena_qadena_enclave_proto_msgTypes[34].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MsgSyncRecoverKeys); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_qadena_qadena_enclave_proto_msgTypes[35].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SyncRecoverKeysReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_qadena_qadena_enclave_proto_msgTypes[36].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetSecretSharePrivateKeyReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_qadena_qadena_enclave_proto_msgTypes[37].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MsgSyncSuspiciousTransactions); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_qadena_qadena_enclave_proto_msgTypes[38].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SyncSuspiciousTransactionsReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_qadena_qadena_enclave_proto_msgTypes[39].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InitEnclaveReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_qadena_qadena_enclave_proto_msgTypes[40].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateHeightReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_qadena_qadena_enclave_proto_msgTypes[41].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MsgTransactionComplete); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_qadena_qadena_enclave_proto_msgTypes[42].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TransactionCompleteReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_qadena_qadena_enclave_proto_msgTypes[43].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SyncEnclaveReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_qadena_qadena_enclave_proto_msgTypes[44].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddAsValidatorReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_qadena_qadena_enclave_proto_msgTypes[45].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetWalletReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_qadena_qadena_enclave_proto_msgTypes[46].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetEnclaveIdentityReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_qadena_qadena_enclave_proto_msgTypes[47].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PioneerUpdateEnclaveIdentity); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_qadena_qadena_enclave_proto_msgTypes[48].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateEnclaveIdentityReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_qadena_qadena_enclave_proto_msgTypes[49].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetProtectKeyReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_qadena_qadena_enclave_proto_msgTypes[50].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetRecoverKeyReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_qadena_qadena_enclave_proto_msgTypes[51].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetCredentialReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_qadena_qadena_enclave_proto_msgTypes[52].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RemoveCredentialReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_qadena_qadena_enclave_proto_msgTypes[53].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RecoverKeyReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_qadena_qadena_enclave_proto_msgTypes[54].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SignRecoverKeyReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_qadena_qadena_enclave_proto_msgTypes[55].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetPublicKeyReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_qadena_qadena_enclave_proto_msgTypes[56].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetJarRegulatorReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_qadena_qadena_enclave_proto_msgTypes[57].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetPioneerJarReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_qadena_qadena_enclave_proto_msgTypes[58].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetIntervalPublicKeyIdReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_qadena_qadena_enclave_proto_msgTypes[59].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ValidateDestinationWalletReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_qadena_qadena_enclave_proto_msgTypes[60].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ValidateCredentialReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_qadena_qadena_enclave_proto_msgTypes[61].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ValidateTransferPrimeReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_qadena_qadena_enclave_proto_msgTypes[62].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ValidateTransferDoublePrimeReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_qadena_qadena_enclave_proto_msgTypes[63].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ScanTransactionReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_qadena_qadena_enclave_proto_msgTypes[64].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EnclaveStoreStringArray); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_qadena_qadena_enclave_proto_msgTypes[65].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EnclaveStoreString); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_qadena_qadena_enclave_proto_msgTypes[66].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EnclaveEnclaveIdentityArray); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_qadena_qadena_enclave_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   67,
			NumExtensions: 0,
			NumServices:   2,
		},
		GoTypes:           file_qadena_qadena_enclave_proto_goTypes,
		DependencyIndexes: file_qadena_qadena_enclave_proto_depIdxs,
		MessageInfos:      file_qadena_qadena_enclave_proto_msgTypes,
	}.Build()
	File_qadena_qadena_enclave_proto = out.File
	file_qadena_qadena_enclave_proto_rawDesc = nil
	file_qadena_qadena_enclave_proto_goTypes = nil
	file_qadena_qadena_enclave_proto_depIdxs = nil
}
