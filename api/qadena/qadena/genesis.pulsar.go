// Code generated by protoc-gen-go-pulsar. DO NOT EDIT.
package qadena

import (
	_ "cosmossdk.io/api/amino"
	fmt "fmt"
	runtime "github.com/cosmos/cosmos-proto/runtime"
	_ "github.com/cosmos/gogoproto/gogoproto"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoiface "google.golang.org/protobuf/runtime/protoiface"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	io "io"
	reflect "reflect"
	sync "sync"
)

var _ protoreflect.List = (*_GenesisState_2_list)(nil)

type _GenesisState_2_list struct {
	list *[]*Credential
}

func (x *_GenesisState_2_list) Len() int {
	if x.list == nil {
		return 0
	}
	return len(*x.list)
}

func (x *_GenesisState_2_list) Get(i int) protoreflect.Value {
	return protoreflect.ValueOfMessage((*x.list)[i].ProtoReflect())
}

func (x *_GenesisState_2_list) Set(i int, value protoreflect.Value) {
	valueUnwrapped := value.Message()
	concreteValue := valueUnwrapped.Interface().(*Credential)
	(*x.list)[i] = concreteValue
}

func (x *_GenesisState_2_list) Append(value protoreflect.Value) {
	valueUnwrapped := value.Message()
	concreteValue := valueUnwrapped.Interface().(*Credential)
	*x.list = append(*x.list, concreteValue)
}

func (x *_GenesisState_2_list) AppendMutable() protoreflect.Value {
	v := new(Credential)
	*x.list = append(*x.list, v)
	return protoreflect.ValueOfMessage(v.ProtoReflect())
}

func (x *_GenesisState_2_list) Truncate(n int) {
	for i := n; i < len(*x.list); i++ {
		(*x.list)[i] = nil
	}
	*x.list = (*x.list)[:n]
}

func (x *_GenesisState_2_list) NewElement() protoreflect.Value {
	v := new(Credential)
	return protoreflect.ValueOfMessage(v.ProtoReflect())
}

func (x *_GenesisState_2_list) IsValid() bool {
	return x.list != nil
}

var _ protoreflect.List = (*_GenesisState_3_list)(nil)

type _GenesisState_3_list struct {
	list *[]*PublicKey
}

func (x *_GenesisState_3_list) Len() int {
	if x.list == nil {
		return 0
	}
	return len(*x.list)
}

func (x *_GenesisState_3_list) Get(i int) protoreflect.Value {
	return protoreflect.ValueOfMessage((*x.list)[i].ProtoReflect())
}

func (x *_GenesisState_3_list) Set(i int, value protoreflect.Value) {
	valueUnwrapped := value.Message()
	concreteValue := valueUnwrapped.Interface().(*PublicKey)
	(*x.list)[i] = concreteValue
}

func (x *_GenesisState_3_list) Append(value protoreflect.Value) {
	valueUnwrapped := value.Message()
	concreteValue := valueUnwrapped.Interface().(*PublicKey)
	*x.list = append(*x.list, concreteValue)
}

func (x *_GenesisState_3_list) AppendMutable() protoreflect.Value {
	v := new(PublicKey)
	*x.list = append(*x.list, v)
	return protoreflect.ValueOfMessage(v.ProtoReflect())
}

func (x *_GenesisState_3_list) Truncate(n int) {
	for i := n; i < len(*x.list); i++ {
		(*x.list)[i] = nil
	}
	*x.list = (*x.list)[:n]
}

func (x *_GenesisState_3_list) NewElement() protoreflect.Value {
	v := new(PublicKey)
	return protoreflect.ValueOfMessage(v.ProtoReflect())
}

func (x *_GenesisState_3_list) IsValid() bool {
	return x.list != nil
}

var _ protoreflect.List = (*_GenesisState_4_list)(nil)

type _GenesisState_4_list struct {
	list *[]*Wallet
}

func (x *_GenesisState_4_list) Len() int {
	if x.list == nil {
		return 0
	}
	return len(*x.list)
}

func (x *_GenesisState_4_list) Get(i int) protoreflect.Value {
	return protoreflect.ValueOfMessage((*x.list)[i].ProtoReflect())
}

func (x *_GenesisState_4_list) Set(i int, value protoreflect.Value) {
	valueUnwrapped := value.Message()
	concreteValue := valueUnwrapped.Interface().(*Wallet)
	(*x.list)[i] = concreteValue
}

func (x *_GenesisState_4_list) Append(value protoreflect.Value) {
	valueUnwrapped := value.Message()
	concreteValue := valueUnwrapped.Interface().(*Wallet)
	*x.list = append(*x.list, concreteValue)
}

func (x *_GenesisState_4_list) AppendMutable() protoreflect.Value {
	v := new(Wallet)
	*x.list = append(*x.list, v)
	return protoreflect.ValueOfMessage(v.ProtoReflect())
}

func (x *_GenesisState_4_list) Truncate(n int) {
	for i := n; i < len(*x.list); i++ {
		(*x.list)[i] = nil
	}
	*x.list = (*x.list)[:n]
}

func (x *_GenesisState_4_list) NewElement() protoreflect.Value {
	v := new(Wallet)
	return protoreflect.ValueOfMessage(v.ProtoReflect())
}

func (x *_GenesisState_4_list) IsValid() bool {
	return x.list != nil
}

var _ protoreflect.List = (*_GenesisState_5_list)(nil)

type _GenesisState_5_list struct {
	list *[]*IntervalPublicKeyID
}

func (x *_GenesisState_5_list) Len() int {
	if x.list == nil {
		return 0
	}
	return len(*x.list)
}

func (x *_GenesisState_5_list) Get(i int) protoreflect.Value {
	return protoreflect.ValueOfMessage((*x.list)[i].ProtoReflect())
}

func (x *_GenesisState_5_list) Set(i int, value protoreflect.Value) {
	valueUnwrapped := value.Message()
	concreteValue := valueUnwrapped.Interface().(*IntervalPublicKeyID)
	(*x.list)[i] = concreteValue
}

func (x *_GenesisState_5_list) Append(value protoreflect.Value) {
	valueUnwrapped := value.Message()
	concreteValue := valueUnwrapped.Interface().(*IntervalPublicKeyID)
	*x.list = append(*x.list, concreteValue)
}

func (x *_GenesisState_5_list) AppendMutable() protoreflect.Value {
	v := new(IntervalPublicKeyID)
	*x.list = append(*x.list, v)
	return protoreflect.ValueOfMessage(v.ProtoReflect())
}

func (x *_GenesisState_5_list) Truncate(n int) {
	for i := n; i < len(*x.list); i++ {
		(*x.list)[i] = nil
	}
	*x.list = (*x.list)[:n]
}

func (x *_GenesisState_5_list) NewElement() protoreflect.Value {
	v := new(IntervalPublicKeyID)
	return protoreflect.ValueOfMessage(v.ProtoReflect())
}

func (x *_GenesisState_5_list) IsValid() bool {
	return x.list != nil
}

var _ protoreflect.List = (*_GenesisState_6_list)(nil)

type _GenesisState_6_list struct {
	list *[]*PioneerJar
}

func (x *_GenesisState_6_list) Len() int {
	if x.list == nil {
		return 0
	}
	return len(*x.list)
}

func (x *_GenesisState_6_list) Get(i int) protoreflect.Value {
	return protoreflect.ValueOfMessage((*x.list)[i].ProtoReflect())
}

func (x *_GenesisState_6_list) Set(i int, value protoreflect.Value) {
	valueUnwrapped := value.Message()
	concreteValue := valueUnwrapped.Interface().(*PioneerJar)
	(*x.list)[i] = concreteValue
}

func (x *_GenesisState_6_list) Append(value protoreflect.Value) {
	valueUnwrapped := value.Message()
	concreteValue := valueUnwrapped.Interface().(*PioneerJar)
	*x.list = append(*x.list, concreteValue)
}

func (x *_GenesisState_6_list) AppendMutable() protoreflect.Value {
	v := new(PioneerJar)
	*x.list = append(*x.list, v)
	return protoreflect.ValueOfMessage(v.ProtoReflect())
}

func (x *_GenesisState_6_list) Truncate(n int) {
	for i := n; i < len(*x.list); i++ {
		(*x.list)[i] = nil
	}
	*x.list = (*x.list)[:n]
}

func (x *_GenesisState_6_list) NewElement() protoreflect.Value {
	v := new(PioneerJar)
	return protoreflect.ValueOfMessage(v.ProtoReflect())
}

func (x *_GenesisState_6_list) IsValid() bool {
	return x.list != nil
}

var _ protoreflect.List = (*_GenesisState_7_list)(nil)

type _GenesisState_7_list struct {
	list *[]*JarRegulator
}

func (x *_GenesisState_7_list) Len() int {
	if x.list == nil {
		return 0
	}
	return len(*x.list)
}

func (x *_GenesisState_7_list) Get(i int) protoreflect.Value {
	return protoreflect.ValueOfMessage((*x.list)[i].ProtoReflect())
}

func (x *_GenesisState_7_list) Set(i int, value protoreflect.Value) {
	valueUnwrapped := value.Message()
	concreteValue := valueUnwrapped.Interface().(*JarRegulator)
	(*x.list)[i] = concreteValue
}

func (x *_GenesisState_7_list) Append(value protoreflect.Value) {
	valueUnwrapped := value.Message()
	concreteValue := valueUnwrapped.Interface().(*JarRegulator)
	*x.list = append(*x.list, concreteValue)
}

func (x *_GenesisState_7_list) AppendMutable() protoreflect.Value {
	v := new(JarRegulator)
	*x.list = append(*x.list, v)
	return protoreflect.ValueOfMessage(v.ProtoReflect())
}

func (x *_GenesisState_7_list) Truncate(n int) {
	for i := n; i < len(*x.list); i++ {
		(*x.list)[i] = nil
	}
	*x.list = (*x.list)[:n]
}

func (x *_GenesisState_7_list) NewElement() protoreflect.Value {
	v := new(JarRegulator)
	return protoreflect.ValueOfMessage(v.ProtoReflect())
}

func (x *_GenesisState_7_list) IsValid() bool {
	return x.list != nil
}

var _ protoreflect.List = (*_GenesisState_8_list)(nil)

type _GenesisState_8_list struct {
	list *[]*SuspiciousTransaction
}

func (x *_GenesisState_8_list) Len() int {
	if x.list == nil {
		return 0
	}
	return len(*x.list)
}

func (x *_GenesisState_8_list) Get(i int) protoreflect.Value {
	return protoreflect.ValueOfMessage((*x.list)[i].ProtoReflect())
}

func (x *_GenesisState_8_list) Set(i int, value protoreflect.Value) {
	valueUnwrapped := value.Message()
	concreteValue := valueUnwrapped.Interface().(*SuspiciousTransaction)
	(*x.list)[i] = concreteValue
}

func (x *_GenesisState_8_list) Append(value protoreflect.Value) {
	valueUnwrapped := value.Message()
	concreteValue := valueUnwrapped.Interface().(*SuspiciousTransaction)
	*x.list = append(*x.list, concreteValue)
}

func (x *_GenesisState_8_list) AppendMutable() protoreflect.Value {
	v := new(SuspiciousTransaction)
	*x.list = append(*x.list, v)
	return protoreflect.ValueOfMessage(v.ProtoReflect())
}

func (x *_GenesisState_8_list) Truncate(n int) {
	for i := n; i < len(*x.list); i++ {
		(*x.list)[i] = nil
	}
	*x.list = (*x.list)[:n]
}

func (x *_GenesisState_8_list) NewElement() protoreflect.Value {
	v := new(SuspiciousTransaction)
	return protoreflect.ValueOfMessage(v.ProtoReflect())
}

func (x *_GenesisState_8_list) IsValid() bool {
	return x.list != nil
}

var _ protoreflect.List = (*_GenesisState_10_list)(nil)

type _GenesisState_10_list struct {
	list *[]*ProtectKey
}

func (x *_GenesisState_10_list) Len() int {
	if x.list == nil {
		return 0
	}
	return len(*x.list)
}

func (x *_GenesisState_10_list) Get(i int) protoreflect.Value {
	return protoreflect.ValueOfMessage((*x.list)[i].ProtoReflect())
}

func (x *_GenesisState_10_list) Set(i int, value protoreflect.Value) {
	valueUnwrapped := value.Message()
	concreteValue := valueUnwrapped.Interface().(*ProtectKey)
	(*x.list)[i] = concreteValue
}

func (x *_GenesisState_10_list) Append(value protoreflect.Value) {
	valueUnwrapped := value.Message()
	concreteValue := valueUnwrapped.Interface().(*ProtectKey)
	*x.list = append(*x.list, concreteValue)
}

func (x *_GenesisState_10_list) AppendMutable() protoreflect.Value {
	v := new(ProtectKey)
	*x.list = append(*x.list, v)
	return protoreflect.ValueOfMessage(v.ProtoReflect())
}

func (x *_GenesisState_10_list) Truncate(n int) {
	for i := n; i < len(*x.list); i++ {
		(*x.list)[i] = nil
	}
	*x.list = (*x.list)[:n]
}

func (x *_GenesisState_10_list) NewElement() protoreflect.Value {
	v := new(ProtectKey)
	return protoreflect.ValueOfMessage(v.ProtoReflect())
}

func (x *_GenesisState_10_list) IsValid() bool {
	return x.list != nil
}

var _ protoreflect.List = (*_GenesisState_11_list)(nil)

type _GenesisState_11_list struct {
	list *[]*RecoverKey
}

func (x *_GenesisState_11_list) Len() int {
	if x.list == nil {
		return 0
	}
	return len(*x.list)
}

func (x *_GenesisState_11_list) Get(i int) protoreflect.Value {
	return protoreflect.ValueOfMessage((*x.list)[i].ProtoReflect())
}

func (x *_GenesisState_11_list) Set(i int, value protoreflect.Value) {
	valueUnwrapped := value.Message()
	concreteValue := valueUnwrapped.Interface().(*RecoverKey)
	(*x.list)[i] = concreteValue
}

func (x *_GenesisState_11_list) Append(value protoreflect.Value) {
	valueUnwrapped := value.Message()
	concreteValue := valueUnwrapped.Interface().(*RecoverKey)
	*x.list = append(*x.list, concreteValue)
}

func (x *_GenesisState_11_list) AppendMutable() protoreflect.Value {
	v := new(RecoverKey)
	*x.list = append(*x.list, v)
	return protoreflect.ValueOfMessage(v.ProtoReflect())
}

func (x *_GenesisState_11_list) Truncate(n int) {
	for i := n; i < len(*x.list); i++ {
		(*x.list)[i] = nil
	}
	*x.list = (*x.list)[:n]
}

func (x *_GenesisState_11_list) NewElement() protoreflect.Value {
	v := new(RecoverKey)
	return protoreflect.ValueOfMessage(v.ProtoReflect())
}

func (x *_GenesisState_11_list) IsValid() bool {
	return x.list != nil
}

var _ protoreflect.List = (*_GenesisState_12_list)(nil)

type _GenesisState_12_list struct {
	list *[]*EnclaveIdentity
}

func (x *_GenesisState_12_list) Len() int {
	if x.list == nil {
		return 0
	}
	return len(*x.list)
}

func (x *_GenesisState_12_list) Get(i int) protoreflect.Value {
	return protoreflect.ValueOfMessage((*x.list)[i].ProtoReflect())
}

func (x *_GenesisState_12_list) Set(i int, value protoreflect.Value) {
	valueUnwrapped := value.Message()
	concreteValue := valueUnwrapped.Interface().(*EnclaveIdentity)
	(*x.list)[i] = concreteValue
}

func (x *_GenesisState_12_list) Append(value protoreflect.Value) {
	valueUnwrapped := value.Message()
	concreteValue := valueUnwrapped.Interface().(*EnclaveIdentity)
	*x.list = append(*x.list, concreteValue)
}

func (x *_GenesisState_12_list) AppendMutable() protoreflect.Value {
	v := new(EnclaveIdentity)
	*x.list = append(*x.list, v)
	return protoreflect.ValueOfMessage(v.ProtoReflect())
}

func (x *_GenesisState_12_list) Truncate(n int) {
	for i := n; i < len(*x.list); i++ {
		(*x.list)[i] = nil
	}
	*x.list = (*x.list)[:n]
}

func (x *_GenesisState_12_list) NewElement() protoreflect.Value {
	v := new(EnclaveIdentity)
	return protoreflect.ValueOfMessage(v.ProtoReflect())
}

func (x *_GenesisState_12_list) IsValid() bool {
	return x.list != nil
}

var (
	md_GenesisState                            protoreflect.MessageDescriptor
	fd_GenesisState_params                     protoreflect.FieldDescriptor
	fd_GenesisState_credentialList             protoreflect.FieldDescriptor
	fd_GenesisState_publicKeyList              protoreflect.FieldDescriptor
	fd_GenesisState_walletList                 protoreflect.FieldDescriptor
	fd_GenesisState_intervalPublicKeyIDList    protoreflect.FieldDescriptor
	fd_GenesisState_pioneerJarList             protoreflect.FieldDescriptor
	fd_GenesisState_jarRegulatorList           protoreflect.FieldDescriptor
	fd_GenesisState_suspiciousTransactionList  protoreflect.FieldDescriptor
	fd_GenesisState_suspiciousTransactionCount protoreflect.FieldDescriptor
	fd_GenesisState_protectKeyList             protoreflect.FieldDescriptor
	fd_GenesisState_recoverKeyList             protoreflect.FieldDescriptor
	fd_GenesisState_enclaveIdentityList        protoreflect.FieldDescriptor
)

func init() {
	file_qadena_qadena_genesis_proto_init()
	md_GenesisState = File_qadena_qadena_genesis_proto.Messages().ByName("GenesisState")
	fd_GenesisState_params = md_GenesisState.Fields().ByName("params")
	fd_GenesisState_credentialList = md_GenesisState.Fields().ByName("credentialList")
	fd_GenesisState_publicKeyList = md_GenesisState.Fields().ByName("publicKeyList")
	fd_GenesisState_walletList = md_GenesisState.Fields().ByName("walletList")
	fd_GenesisState_intervalPublicKeyIDList = md_GenesisState.Fields().ByName("intervalPublicKeyIDList")
	fd_GenesisState_pioneerJarList = md_GenesisState.Fields().ByName("pioneerJarList")
	fd_GenesisState_jarRegulatorList = md_GenesisState.Fields().ByName("jarRegulatorList")
	fd_GenesisState_suspiciousTransactionList = md_GenesisState.Fields().ByName("suspiciousTransactionList")
	fd_GenesisState_suspiciousTransactionCount = md_GenesisState.Fields().ByName("suspiciousTransactionCount")
	fd_GenesisState_protectKeyList = md_GenesisState.Fields().ByName("protectKeyList")
	fd_GenesisState_recoverKeyList = md_GenesisState.Fields().ByName("recoverKeyList")
	fd_GenesisState_enclaveIdentityList = md_GenesisState.Fields().ByName("enclaveIdentityList")
}

var _ protoreflect.Message = (*fastReflection_GenesisState)(nil)

type fastReflection_GenesisState GenesisState

func (x *GenesisState) ProtoReflect() protoreflect.Message {
	return (*fastReflection_GenesisState)(x)
}

func (x *GenesisState) slowProtoReflect() protoreflect.Message {
	mi := &file_qadena_qadena_genesis_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_GenesisState_messageType fastReflection_GenesisState_messageType
var _ protoreflect.MessageType = fastReflection_GenesisState_messageType{}

type fastReflection_GenesisState_messageType struct{}

func (x fastReflection_GenesisState_messageType) Zero() protoreflect.Message {
	return (*fastReflection_GenesisState)(nil)
}
func (x fastReflection_GenesisState_messageType) New() protoreflect.Message {
	return new(fastReflection_GenesisState)
}
func (x fastReflection_GenesisState_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_GenesisState
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_GenesisState) Descriptor() protoreflect.MessageDescriptor {
	return md_GenesisState
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_GenesisState) Type() protoreflect.MessageType {
	return _fastReflection_GenesisState_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_GenesisState) New() protoreflect.Message {
	return new(fastReflection_GenesisState)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_GenesisState) Interface() protoreflect.ProtoMessage {
	return (*GenesisState)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_GenesisState) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.Params != nil {
		value := protoreflect.ValueOfMessage(x.Params.ProtoReflect())
		if !f(fd_GenesisState_params, value) {
			return
		}
	}
	if len(x.CredentialList) != 0 {
		value := protoreflect.ValueOfList(&_GenesisState_2_list{list: &x.CredentialList})
		if !f(fd_GenesisState_credentialList, value) {
			return
		}
	}
	if len(x.PublicKeyList) != 0 {
		value := protoreflect.ValueOfList(&_GenesisState_3_list{list: &x.PublicKeyList})
		if !f(fd_GenesisState_publicKeyList, value) {
			return
		}
	}
	if len(x.WalletList) != 0 {
		value := protoreflect.ValueOfList(&_GenesisState_4_list{list: &x.WalletList})
		if !f(fd_GenesisState_walletList, value) {
			return
		}
	}
	if len(x.IntervalPublicKeyIDList) != 0 {
		value := protoreflect.ValueOfList(&_GenesisState_5_list{list: &x.IntervalPublicKeyIDList})
		if !f(fd_GenesisState_intervalPublicKeyIDList, value) {
			return
		}
	}
	if len(x.PioneerJarList) != 0 {
		value := protoreflect.ValueOfList(&_GenesisState_6_list{list: &x.PioneerJarList})
		if !f(fd_GenesisState_pioneerJarList, value) {
			return
		}
	}
	if len(x.JarRegulatorList) != 0 {
		value := protoreflect.ValueOfList(&_GenesisState_7_list{list: &x.JarRegulatorList})
		if !f(fd_GenesisState_jarRegulatorList, value) {
			return
		}
	}
	if len(x.SuspiciousTransactionList) != 0 {
		value := protoreflect.ValueOfList(&_GenesisState_8_list{list: &x.SuspiciousTransactionList})
		if !f(fd_GenesisState_suspiciousTransactionList, value) {
			return
		}
	}
	if x.SuspiciousTransactionCount != uint64(0) {
		value := protoreflect.ValueOfUint64(x.SuspiciousTransactionCount)
		if !f(fd_GenesisState_suspiciousTransactionCount, value) {
			return
		}
	}
	if len(x.ProtectKeyList) != 0 {
		value := protoreflect.ValueOfList(&_GenesisState_10_list{list: &x.ProtectKeyList})
		if !f(fd_GenesisState_protectKeyList, value) {
			return
		}
	}
	if len(x.RecoverKeyList) != 0 {
		value := protoreflect.ValueOfList(&_GenesisState_11_list{list: &x.RecoverKeyList})
		if !f(fd_GenesisState_recoverKeyList, value) {
			return
		}
	}
	if len(x.EnclaveIdentityList) != 0 {
		value := protoreflect.ValueOfList(&_GenesisState_12_list{list: &x.EnclaveIdentityList})
		if !f(fd_GenesisState_enclaveIdentityList, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_GenesisState) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "qadena.qadena.GenesisState.params":
		return x.Params != nil
	case "qadena.qadena.GenesisState.credentialList":
		return len(x.CredentialList) != 0
	case "qadena.qadena.GenesisState.publicKeyList":
		return len(x.PublicKeyList) != 0
	case "qadena.qadena.GenesisState.walletList":
		return len(x.WalletList) != 0
	case "qadena.qadena.GenesisState.intervalPublicKeyIDList":
		return len(x.IntervalPublicKeyIDList) != 0
	case "qadena.qadena.GenesisState.pioneerJarList":
		return len(x.PioneerJarList) != 0
	case "qadena.qadena.GenesisState.jarRegulatorList":
		return len(x.JarRegulatorList) != 0
	case "qadena.qadena.GenesisState.suspiciousTransactionList":
		return len(x.SuspiciousTransactionList) != 0
	case "qadena.qadena.GenesisState.suspiciousTransactionCount":
		return x.SuspiciousTransactionCount != uint64(0)
	case "qadena.qadena.GenesisState.protectKeyList":
		return len(x.ProtectKeyList) != 0
	case "qadena.qadena.GenesisState.recoverKeyList":
		return len(x.RecoverKeyList) != 0
	case "qadena.qadena.GenesisState.enclaveIdentityList":
		return len(x.EnclaveIdentityList) != 0
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: qadena.qadena.GenesisState"))
		}
		panic(fmt.Errorf("message qadena.qadena.GenesisState does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_GenesisState) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "qadena.qadena.GenesisState.params":
		x.Params = nil
	case "qadena.qadena.GenesisState.credentialList":
		x.CredentialList = nil
	case "qadena.qadena.GenesisState.publicKeyList":
		x.PublicKeyList = nil
	case "qadena.qadena.GenesisState.walletList":
		x.WalletList = nil
	case "qadena.qadena.GenesisState.intervalPublicKeyIDList":
		x.IntervalPublicKeyIDList = nil
	case "qadena.qadena.GenesisState.pioneerJarList":
		x.PioneerJarList = nil
	case "qadena.qadena.GenesisState.jarRegulatorList":
		x.JarRegulatorList = nil
	case "qadena.qadena.GenesisState.suspiciousTransactionList":
		x.SuspiciousTransactionList = nil
	case "qadena.qadena.GenesisState.suspiciousTransactionCount":
		x.SuspiciousTransactionCount = uint64(0)
	case "qadena.qadena.GenesisState.protectKeyList":
		x.ProtectKeyList = nil
	case "qadena.qadena.GenesisState.recoverKeyList":
		x.RecoverKeyList = nil
	case "qadena.qadena.GenesisState.enclaveIdentityList":
		x.EnclaveIdentityList = nil
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: qadena.qadena.GenesisState"))
		}
		panic(fmt.Errorf("message qadena.qadena.GenesisState does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_GenesisState) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "qadena.qadena.GenesisState.params":
		value := x.Params
		return protoreflect.ValueOfMessage(value.ProtoReflect())
	case "qadena.qadena.GenesisState.credentialList":
		if len(x.CredentialList) == 0 {
			return protoreflect.ValueOfList(&_GenesisState_2_list{})
		}
		listValue := &_GenesisState_2_list{list: &x.CredentialList}
		return protoreflect.ValueOfList(listValue)
	case "qadena.qadena.GenesisState.publicKeyList":
		if len(x.PublicKeyList) == 0 {
			return protoreflect.ValueOfList(&_GenesisState_3_list{})
		}
		listValue := &_GenesisState_3_list{list: &x.PublicKeyList}
		return protoreflect.ValueOfList(listValue)
	case "qadena.qadena.GenesisState.walletList":
		if len(x.WalletList) == 0 {
			return protoreflect.ValueOfList(&_GenesisState_4_list{})
		}
		listValue := &_GenesisState_4_list{list: &x.WalletList}
		return protoreflect.ValueOfList(listValue)
	case "qadena.qadena.GenesisState.intervalPublicKeyIDList":
		if len(x.IntervalPublicKeyIDList) == 0 {
			return protoreflect.ValueOfList(&_GenesisState_5_list{})
		}
		listValue := &_GenesisState_5_list{list: &x.IntervalPublicKeyIDList}
		return protoreflect.ValueOfList(listValue)
	case "qadena.qadena.GenesisState.pioneerJarList":
		if len(x.PioneerJarList) == 0 {
			return protoreflect.ValueOfList(&_GenesisState_6_list{})
		}
		listValue := &_GenesisState_6_list{list: &x.PioneerJarList}
		return protoreflect.ValueOfList(listValue)
	case "qadena.qadena.GenesisState.jarRegulatorList":
		if len(x.JarRegulatorList) == 0 {
			return protoreflect.ValueOfList(&_GenesisState_7_list{})
		}
		listValue := &_GenesisState_7_list{list: &x.JarRegulatorList}
		return protoreflect.ValueOfList(listValue)
	case "qadena.qadena.GenesisState.suspiciousTransactionList":
		if len(x.SuspiciousTransactionList) == 0 {
			return protoreflect.ValueOfList(&_GenesisState_8_list{})
		}
		listValue := &_GenesisState_8_list{list: &x.SuspiciousTransactionList}
		return protoreflect.ValueOfList(listValue)
	case "qadena.qadena.GenesisState.suspiciousTransactionCount":
		value := x.SuspiciousTransactionCount
		return protoreflect.ValueOfUint64(value)
	case "qadena.qadena.GenesisState.protectKeyList":
		if len(x.ProtectKeyList) == 0 {
			return protoreflect.ValueOfList(&_GenesisState_10_list{})
		}
		listValue := &_GenesisState_10_list{list: &x.ProtectKeyList}
		return protoreflect.ValueOfList(listValue)
	case "qadena.qadena.GenesisState.recoverKeyList":
		if len(x.RecoverKeyList) == 0 {
			return protoreflect.ValueOfList(&_GenesisState_11_list{})
		}
		listValue := &_GenesisState_11_list{list: &x.RecoverKeyList}
		return protoreflect.ValueOfList(listValue)
	case "qadena.qadena.GenesisState.enclaveIdentityList":
		if len(x.EnclaveIdentityList) == 0 {
			return protoreflect.ValueOfList(&_GenesisState_12_list{})
		}
		listValue := &_GenesisState_12_list{list: &x.EnclaveIdentityList}
		return protoreflect.ValueOfList(listValue)
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: qadena.qadena.GenesisState"))
		}
		panic(fmt.Errorf("message qadena.qadena.GenesisState does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_GenesisState) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "qadena.qadena.GenesisState.params":
		x.Params = value.Message().Interface().(*Params)
	case "qadena.qadena.GenesisState.credentialList":
		lv := value.List()
		clv := lv.(*_GenesisState_2_list)
		x.CredentialList = *clv.list
	case "qadena.qadena.GenesisState.publicKeyList":
		lv := value.List()
		clv := lv.(*_GenesisState_3_list)
		x.PublicKeyList = *clv.list
	case "qadena.qadena.GenesisState.walletList":
		lv := value.List()
		clv := lv.(*_GenesisState_4_list)
		x.WalletList = *clv.list
	case "qadena.qadena.GenesisState.intervalPublicKeyIDList":
		lv := value.List()
		clv := lv.(*_GenesisState_5_list)
		x.IntervalPublicKeyIDList = *clv.list
	case "qadena.qadena.GenesisState.pioneerJarList":
		lv := value.List()
		clv := lv.(*_GenesisState_6_list)
		x.PioneerJarList = *clv.list
	case "qadena.qadena.GenesisState.jarRegulatorList":
		lv := value.List()
		clv := lv.(*_GenesisState_7_list)
		x.JarRegulatorList = *clv.list
	case "qadena.qadena.GenesisState.suspiciousTransactionList":
		lv := value.List()
		clv := lv.(*_GenesisState_8_list)
		x.SuspiciousTransactionList = *clv.list
	case "qadena.qadena.GenesisState.suspiciousTransactionCount":
		x.SuspiciousTransactionCount = value.Uint()
	case "qadena.qadena.GenesisState.protectKeyList":
		lv := value.List()
		clv := lv.(*_GenesisState_10_list)
		x.ProtectKeyList = *clv.list
	case "qadena.qadena.GenesisState.recoverKeyList":
		lv := value.List()
		clv := lv.(*_GenesisState_11_list)
		x.RecoverKeyList = *clv.list
	case "qadena.qadena.GenesisState.enclaveIdentityList":
		lv := value.List()
		clv := lv.(*_GenesisState_12_list)
		x.EnclaveIdentityList = *clv.list
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: qadena.qadena.GenesisState"))
		}
		panic(fmt.Errorf("message qadena.qadena.GenesisState does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_GenesisState) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "qadena.qadena.GenesisState.params":
		if x.Params == nil {
			x.Params = new(Params)
		}
		return protoreflect.ValueOfMessage(x.Params.ProtoReflect())
	case "qadena.qadena.GenesisState.credentialList":
		if x.CredentialList == nil {
			x.CredentialList = []*Credential{}
		}
		value := &_GenesisState_2_list{list: &x.CredentialList}
		return protoreflect.ValueOfList(value)
	case "qadena.qadena.GenesisState.publicKeyList":
		if x.PublicKeyList == nil {
			x.PublicKeyList = []*PublicKey{}
		}
		value := &_GenesisState_3_list{list: &x.PublicKeyList}
		return protoreflect.ValueOfList(value)
	case "qadena.qadena.GenesisState.walletList":
		if x.WalletList == nil {
			x.WalletList = []*Wallet{}
		}
		value := &_GenesisState_4_list{list: &x.WalletList}
		return protoreflect.ValueOfList(value)
	case "qadena.qadena.GenesisState.intervalPublicKeyIDList":
		if x.IntervalPublicKeyIDList == nil {
			x.IntervalPublicKeyIDList = []*IntervalPublicKeyID{}
		}
		value := &_GenesisState_5_list{list: &x.IntervalPublicKeyIDList}
		return protoreflect.ValueOfList(value)
	case "qadena.qadena.GenesisState.pioneerJarList":
		if x.PioneerJarList == nil {
			x.PioneerJarList = []*PioneerJar{}
		}
		value := &_GenesisState_6_list{list: &x.PioneerJarList}
		return protoreflect.ValueOfList(value)
	case "qadena.qadena.GenesisState.jarRegulatorList":
		if x.JarRegulatorList == nil {
			x.JarRegulatorList = []*JarRegulator{}
		}
		value := &_GenesisState_7_list{list: &x.JarRegulatorList}
		return protoreflect.ValueOfList(value)
	case "qadena.qadena.GenesisState.suspiciousTransactionList":
		if x.SuspiciousTransactionList == nil {
			x.SuspiciousTransactionList = []*SuspiciousTransaction{}
		}
		value := &_GenesisState_8_list{list: &x.SuspiciousTransactionList}
		return protoreflect.ValueOfList(value)
	case "qadena.qadena.GenesisState.protectKeyList":
		if x.ProtectKeyList == nil {
			x.ProtectKeyList = []*ProtectKey{}
		}
		value := &_GenesisState_10_list{list: &x.ProtectKeyList}
		return protoreflect.ValueOfList(value)
	case "qadena.qadena.GenesisState.recoverKeyList":
		if x.RecoverKeyList == nil {
			x.RecoverKeyList = []*RecoverKey{}
		}
		value := &_GenesisState_11_list{list: &x.RecoverKeyList}
		return protoreflect.ValueOfList(value)
	case "qadena.qadena.GenesisState.enclaveIdentityList":
		if x.EnclaveIdentityList == nil {
			x.EnclaveIdentityList = []*EnclaveIdentity{}
		}
		value := &_GenesisState_12_list{list: &x.EnclaveIdentityList}
		return protoreflect.ValueOfList(value)
	case "qadena.qadena.GenesisState.suspiciousTransactionCount":
		panic(fmt.Errorf("field suspiciousTransactionCount of message qadena.qadena.GenesisState is not mutable"))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: qadena.qadena.GenesisState"))
		}
		panic(fmt.Errorf("message qadena.qadena.GenesisState does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_GenesisState) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "qadena.qadena.GenesisState.params":
		m := new(Params)
		return protoreflect.ValueOfMessage(m.ProtoReflect())
	case "qadena.qadena.GenesisState.credentialList":
		list := []*Credential{}
		return protoreflect.ValueOfList(&_GenesisState_2_list{list: &list})
	case "qadena.qadena.GenesisState.publicKeyList":
		list := []*PublicKey{}
		return protoreflect.ValueOfList(&_GenesisState_3_list{list: &list})
	case "qadena.qadena.GenesisState.walletList":
		list := []*Wallet{}
		return protoreflect.ValueOfList(&_GenesisState_4_list{list: &list})
	case "qadena.qadena.GenesisState.intervalPublicKeyIDList":
		list := []*IntervalPublicKeyID{}
		return protoreflect.ValueOfList(&_GenesisState_5_list{list: &list})
	case "qadena.qadena.GenesisState.pioneerJarList":
		list := []*PioneerJar{}
		return protoreflect.ValueOfList(&_GenesisState_6_list{list: &list})
	case "qadena.qadena.GenesisState.jarRegulatorList":
		list := []*JarRegulator{}
		return protoreflect.ValueOfList(&_GenesisState_7_list{list: &list})
	case "qadena.qadena.GenesisState.suspiciousTransactionList":
		list := []*SuspiciousTransaction{}
		return protoreflect.ValueOfList(&_GenesisState_8_list{list: &list})
	case "qadena.qadena.GenesisState.suspiciousTransactionCount":
		return protoreflect.ValueOfUint64(uint64(0))
	case "qadena.qadena.GenesisState.protectKeyList":
		list := []*ProtectKey{}
		return protoreflect.ValueOfList(&_GenesisState_10_list{list: &list})
	case "qadena.qadena.GenesisState.recoverKeyList":
		list := []*RecoverKey{}
		return protoreflect.ValueOfList(&_GenesisState_11_list{list: &list})
	case "qadena.qadena.GenesisState.enclaveIdentityList":
		list := []*EnclaveIdentity{}
		return protoreflect.ValueOfList(&_GenesisState_12_list{list: &list})
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: qadena.qadena.GenesisState"))
		}
		panic(fmt.Errorf("message qadena.qadena.GenesisState does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_GenesisState) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in qadena.qadena.GenesisState", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_GenesisState) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_GenesisState) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_GenesisState) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_GenesisState) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*GenesisState)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		if x.Params != nil {
			l = options.Size(x.Params)
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if len(x.CredentialList) > 0 {
			for _, e := range x.CredentialList {
				l = options.Size(e)
				n += 1 + l + runtime.Sov(uint64(l))
			}
		}
		if len(x.PublicKeyList) > 0 {
			for _, e := range x.PublicKeyList {
				l = options.Size(e)
				n += 1 + l + runtime.Sov(uint64(l))
			}
		}
		if len(x.WalletList) > 0 {
			for _, e := range x.WalletList {
				l = options.Size(e)
				n += 1 + l + runtime.Sov(uint64(l))
			}
		}
		if len(x.IntervalPublicKeyIDList) > 0 {
			for _, e := range x.IntervalPublicKeyIDList {
				l = options.Size(e)
				n += 1 + l + runtime.Sov(uint64(l))
			}
		}
		if len(x.PioneerJarList) > 0 {
			for _, e := range x.PioneerJarList {
				l = options.Size(e)
				n += 1 + l + runtime.Sov(uint64(l))
			}
		}
		if len(x.JarRegulatorList) > 0 {
			for _, e := range x.JarRegulatorList {
				l = options.Size(e)
				n += 1 + l + runtime.Sov(uint64(l))
			}
		}
		if len(x.SuspiciousTransactionList) > 0 {
			for _, e := range x.SuspiciousTransactionList {
				l = options.Size(e)
				n += 1 + l + runtime.Sov(uint64(l))
			}
		}
		if x.SuspiciousTransactionCount != 0 {
			n += 1 + runtime.Sov(uint64(x.SuspiciousTransactionCount))
		}
		if len(x.ProtectKeyList) > 0 {
			for _, e := range x.ProtectKeyList {
				l = options.Size(e)
				n += 1 + l + runtime.Sov(uint64(l))
			}
		}
		if len(x.RecoverKeyList) > 0 {
			for _, e := range x.RecoverKeyList {
				l = options.Size(e)
				n += 1 + l + runtime.Sov(uint64(l))
			}
		}
		if len(x.EnclaveIdentityList) > 0 {
			for _, e := range x.EnclaveIdentityList {
				l = options.Size(e)
				n += 1 + l + runtime.Sov(uint64(l))
			}
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*GenesisState)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if len(x.EnclaveIdentityList) > 0 {
			for iNdEx := len(x.EnclaveIdentityList) - 1; iNdEx >= 0; iNdEx-- {
				encoded, err := options.Marshal(x.EnclaveIdentityList[iNdEx])
				if err != nil {
					return protoiface.MarshalOutput{
						NoUnkeyedLiterals: input.NoUnkeyedLiterals,
						Buf:               input.Buf,
					}, err
				}
				i -= len(encoded)
				copy(dAtA[i:], encoded)
				i = runtime.EncodeVarint(dAtA, i, uint64(len(encoded)))
				i--
				dAtA[i] = 0x62
			}
		}
		if len(x.RecoverKeyList) > 0 {
			for iNdEx := len(x.RecoverKeyList) - 1; iNdEx >= 0; iNdEx-- {
				encoded, err := options.Marshal(x.RecoverKeyList[iNdEx])
				if err != nil {
					return protoiface.MarshalOutput{
						NoUnkeyedLiterals: input.NoUnkeyedLiterals,
						Buf:               input.Buf,
					}, err
				}
				i -= len(encoded)
				copy(dAtA[i:], encoded)
				i = runtime.EncodeVarint(dAtA, i, uint64(len(encoded)))
				i--
				dAtA[i] = 0x5a
			}
		}
		if len(x.ProtectKeyList) > 0 {
			for iNdEx := len(x.ProtectKeyList) - 1; iNdEx >= 0; iNdEx-- {
				encoded, err := options.Marshal(x.ProtectKeyList[iNdEx])
				if err != nil {
					return protoiface.MarshalOutput{
						NoUnkeyedLiterals: input.NoUnkeyedLiterals,
						Buf:               input.Buf,
					}, err
				}
				i -= len(encoded)
				copy(dAtA[i:], encoded)
				i = runtime.EncodeVarint(dAtA, i, uint64(len(encoded)))
				i--
				dAtA[i] = 0x52
			}
		}
		if x.SuspiciousTransactionCount != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.SuspiciousTransactionCount))
			i--
			dAtA[i] = 0x48
		}
		if len(x.SuspiciousTransactionList) > 0 {
			for iNdEx := len(x.SuspiciousTransactionList) - 1; iNdEx >= 0; iNdEx-- {
				encoded, err := options.Marshal(x.SuspiciousTransactionList[iNdEx])
				if err != nil {
					return protoiface.MarshalOutput{
						NoUnkeyedLiterals: input.NoUnkeyedLiterals,
						Buf:               input.Buf,
					}, err
				}
				i -= len(encoded)
				copy(dAtA[i:], encoded)
				i = runtime.EncodeVarint(dAtA, i, uint64(len(encoded)))
				i--
				dAtA[i] = 0x42
			}
		}
		if len(x.JarRegulatorList) > 0 {
			for iNdEx := len(x.JarRegulatorList) - 1; iNdEx >= 0; iNdEx-- {
				encoded, err := options.Marshal(x.JarRegulatorList[iNdEx])
				if err != nil {
					return protoiface.MarshalOutput{
						NoUnkeyedLiterals: input.NoUnkeyedLiterals,
						Buf:               input.Buf,
					}, err
				}
				i -= len(encoded)
				copy(dAtA[i:], encoded)
				i = runtime.EncodeVarint(dAtA, i, uint64(len(encoded)))
				i--
				dAtA[i] = 0x3a
			}
		}
		if len(x.PioneerJarList) > 0 {
			for iNdEx := len(x.PioneerJarList) - 1; iNdEx >= 0; iNdEx-- {
				encoded, err := options.Marshal(x.PioneerJarList[iNdEx])
				if err != nil {
					return protoiface.MarshalOutput{
						NoUnkeyedLiterals: input.NoUnkeyedLiterals,
						Buf:               input.Buf,
					}, err
				}
				i -= len(encoded)
				copy(dAtA[i:], encoded)
				i = runtime.EncodeVarint(dAtA, i, uint64(len(encoded)))
				i--
				dAtA[i] = 0x32
			}
		}
		if len(x.IntervalPublicKeyIDList) > 0 {
			for iNdEx := len(x.IntervalPublicKeyIDList) - 1; iNdEx >= 0; iNdEx-- {
				encoded, err := options.Marshal(x.IntervalPublicKeyIDList[iNdEx])
				if err != nil {
					return protoiface.MarshalOutput{
						NoUnkeyedLiterals: input.NoUnkeyedLiterals,
						Buf:               input.Buf,
					}, err
				}
				i -= len(encoded)
				copy(dAtA[i:], encoded)
				i = runtime.EncodeVarint(dAtA, i, uint64(len(encoded)))
				i--
				dAtA[i] = 0x2a
			}
		}
		if len(x.WalletList) > 0 {
			for iNdEx := len(x.WalletList) - 1; iNdEx >= 0; iNdEx-- {
				encoded, err := options.Marshal(x.WalletList[iNdEx])
				if err != nil {
					return protoiface.MarshalOutput{
						NoUnkeyedLiterals: input.NoUnkeyedLiterals,
						Buf:               input.Buf,
					}, err
				}
				i -= len(encoded)
				copy(dAtA[i:], encoded)
				i = runtime.EncodeVarint(dAtA, i, uint64(len(encoded)))
				i--
				dAtA[i] = 0x22
			}
		}
		if len(x.PublicKeyList) > 0 {
			for iNdEx := len(x.PublicKeyList) - 1; iNdEx >= 0; iNdEx-- {
				encoded, err := options.Marshal(x.PublicKeyList[iNdEx])
				if err != nil {
					return protoiface.MarshalOutput{
						NoUnkeyedLiterals: input.NoUnkeyedLiterals,
						Buf:               input.Buf,
					}, err
				}
				i -= len(encoded)
				copy(dAtA[i:], encoded)
				i = runtime.EncodeVarint(dAtA, i, uint64(len(encoded)))
				i--
				dAtA[i] = 0x1a
			}
		}
		if len(x.CredentialList) > 0 {
			for iNdEx := len(x.CredentialList) - 1; iNdEx >= 0; iNdEx-- {
				encoded, err := options.Marshal(x.CredentialList[iNdEx])
				if err != nil {
					return protoiface.MarshalOutput{
						NoUnkeyedLiterals: input.NoUnkeyedLiterals,
						Buf:               input.Buf,
					}, err
				}
				i -= len(encoded)
				copy(dAtA[i:], encoded)
				i = runtime.EncodeVarint(dAtA, i, uint64(len(encoded)))
				i--
				dAtA[i] = 0x12
			}
		}
		if x.Params != nil {
			encoded, err := options.Marshal(x.Params)
			if err != nil {
				return protoiface.MarshalOutput{
					NoUnkeyedLiterals: input.NoUnkeyedLiterals,
					Buf:               input.Buf,
				}, err
			}
			i -= len(encoded)
			copy(dAtA[i:], encoded)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(encoded)))
			i--
			dAtA[i] = 0xa
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*GenesisState)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: GenesisState: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: GenesisState: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Params", wireType)
				}
				var msglen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					msglen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if msglen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + msglen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if x.Params == nil {
					x.Params = &Params{}
				}
				if err := options.Unmarshal(dAtA[iNdEx:postIndex], x.Params); err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				iNdEx = postIndex
			case 2:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field CredentialList", wireType)
				}
				var msglen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					msglen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if msglen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + msglen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.CredentialList = append(x.CredentialList, &Credential{})
				if err := options.Unmarshal(dAtA[iNdEx:postIndex], x.CredentialList[len(x.CredentialList)-1]); err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				iNdEx = postIndex
			case 3:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field PublicKeyList", wireType)
				}
				var msglen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					msglen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if msglen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + msglen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.PublicKeyList = append(x.PublicKeyList, &PublicKey{})
				if err := options.Unmarshal(dAtA[iNdEx:postIndex], x.PublicKeyList[len(x.PublicKeyList)-1]); err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				iNdEx = postIndex
			case 4:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field WalletList", wireType)
				}
				var msglen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					msglen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if msglen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + msglen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.WalletList = append(x.WalletList, &Wallet{})
				if err := options.Unmarshal(dAtA[iNdEx:postIndex], x.WalletList[len(x.WalletList)-1]); err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				iNdEx = postIndex
			case 5:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field IntervalPublicKeyIDList", wireType)
				}
				var msglen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					msglen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if msglen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + msglen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.IntervalPublicKeyIDList = append(x.IntervalPublicKeyIDList, &IntervalPublicKeyID{})
				if err := options.Unmarshal(dAtA[iNdEx:postIndex], x.IntervalPublicKeyIDList[len(x.IntervalPublicKeyIDList)-1]); err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				iNdEx = postIndex
			case 6:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field PioneerJarList", wireType)
				}
				var msglen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					msglen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if msglen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + msglen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.PioneerJarList = append(x.PioneerJarList, &PioneerJar{})
				if err := options.Unmarshal(dAtA[iNdEx:postIndex], x.PioneerJarList[len(x.PioneerJarList)-1]); err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				iNdEx = postIndex
			case 7:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field JarRegulatorList", wireType)
				}
				var msglen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					msglen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if msglen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + msglen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.JarRegulatorList = append(x.JarRegulatorList, &JarRegulator{})
				if err := options.Unmarshal(dAtA[iNdEx:postIndex], x.JarRegulatorList[len(x.JarRegulatorList)-1]); err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				iNdEx = postIndex
			case 8:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field SuspiciousTransactionList", wireType)
				}
				var msglen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					msglen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if msglen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + msglen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.SuspiciousTransactionList = append(x.SuspiciousTransactionList, &SuspiciousTransaction{})
				if err := options.Unmarshal(dAtA[iNdEx:postIndex], x.SuspiciousTransactionList[len(x.SuspiciousTransactionList)-1]); err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				iNdEx = postIndex
			case 9:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field SuspiciousTransactionCount", wireType)
				}
				x.SuspiciousTransactionCount = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.SuspiciousTransactionCount |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			case 10:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field ProtectKeyList", wireType)
				}
				var msglen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					msglen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if msglen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + msglen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.ProtectKeyList = append(x.ProtectKeyList, &ProtectKey{})
				if err := options.Unmarshal(dAtA[iNdEx:postIndex], x.ProtectKeyList[len(x.ProtectKeyList)-1]); err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				iNdEx = postIndex
			case 11:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field RecoverKeyList", wireType)
				}
				var msglen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					msglen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if msglen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + msglen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.RecoverKeyList = append(x.RecoverKeyList, &RecoverKey{})
				if err := options.Unmarshal(dAtA[iNdEx:postIndex], x.RecoverKeyList[len(x.RecoverKeyList)-1]); err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				iNdEx = postIndex
			case 12:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field EnclaveIdentityList", wireType)
				}
				var msglen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					msglen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if msglen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + msglen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.EnclaveIdentityList = append(x.EnclaveIdentityList, &EnclaveIdentity{})
				if err := options.Unmarshal(dAtA[iNdEx:postIndex], x.EnclaveIdentityList[len(x.EnclaveIdentityList)-1]); err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				iNdEx = postIndex
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.0
// 	protoc        (unknown)
// source: qadena/qadena/genesis.proto

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// GenesisState defines the qadena module's genesis state.
type GenesisState struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// params defines all the parameters of the module.
	Params                     *Params                  `protobuf:"bytes,1,opt,name=params,proto3" json:"params,omitempty"`
	CredentialList             []*Credential            `protobuf:"bytes,2,rep,name=credentialList,proto3" json:"credentialList,omitempty"`
	PublicKeyList              []*PublicKey             `protobuf:"bytes,3,rep,name=publicKeyList,proto3" json:"publicKeyList,omitempty"`
	WalletList                 []*Wallet                `protobuf:"bytes,4,rep,name=walletList,proto3" json:"walletList,omitempty"`
	IntervalPublicKeyIDList    []*IntervalPublicKeyID   `protobuf:"bytes,5,rep,name=intervalPublicKeyIDList,proto3" json:"intervalPublicKeyIDList,omitempty"`
	PioneerJarList             []*PioneerJar            `protobuf:"bytes,6,rep,name=pioneerJarList,proto3" json:"pioneerJarList,omitempty"`
	JarRegulatorList           []*JarRegulator          `protobuf:"bytes,7,rep,name=jarRegulatorList,proto3" json:"jarRegulatorList,omitempty"`
	SuspiciousTransactionList  []*SuspiciousTransaction `protobuf:"bytes,8,rep,name=suspiciousTransactionList,proto3" json:"suspiciousTransactionList,omitempty"`
	SuspiciousTransactionCount uint64                   `protobuf:"varint,9,opt,name=suspiciousTransactionCount,proto3" json:"suspiciousTransactionCount,omitempty"`
	ProtectKeyList             []*ProtectKey            `protobuf:"bytes,10,rep,name=protectKeyList,proto3" json:"protectKeyList,omitempty"`
	RecoverKeyList             []*RecoverKey            `protobuf:"bytes,11,rep,name=recoverKeyList,proto3" json:"recoverKeyList,omitempty"`
	EnclaveIdentityList        []*EnclaveIdentity       `protobuf:"bytes,12,rep,name=enclaveIdentityList,proto3" json:"enclaveIdentityList,omitempty"`
}

func (x *GenesisState) Reset() {
	*x = GenesisState{}
	if protoimpl.UnsafeEnabled {
		mi := &file_qadena_qadena_genesis_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GenesisState) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GenesisState) ProtoMessage() {}

// Deprecated: Use GenesisState.ProtoReflect.Descriptor instead.
func (*GenesisState) Descriptor() ([]byte, []int) {
	return file_qadena_qadena_genesis_proto_rawDescGZIP(), []int{0}
}

func (x *GenesisState) GetParams() *Params {
	if x != nil {
		return x.Params
	}
	return nil
}

func (x *GenesisState) GetCredentialList() []*Credential {
	if x != nil {
		return x.CredentialList
	}
	return nil
}

func (x *GenesisState) GetPublicKeyList() []*PublicKey {
	if x != nil {
		return x.PublicKeyList
	}
	return nil
}

func (x *GenesisState) GetWalletList() []*Wallet {
	if x != nil {
		return x.WalletList
	}
	return nil
}

func (x *GenesisState) GetIntervalPublicKeyIDList() []*IntervalPublicKeyID {
	if x != nil {
		return x.IntervalPublicKeyIDList
	}
	return nil
}

func (x *GenesisState) GetPioneerJarList() []*PioneerJar {
	if x != nil {
		return x.PioneerJarList
	}
	return nil
}

func (x *GenesisState) GetJarRegulatorList() []*JarRegulator {
	if x != nil {
		return x.JarRegulatorList
	}
	return nil
}

func (x *GenesisState) GetSuspiciousTransactionList() []*SuspiciousTransaction {
	if x != nil {
		return x.SuspiciousTransactionList
	}
	return nil
}

func (x *GenesisState) GetSuspiciousTransactionCount() uint64 {
	if x != nil {
		return x.SuspiciousTransactionCount
	}
	return 0
}

func (x *GenesisState) GetProtectKeyList() []*ProtectKey {
	if x != nil {
		return x.ProtectKeyList
	}
	return nil
}

func (x *GenesisState) GetRecoverKeyList() []*RecoverKey {
	if x != nil {
		return x.RecoverKeyList
	}
	return nil
}

func (x *GenesisState) GetEnclaveIdentityList() []*EnclaveIdentity {
	if x != nil {
		return x.EnclaveIdentityList
	}
	return nil
}

var File_qadena_qadena_genesis_proto protoreflect.FileDescriptor

var file_qadena_qadena_genesis_proto_rawDesc = []byte{
	0x0a, 0x1b, 0x71, 0x61, 0x64, 0x65, 0x6e, 0x61, 0x2f, 0x71, 0x61, 0x64, 0x65, 0x6e, 0x61, 0x2f,
	0x67, 0x65, 0x6e, 0x65, 0x73, 0x69, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0d, 0x71,
	0x61, 0x64, 0x65, 0x6e, 0x61, 0x2e, 0x71, 0x61, 0x64, 0x65, 0x6e, 0x61, 0x1a, 0x11, 0x61, 0x6d,
	0x69, 0x6e, 0x6f, 0x2f, 0x61, 0x6d, 0x69, 0x6e, 0x6f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a,
	0x14, 0x67, 0x6f, 0x67, 0x6f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x67, 0x6f, 0x67, 0x6f, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1a, 0x71, 0x61, 0x64, 0x65, 0x6e, 0x61, 0x2f, 0x71, 0x61,
	0x64, 0x65, 0x6e, 0x61, 0x2f, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x1a, 0x1e, 0x71, 0x61, 0x64, 0x65, 0x6e, 0x61, 0x2f, 0x71, 0x61, 0x64, 0x65, 0x6e, 0x61,
	0x2f, 0x63, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x1a, 0x1e, 0x71, 0x61, 0x64, 0x65, 0x6e, 0x61, 0x2f, 0x71, 0x61, 0x64, 0x65, 0x6e, 0x61,
	0x2f, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x5f, 0x6b, 0x65, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x1a, 0x1a, 0x71, 0x61, 0x64, 0x65, 0x6e, 0x61, 0x2f, 0x71, 0x61, 0x64, 0x65, 0x6e, 0x61,
	0x2f, 0x77, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x2b, 0x71,
	0x61, 0x64, 0x65, 0x6e, 0x61, 0x2f, 0x71, 0x61, 0x64, 0x65, 0x6e, 0x61, 0x2f, 0x69, 0x6e, 0x74,
	0x65, 0x72, 0x76, 0x61, 0x6c, 0x5f, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x5f, 0x6b, 0x65, 0x79,
	0x5f, 0x69, 0x5f, 0x64, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1f, 0x71, 0x61, 0x64, 0x65,
	0x6e, 0x61, 0x2f, 0x71, 0x61, 0x64, 0x65, 0x6e, 0x61, 0x2f, 0x70, 0x69, 0x6f, 0x6e, 0x65, 0x65,
	0x72, 0x5f, 0x6a, 0x61, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x21, 0x71, 0x61, 0x64,
	0x65, 0x6e, 0x61, 0x2f, 0x71, 0x61, 0x64, 0x65, 0x6e, 0x61, 0x2f, 0x6a, 0x61, 0x72, 0x5f, 0x72,
	0x65, 0x67, 0x75, 0x6c, 0x61, 0x74, 0x6f, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x2a,
	0x71, 0x61, 0x64, 0x65, 0x6e, 0x61, 0x2f, 0x71, 0x61, 0x64, 0x65, 0x6e, 0x61, 0x2f, 0x73, 0x75,
	0x73, 0x70, 0x69, 0x63, 0x69, 0x6f, 0x75, 0x73, 0x5f, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1f, 0x71, 0x61, 0x64, 0x65,
	0x6e, 0x61, 0x2f, 0x71, 0x61, 0x64, 0x65, 0x6e, 0x61, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x65, 0x63,
	0x74, 0x5f, 0x6b, 0x65, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1f, 0x71, 0x61, 0x64,
	0x65, 0x6e, 0x61, 0x2f, 0x71, 0x61, 0x64, 0x65, 0x6e, 0x61, 0x2f, 0x72, 0x65, 0x63, 0x6f, 0x76,
	0x65, 0x72, 0x5f, 0x6b, 0x65, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x24, 0x71, 0x61,
	0x64, 0x65, 0x6e, 0x61, 0x2f, 0x71, 0x61, 0x64, 0x65, 0x6e, 0x61, 0x2f, 0x65, 0x6e, 0x63, 0x6c,
	0x61, 0x76, 0x65, 0x5f, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x22, 0xa4, 0x07, 0x0a, 0x0c, 0x47, 0x65, 0x6e, 0x65, 0x73, 0x69, 0x73, 0x53, 0x74,
	0x61, 0x74, 0x65, 0x12, 0x38, 0x0a, 0x06, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x71, 0x61, 0x64, 0x65, 0x6e, 0x61, 0x2e, 0x71, 0x61, 0x64,
	0x65, 0x6e, 0x61, 0x2e, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x42, 0x09, 0xc8, 0xde, 0x1f, 0x00,
	0xa8, 0xe7, 0xb0, 0x2a, 0x01, 0x52, 0x06, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x12, 0x47, 0x0a,
	0x0e, 0x63, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x4c, 0x69, 0x73, 0x74, 0x18,
	0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x71, 0x61, 0x64, 0x65, 0x6e, 0x61, 0x2e, 0x71,
	0x61, 0x64, 0x65, 0x6e, 0x61, 0x2e, 0x43, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c,
	0x42, 0x04, 0xc8, 0xde, 0x1f, 0x00, 0x52, 0x0e, 0x63, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69,
	0x61, 0x6c, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x44, 0x0a, 0x0d, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63,
	0x4b, 0x65, 0x79, 0x4c, 0x69, 0x73, 0x74, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x18, 0x2e,
	0x71, 0x61, 0x64, 0x65, 0x6e, 0x61, 0x2e, 0x71, 0x61, 0x64, 0x65, 0x6e, 0x61, 0x2e, 0x50, 0x75,
	0x62, 0x6c, 0x69, 0x63, 0x4b, 0x65, 0x79, 0x42, 0x04, 0xc8, 0xde, 0x1f, 0x00, 0x52, 0x0d, 0x70,
	0x75, 0x62, 0x6c, 0x69, 0x63, 0x4b, 0x65, 0x79, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x3b, 0x0a, 0x0a,
	0x77, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x15, 0x2e, 0x71, 0x61, 0x64, 0x65, 0x6e, 0x61, 0x2e, 0x71, 0x61, 0x64, 0x65, 0x6e, 0x61,
	0x2e, 0x57, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x42, 0x04, 0xc8, 0xde, 0x1f, 0x00, 0x52, 0x0a, 0x77,
	0x61, 0x6c, 0x6c, 0x65, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x62, 0x0a, 0x17, 0x69, 0x6e, 0x74,
	0x65, 0x72, 0x76, 0x61, 0x6c, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x4b, 0x65, 0x79, 0x49, 0x44,
	0x4c, 0x69, 0x73, 0x74, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x71, 0x61, 0x64,
	0x65, 0x6e, 0x61, 0x2e, 0x71, 0x61, 0x64, 0x65, 0x6e, 0x61, 0x2e, 0x49, 0x6e, 0x74, 0x65, 0x72,
	0x76, 0x61, 0x6c, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x4b, 0x65, 0x79, 0x49, 0x44, 0x42, 0x04,
	0xc8, 0xde, 0x1f, 0x00, 0x52, 0x17, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x76, 0x61, 0x6c, 0x50, 0x75,
	0x62, 0x6c, 0x69, 0x63, 0x4b, 0x65, 0x79, 0x49, 0x44, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x47, 0x0a,
	0x0e, 0x70, 0x69, 0x6f, 0x6e, 0x65, 0x65, 0x72, 0x4a, 0x61, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x18,
	0x06, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x71, 0x61, 0x64, 0x65, 0x6e, 0x61, 0x2e, 0x71,
	0x61, 0x64, 0x65, 0x6e, 0x61, 0x2e, 0x50, 0x69, 0x6f, 0x6e, 0x65, 0x65, 0x72, 0x4a, 0x61, 0x72,
	0x42, 0x04, 0xc8, 0xde, 0x1f, 0x00, 0x52, 0x0e, 0x70, 0x69, 0x6f, 0x6e, 0x65, 0x65, 0x72, 0x4a,
	0x61, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x4d, 0x0a, 0x10, 0x6a, 0x61, 0x72, 0x52, 0x65, 0x67,
	0x75, 0x6c, 0x61, 0x74, 0x6f, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x18, 0x07, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x1b, 0x2e, 0x71, 0x61, 0x64, 0x65, 0x6e, 0x61, 0x2e, 0x71, 0x61, 0x64, 0x65, 0x6e, 0x61,
	0x2e, 0x4a, 0x61, 0x72, 0x52, 0x65, 0x67, 0x75, 0x6c, 0x61, 0x74, 0x6f, 0x72, 0x42, 0x04, 0xc8,
	0xde, 0x1f, 0x00, 0x52, 0x10, 0x6a, 0x61, 0x72, 0x52, 0x65, 0x67, 0x75, 0x6c, 0x61, 0x74, 0x6f,
	0x72, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x68, 0x0a, 0x19, 0x73, 0x75, 0x73, 0x70, 0x69, 0x63, 0x69,
	0x6f, 0x75, 0x73, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x4c, 0x69,
	0x73, 0x74, 0x18, 0x08, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x71, 0x61, 0x64, 0x65, 0x6e,
	0x61, 0x2e, 0x71, 0x61, 0x64, 0x65, 0x6e, 0x61, 0x2e, 0x53, 0x75, 0x73, 0x70, 0x69, 0x63, 0x69,
	0x6f, 0x75, 0x73, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x42, 0x04,
	0xc8, 0xde, 0x1f, 0x00, 0x52, 0x19, 0x73, 0x75, 0x73, 0x70, 0x69, 0x63, 0x69, 0x6f, 0x75, 0x73,
	0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x4c, 0x69, 0x73, 0x74, 0x12,
	0x3e, 0x0a, 0x1a, 0x73, 0x75, 0x73, 0x70, 0x69, 0x63, 0x69, 0x6f, 0x75, 0x73, 0x54, 0x72, 0x61,
	0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x09, 0x20,
	0x01, 0x28, 0x04, 0x52, 0x1a, 0x73, 0x75, 0x73, 0x70, 0x69, 0x63, 0x69, 0x6f, 0x75, 0x73, 0x54,
	0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12,
	0x47, 0x0a, 0x0e, 0x70, 0x72, 0x6f, 0x74, 0x65, 0x63, 0x74, 0x4b, 0x65, 0x79, 0x4c, 0x69, 0x73,
	0x74, 0x18, 0x0a, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x71, 0x61, 0x64, 0x65, 0x6e, 0x61,
	0x2e, 0x71, 0x61, 0x64, 0x65, 0x6e, 0x61, 0x2e, 0x50, 0x72, 0x6f, 0x74, 0x65, 0x63, 0x74, 0x4b,
	0x65, 0x79, 0x42, 0x04, 0xc8, 0xde, 0x1f, 0x00, 0x52, 0x0e, 0x70, 0x72, 0x6f, 0x74, 0x65, 0x63,
	0x74, 0x4b, 0x65, 0x79, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x47, 0x0a, 0x0e, 0x72, 0x65, 0x63, 0x6f,
	0x76, 0x65, 0x72, 0x4b, 0x65, 0x79, 0x4c, 0x69, 0x73, 0x74, 0x18, 0x0b, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x19, 0x2e, 0x71, 0x61, 0x64, 0x65, 0x6e, 0x61, 0x2e, 0x71, 0x61, 0x64, 0x65, 0x6e, 0x61,
	0x2e, 0x52, 0x65, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x4b, 0x65, 0x79, 0x42, 0x04, 0xc8, 0xde, 0x1f,
	0x00, 0x52, 0x0e, 0x72, 0x65, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x4b, 0x65, 0x79, 0x4c, 0x69, 0x73,
	0x74, 0x12, 0x56, 0x0a, 0x13, 0x65, 0x6e, 0x63, 0x6c, 0x61, 0x76, 0x65, 0x49, 0x64, 0x65, 0x6e,
	0x74, 0x69, 0x74, 0x79, 0x4c, 0x69, 0x73, 0x74, 0x18, 0x0c, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1e,
	0x2e, 0x71, 0x61, 0x64, 0x65, 0x6e, 0x61, 0x2e, 0x71, 0x61, 0x64, 0x65, 0x6e, 0x61, 0x2e, 0x45,
	0x6e, 0x63, 0x6c, 0x61, 0x76, 0x65, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x42, 0x04,
	0xc8, 0xde, 0x1f, 0x00, 0x52, 0x13, 0x65, 0x6e, 0x63, 0x6c, 0x61, 0x76, 0x65, 0x49, 0x64, 0x65,
	0x6e, 0x74, 0x69, 0x74, 0x79, 0x4c, 0x69, 0x73, 0x74, 0x42, 0x96, 0x01, 0x0a, 0x11, 0x63, 0x6f,
	0x6d, 0x2e, 0x71, 0x61, 0x64, 0x65, 0x6e, 0x61, 0x2e, 0x71, 0x61, 0x64, 0x65, 0x6e, 0x61, 0x42,
	0x0c, 0x47, 0x65, 0x6e, 0x65, 0x73, 0x69, 0x73, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x50, 0x01, 0x5a,
	0x1e, 0x63, 0x6f, 0x73, 0x6d, 0x6f, 0x73, 0x73, 0x64, 0x6b, 0x2e, 0x69, 0x6f, 0x2f, 0x61, 0x70,
	0x69, 0x2f, 0x71, 0x61, 0x64, 0x65, 0x6e, 0x61, 0x2f, 0x71, 0x61, 0x64, 0x65, 0x6e, 0x61, 0xa2,
	0x02, 0x03, 0x51, 0x51, 0x58, 0xaa, 0x02, 0x0d, 0x51, 0x61, 0x64, 0x65, 0x6e, 0x61, 0x2e, 0x51,
	0x61, 0x64, 0x65, 0x6e, 0x61, 0xca, 0x02, 0x0d, 0x51, 0x61, 0x64, 0x65, 0x6e, 0x61, 0x5c, 0x51,
	0x61, 0x64, 0x65, 0x6e, 0x61, 0xe2, 0x02, 0x19, 0x51, 0x61, 0x64, 0x65, 0x6e, 0x61, 0x5c, 0x51,
	0x61, 0x64, 0x65, 0x6e, 0x61, 0x5c, 0x47, 0x50, 0x42, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74,
	0x61, 0xea, 0x02, 0x0e, 0x51, 0x61, 0x64, 0x65, 0x6e, 0x61, 0x3a, 0x3a, 0x51, 0x61, 0x64, 0x65,
	0x6e, 0x61, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_qadena_qadena_genesis_proto_rawDescOnce sync.Once
	file_qadena_qadena_genesis_proto_rawDescData = file_qadena_qadena_genesis_proto_rawDesc
)

func file_qadena_qadena_genesis_proto_rawDescGZIP() []byte {
	file_qadena_qadena_genesis_proto_rawDescOnce.Do(func() {
		file_qadena_qadena_genesis_proto_rawDescData = protoimpl.X.CompressGZIP(file_qadena_qadena_genesis_proto_rawDescData)
	})
	return file_qadena_qadena_genesis_proto_rawDescData
}

var file_qadena_qadena_genesis_proto_msgTypes = make([]protoimpl.MessageInfo, 1)
var file_qadena_qadena_genesis_proto_goTypes = []interface{}{
	(*GenesisState)(nil),          // 0: qadena.qadena.GenesisState
	(*Params)(nil),                // 1: qadena.qadena.Params
	(*Credential)(nil),            // 2: qadena.qadena.Credential
	(*PublicKey)(nil),             // 3: qadena.qadena.PublicKey
	(*Wallet)(nil),                // 4: qadena.qadena.Wallet
	(*IntervalPublicKeyID)(nil),   // 5: qadena.qadena.IntervalPublicKeyID
	(*PioneerJar)(nil),            // 6: qadena.qadena.PioneerJar
	(*JarRegulator)(nil),          // 7: qadena.qadena.JarRegulator
	(*SuspiciousTransaction)(nil), // 8: qadena.qadena.SuspiciousTransaction
	(*ProtectKey)(nil),            // 9: qadena.qadena.ProtectKey
	(*RecoverKey)(nil),            // 10: qadena.qadena.RecoverKey
	(*EnclaveIdentity)(nil),       // 11: qadena.qadena.EnclaveIdentity
}
var file_qadena_qadena_genesis_proto_depIdxs = []int32{
	1,  // 0: qadena.qadena.GenesisState.params:type_name -> qadena.qadena.Params
	2,  // 1: qadena.qadena.GenesisState.credentialList:type_name -> qadena.qadena.Credential
	3,  // 2: qadena.qadena.GenesisState.publicKeyList:type_name -> qadena.qadena.PublicKey
	4,  // 3: qadena.qadena.GenesisState.walletList:type_name -> qadena.qadena.Wallet
	5,  // 4: qadena.qadena.GenesisState.intervalPublicKeyIDList:type_name -> qadena.qadena.IntervalPublicKeyID
	6,  // 5: qadena.qadena.GenesisState.pioneerJarList:type_name -> qadena.qadena.PioneerJar
	7,  // 6: qadena.qadena.GenesisState.jarRegulatorList:type_name -> qadena.qadena.JarRegulator
	8,  // 7: qadena.qadena.GenesisState.suspiciousTransactionList:type_name -> qadena.qadena.SuspiciousTransaction
	9,  // 8: qadena.qadena.GenesisState.protectKeyList:type_name -> qadena.qadena.ProtectKey
	10, // 9: qadena.qadena.GenesisState.recoverKeyList:type_name -> qadena.qadena.RecoverKey
	11, // 10: qadena.qadena.GenesisState.enclaveIdentityList:type_name -> qadena.qadena.EnclaveIdentity
	11, // [11:11] is the sub-list for method output_type
	11, // [11:11] is the sub-list for method input_type
	11, // [11:11] is the sub-list for extension type_name
	11, // [11:11] is the sub-list for extension extendee
	0,  // [0:11] is the sub-list for field type_name
}

func init() { file_qadena_qadena_genesis_proto_init() }
func file_qadena_qadena_genesis_proto_init() {
	if File_qadena_qadena_genesis_proto != nil {
		return
	}
	file_qadena_qadena_params_proto_init()
	file_qadena_qadena_credential_proto_init()
	file_qadena_qadena_public_key_proto_init()
	file_qadena_qadena_wallet_proto_init()
	file_qadena_qadena_interval_public_key_i_d_proto_init()
	file_qadena_qadena_pioneer_jar_proto_init()
	file_qadena_qadena_jar_regulator_proto_init()
	file_qadena_qadena_suspicious_transaction_proto_init()
	file_qadena_qadena_protect_key_proto_init()
	file_qadena_qadena_recover_key_proto_init()
	file_qadena_qadena_enclave_identity_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_qadena_qadena_genesis_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GenesisState); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_qadena_qadena_genesis_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   1,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_qadena_qadena_genesis_proto_goTypes,
		DependencyIndexes: file_qadena_qadena_genesis_proto_depIdxs,
		MessageInfos:      file_qadena_qadena_genesis_proto_msgTypes,
	}.Build()
	File_qadena_qadena_genesis_proto = out.File
	file_qadena_qadena_genesis_proto_rawDesc = nil
	file_qadena_qadena_genesis_proto_goTypes = nil
	file_qadena_qadena_genesis_proto_depIdxs = nil
}
